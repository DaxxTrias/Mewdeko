// ---------------------------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by LinqToDB scaffolding tool (https://github.com/linq2db/linq2db).
// Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
// ---------------------------------------------------------------------------------------------------

using LinqToDB.Mapping;
using System;

#pragma warning disable 1573, 1591
#nullable enable

namespace DataModel
{
	[Table("ChatTriggers")]
	public class ChatTrigger
	{
		[Column("Id"                           , IsPrimaryKey = true, IsIdentity = true, SkipOnInsert = true, SkipOnUpdate = true)] public int       Id                            { get; set; } // integer
		[Column("UseCount"                                                                                                       )] public ulong   UseCount                      { get; set; } // numeric(20,0)
		[Column("IsRegex"                                                                                                        )] public bool      IsRegex                       { get; set; } // boolean
		[Column("OwnerOnly"                                                                                                      )] public bool      OwnerOnly                     { get; set; } // boolean
		[Column("GuildId"                                                                                                        )] public ulong?  GuildId                       { get; set; } // numeric(20,0)
		[Column("Response"                                                                                                       )] public string?   Response                      { get; set; } // text
		[Column("Trigger"                                                                                                        )] public string?   Trigger                       { get; set; } // text
		[Column("PrefixType"                                                                                                     )] public int       PrefixType                    { get; set; } // integer
		[Column("CustomPrefix"                                                                                                   )] public string?   CustomPrefix                  { get; set; } // text
		[Column("AutoDeleteTrigger"                                                                                              )] public bool      AutoDeleteTrigger             { get; set; } // boolean
		[Column("ReactToTrigger"                                                                                                 )] public bool      ReactToTrigger                { get; set; } // boolean
		[Column("NoRespond"                                                                                                      )] public bool      NoRespond                     { get; set; } // boolean
		[Column("DmResponse"                                                                                                     )] public bool      DmResponse                    { get; set; } // boolean
		[Column("ContainsAnywhere"                                                                                               )] public bool      ContainsAnywhere              { get; set; } // boolean
		[Column("AllowTarget"                                                                                                    )] public bool      AllowTarget                   { get; set; } // boolean
		[Column("Reactions"                                                                                                      )] public string?   Reactions                     { get; set; } // text
		[Column("GrantedRoles"                                                                                                   )] public string?   GrantedRoles                  { get; set; } // text
		[Column("RemovedRoles"                                                                                                   )] public string?   RemovedRoles                  { get; set; } // text
		[Column("RoleGrantType"                                                                                                  )] public int       RoleGrantType                 { get; set; } // integer
		[Column("ValidTriggerTypes"                                                                                              )] public int       ValidTriggerTypes             { get; set; } // integer
		[Column("ApplicationCommandId"                                                                                           )] public ulong   ApplicationCommandId          { get; set; } // numeric(20,0)
		[Column("ApplicationCommandName"                                                                                         )] public string?   ApplicationCommandName        { get; set; } // text
		[Column("ApplicationCommandDescription"                                                                                  )] public string?   ApplicationCommandDescription { get; set; } // text
		[Column("ApplicationCommandType"                                                                                         )] public int       ApplicationCommandType        { get; set; } // integer
		[Column("EphemeralResponse"                                                                                              )] public bool      EphemeralResponse             { get; set; } // boolean
		[Column("CrosspostingChannelId"                                                                                          )] public ulong   CrosspostingChannelId         { get; set; } // numeric(20,0)
		[Column("CrosspostingWebhookUrl"                                                                                         )] public string?   CrosspostingWebhookUrl        { get; set; } // text
		[Column("DateAdded"                                                                                                      )] public DateTime? DateAdded                     { get; set; } // timestamp (6) without time zone
	}
}
