// ---------------------------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by LinqToDB scaffolding tool (https://github.com/linq2db/linq2db).
// Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
// ---------------------------------------------------------------------------------------------------

using LinqToDB.Mapping;
using System;

#pragma warning disable 1573, 1591
#nullable enable

namespace DataModel
{
	[Table("DiscordUser")]
	public class DiscordUser
	{
		[Column("Id"                   , IsPrimaryKey = true, IsIdentity = true, SkipOnInsert = true, SkipOnUpdate = true)] public int       Id                    { get; set; } // integer
		[Column("UserId"                                                                                                 )] public ulong   UserId                { get; set; } // numeric(20,0)
		[Column("Username"                                                                                               )] public string?   Username              { get; set; } // text
		[Column("Discriminator"                                                                                          )] public string?   Discriminator         { get; set; } // text
		[Column("AvatarId"                                                                                               )] public string?   AvatarId              { get; set; } // text
		[Column("TotalXp"                                                                                                )] public int       TotalXp               { get; set; } // integer
		[Column("LastLevelUp"                                                                                            )] public DateTime? LastLevelUp           { get; set; } // timestamp (6) without time zone
		[Column("NotifyOnLevelUp"                                                                                        )] public int       NotifyOnLevelUp       { get; set; } // integer
		[Column("IsDragon"                                                                                               )] public bool      IsDragon              { get; set; } // boolean
		[Column("Pronouns"                                                                                               )] public string?   Pronouns              { get; set; } // text
		[Column("PronounsClearedReason"                                                                                  )] public string?   PronounsClearedReason { get; set; } // text
		[Column("PronounsDisabled"                                                                                       )] public bool      PronounsDisabled      { get; set; } // boolean
		[Column("Bio"                                                                                                    )] public string?   Bio                   { get; set; } // text
		[Column("ProfileImageUrl"                                                                                        )] public string?   ProfileImageUrl       { get; set; } // text
		[Column("ZodiacSign"                                                                                             )] public string?   ZodiacSign            { get; set; } // text
		[Column("ProfilePrivacy"                                                                                         )] public int       ProfilePrivacy        { get; set; } // integer
		[Column("ProfileColor"                                                                                           )] public long?     ProfileColor          { get; set; } // bigint
		[Column("Birthday"                                                                                               )] public DateTime? Birthday              { get; set; } // timestamp (6) without time zone
		[Column("SwitchFriendCode"                                                                                       )] public string?   SwitchFriendCode      { get; set; } // text
		[Column("BirthdayDisplayMode"                                                                                    )] public int       BirthdayDisplayMode   { get; set; } // integer
		[Column("StatsOptOut"                                                                                            )] public bool      StatsOptOut           { get; set; } // boolean
		[Column("DateAdded"                                                                                              )] public DateTime? DateAdded             { get; set; } // timestamp (6) without time zone
		[Column("GreetDmsOptOut"                                                                                         )] public bool      GreetDmsOptOut        { get; set; } // boolean
		[Column("BirthdayAnnouncementsEnabled"                                                                           )] public bool      BirthdayAnnouncementsEnabled { get; set; } // boolean
		[Column("BirthdayTimezone"                                                                                       )] public string?   BirthdayTimezone      { get; set; } // text
		[Column("LevelUpPingsDisabled"                                                                                   )] public bool      LevelUpPingsDisabled  { get; set; } // boolean
		[Column("LevelUpInfoShown"                                                                                       )] public bool      LevelUpInfoShown      { get; set; } // boolean
		[Column("HasCompletedAnyWizard"                                                                                  )] public bool      HasCompletedAnyWizard { get; set; } // boolean
		[Column("FirstDashboardAccess"                                                                                   )] public DateTime? FirstDashboardAccess  { get; set; } // timestamp (6) without time zone
		[Column("DashboardExperienceLevel"                                                                               )] public int       DashboardExperienceLevel { get; set; } // integer
		[Column("PrefersGuidedSetup"                                                                                     )] public bool      PrefersGuidedSetup    { get; set; } // boolean
		[Column("WizardCompletedGuilds"                                                                                  )] public string?   WizardCompletedGuilds { get; set; } // text
	}
}
