// ---------------------------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by LinqToDB scaffolding tool (https://github.com/linq2db/linq2db).
// Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
// ---------------------------------------------------------------------------------------------------

using LinqToDB.Mapping;
using System;
using System.Collections.Generic;

#pragma warning disable 1573, 1591
#nullable enable

namespace DataModel
{
	[Table("SelectMenuOptions")]
	public class SelectMenuOption
	{
		[Column("Id"                  , IsPrimaryKey = true , IsIdentity = true, SkipOnInsert = true, SkipOnUpdate = true)] public int        Id                   { get; set; } // integer
		[Column("SelectMenuId"                                                                                           )] public int        SelectMenuId         { get; set; } // integer
		[Column("Label"               , CanBeNull    = false                                                             )] public string     Label                { get; set; } = null!; // text
		[Column("Value"               , CanBeNull    = false                                                             )] public string     Value                { get; set; } = null!; // text
		[Column("Description"                                                                                            )] public string?    Description          { get; set; } // text
		[Column("Emoji"                                                                                                  )] public string?    Emoji                { get; set; } // text
		[Column("OpenMessageJson"                                                                                        )] public string?    OpenMessageJson      { get; set; } // text
		[Column("ModalJson"                                                                                              )] public string?    ModalJson            { get; set; } // text
		[Column("ChannelNameFormat"   , CanBeNull    = false                                                             )] public string     ChannelNameFormat    { get; set; } = null!; // text
		[Column("CategoryId"                                                                                             )] public ulong?   CategoryId           { get; set; } // numeric(20,0)
		[Column("ArchiveCategoryId"                                                                                      )] public ulong?   ArchiveCategoryId    { get; set; } // numeric(20,0)
		[Column("SupportRoles"                                                                                           )] public ulong[]? SupportRoles         { get; set; } // numeric(20,0)[]
		[Column("ViewerRoles"                                                                                            )] public ulong[]? ViewerRoles          { get; set; } // numeric(20,0)[]
		[Column("AutoCloseTime"                                                                                          )] public TimeSpan?  AutoCloseTime        { get; set; } // interval
		[Column("RequiredResponseTime"                                                                                   )] public TimeSpan?  RequiredResponseTime { get; set; } // interval
		[Column("MaxActiveTickets"                                                                                       )] public int        MaxActiveTickets     { get; set; } // integer
		[Column("AllowedPriorities"                                                                                      )] public string[]?  AllowedPriorities    { get; set; } // text[]
		[Column("DefaultPriority"                                                                                        )] public string?    DefaultPriority      { get; set; } // text
		[Column("SaveTranscript"                                                                                         )] public bool?      SaveTranscript       { get; set; } // boolean

		#region Associations
		/// <summary>
		/// FK_SelectMenuOptions_PanelSelectMenus_SelectMenuId
		/// </summary>
		[Association(CanBeNull = false, ThisKey = nameof(SelectMenuId), OtherKey = nameof(PanelSelectMenu.Id))]
		public PanelSelectMenu SelectMenu { get; set; } = null!;

		/// <summary>
		/// FK_Tickets_SelectMenuOptions_SelectOptionId backreference
		/// </summary>
		[Association(ThisKey = nameof(Id), OtherKey = nameof(Ticket.SelectOptionId))]
		public IEnumerable<Ticket> Tickets { get; set; } = null!;
		#endregion
	}
}
