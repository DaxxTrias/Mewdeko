// ---------------------------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by LinqToDB scaffolding tool (https://github.com/linq2db/linq2db).
// Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
// ---------------------------------------------------------------------------------------------------

using LinqToDB.Mapping;
using System;
using System.Collections.Generic;
using Mewdeko.Database.L2DB;

#pragma warning disable 1573, 1591
#nullable enable

namespace DataModel
{
	[Table("Tickets")]
	public class Ticket
	{
		[Column("Id"            , IsPrimaryKey = true, IsIdentity = true, SkipOnInsert = true, SkipOnUpdate = true)] public int       Id             { get; set; } // integer
		[Column("GuildId"                                                                                         )] public ulong   GuildId        { get; set; } // numeric(20,0)
		[Column("ChannelId"                                                                                       )] public ulong   ChannelId      { get; set; } // numeric(20,0)
		[Column("CreatorId"                                                                                       )] public ulong   CreatorId      { get; set; } // numeric(20,0)
		[Column("ButtonId"                                                                                        )] public int?      ButtonId       { get; set; } // integer
		[Column("SelectOptionId"                                                                                  )] public int?      SelectOptionId { get; set; } // integer
		[Column("CreatedAt"                                                                                       )] public DateTime  CreatedAt      { get; set; } // timestamp (6) without time zone
		[Column("ClosedAt"                                                                                        )] public DateTime? ClosedAt       { get; set; } // timestamp (6) without time zone
		[Column("IsArchived"                                                                                      )] public bool      IsArchived     { get; set; } // boolean
		[Column("Tags"                                                                                            )] public string[]? Tags           { get; set; } // text[]
		[Column("ClaimedBy"                                                                                       )] public ulong?  ClaimedBy      { get; set; } // numeric(20,0)
		[Column("LastActivityAt"                                                                                  )] public DateTime? LastActivityAt { get; set; } // timestamp (6) without time zone
		[Column("CaseId"                                                                                          )] public int?      CaseId         { get; set; } // integer
		[Column("ModalResponses"                                                                                  )] public string?   ModalResponses { get; set; } // text
		[Column("Priority"                                                                                        )] public string?   Priority       { get; set; } // text
		[Column("TranscriptUrl"                                                                                   )] public string?   TranscriptUrl  { get; set; } // text
        [Column("IsDeleted")]
        public bool IsDeleted { get; set; } = false;
		#region Associations
		/// <summary>
		/// FK_TicketNotes_Tickets_TicketId backreference
		/// </summary>
		[Association(ThisKey = nameof(Id), OtherKey = nameof(TicketNote.TicketId))]
		public IEnumerable<TicketNote> TicketNotes { get; set; } = null!;

		/// <summary>
		/// FK_Tickets_PanelButtons_ButtonId
		/// </summary>
		[Association(ThisKey = nameof(ButtonId), OtherKey = nameof(PanelButton.Id))]
		public PanelButton? Button { get; set; }

		/// <summary>
		/// FK_Tickets_SelectMenuOptions_SelectOptionId
		/// </summary>
		[Association(ThisKey = nameof(SelectOptionId), OtherKey = nameof(SelectMenuOption.Id))]
		public SelectMenuOption? SelectOption { get; set; }

		/// <summary>
		/// FK_Tickets_TicketCases_CaseId
		/// </summary>
		[Association(ThisKey = nameof(CaseId), OtherKey = nameof(TicketCase.Id))]
		public TicketCase? Case { get; set; }
		#endregion
	}
}
