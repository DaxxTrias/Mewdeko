// ---------------------------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by LinqToDB scaffolding tool (https://github.com/linq2db/linq2db).
// Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
// ---------------------------------------------------------------------------------------------------

using LinqToDB.Mapping;
using System;
using System.Collections.Generic;

#pragma warning disable 1573, 1591
#nullable enable

namespace DataModel
{
	[Table("TicketCases")]
	public class TicketCase
	{
		[Column("Id"         , IsPrimaryKey = true , IsIdentity = true, SkipOnInsert = true, SkipOnUpdate = true)] public int       Id          { get; set; } // integer
		[Column("GuildId"                                                                                       )] public ulong   GuildId     { get; set; } // numeric(20,0)
		[Column("Title"      , CanBeNull    = false                                                             )] public string    Title       { get; set; } = null!; // text
		[Column("Description"                                                                                   )] public string?   Description { get; set; } // text
		[Column("CreatedAt"                                                                                     )] public DateTime  CreatedAt   { get; set; } // timestamp (6) without time zone
		[Column("CreatedBy"                                                                                     )] public ulong   CreatedBy   { get; set; } // numeric(20,0)
		[Column("ClosedAt"                                                                                      )] public DateTime? ClosedAt    { get; set; } // timestamp (6) without time zone

		#region Associations
		/// <summary>
		/// FK_CaseNotes_TicketCases_CaseId backreference
		/// </summary>
		[Association(ThisKey = nameof(Id), OtherKey = nameof(CaseNote.CaseId))]
		public IEnumerable<CaseNote>? CaseNotes { get; set; } = null;

		/// <summary>
		/// FK_Tickets_TicketCases_CaseId backreference
		/// </summary>
		[Association(ThisKey = nameof(Id), OtherKey = nameof(Ticket.CaseId))]
		public IEnumerable<Ticket>? Tickets { get; set; } = null;
		#endregion
	}
}
