// ---------------------------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by LinqToDB scaffolding tool (https://github.com/linq2db/linq2db).
// Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
// ---------------------------------------------------------------------------------------------------

using LinqToDB.Mapping;
using System;

#pragma warning disable 1573, 1591
#nullable enable

namespace DataModel
{
	[Table("GuildTicketSettings")]
	public class GuildTicketSetting
	{
		[Column("Id"                   , IsPrimaryKey = true , IsIdentity = true, SkipOnInsert = true, SkipOnUpdate = true)] public int        Id                    { get; set; } // integer
		[Column("GuildId"                                                                                                 )] public ulong    GuildId               { get; set; } // numeric(20,0)
		[Column("DefaultAutoCloseTime"                                                                                    )] public TimeSpan?  DefaultAutoCloseTime  { get; set; } // interval
		[Column("DefaultResponseTime"                                                                                     )] public TimeSpan?  DefaultResponseTime   { get; set; } // interval
		[Column("DefaultMaxTickets"                                                                                       )] public int        DefaultMaxTickets     { get; set; } // integer
		[Column("LogChannelId"                                                                                            )] public ulong?   LogChannelId          { get; set; } // numeric(20,0)
		[Column("TranscriptChannelId"                                                                                     )] public ulong?   TranscriptChannelId   { get; set; } // numeric(20,0)
		[Column("EnableStaffPings"                                                                                        )] public bool       EnableStaffPings      { get; set; } // boolean
		[Column("EnableDmNotifications"                                                                                   )] public bool       EnableDmNotifications { get; set; } // boolean

        // Internal storage as long[] for database compatibility
        [Column("BlacklistedUsers")]
        internal long[]? _blacklistedUsers { get; set; }

        [Column("NotificationRoles")]
        internal long[]? _notificationRoles { get; set; }

        [Column("DeleteTicketsOnClose")]
        public bool DeleteTicketsOnClose { get; set; } = false;

        [Column("LockTicketsOnClose")]
        public bool LockTicketsOnClose { get; set; } = true;

        [Column("RenameTicketsOnClose")]
        public bool RenameTicketsOnClose { get; set; } = true;

        [Column("RemoveCreatorOnClose")]
        public bool RemoveCreatorOnClose { get; set; } = true;

        [Column("DeleteDelay")]
        public TimeSpan DeleteDelay { get; set; } = TimeSpan.FromMinutes(5);

        [Column("LockTicketsOnArchive")]
        public bool LockTicketsOnArchive { get; set; } = true;

        [Column("RenameTicketsOnArchive")]
        public bool RenameTicketsOnArchive { get; set; } = true;

        [Column("RemoveCreatorOnArchive")]
        public bool RemoveCreatorOnArchive { get; set; } = false;

        [Column("AutoArchiveOnClose")]
        public bool AutoArchiveOnClose { get; set; } = false;

        /// <summary>
        /// Blacklisted user IDs
        /// </summary>
        [NotColumn]
        public ulong[]? BlacklistedUsers
        {
            get => _blacklistedUsers?.Select(x => (ulong)x).ToArray();
            set => _blacklistedUsers = value?.Select(x => (long)x).ToArray();
        }

        /// <summary>
        /// Notification role IDs
        /// </summary>
        [NotColumn]
        public ulong[]? NotificationRoles
        {
            get => _notificationRoles?.Select(x => (ulong)x).ToArray();
            set => _notificationRoles = value?.Select(x => (long)x).ToArray();
        }
	}
}
