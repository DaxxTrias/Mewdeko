birthdayannouncements:
  desc: Toggles birthday announcements for yourself.
  args:
    - ''
  params: [ ]
birthdaytimezone:
  desc: Sets your personal timezone for birthday calculations.
  args:
    - "timezone"
  params:
    - name: timezone
      desc: The timezone to set (e.g., "America/New_York").
      type: string
      optional: false
birthdaylist:
  desc: Shows upcoming birthdays in the server.
  args:
    - "days"
  params:
    - name: days
      desc: How many days to look ahead. Default is 7, max is 30.
      type: int
      optional: true
birthdaytoday:
  desc: Shows today's birthdays in the server.
  args:
    - ''
  params: [ ]
birthdaychannel:
  desc: Sets the channel for birthday announcements.
  args:
    - "#channel"
  params:
    - name: channel
      desc: The text channel to use for announcements. Defaults to the current channel if not specified.
      type: ITextChannel
      optional: true
birthdayrole:
  desc: Sets the role to be given to users on their birthday.
  args:
    - "@role"
  params:
    - name: role
      desc: The role to assign on a user's birthday. Provide no role to disable it.
      type: IRole
      optional: true
birthdaymessage:
  desc: Sets the custom message for birthday announcements.
  args:
    - "message"
  params:
    - name: message
      desc: The message template. Use {user} to mention the user. Shows the current message if left empty.
      type: string
      optional: true
birthdaypingrole:
  desc: Sets a role to be pinged during birthday announcements.
  args:
    - "@role"
  params:
    - name: role
      desc: The role to ping. Provide no role to disable it.
      type: IRole
      optional: true
birthdayconfig:
  desc: Displays the current birthday configuration for the server.
  args:
    - ''
  params: [ ]
adsarm:
  desc: Toggles the auto delete of server advertisement messages.
  args:
    - ''
  params: [ ]
asar:
  desc: Adds the specified role to the auto-self-assignable role list.
  args:
    - '@role'
  params:
    - &o0
      name: role
      desc: The role to add to the auto-self-assignable role list.
      type: IRole
      optional: false
asar_int_IRole:
  desc: Adds the specified role to the auto-self-assignable role list within the specified group.
  args:
    - number @role
  params:
    - &o1
      name: group
      desc: The group number for organization.
      type: int
      optional: false
    - *o0
sargn:
  desc: Sets or removes the name for the specified group of auto-self-assignable roles.
  args:
    - number null
    - number
  params:
    - &o2
      name: group
      desc: The group number for which to set or remove the name.
      type: int
      optional: false
    - &o3
      name: null
      desc: ''
      type: =
      optional: true
rsar:
  desc: Removes the specified role from the auto-self-assignable roles list.
  args:
    - '@role'
  params:
    - &o4
      name: role
      desc: The role to remove from the auto-self-assignable roles list.
      type: IRole
      optional: false
lsar:
  desc: Lists the auto-self-assignable roles configured for the guild.
  args:
    - ''
  params: [ ]
togglexclsar:
  desc: Toggles the exclusivity of auto-self-assignable roles.
  args:
    - ''
  params: [ ]
rolelevelreq:
  desc: Sets the level requirement for an auto-self-assignable role.
  args:
    - number @role
  params:
    - &o5
      name: level
      desc: The level required to obtain the role.
      type: int
      optional: false
    - &o6
      name: role
      desc: The role to set the level requirement for.
      type: IRole
      optional: false
iam:
  desc: Grants a user a self-assignable role.
  args:
    - '@role'
  params:
    - &o7
      name: role
      desc: The role to be assigned to the user.
      type: IRole
      optional: false
iamnot:
  desc: Removes a self-assigned role from the user.
  args:
    - '@role'
  params:
    - &o8
      name: role
      desc: The role to be removed from the user.
      type: IRole
      optional: false
adsarm_noparams:
  desc: Toggles the auto delete of server advertisement messages.
  args:
    - ''
  params: [ ]
asar_IRole:
  desc: Execute the Asar command
  args:
    - '@role'
  params:
    - *o0
asar_int_IRole_1:
  desc: Execute the Asar command
  args:
    - number @role
  params:
    - *o1
    - *o0
sargn_int_=:
  desc: Execute the Sargn command
  args:
    - number null
    - number
  params:
    - *o2
    - *o3
rsar_IRole:
  desc: Execute the Rsar command
  args:
    - '@role'
  params:
    - *o4
lsar_noparams:
  desc: Lists the auto-self-assignable roles configured for the guild.
  args:
    - ''
  params: [ ]
togglexclsar_noparams:
  desc: Toggles the exclusivity of auto-self-assignable roles.
  args:
    - ''
  params: [ ]
rolelevelreq_int_IRole:
  desc: Sets the level requirement for an auto-self-assignable role.
  args:
    - number @role
  params:
    - *o5
    - *o6
iam_IRole:
  desc: Grants a user a self-assignable role.
  args:
    - '@role'
  params:
    - *o7
iamnot_IRole:
  desc: Removes a self-assigned role from the user.
  args:
    - '@role'
  params:
    - *o8
adsarm_noparams_1:
  desc: Module for managing self-assigned roles.
  args:
    - ''
  params: [ ]
asar_IRole_1:
  desc: Adds the specified role to the auto-self-assignable role list.
  args:
    - '@role'
  params:
    - *o0
asar_int_IRole_2:
  desc: Adds the specified role to the auto-self-assignable role list within the specified group.
  args:
    - number @role
  params:
    - *o1
    - *o0
sargn_int_=_1:
  desc: Sets or removes the name for the specified group of auto-self-assignable roles.
  args:
    - number null
    - number
  params:
    - *o2
    - *o3
rsar_IRole_1:
  desc: Removes the specified role from the auto-self-assignable roles list.
  args:
    - '@role'
  params:
    - *o4
lsar_noparams_1:
  desc: Lists the auto-self-assignable roles configured for the guild.
  args:
    - ''
  params: [ ]
togglexclsar_noparams_1:
  desc: Toggles the exclusivity of auto-self-assignable roles.
  args:
    - ''
  params: [ ]
rolelevelreq_int_IRole_1:
  desc: Sets the level requirement for an auto-self-assignable role.
  args:
    - number @role
  params:
    - *o5
    - *o6
iam_IRole_1:
  desc: Grants a user a self-assignable role.
  args:
    - '@role'
  params:
    - *o7
iamnot_IRole_1:
  desc: Removes a self-assigned role from the user.
  args:
    - '@role'
  params:
    - *o8
adsarm_noparams_2:
  desc: Toggles the auto delete of server advertisement messages.
  args:
    - ''
  params: [ ]
asar_IRole_2:
  desc: Execute the Asar command
  args:
    - '@role'
  params:
    - *o0
asar_int_IRole_3:
  desc: Execute the Asar command
  args:
    - number @role
  params:
    - *o1
    - *o0
sargn_int_=_2:
  desc: Execute the Sargn command
  args:
    - number null
    - number
  params:
    - *o2
    - *o3
rsar_IRole_2:
  desc: Execute the Rsar command
  args:
    - '@role'
  params:
    - *o4
lsar_noparams_2:
  desc: Lists the auto-self-assignable roles configured for the guild.
  args:
    - ''
  params: [ ]
togglexclsar_noparams_2:
  desc: Toggles the exclusivity of auto-self-assignable roles.
  args:
    - ''
  params: [ ]
rolelevelreq_int_IRole_2:
  desc: Sets the level requirement for an auto-self-assignable role.
  args:
    - number @role
  params:
    - *o5
    - *o6
iam_IRole_2:
  desc: Grants a user a self-assignable role.
  args:
    - '@role'
  params:
    - *o7
iamnot_IRole_2:
  desc: Removes a self-assigned role from the user.
  args:
    - '@role'
  params:
    - *o8
boostmsg:
  desc: Displays the current boost message.
  args:
    - ''
  params: [ ]
boost:
  desc: Enables or disables boost messages.
  args:
    - ''
  params: [ ]
boostdel:
  desc: Sets the timer for deleting boost messages.
  args:
    - 30
  params:
    - &o9
      name: 30
      desc: ''
      type: =
      optional: false
boostmsg_string:
  desc: Sets the boost message for the server.
  args:
    - text
  params:
    - &o10
      name: text
      desc: The new boost message.
      type: string
      optional: true
leavehook:
  desc: Sets up a webhook for leave messages with an optional image.
  args:
    - chan text null null
  params:
    - &o11
      name: chan
      desc: The text channel to set up the webhook in.
      type: ITextChannel
      optional: true
    - &o12
      name: name
      desc: The name of the webhook.
      type: string
      optional: true
    - *o3
    - *o3
leavehook_string:
  desc: Sets up a leave message using the specified text.
  args:
    - text
  params:
    - &o13
      name: text
      desc: The text to include in the leave message.
      type: string
      optional: false
greetdm:
  desc: Toggles the sending of greeting messages via direct message.
  args:
    - ''
  params: [ ]
greetdmmsg:
  desc: Displays the current direct message greeting message.
  args:
    - ''
  params: [ ]
greetdmmsg_=:
  desc: Sets the direct message greeting message to the specified text.
  args:
    - null
  params:
    - *o3
bye:
  desc: Toggles the sending of a bye message.
  args:
    - ''
  params: [ ]
byemsg:
  desc: Displays the current bye message.
  args:
    - ''
  params: [ ]
byemsg_string:
  desc: Sets the bye message to the specified text.
  args:
    - text
  params:
    - &o14
      name: text
      desc: The text to set as the bye message.
      type: string
      optional: true
byedel:
  desc: Sets the timer for deleting bye messages.
  args:
    - 30
  params:
    - *o9
byetest:
  desc: Sends a test bye message.
  args:
    - null
  params:
    - *o3
boosttest:
  desc: Sends a test message for boosting.
  args:
    - null
  params:
    - *o3
greetdmtest:
  desc: Sends a test direct message greet.
  args:
    - null
  params:
    - *o3
boostmsg_noparams:
  desc: Displays the current boost message.
  args:
    - ''
  params: [ ]
boost_noparams:
  desc: Enables or disables boost messages.
  args:
    - ''
  params: [ ]
boostdel_=:
  desc: Sets the timer for deleting boost messages.
  args:
    - 30
  params:
    - *o9
boostmsg_string_1:
  desc: Sets the boost message for the server.
  args:
    - text
  params:
    - *o10
leavehook_ITextChannel_string_=_=:
  desc: Execute the LeaveHook command
  args:
    - chan text null null
  params:
    - *o11
    - *o12
    - *o3
    - *o3
leavehook_string_1:
  desc: Sets up a leave message using the specified text.
  args:
    - text
  params:
    - *o13
greetdm_noparams:
  desc: Toggles the sending of greeting messages via direct message.
  args:
    - ''
  params: [ ]
greetdmmsg_noparams:
  desc: Displays the current direct message greeting message.
  args:
    - ''
  params: [ ]
greetdmmsg_=_1:
  desc: Sets the direct message greeting message to the specified text.
  args:
    - null
  params:
    - *o3
bye_noparams:
  desc: Toggles the sending of a bye message.
  args:
    - ''
  params: [ ]
byemsg_noparams:
  desc: Displays the current bye message.
  args:
    - ''
  params: [ ]
byemsg_string_1:
  desc: Sets the bye message to the specified text.
  args:
    - text
  params:
    - *o14
byedel_=:
  desc: Sets the timer for deleting bye messages.
  args:
    - 30
  params:
    - *o9
byetest_=:
  desc: Sends a test bye message.
  args:
    - null
  params:
    - *o3
boosttest_=:
  desc: Sends a test message for boosting.
  args:
    - null
  params:
    - *o3
greetdmtest_=:
  desc: Sends a test direct message greet.
  args:
    - null
  params:
    - *o3
boostmsg_noparams_1:
  desc: Handles the greet and bye messages as well as boost settings bfor the server.
  args:
    - ''
  params: [ ]
boost_noparams_1:
  desc: Enables or disables boost messages.
  args:
    - ''
  params: [ ]
boostdel_=_1:
  desc: Sets the timer for deleting boost messages.
  args:
    - 30
  params:
    - *o9
boostmsg_string_2:
  desc: Sets the boost message for the server.
  args:
    - text
  params:
    - *o10
leavehook_ITextChannel_string_=_=_1:
  desc: Sets up a webhook for leave messages with an optional image.
  args:
    - chan text null null
  params:
    - *o11
    - *o12
    - *o3
    - *o3
leavehook_string_2:
  desc: Sets up a leave message using the specified text.
  args:
    - text
  params:
    - *o13
greetdm_noparams_1:
  desc: Toggles the sending of greeting messages via direct message.
  args:
    - ''
  params: [ ]
greetdmmsg_noparams_1:
  desc: Displays the current direct message greeting message.
  args:
    - ''
  params: [ ]
greetdmmsg_=_2:
  desc: Sets the direct message greeting message to the specified text.
  args:
    - null
  params:
    - *o3
bye_noparams_1:
  desc: Toggles the sending of a bye message.
  args:
    - ''
  params: [ ]
byemsg_noparams_1:
  desc: Displays the current bye message.
  args:
    - ''
  params: [ ]
byemsg_string_2:
  desc: Sets the bye message to the specified text.
  args:
    - text
  params:
    - *o14
byedel_=_1:
  desc: Sets the timer for deleting bye messages.
  args:
    - 30
  params:
    - *o9
byetest_=_1:
  desc: Sends a test bye message.
  args:
    - null
  params:
    - *o3
boosttest_=_1:
  desc: Sends a test message for boosting.
  args:
    - null
  params:
    - *o3
greetdmtest_=_1:
  desc: Sends a test direct message greet.
  args:
    - null
  params:
    - *o3
boostmsg_noparams_2:
  desc: Displays the current boost message.
  args:
    - ''
  params: [ ]
boost_noparams_2:
  desc: Enables or disables boost messages.
  args:
    - ''
  params: [ ]
boostdel_=_2:
  desc: Sets the timer for deleting boost messages.
  args:
    - 30
  params:
    - *o9
boostmsg_string_3:
  desc: Sets the boost message for the server.
  args:
    - text
  params:
    - *o10
leavehook_ITextChannel_string_=_=_2:
  desc: Execute the LeaveHook command
  args:
    - chan text null null
  params:
    - *o11
    - *o12
    - *o3
    - *o3
leavehook_string_3:
  desc: Sets up a leave message using the specified text.
  args:
    - text
  params:
    - *o13
greetdm_noparams_2:
  desc: Toggles the sending of greeting messages via direct message.
  args:
    - ''
  params: [ ]
greetdmmsg_noparams_2:
  desc: Displays the current direct message greeting message.
  args:
    - ''
  params: [ ]
greetdmmsg_=_3:
  desc: Sets the direct message greeting message to the specified text.
  args:
    - null
  params:
    - *o3
bye_noparams_2:
  desc: Toggles the sending of a bye message.
  args:
    - ''
  params: [ ]
byemsg_noparams_2:
  desc: Displays the current bye message.
  args:
    - ''
  params: [ ]
byemsg_string_3:
  desc: Sets the bye message to the specified text.
  args:
    - text
  params:
    - *o14
byedel_=_2:
  desc: Sets the timer for deleting bye messages.
  args:
    - 30
  params:
    - *o9
byetest_=_2:
  desc: Sends a test bye message.
  args:
    - null
  params:
    - *o3
boosttest_=_2:
  desc: Sends a test message for boosting.
  args:
    - null
  params:
    - *o3
greetdmtest_=_2:
  desc: Sends a test direct message greet.
  args:
    - null
  params:
    - *o3
timezones:
  desc: List all available time zones.
  args:
    - ''
  params: [ ]
timezone:
  desc: Shows the time zone of the guild if set.
  args:
    - ''
  params: [ ]
timezone_string:
  desc: Gets info about a time zone.
  args:
    - text
  params:
    - &o15
      name: id
      desc: The timezone ID.
      type: string
      optional: false
timezones_noparams:
  desc: List all available time zones.
  args:
    - ''
  params: [ ]
timezone_noparams:
  desc: Shows the time zone of the guild if set.
  args:
    - ''
  params: [ ]
timezone_string_1:
  desc: Gets info about a time zone.
  args:
    - text
  params:
    - *o15
timezones_noparams_1:
  desc: Handles commands related to time zones.
  args:
    - ''
  params: [ ]
timezone_noparams_1:
  desc: Shows the time zone of the guild if set.
  args:
    - ''
  params: [ ]
timezone_string_2:
  desc: Gets info about a time zone.
  args:
    - text
  params:
    - *o15
timezones_noparams_2:
  desc: Handles commands related to time zones.
  args:
    - ''
  params: [ ]
timezone_noparams_2:
  desc: Shows the time zone of the guild if set.
  args:
    - ''
  params: [ ]
timezone_string_3:
  desc: Gets info about a time zone.
  args:
    - text
  params:
    - *o15
vcrolerm:
  desc: Unbinds a role from a voice channel.
  args:
    - vcid
  params:
    - &o16
      name: vcId
      desc: The voice channel id
      type: ulong
      optional: false
vcrole:
  desc: Adds or removes a role from a voice channel.
  args:
    - vchan null
    - vchan
  params:
    - &o17
      name: vchan
      desc: The channel you want to manage a role for
      type: SocketGuildChannel
      optional: false
    - *o3
vcrole_=:
  desc: Binds or unbinds a role from a voice channel while in a voice channel.
  args:
    - null
  params:
    - *o3
vcrolelist:
  desc: List all voice channel roles for this guild.
  args:
    - ''
  params: [ ]
vcrolerm_ulong:
  desc: Unbinds a role from a voice channel.
  args:
    - vcid
  params:
    - *o16
vcrole_SocketGuildChannel_=:
  desc: Adds or removes a role from a voice channel.
  args:
    - vchan null
    - vchan
  params:
    - *o17
    - *o3
vcrole_=_1:
  desc: Binds or unbinds a role from a voice channel while in a voice channel.
  args:
    - null
  params:
    - *o3
vcrolelist_noparams:
  desc: List all voice channel roles for this guild.
  args:
    - ''
  params: [ ]
vcrolerm_ulong_1:
  desc: Module for managing voice channel roles.
  args:
    - vcid
  params:
    - *o16
vcrole_SocketGuildChannel_=_1:
  desc: Adds or removes a role from a voice channel.
  args:
    - vchan null
    - vchan
  params:
    - *o17
    - *o3
vcrole_=_2:
  desc: Binds or unbinds a role from a voice channel while in a voice channel.
  args:
    - null
  params:
    - *o3
vcrolelist_noparams_1:
  desc: List all voice channel roles for this guild.
  args:
    - ''
  params: [ ]
vcrolerm_ulong_2:
  desc: Module for managing voice channel roles.
  args:
    - vcid
  params:
    - *o16
vcrole_SocketGuildChannel_=_2:
  desc: Adds or removes a role from a voice channel.
  args:
    - vchan null
    - vchan
  params:
    - *o17
    - *o3
vcrole_=_3:
  desc: Binds or unbinds a role from a voice channel while in a voice channel.
  args:
    - null
  params:
    - *o3
vcrolelist_noparams_2:
  desc: List all voice channel roles for this guild.
  args:
    - ''
  params: [ ]
banbyhash:
  desc: Enumerates different variations of the term "channel".
  args:
    - text
  params:
    - &o23
      name: avatarHash
      desc: The avatar hash to search for
      type: string
      optional: false
guildstatsoptout:
  desc: Allows you to opt the entire guild out of stats tracking.
  args:
    - ''
  params: [ ]
deleteguildstatsdata:
  desc: Allows you to delete all stats data for the guild.
  args:
    - ''
  params: [ ]
setnick:
  desc: Lets you set the nickname for a mentioned user. If no user is mentioned it defaults to setting a nickname for the bot.
  args:
    - '@user null'
    - '@user'
  params:
    - &o24
      name: gu
      desc: The target user.
      type: IGuildUser
      optional: false
    - *o3
baninrole:
  desc: Allows you to ban users with a specific role.
  args:
    - '@role null'
    - '@role'
  params:
    - &o25
      name: role
      desc: The role to ban users in
      type: IRole
      optional: false
    - *o3
setnick_=:
  desc: Overload for setting the bot's nickname.
  args:
    - null
  params:
    - *o3
nameban:
  desc: Allows you to ban users with a specific name. This command will show a preview of the users that will be banned. Takes a regex pattern as well.
  args:
    - text
  params:
    - &o26
      name: name
      desc: The name or regex pattern you want to use.
      type: string
      optional: false
banunder:
  desc: Allows you to ban users that have been in the server for a certain amount of time.
  args:
    - time null null
    - time
  params:
    - &o27
      name: time
      desc: The amount of time. Formatted as {0}mo{1}d{2}h{3}m{4}s
      type: StoopidTime
      optional: false
    - *o3
    - *o3
kickunder:
  desc: Kicks users who have been in the server for less than a specified time.
  args:
    - time null
    - time
  params:
    - &o18
      name: time
      desc: Time duration in a custom format
      type: StoopidTime
      optional: false
    - *o3
prunemembers:
  desc: Prunes members from the server based on their activity or inactivity.
  args:
    - time "no"
    - time
  params:
    - *o18
    - &o28
      name: '"no"'
      desc: ''
      type: =
      optional: false
memberrole:
  desc: Sets the member role for the server. Currently unused.
  args:
    - '@role'
  params:
    - &o29
      name: role
      desc: The role that members will have.
      type: IRole
      optional: true
staffrole:
  desc: Sets or updates the role assigned to staff members.
  args:
    - null
  params:
    - *o3
staffroledisable:
  desc: Disables the role assigned to staff members.
  args:
    - ''
  params: [ ]
delmsgoncmd:
  desc: Displays the status of deleting messages on command execution.
  args:
    - list|ls
    - list
    - ls
  params:
    - &o30
      name: _
      desc: 'Possible values: List, Ls'
      type: List
      optional: false
delmsgoncmd_=:
  desc: Toggles the deletion of messages on command execution for the server.
  args:
    - server.server
  params:
    - &o31
      name: Server.Server
      desc: ''
      type: =
      optional: false
delmsgoncmd_Channel_State_ITextChannel:
  desc: Sets the state of deleting messages on command execution for a specific channel.
  args:
    - channel|ch|chnl enable|disable|inherit ch
    - channel
    - ch
    - chnl
    - enable
    - disable
    - inherit
  params:
    - &o19
      name: _
      desc: 'Unused parameter Possible values: Channel, Ch, Chnl, Chan'
      type: Channel
      optional: false
    - &o20
      name: s
      desc: 'The state to set for deleting messages on command execution Possible values: Enable, Disable, Inherit'
      type: State
      optional: false
    - &o32
      name: ch
      desc: The channel where the state should be applied
      type: ITextChannel
      optional: false
delmsgoncmd_Channel_State_=:
  desc: Sets the state of deleting messages on command execution for a specific channel.
  args:
    - channel|ch|chnl enable|disable|inherit null
    - channel|ch|chnl enable|disable|inherit
    - channel
    - ch
    - chnl
    - enable
    - disable
    - inherit
  params:
    - *o19
    - *o20
    - *o3
deafen:
  desc: Deafens specified users in the guild.
  args:
    - '@user'
  params:
    - &o21
      name: users
      desc: The users to undeafen
      type: IGuildUser[]
      optional: false
undeafen:
  desc: Undeafens specified users in the guild.
  args:
    - '@user'
  params:
    - *o21
delvoichanl:
  desc: Deletes the specified voice channel.
  args:
    - voicechannel
  params:
    - &o33
      name: voiceChannel
      desc: The voice channel to delete
      type: IVoiceChannel
      optional: false
creatvoichanl:
  desc: Creates a new voice channel with the specified name.
  args:
    - text
  params:
    - &o34
      name: channelName
      desc: The name of the voice channel to create
      type: string
      optional: false
deltxtchanl:
  desc: Deletes the specified text channel.
  args:
    - todelete
  params:
    - &o35
      name: toDelete
      desc: The text channel to delete
      type: ITextChannel
      optional: false
creatxtchanl:
  desc: Creates a new text channel with the specified name.
  args:
    - text
  params:
    - &o36
      name: channelName
      desc: The name of the text channel to create
      type: string
      optional: false
settopic:
  desc: Sets the topic of the current text channel.
  args:
    - null
  params:
    - *o3
setchanlname:
  desc: Sets the name of the current text channel.
  args:
    - text
  params:
    - &o37
      name: name
      desc: The name to set for the text channel
      type: string
      optional: false
nsfwtoggle:
  desc: Toggles the NSFW setting of the current text channel.
  args:
    - ''
  params: [ ]
edit:
  desc: Edits a message in the specified text channel.
  args:
    - channel messageid text
    - channel messageid
  params:
    - &o38
      name: channel
      desc: The text channel where the message is located
      type: ITextChannel
      optional: false
    - &o39
      name: messageId
      desc: The ID of the message to edit
      type: ulong
      optional: false
    - &o40
      name: text
      desc: The new text for the message
      type: string
      optional: true
delete:
  desc: Deletes a message by its ID in the current text channel.
  args:
    - messageid null
    - messageid
  params:
    - &o22
      name: messageId
      desc: The ID of the message to delete
      type: ulong
      optional: false
    - *o3
delete_ITextChannel_ulong_=:
  desc: Deletes a message by its ID in the specified text channel.
  args:
    - channel messageid null
    - channel messageid
  params:
    - &o41
      name: channel
      desc: The target channel
      type: ITextChannel
      optional: false
    - *o22
    - *o3
renamechannel:
  desc: Internal handler for message deletion.
  args:
    - channel text
  params:
    - &o42
      name: channel
      desc: The target channel
      type: IGuildChannel
      optional: false
    - &o43
      name: name
      desc: ''
      type: string
      optional: false
banbyhash_string:
  desc: Represents the state of being disabled.
  args:
    - text
  params:
    - *o23
guildstatsoptout_noparams:
  desc: Allows you to opt the entire guild out of stats tracking.
  args:
    - ''
  params: [ ]
deleteguildstatsdata_noparams:
  desc: Allows you to delete all stats data for the guild.
  args:
    - ''
  params: [ ]
setnick_IGuildUser_=:
  desc: Lets you set the nickname for a mentioned user. If no user is mentioned it defaults to setting a nickname for the bot.
  args:
    - '@user null'
    - '@user'
  params:
    - *o24
    - *o3
baninrole_IRole_=:
  desc: Allows you to ban users with a specific role.
  args:
    - '@role null'
    - '@role'
  params:
    - *o25
    - *o3
setnick_=_1:
  desc: Overload for setting the bot's nickname.
  args:
    - null
  params:
    - *o3
nameban_string:
  desc: Allows you to ban users with a specific name. This command will show a preview of the users that will be banned. Takes a regex pattern as well.
  args:
    - text
  params:
    - *o26
banunder_StoopidTime_=_=:
  desc: Execute the BanUnder command
  args:
    - time null null
    - time
  params:
    - *o27
    - *o3
    - *o3
kickunder_StoopidTime_=:
  desc: Execute the KickUnder command
  args:
    - time null
    - time
  params:
    - *o18
    - *o3
prunemembers_StoopidTime_=:
  desc: Execute the PruneMembers command
  args:
    - time "no"
    - time
  params:
    - *o18
    - *o28
memberrole_IRole:
  desc: Sets the member role for the server. Currently unused.
  args:
    - '@role'
  params:
    - *o29
staffrole_=:
  desc: Sets or updates the role assigned to staff members.
  args:
    - null
  params:
    - *o3
staffroledisable_noparams:
  desc: Disables the role assigned to staff members.
  args:
    - ''
  params: [ ]
delmsgoncmd_List:
  desc: Displays the status of deleting messages on command execution.
  args:
    - list|ls
    - list
    - ls
  params:
    - *o30
delmsgoncmd_=_1:
  desc: Toggles the deletion of messages on command execution for the server.
  args:
    - server.server
  params:
    - *o31
delmsgoncmd_Channel_State_ITextChannel_1:
  desc: Execute the Delmsgoncmd command
  args:
    - channel|ch|chnl enable|disable|inherit ch
    - channel
    - ch
    - chnl
    - enable
    - disable
    - inherit
  params:
    - *o19
    - *o20
    - *o32
delmsgoncmd_Channel_State_=_1:
  desc: Execute the Delmsgoncmd command
  args:
    - channel|ch|chnl enable|disable|inherit null
    - channel|ch|chnl enable|disable|inherit
    - channel
    - ch
    - chnl
    - enable
    - disable
    - inherit
  params:
    - *o19
    - *o20
    - *o3
deafen_IGuildUser[]:
  desc: Deafens specified users in the guild.
  args:
    - '@user'
  params:
    - *o21
undeafen_IGuildUser[]:
  desc: Undeafens specified users in the guild.
  args:
    - '@user'
  params:
    - *o21
delvoichanl_IVoiceChannel:
  desc: Deletes the specified voice channel.
  args:
    - voicechannel
  params:
    - *o33
creatvoichanl_string:
  desc: Creates a new voice channel with the specified name.
  args:
    - text
  params:
    - *o34
deltxtchanl_ITextChannel:
  desc: Deletes the specified text channel.
  args:
    - todelete
  params:
    - *o35
creatxtchanl_string:
  desc: Creates a new text channel with the specified name.
  args:
    - text
  params:
    - *o36
settopic_=:
  desc: Sets the topic of the current text channel.
  args:
    - null
  params:
    - *o3
setchanlname_string:
  desc: Sets the name of the current text channel.
  args:
    - text
  params:
    - *o37
nsfwtoggle_noparams:
  desc: Toggles the NSFW setting of the current text channel.
  args:
    - ''
  params: [ ]
edit_ITextChannel_ulong_string:
  desc: Execute the Edit command
  args:
    - channel messageid text
    - channel messageid
  params:
    - *o38
    - *o39
    - *o40
delete_ulong_=:
  desc: Execute the Delete command
  args:
    - messageid null
    - messageid
  params:
    - *o22
    - *o3
delete_ITextChannel_ulong_=_1:
  desc: Execute the Delete command
  args:
    - channel messageid null
    - channel messageid
  params:
    - *o41
    - &o44
      name: messageId
      desc: The target message ID
      type: ulong
      optional: false
    - *o3
renamechannel_IGuildChannel_string:
  desc: Renames the specified channel.
  args:
    - channel text
  params:
    - &o45
      name: channel
      desc: The channel to rename
      type: IGuildChannel
      optional: false
    - &o46
      name: name
      desc: The new name for the channel
      type: string
      optional: false
banbyhash_string_1:
  desc: Class for the Administration Module.
  args:
    - text
  params:
    - *o23
guildstatsoptout_noparams_1:
  desc: Allows you to opt the entire guild out of stats tracking.
  args:
    - ''
  params: [ ]
deleteguildstatsdata_noparams_1:
  desc: Allows you to delete all stats data for the guild.
  args:
    - ''
  params: [ ]
setnick_IGuildUser_=_1:
  desc: Lets you set the nickname for a mentioned user. If no user is mentioned it defaults to setting a nickname for the bot.
  args:
    - '@user null'
    - '@user'
  params:
    - *o24
    - *o3
baninrole_IRole_=_1:
  desc: Allows you to ban users with a specific role.
  args:
    - '@role null'
    - '@role'
  params:
    - *o25
    - *o3
setnick_=_2:
  desc: Overload for setting the bot's nickname.
  args:
    - null
  params:
    - *o3
nameban_string_1:
  desc: Allows you to ban users with a specific name. This command will show a preview of the users that will be banned. Takes a regex pattern as well.
  args:
    - text
  params:
    - *o26
banunder_StoopidTime_=_=_1:
  desc: Allows you to ban users that have been in the server for a certain amount of time.
  args:
    - time null null
    - time
  params:
    - *o27
    - *o3
    - *o3
kickunder_StoopidTime_=_1:
  desc: Kicks users who have been in the server for less than a specified time.
  args:
    - time null
    - time
  params:
    - *o18
    - *o3
prunemembers_StoopidTime_=_1:
  desc: Prunes members from the server based on their activity or inactivity.
  args:
    - time "no"
    - time
  params:
    - *o18
    - *o28
memberrole_IRole_1:
  desc: Sets the member role for the server. Currently unused.
  args:
    - '@role'
  params:
    - *o29
staffrole_=_1:
  desc: Sets or updates the role assigned to staff members.
  args:
    - null
  params:
    - *o3
staffroledisable_noparams_1:
  desc: Disables the role assigned to staff members.
  args:
    - ''
  params: [ ]
delmsgoncmd_List_1:
  desc: Displays the status of deleting messages on command execution.
  args:
    - list|ls
    - list
    - ls
  params:
    - *o30
delmsgoncmd_=_2:
  desc: Toggles the deletion of messages on command execution for the server.
  args:
    - server.server
  params:
    - *o31
delmsgoncmd_Channel_State_ITextChannel_2:
  desc: Sets the state of deleting messages on command execution for a specific channel.
  args:
    - channel|ch|chnl enable|disable|inherit ch
    - channel
    - ch
    - chnl
    - enable
    - disable
    - inherit
  params:
    - *o19
    - *o20
    - *o32
delmsgoncmd_Channel_State_=_2:
  desc: Sets the state of deleting messages on command execution for a specific channel.
  args:
    - channel|ch|chnl enable|disable|inherit null
    - channel|ch|chnl enable|disable|inherit
    - channel
    - ch
    - chnl
    - enable
    - disable
    - inherit
  params:
    - *o19
    - *o20
    - *o3
deafen_IGuildUser[]_1:
  desc: Deafens specified users in the guild.
  args:
    - '@user'
  params:
    - *o21
undeafen_IGuildUser[]_1:
  desc: Undeafens specified users in the guild.
  args:
    - '@user'
  params:
    - *o21
delvoichanl_IVoiceChannel_1:
  desc: Deletes the specified voice channel.
  args:
    - voicechannel
  params:
    - *o33
creatvoichanl_string_1:
  desc: Creates a new voice channel with the specified name.
  args:
    - text
  params:
    - *o34
deltxtchanl_ITextChannel_1:
  desc: Deletes the specified text channel.
  args:
    - todelete
  params:
    - *o35
creatxtchanl_string_1:
  desc: Creates a new text channel with the specified name.
  args:
    - text
  params:
    - *o36
settopic_=_1:
  desc: Sets the topic of the current text channel.
  args:
    - null
  params:
    - *o3
setchanlname_string_1:
  desc: Sets the name of the current text channel.
  args:
    - text
  params:
    - *o37
nsfwtoggle_noparams_1:
  desc: Toggles the NSFW setting of the current text channel.
  args:
    - ''
  params: [ ]
edit_ITextChannel_ulong_string_1:
  desc: Edits a message in the specified text channel.
  args:
    - channel messageid text
    - channel messageid
  params:
    - *o38
    - *o39
    - *o40
delete_ulong_=_1:
  desc: Deletes a message by its ID in the current text channel.
  args:
    - messageid null
    - messageid
  params:
    - *o22
    - *o3
delete_ITextChannel_ulong_=_2:
  desc: Deletes a message by its ID in the specified text channel.
  args:
    - channel messageid null
    - channel messageid
  params:
    - *o41
    - *o22
    - *o3
renamechannel_IGuildChannel_string_1:
  desc: Internal handler for message deletion.
  args:
    - channel text
  params:
    - *o42
    - *o43
banbyhash_string_2:
  desc: Represents the state of being disabled.
  args:
    - text
  params:
    - *o23
guildstatsoptout_noparams_2:
  desc: Allows you to opt the entire guild out of stats tracking.
  args:
    - ''
  params: [ ]
deleteguildstatsdata_noparams_2:
  desc: Allows you to delete all stats data for the guild.
  args:
    - ''
  params: [ ]
setnick_IGuildUser_=_2:
  desc: Lets you set the nickname for a mentioned user. If no user is mentioned it defaults to setting a nickname for the bot.
  args:
    - '@user null'
    - '@user'
  params:
    - *o24
    - *o3
baninrole_IRole_=_2:
  desc: Allows you to ban users with a specific role.
  args:
    - '@role null'
    - '@role'
  params:
    - *o25
    - *o3
setnick_=_3:
  desc: Overload for setting the bot's nickname.
  args:
    - null
  params:
    - *o3
nameban_string_2:
  desc: Allows you to ban users with a specific name. This command will show a preview of the users that will be banned. Takes a regex pattern as well.
  args:
    - text
  params:
    - *o26
banunder_StoopidTime_=_=_2:
  desc: Execute the BanUnder command
  args:
    - time null null
    - time
  params:
    - *o27
    - *o3
    - *o3
kickunder_StoopidTime_=_2:
  desc: Execute the KickUnder command
  args:
    - time null
    - time
  params:
    - *o18
    - *o3
prunemembers_StoopidTime_=_2:
  desc: Execute the PruneMembers command
  args:
    - time "no"
    - time
  params:
    - *o18
    - *o28
memberrole_IRole_2:
  desc: Sets the member role for the server. Currently unused.
  args:
    - '@role'
  params:
    - *o29
staffrole_=_2:
  desc: Sets or updates the role assigned to staff members.
  args:
    - null
  params:
    - *o3
staffroledisable_noparams_2:
  desc: Disables the role assigned to staff members.
  args:
    - ''
  params: [ ]
delmsgoncmd_List_2:
  desc: Displays the status of deleting messages on command execution.
  args:
    - list|ls
    - list
    - ls
  params:
    - *o30
delmsgoncmd_=_3:
  desc: Toggles the deletion of messages on command execution for the server.
  args:
    - server.server
  params:
    - *o31
delmsgoncmd_Channel_State_ITextChannel_3:
  desc: Execute the Delmsgoncmd command
  args:
    - channel|ch|chnl enable|disable|inherit ch
    - channel
    - ch
    - chnl
    - enable
    - disable
    - inherit
  params:
    - *o19
    - *o20
    - *o32
delmsgoncmd_Channel_State_=_3:
  desc: Execute the Delmsgoncmd command
  args:
    - channel|ch|chnl enable|disable|inherit null
    - channel|ch|chnl enable|disable|inherit
    - channel
    - ch
    - chnl
    - enable
    - disable
    - inherit
  params:
    - *o19
    - *o20
    - *o3
deafen_IGuildUser[]_2:
  desc: Deafens specified users in the guild.
  args:
    - '@user'
  params:
    - *o21
undeafen_IGuildUser[]_2:
  desc: Undeafens specified users in the guild.
  args:
    - '@user'
  params:
    - *o21
delvoichanl_IVoiceChannel_2:
  desc: Deletes the specified voice channel.
  args:
    - voicechannel
  params:
    - *o33
creatvoichanl_string_2:
  desc: Creates a new voice channel with the specified name.
  args:
    - text
  params:
    - *o34
deltxtchanl_ITextChannel_2:
  desc: Deletes the specified text channel.
  args:
    - todelete
  params:
    - *o35
creatxtchanl_string_2:
  desc: Creates a new text channel with the specified name.
  args:
    - text
  params:
    - *o36
settopic_=_2:
  desc: Sets the topic of the current text channel.
  args:
    - null
  params:
    - *o3
setchanlname_string_2:
  desc: Sets the name of the current text channel.
  args:
    - text
  params:
    - *o37
nsfwtoggle_noparams_2:
  desc: Toggles the NSFW setting of the current text channel.
  args:
    - ''
  params: [ ]
edit_ITextChannel_ulong_string_2:
  desc: Execute the Edit command
  args:
    - channel messageid text
    - channel messageid
  params:
    - *o38
    - *o39
    - *o40
delete_ulong_=_2:
  desc: Execute the Delete command
  args:
    - messageid null
    - messageid
  params:
    - *o22
    - *o3
delete_ITextChannel_ulong_=_3:
  desc: Execute the Delete command
  args:
    - channel messageid null
    - channel messageid
  params:
    - *o41
    - *o44
    - *o3
renamechannel_IGuildChannel_string_2:
  desc: Renames the specified channel.
  args:
    - channel text
  params:
    - *o45
    - *o46
autoassignrole:
  desc: Enables or disables auto-assigning the specified role to users when they join the guild.
  args:
    - '@role'
  params:
    - &o47
      name: role
      desc: The role to enable or disable auto-assigning
      type: IRole
      optional: false
autoassignrole_noparams:
  desc: Displays the list of roles eligible for auto-assigning when users join the guild.
  args:
    - ''
  params: [ ]
autoassignbotrole:
  desc: Enables or disables auto-assigning the specified role to bots when they join the guild.
  args:
    - '@role'
  params:
    - *o47
autoassignbotrole_noparams:
  desc: Displays the list of roles eligible for auto-assigning to bots when they join the guild.
  args:
    - ''
  params: [ ]
autoassignrole_IRole:
  desc: Enables or disables auto-assigning the specified role to users when they join the guild.
  args:
    - '@role'
  params:
    - *o47
autoassignrole_noparams_1:
  desc: Displays the list of roles eligible for auto-assigning when users join the guild.
  args:
    - ''
  params: [ ]
autoassignbotrole_IRole:
  desc: Enables or disables auto-assigning the specified role to bots when they join the guild.
  args:
    - '@role'
  params:
    - *o47
autoassignbotrole_noparams_1:
  desc: Displays the list of roles eligible for auto-assigning to bots when they join the guild.
  args:
    - ''
  params: [ ]
autoassignrole_IRole_1:
  desc: Commands for managing auto-assign roles.
  args:
    - '@role'
  params:
    - *o47
autoassignrole_noparams_2:
  desc: Displays the list of roles eligible for auto-assigning when users join the guild.
  args:
    - ''
  params: [ ]
autoassignbotrole_IRole_1:
  desc: Enables or disables auto-assigning the specified role to bots when they join the guild.
  args:
    - '@role'
  params:
    - *o47
autoassignbotrole_noparams_2:
  desc: Displays the list of roles eligible for auto-assigning to bots when they join the guild.
  args:
    - ''
  params: [ ]
autoassignrole_IRole_2:
  desc: Enables or disables auto-assigning the specified role to users when they join the guild.
  args:
    - '@role'
  params:
    - *o47
autoassignrole_noparams_3:
  desc: Displays the list of roles eligible for auto-assigning when users join the guild.
  args:
    - ''
  params: [ ]
autoassignbotrole_IRole_2:
  desc: Enables or disables auto-assigning the specified role to bots when they join the guild.
  args:
    - '@role'
  params:
    - *o47
autoassignbotrole_noparams_3:
  desc: Displays the list of roles eligible for auto-assigning to bots when they join the guild.
  args:
    - ''
  params: [ ]
autobanroleadd:
  desc: Adds a role to the list of AutoBanRoles.
  args:
    - '@role'
  params:
    - &o48
      name: role
      desc: The role to remove
      type: IRole
      optional: false
autobanroleremove:
  desc: Removes a role from the list of AutoBanRoles.
  args:
    - '@role'
  params:
    - *o48
autobanroleadd_IRole:
  desc: Adds a role to the list of AutoBanRoles.
  args:
    - '@role'
  params:
    - *o48
autobanroleremove_IRole:
  desc: Removes a role from the list of AutoBanRoles.
  args:
    - '@role'
  params:
    - *o48
autobanroleadd_IRole_1:
  desc: Command group for managing the AutoBanRole feature.
  args:
    - '@role'
  params:
    - *o48
autobanroleremove_IRole_1:
  desc: Removes a role from the list of AutoBanRoles.
  args:
    - '@role'
  params:
    - *o48
autobanroleadd_IRole_2:
  desc: Command group for managing the AutoBanRole feature.
  args:
    - '@role'
  params:
    - *o48
autobanroleremove_IRole_2:
  desc: Removes a role from the list of AutoBanRoles.
  args:
    - '@role'
  params:
    - *o48
discordpermoverride:
  desc: Overrides the required permissions for a specific command in the current guild.
  args:
    - cmd perms
    - cmd
  params:
    - &o49
      name: cmd
      desc: The command for which the permissions will be overridden
      type: CommandOrCrInfo
      optional: false
    - &o50
      name: perms
      desc: The permissions required to execute the command
      type: GuildPermission[]
      optional: true
discordpermoverridereset:
  desc: Resets all command permission overrides in the current guild.
  args:
    - ''
  params: [ ]
discordpermoverridelist:
  desc: Lists all command permission overrides in the current guild.
  args:
    - ''
  params: [ ]
discordpermoverride_CommandOrCrInfo_GuildPermission[]:
  desc: Execute the DiscordPermOverride command
  args:
    - cmd perms
    - cmd
  params:
    - *o49
    - *o50
discordpermoverridereset_noparams:
  desc: Resets all command permission overrides in the current guild.
  args:
    - ''
  params: [ ]
discordpermoverridelist_noparams:
  desc: Lists all command permission overrides in the current guild.
  args:
    - ''
  params: [ ]
discordpermoverride_CommandOrCrInfo_GuildPermission[]_1:
  desc: Module for managing Discord permission overrides. This module allows administrators to override the required permissions for a command.
  args:
    - cmd perms
    - cmd
  params:
    - *o49
    - *o50
discordpermoverridereset_noparams_1:
  desc: Resets all command permission overrides in the current guild.
  args:
    - ''
  params: [ ]
discordpermoverridelist_noparams_1:
  desc: Lists all command permission overrides in the current guild.
  args:
    - ''
  params: [ ]
discordpermoverride_CommandOrCrInfo_GuildPermission[]_2:
  desc: Execute the DiscordPermOverride command
  args:
    - cmd perms
    - cmd
  params:
    - *o49
    - *o50
discordpermoverridereset_noparams_2:
  desc: Resets all command permission overrides in the current guild.
  args:
    - ''
  params: [ ]
discordpermoverridelist_noparams_2:
  desc: Lists all command permission overrides in the current guild.
  args:
    - ''
  params: [ ]
gamevoicechannel:
  desc: Toggles the current voice channel as the game voice channel for the guild.
  args:
    - ''
  params: [ ]
gamevoicechannel_noparams:
  desc: Toggles the current voice channel as the game voice channel for the guild.
  args:
    - ''
  params: [ ]
gamevoicechannel_noparams_1:
  desc: The module for managing game voice channels.
  args:
    - ''
  params: [ ]
gamevoicechannel_noparams_2:
  desc: Toggles the current voice channel as the game voice channel for the guild.
  args:
    - ''
  params: [ ]
languageset:
  desc: Sets the language for the current guild.
  args:
    - text
  params:
    - &o51
      name: name
      desc: The name of the language or "default" to reset to the default language.
      type: string
      optional: false
languagesetdefault:
  desc: Displays the default language for the bot.
  args:
    - ''
  params: [ ]
languagesetdefault_string:
  desc: Sets the default language for the bot.
  args:
    - text
  params:
    - *o51
languageslist:
  desc: Lists all supported languages along with their codes.
  args:
    - ''
  params: [ ]
languageset_string:
  desc: Sets the language for the current guild.
  args:
    - text
  params:
    - *o51
languagesetdefault_noparams:
  desc: Displays the default language for the bot.
  args:
    - ''
  params: [ ]
languagesetdefault_string_1:
  desc: Sets the default language for the bot.
  args:
    - text
  params:
    - *o51
languageslist_noparams:
  desc: Lists all supported languages along with their codes.
  args:
    - ''
  params: [ ]
languageset_string_1:
  desc: Module for managing the bot's language settings.
  args:
    - text
  params:
    - *o43
languagesetdefault_noparams_1:
  desc: Displays the default language for the bot.
  args:
    - ''
  params: [ ]
languagesetdefault_string_2:
  desc: Sets the default language for the bot.
  args:
    - text
  params:
    - *o51
languageslist_noparams_1:
  desc: Lists all supported languages along with their codes.
  args:
    - ''
  params: [ ]
languageset_string_2:
  desc: Sets the language for the current guild.
  args:
    - text
  params:
    - *o51
languagesetdefault_noparams_2:
  desc: Displays the default language for the bot.
  args:
    - ''
  params: [ ]
languagesetdefault_string_3:
  desc: Sets the default language for the bot.
  args:
    - text
  params:
    - *o51
languageslist_noparams_2:
  desc: Lists all supported languages along with their codes.
  args:
    - ''
  params: [ ]
prefixcommand:
  desc: Enumerates different variations of the term "set". Used for idiots that try to do .prefix set !.
  args:
    - ''
  params: [ ]
prefixcommand_Set_string:
  desc: Sets the command prefix for the guild.
  args:
    - set text
    - set
  params:
    - &o53
      name: _
      desc: 'Used for idiots that try to do .prefix set ! Possible values: Set'
      type: Set
      optional: false
    - &o52
      name: prefix
      desc: The new command prefix to set.
      type: string
      optional: false
prefixcommand_string:
  desc: Sets the command prefix for the guild.
  args:
    - text
  params:
    - *o52
prefixcommand_noparams:
  desc: Represents the term "set".
  args:
    - ''
  params: [ ]
prefixcommand_Set_string_1:
  desc: Sets the command prefix for the guild.
  args:
    - set text
    - set
  params:
    - *o53
    - *o52
prefixcommand_string_1:
  desc: Sets the command prefix for the guild.
  args:
    - text
  params:
    - *o52
prefixcommand_noparams_1:
  desc: Module for managing the bot's prefix.
  args:
    - ''
  params: [ ]
prefixcommand_Set_string_2:
  desc: Sets the command prefix for the guild.
  args:
    - set text
    - set
  params:
    - *o53
    - *o52
prefixcommand_string_2:
  desc: Sets the command prefix for the guild.
  args:
    - text
  params:
    - *o52
prefixcommand_noparams_2:
  desc: Represents the term "set".
  args:
    - ''
  params: [ ]
prefixcommand_Set_string_3:
  desc: Sets the command prefix for the guild.
  args:
    - set text
    - set
  params:
    - *o53
    - *o52
prefixcommand_string_3:
  desc: Sets the command prefix for the guild.
  args:
    - text
  params:
    - *o52
antialt:
  desc: Disables the Anti-Alt protection for the guild.
  args:
    - ''
  params: [ ]
antialt_StoopidTime_PunishmentAction_=:
  desc: Configures the Anti-Alt protection for the guild, setting the minimum account age and punishment action.
  args:
    - minage action null
    - minage action
  params:
    - &o54
      name: minAge
      desc: The minimum age (in minutes) for accounts to be considered as alts.
      type: StoopidTime
      optional: false
    - &o55
      name: action
      desc: 'The punishment action to be taken against detected alts. '
      type: PunishmentAction
      optional: false
    - *o3
antialt_StoopidTime_PunishmentAction_IRole:
  desc: Configures the Anti-Alt protection for the guild, setting the minimum account age and punishment action with a role-based punishment.
  args:
    - minage action @role
  params:
    - *o54
    - *o55
    - &o66
      name: role
      desc: The role to be assigned to detected alts as punishment.
      type: IRole
      optional: false
antiraid:
  desc: Disables the Anti-Raid protection for the guild.
  args:
    - ''
  params: [ ]
antiraid_int_int_PunishmentAction_StoopidTime:
  desc: Configures the Anti-Raid protection for the guild, setting the user threshold, detection time window, punishment action, and optional punishment duration.
  args:
    - number number action time
  params:
    - &o56
      name: userThreshold
      desc: The threshold of users that triggers the detection of a raid.
      type: int
      optional: false
    - &o57
      name: seconds
      desc: The time window (in seconds) to observe user joins.
      type: int
      optional: false
    - &o58
      name: action
      desc: 'The punishment action to be taken against detected raids. '
      type: PunishmentAction
      optional: false
    - &o67
      name: punishTime
      desc: The duration of punishment for the raiders (optional).
      type: StoopidTime
      optional: false
antiraid_int_int_PunishmentAction:
  desc: Configures the Anti-Raid protection for the guild, setting the user threshold, detection time window, and punishment action.
  args:
    - number number action
  params:
    - *o56
    - *o57
    - *o58
antispam:
  desc: Disables the Anti-Spam protection for the guild.
  args:
    - ''
  params: [ ]
antispam_int_PunishmentAction_StoopidTime:
  desc: Configures the Anti-Spam protection for the guild, setting the message count threshold, punishment action, and optional punishment duration.
  args:
    - number action time
  params:
    - &o59
      name: messageCount
      desc: The threshold of messages that triggers the detection of spam.
      type: int
      optional: false
    - &o60
      name: action
      desc: /// The punishment action to be taken against detected spammers.  ///
      type: PunishmentAction
      optional: false
    - &o68
      name: punishTime
      desc: The duration of punishment for the spammers (optional).
      type: StoopidTime
      optional: false
antispam_int_PunishmentAction_IRole:
  desc: Configures the Anti-Spam protection for the guild, setting the message count threshold, punishment action, and the role to add to spammers.
  args:
    - number action @role
  params:
    - *o59
    - *o60
    - &o69
      name: role
      desc: The role to add to the spammers.
      type: IRole
      optional: false
antispam_int_PunishmentAction:
  desc: Configures the Anti-Spam protection for the guild, setting the message count threshold and punishment action.
  args:
    - number action
  params:
    - *o59
    - *o60
antimassmention:
  desc: Configures the Anti-Spam protection for the guild, setting the message count threshold, punishment action, and optional punishment duration.
  args:
    - ''
  params: [ ]
antimassmention_int_int_int_bool_PunishmentAction_=:
  desc: Configures the Anti-Mass-Mention protection for the guild, setting the mention threshold for a single message, the time window for mention tracking, the maximum allowed mentions in the time window, and the punishment action.
  args:
    - number number number true|false action null
    - number number number true|false action
  params:
    - &o61
      name: mentionThreshold
      desc: The number of mentions allowed in a single message before triggering protection.
      type: int
      optional: false
    - &o62
      name: timeWindowSeconds
      desc: The time window (in seconds) to observe mentions.
      type: int
      optional: false
    - &o63
      name: maxMentionsInTimeWindow
      desc: The maximum allowed mentions in the specified time window.
      type: int
      optional: false
    - &o64
      name: ignoreBots
      desc: ''
      type: bool
      optional: false
    - &o65
      name: action
      desc: /// The punishment action to be taken against users who exceed the mention limits. ///  ///
      type: PunishmentAction
      optional: false
    - *o3
antimassmention_int_int_int_bool_PunishmentAction_IRole:
  desc: Configures the Anti-Mass-Mention protection for the guild, setting the mention threshold for a single message, the time window for mention tracking, the maximum allowed mentions in the time window, and the punishment action with a role-based punishment.
  args:
    - number number number true|false action @role
  params:
    - *o61
    - *o62
    - *o63
    - *o64
    - *o65
    - &o70
      name: role
      desc: The role to be assigned to punished users as punishment.
      type: IRole
      optional: false
antialt_noparams:
  desc: Disables the Anti-Alt protection for the guild.
  args:
    - ''
  params: [ ]
antialt_StoopidTime_PunishmentAction_=_1:
  desc: Execute the AntiAlt command
  args:
    - minage action null
    - minage action
  params:
    - *o54
    - *o55
    - *o3
antialt_StoopidTime_PunishmentAction_IRole_1:
  desc: Execute the AntiAlt command
  args:
    - minage action @role
  params:
    - *o54
    - *o55
    - *o66
antiraid_noparams:
  desc: Disables the Anti-Raid protection for the guild.
  args:
    - ''
  params: [ ]
antiraid_int_int_PunishmentAction_StoopidTime_1:
  desc: Execute the AntiRaid command
  args:
    - number number action time
  params:
    - *o56
    - *o57
    - *o58
    - *o67
antiraid_int_int_PunishmentAction_1:
  desc: Execute the AntiRaid command
  args:
    - number number action
  params:
    - *o56
    - *o57
    - *o58
antispam_noparams:
  desc: Disables the Anti-Spam protection for the guild.
  args:
    - ''
  params: [ ]
antispam_int_PunishmentAction_StoopidTime_1:
  desc: Execute the AntiSpam command
  args:
    - number action time
  params:
    - *o59
    - *o60
    - *o68
antispam_int_PunishmentAction_IRole_1:
  desc: Execute the AntiSpam command
  args:
    - number action @role
  params:
    - *o59
    - *o60
    - *o69
antispam_int_PunishmentAction_1:
  desc: Execute the AntiSpam command
  args:
    - number action
  params:
    - *o59
    - &o71
      name: action
      desc: The punishment action to be taken against detected spammers.
      type: PunishmentAction
      optional: false
antimassmention_noparams:
  desc: Disables the Anti-Mass-Mention protection for the guild.
  args:
    - ''
  params: [ ]
antimassmention_int_int_int_bool_PunishmentAction_=_1:
  desc: Execute the AntiMassMention command
  args:
    - number number number true|false action null
    - number number number true|false action
  params:
    - *o61
    - *o62
    - *o63
    - *o64
    - *o65
    - *o3
antimassmention_int_int_int_bool_PunishmentAction_IRole_1:
  desc: Execute the AntiMassMention command
  args:
    - number number number true|false action @role
  params:
    - *o61
    - *o62
    - *o63
    - *o64
    - *o65
    - *o70
antialt_noparams_1:
  desc: Commands for managing the Anti-Alt, Anti-Raid, and Anti-Spam protection settings.
  args:
    - ''
  params: [ ]
antialt_StoopidTime_PunishmentAction_=_2:
  desc: Configures the Anti-Alt protection for the guild, setting the minimum account age and punishment action.
  args:
    - minage action null
    - minage action
  params:
    - *o54
    - *o55
    - *o3
antialt_StoopidTime_PunishmentAction_IRole_2:
  desc: Configures the Anti-Alt protection for the guild, setting the minimum account age and punishment action with a role-based punishment.
  args:
    - minage action @role
  params:
    - *o54
    - *o55
    - *o66
antiraid_noparams_1:
  desc: Disables the Anti-Raid protection for the guild.
  args:
    - ''
  params: [ ]
antiraid_int_int_PunishmentAction_StoopidTime_2:
  desc: Configures the Anti-Raid protection for the guild, setting the user threshold, detection time window, punishment action, and optional punishment duration.
  args:
    - number number action time
  params:
    - *o56
    - *o57
    - *o58
    - *o67
antiraid_int_int_PunishmentAction_2:
  desc: Configures the Anti-Raid protection for the guild, setting the user threshold, detection time window, and punishment action.
  args:
    - number number action
  params:
    - *o56
    - *o57
    - *o58
antispam_noparams_1:
  desc: Disables the Anti-Spam protection for the guild.
  args:
    - ''
  params: [ ]
antispam_int_PunishmentAction_StoopidTime_2:
  desc: Configures the Anti-Spam protection for the guild, setting the message count threshold, punishment action, and optional punishment duration.
  args:
    - number action time
  params:
    - *o59
    - *o60
    - *o68
antispam_int_PunishmentAction_IRole_2:
  desc: Configures the Anti-Spam protection for the guild, setting the message count threshold, punishment action, and the role to add to spammers.
  args:
    - number action @role
  params:
    - *o59
    - *o60
    - *o69
antispam_int_PunishmentAction_2:
  desc: Configures the Anti-Spam protection for the guild, setting the message count threshold and punishment action.
  args:
    - number action
  params:
    - *o59
    - *o60
antimassmention_noparams_1:
  desc: Configures the Anti-Spam protection for the guild, setting the message count threshold, punishment action, and optional punishment duration.
  args:
    - ''
  params: [ ]
antimassmention_int_int_int_bool_PunishmentAction_=_2:
  desc: Configures the Anti-Mass-Mention protection for the guild, setting the mention threshold for a single message, the time window for mention tracking, the maximum allowed mentions in the time window, and the punishment action.
  args:
    - number number number true|false action null
    - number number number true|false action
  params:
    - *o61
    - *o62
    - *o63
    - *o64
    - *o65
    - *o3
antimassmention_int_int_int_bool_PunishmentAction_IRole_2:
  desc: Configures the Anti-Mass-Mention protection for the guild, setting the mention threshold for a single message, the time window for mention tracking, the maximum allowed mentions in the time window, and the punishment action with a role-based punishment.
  args:
    - number number number true|false action @role
  params:
    - *o61
    - *o62
    - *o63
    - *o64
    - *o65
    - *o70
antialt_noparams_2:
  desc: Commands for managing the Anti-Alt, Anti-Raid, and Anti-Spam protection settings.
  args:
    - ''
  params: [ ]
antialt_StoopidTime_PunishmentAction_=_3:
  desc: Execute the AntiAlt command
  args:
    - minage action null
    - minage action
  params:
    - *o54
    - *o55
    - *o3
antialt_StoopidTime_PunishmentAction_IRole_3:
  desc: Execute the AntiAlt command
  args:
    - minage action @role
  params:
    - *o54
    - *o55
    - *o66
antiraid_noparams_2:
  desc: Disables the Anti-Raid protection for the guild.
  args:
    - ''
  params: [ ]
antiraid_int_int_PunishmentAction_StoopidTime_3:
  desc: Execute the AntiRaid command
  args:
    - number number action time
  params:
    - *o56
    - *o57
    - *o58
    - *o67
antiraid_int_int_PunishmentAction_3:
  desc: Execute the AntiRaid command
  args:
    - number number action
  params:
    - *o56
    - *o57
    - *o58
antispam_noparams_2:
  desc: Disables the Anti-Spam protection for the guild.
  args:
    - ''
  params: [ ]
antispam_int_PunishmentAction_StoopidTime_3:
  desc: Execute the AntiSpam command
  args:
    - number action time
  params:
    - *o59
    - *o60
    - *o68
antispam_int_PunishmentAction_IRole_3:
  desc: Execute the AntiSpam command
  args:
    - number action @role
  params:
    - *o59
    - *o60
    - *o69
antispam_int_PunishmentAction_3:
  desc: Execute the AntiSpam command
  args:
    - number action
  params:
    - *o59
    - *o71
antimassmention_noparams_2:
  desc: Disables the Anti-Mass-Mention protection for the guild.
  args:
    - ''
  params: [ ]
antimassmention_int_int_int_bool_PunishmentAction_=_3:
  desc: Execute the AntiMassMention command
  args:
    - number number number true|false action null
    - number number number true|false action
  params:
    - *o61
    - *o62
    - *o63
    - *o64
    - *o65
    - *o3
antimassmention_int_int_int_bool_PunishmentAction_IRole_3:
  desc: Execute the AntiMassMention command
  args:
    - number number number true|false action @role
  params:
    - *o61
    - *o62
    - *o63
    - *o64
    - *o65
    - *o70
reactionroles:
  desc: Enumerates different variations of the term "exclude". Sets whether roles are exclusive.
  args:
    - messageid text
  params:
    - &o87
      name: messageId
      desc: ''
      type: ulong
      optional: false
    - &o88
      name: input
      desc: ''
      type: string[]
      optional: false
reactionroles_ulong_Exclude_string[]:
  desc: Assigns reaction roles based on the provided input, excluding certain roles.
  args:
    - messageid excl text
    - excl
  params:
    - &o72
      name: messageId
      desc: The ID of the message to which reactions will be added.
      type: ulong
      optional: false
    - &o89
      name: _
      desc: 'Used to mark Possible values: Excl'
      type: Exclude
      optional: false
    - &o73
      name: input
      desc: The roles and emojis to be associated with reactions.
      type: string[]
      optional: false
reactionroles_Exclude_ulong_string[]:
  desc: Assigns reaction roles based on the provided input, excluding certain roles.
  args:
    - excl messageid text
    - excl
  params:
    - &o74
      name: _
      desc: 'Exclusion parameter (ignored). Possible values: Excl'
      type: Exclude
      optional: false
    - *o72
    - *o73
reactionroles_string[]:
  desc: Assigns reaction roles based on the provided input.
  args:
    - text
  params:
    - *o73
reactionroles_Exclude_string[]:
  desc: Assigns reaction roles based on the provided input, excluding certain roles.
  args:
    - excl text
    - excl
  params:
    - *o74
    - *o73
reactionroleslist:
  desc: Displays a list of reaction roles configured in the server.
  args:
    - ''
  params: [ ]
reactionrolesremove:
  desc: Removes a reaction role based on its index.
  args:
    - number
  params:
    - &o79
      name: index
      desc: The index of the reaction role to remove.
      type: int
      optional: false
setrole:
  desc: Sets a role to a user.
  args:
    - '@role @user'
  params:
    - &o76
      name: roleToAdd
      desc: The role to add to the user.
      type: IRole
      optional: false
    - &o75
      name: targetUser
      desc: The user to add the role to.
      type: IGuildUser
      optional: false
setrole_IGuildUser_IRole:
  desc: Adds a role to a user.
  args:
    - '@user @role'
  params:
    - *o75
    - *o76
removerole:
  desc: Removes a role from a user.
  args:
    - '@role @user'
  params:
    - &o78
      name: roleToRemove
      desc: The role to remove from the user.
      type: IRole
      optional: false
    - &o77
      name: targetUser
      desc: The user to remove the role from.
      type: IGuildUser
      optional: false
removerole_IGuildUser_IRole:
  desc: Removes a role from a user.
  args:
    - '@user @role'
  params:
    - *o77
    - *o78
renamerole:
  desc: Renames a role.
  args:
    - '@role text'
  params:
    - &o80
      name: roleToEdit
      desc: The role to rename.
      type: IRole
      optional: false
    - &o81
      name: newname
      desc: The new name for the role.
      type: string
      optional: false
removeallroles:
  desc: Removes all roles from a user except managed roles and the everyone role.
  args:
    - '@user'
  params:
    - &o82
      name: user
      desc: The user from whom to remove all roles.
      type: IGuildUser
      optional: false
createrole:
  desc: Creates a new role with the specified name.
  args:
    - null
  params:
    - *o3
deleterole:
  desc: Deletes the specified role.
  args:
    - '@role'
  params:
    - &o83
      name: role
      desc: The role to delete.
      type: IRole
      optional: false
rolehoist:
  desc: Toggles the hoist status of the specified role.
  args:
    - '@role'
  params:
    - &o84
      name: role
      desc: The role to toggle the hoist status for.
      type: IRole
      optional: false
rolecolor:
  desc: Displays the hexadecimal color value of the specified role.
  args:
    - '@role'
  params:
    - &o90
      name: role
      desc: The role to display the color for.
      type: IRole
      optional: false
rolecolor_IRole_SKColor:
  desc: Changes the color of the specified role.
  args:
    - '@role color'
  params:
    - &o85
      name: role
      desc: The role to change the color for.
      type: IRole
      optional: false
    - &o86
      name: color
      desc: The new color for the role.
      type: SKColor
      optional: false
reactionroles_ulong_string[]:
  desc: Execute the ReactionRoles command
  args:
    - messageid text
  params:
    - *o72
    - *o73
reactionroles_ulong_Exclude_string[]_1:
  desc: Execute the ReactionRoles command
  args:
    - messageid excl text
    - excl
  params:
    - *o72
    - *o74
    - *o73
reactionroles_Exclude_ulong_string[]_1:
  desc: Execute the ReactionRoles command
  args:
    - excl messageid text
    - excl
  params:
    - *o74
    - *o72
    - *o73
reactionroles_string[]_1:
  desc: Execute the ReactionRoles command
  args:
    - text
  params:
    - *o73
reactionroles_Exclude_string[]_1:
  desc: Execute the ReactionRoles command
  args:
    - excl text
    - excl
  params:
    - &o91
      name: _
      desc: 'Possible values: Excl'
      type: Exclude
      optional: false
    - *o73
reactionroleslist_noparams:
  desc: Displays a list of reaction roles configured in the server.
  args:
    - ''
  params: [ ]
reactionrolesremove_int:
  desc: Removes a reaction role based on its index.
  args:
    - number
  params:
    - *o79
setrole_IRole_IGuildUser:
  desc: Execute the SetRole command
  args:
    - '@role @user'
  params:
    - *o76
    - *o75
setrole_IGuildUser_IRole_1:
  desc: Execute the SetRole command
  args:
    - '@user @role'
  params:
    - *o75
    - *o76
removerole_IRole_IGuildUser:
  desc: Execute the RemoveRole command
  args:
    - '@role @user'
  params:
    - *o78
    - *o77
removerole_IGuildUser_IRole_1:
  desc: Execute the RemoveRole command
  args:
    - '@user @role'
  params:
    - *o77
    - *o78
renamerole_IRole_string:
  desc: Renames a role.
  args:
    - '@role text'
  params:
    - *o80
    - *o81
removeallroles_IGuildUser:
  desc: Execute the RemoveAllRoles command
  args:
    - '@user'
  params:
    - *o82
createrole_=:
  desc: Creates a new role with the specified name.
  args:
    - null
  params:
    - *o3
deleterole_IRole:
  desc: Deletes the specified role.
  args:
    - '@role'
  params:
    - *o83
rolehoist_IRole:
  desc: Toggles the hoist status of the specified role.
  args:
    - '@role'
  params:
    - *o84
rolecolor_IRole:
  desc: Displays the hexadecimal color value of the specified role.
  args:
    - '@role'
  params:
    - *o85
rolecolor_IRole_SKColor_1:
  desc: Execute the RoleColor command
  args:
    - '@role color'
  params:
    - *o85
    - *o86
reactionroles_ulong_string[]_1:
  desc: Commands for managing roles.
  args:
    - messageid text
  params:
    - *o87
    - *o88
reactionroles_ulong_Exclude_string[]_2:
  desc: Assigns reaction roles based on the provided input, excluding certain roles.
  args:
    - messageid excl text
    - excl
  params:
    - *o72
    - *o89
    - *o73
reactionroles_Exclude_ulong_string[]_2:
  desc: Assigns reaction roles based on the provided input, excluding certain roles.
  args:
    - excl messageid text
    - excl
  params:
    - *o74
    - *o72
    - *o73
reactionroles_string[]_2:
  desc: Assigns reaction roles based on the provided input.
  args:
    - text
  params:
    - *o73
reactionroles_Exclude_string[]_2:
  desc: Assigns reaction roles based on the provided input, excluding certain roles.
  args:
    - excl text
    - excl
  params:
    - *o74
    - *o73
reactionroleslist_noparams_1:
  desc: Displays a list of reaction roles configured in the server.
  args:
    - ''
  params: [ ]
reactionrolesremove_int_1:
  desc: Removes a reaction role based on its index.
  args:
    - number
  params:
    - *o79
setrole_IRole_IGuildUser_1:
  desc: Sets a role to a user.
  args:
    - '@role @user'
  params:
    - *o76
    - *o75
setrole_IGuildUser_IRole_2:
  desc: Adds a role to a user.
  args:
    - '@user @role'
  params:
    - *o75
    - *o76
removerole_IRole_IGuildUser_1:
  desc: Removes a role from a user.
  args:
    - '@role @user'
  params:
    - *o78
    - *o77
removerole_IGuildUser_IRole_2:
  desc: Removes a role from a user.
  args:
    - '@user @role'
  params:
    - *o77
    - *o78
renamerole_IRole_string_1:
  desc: Renames a role.
  args:
    - '@role text'
  params:
    - *o80
    - *o81
removeallroles_IGuildUser_1:
  desc: Removes all roles from a user except managed roles and the everyone role.
  args:
    - '@user'
  params:
    - *o82
createrole_=_1:
  desc: Creates a new role with the specified name.
  args:
    - null
  params:
    - *o3
deleterole_IRole_1:
  desc: Deletes the specified role.
  args:
    - '@role'
  params:
    - *o83
rolehoist_IRole_1:
  desc: Toggles the hoist status of the specified role.
  args:
    - '@role'
  params:
    - *o84
rolecolor_IRole_1:
  desc: Displays the hexadecimal color value of the specified role.
  args:
    - '@role'
  params:
    - *o90
rolecolor_IRole_SKColor_2:
  desc: Changes the color of the specified role.
  args:
    - '@role color'
  params:
    - *o85
    - *o86
reactionroles_ulong_string[]_2:
  desc: Execute the ReactionRoles command
  args:
    - messageid text
  params:
    - *o72
    - *o73
reactionroles_ulong_Exclude_string[]_3:
  desc: Execute the ReactionRoles command
  args:
    - messageid excl text
    - excl
  params:
    - *o72
    - *o74
    - *o73
reactionroles_Exclude_ulong_string[]_3:
  desc: Execute the ReactionRoles command
  args:
    - excl messageid text
    - excl
  params:
    - *o74
    - *o72
    - *o73
reactionroles_string[]_3:
  desc: Execute the ReactionRoles command
  args:
    - text
  params:
    - *o73
reactionroles_Exclude_string[]_3:
  desc: Execute the ReactionRoles command
  args:
    - excl text
    - excl
  params:
    - *o91
    - *o73
reactionroleslist_noparams_2:
  desc: Displays a list of reaction roles configured in the server.
  args:
    - ''
  params: [ ]
reactionrolesremove_int_2:
  desc: Removes a reaction role based on its index.
  args:
    - number
  params:
    - *o79
setrole_IRole_IGuildUser_2:
  desc: Execute the SetRole command
  args:
    - '@role @user'
  params:
    - *o76
    - *o75
setrole_IGuildUser_IRole_3:
  desc: Execute the SetRole command
  args:
    - '@user @role'
  params:
    - *o75
    - *o76
removerole_IRole_IGuildUser_2:
  desc: Execute the RemoveRole command
  args:
    - '@role @user'
  params:
    - *o78
    - *o77
removerole_IGuildUser_IRole_3:
  desc: Execute the RemoveRole command
  args:
    - '@user @role'
  params:
    - *o77
    - *o78
renamerole_IRole_string_2:
  desc: Renames a role.
  args:
    - '@role text'
  params:
    - *o80
    - *o81
removeallroles_IGuildUser_2:
  desc: Execute the RemoveAllRoles command
  args:
    - '@user'
  params:
    - *o82
createrole_=_2:
  desc: Creates a new role with the specified name.
  args:
    - null
  params:
    - *o3
deleterole_IRole_2:
  desc: Deletes the specified role.
  args:
    - '@role'
  params:
    - *o83
rolehoist_IRole_2:
  desc: Toggles the hoist status of the specified role.
  args:
    - '@role'
  params:
    - *o84
rolecolor_IRole_2:
  desc: Displays the hexadecimal color value of the specified role.
  args:
    - '@role'
  params:
    - *o85
rolecolor_IRole_SKColor_3:
  desc: Execute the RoleColor command
  args:
    - '@role color'
  params:
    - *o85
    - *o86
logcategory:
  desc: Sets the logging category for a specified type of logs.
  args:
    - type null
    - type
  params:
    - &o92
      name: type
      desc: The type of logs to set the category for.
      type: LogCommandService.LogCategoryTypes
      optional: false
    - *o3
log:
  desc: Sets multiple logging channels for specified event types at once.
  args:
    - types
  params:
    - &o93
      name: types
      desc: The types of events to set the logging channel for.
      type: LogType[]
      optional: true
log_string[]:
  desc: Sets multiple logging channels for different event types at once using channel-type pairs.
  args:
    - text
  params:
    - &o94
      name: channelTypePairs
      desc: Strings containing channel-type pairs in the format "#channel:Type1,Type2"
      type: string[]
      optional: false
logevents:
  desc: Displays the current logging events configuration for the guild.
  args:
    - ''
  params: [ ]
log_LogType_=:
  desc: Sets the logging channel for a specific event type.
  args:
    - type null
    - type
  params:
    - &o95
      name: type
      desc: The type of event to set the logging channel for.
      type: LogType
      optional: false
    - *o3
commandlogchannel:
  desc: Sets a channel to log commands to
  args:
    - null
  params:
    - *o3
logcategory_LogCommandService_LogCategoryTypes_=:
  desc: Execute the LogCategory command
  args:
    - type null
    - type
  params:
    - *o92
    - *o3
log_LogType[]:
  desc: Sets multiple logging channels for specified event types at once.
  args:
    - types
  params:
    - *o93
log_string[]_1:
  desc: Execute the Log command
  args:
    - text
  params:
    - *o94
logevents_noparams:
  desc: Displays the current logging events configuration for the guild.
  args:
    - ''
  params: [ ]
log_LogType_=_1:
  desc: Execute the Log command
  args:
    - type null
    - type
  params:
    - *o95
    - *o3
commandlogchannel_=:
  desc: Sets a channel to log commands to
  args:
    - null
  params:
    - *o3
logcategory_LogCommandService_LogCategoryTypes_=_1:
  desc: Module for logging commands.
  args:
    - type null
    - type
  params:
    - *o92
    - *o3
log_LogType[]_1:
  desc: Sets multiple logging channels for specified event types at once.
  args:
    - types
  params:
    - *o93
log_string[]_2:
  desc: Sets multiple logging channels for different event types at once using channel-type pairs.
  args:
    - text
  params:
    - *o94
logevents_noparams_1:
  desc: Displays the current logging events configuration for the guild.
  args:
    - ''
  params: [ ]
log_LogType_=_2:
  desc: Sets the logging channel for a specific event type.
  args:
    - type null
    - type
  params:
    - *o95
    - *o3
commandlogchannel_=_1:
  desc: Sets a channel to log commands to
  args:
    - null
  params:
    - *o3
logcategory_LogCommandService_LogCategoryTypes_=_2:
  desc: Execute the LogCategory command
  args:
    - type null
    - type
  params:
    - *o92
    - *o3
log_LogType[]_2:
  desc: Sets multiple logging channels for specified event types at once.
  args:
    - types
  params:
    - *o93
log_string[]_3:
  desc: Execute the Log command
  args:
    - text
  params:
    - *o94
logevents_noparams_2:
  desc: Displays the current logging events configuration for the guild.
  args:
    - ''
  params: [ ]
log_LogType_=_3:
  desc: Execute the Log command
  args:
    - type null
    - type
  params:
    - *o95
    - *o3
commandlogchannel_=_2:
  desc: Sets a channel to log commands to
  args:
    - null
  params:
    - *o3
setafk:
  desc: Enumerates different types of AFK (Away From Keyboard) settings.
  args:
    - null
  params:
    - *o3
afkdel:
  desc: Displays the current auto-deletion duration for AFK messages.
  args:
    - ''
  params: [ ]
afkdel_int:
  desc: Sets the auto-deletion duration for AFK messages.
  args:
    - number
  params:
    - &o96
      name: num
      desc: The duration in seconds. Set to 0 to disable auto-deletion.
      type: int
      optional: false
timedafk:
  desc: Sets a timed AFK status with a custom message.
  args:
    - time text
  params:
    - &o97
      name: time
      desc: The duration for the AFK status.
      type: StoopidTime
      optional: false
    - &o98
      name: message
      desc: The custom message for the AFK status.
      type: string
      optional: false
customafkmessage:
  desc: Sets a custom AFK embed that will be displayed when a user is AFK. Use "-" to reset to the default embed. Check https://eb.mewdeko.tech for the embed builder and http://mewdeko.tech/placeholders for placeholders.
  args:
    - text
  params:
    - &o99
      name: embedCode
      desc: The custom message to set. Use "-" to reset to the default message.
      type: string
      optional: false
getactiveafks:
  desc: Displays a list of active users who are currently AFK.
  args:
    - ''
  params: [ ]
afkview:
  desc: Displays the AFK status of a specific user.
  args:
    - '@user'
  params:
    - &o100
      name: user
      desc: The user to check the AFK status for.
      type: IGuildUser
      optional: true
afkdisabledlist:
  desc: Lists the text channels where the AFK message doesnt display.
  args:
    - ''
  params: [ ]
afklength:
  desc: Sets the maximum length of all AFK messages.
  args:
    - number
  params:
    - &o101
      name: num
      desc: The maximum length you want to set.
      type: int
      optional: false
afktype:
  desc: Sets the type of AFK behavior for the guild.
  args:
    - selfdisable|onmessage|ontype
    - selfdisable
    - onmessage
    - ontype
  params:
    - &o102
      name: afkTypeEnum
      desc: 'The type of AFK behavior to set.  Possible values: SelfDisable, OnMessage, OnType, Either'
      type: AfkTypeEnum
      optional: false
afktimeout:
  desc: Sets the timeout duration before a user is no longer considered afk. Triggers when a user sends a message or types in a channel.
  args:
    - time
  params:
    - &o103
      name: time
      desc: The timeout duration for the AFK status.
      type: StoopidTime
      optional: false
afkundisable:
  desc: Removes the specified channels from the afk message blacklist.
  args:
    - chan
  params:
    - &o104
      name: chan
      desc: The text channels for which to remove from the afk message blacklist.
      type: ITextChannel[]
      optional: false
afkdisable:
  desc: Sets the channels where the AFK message will not display.
  args:
    - chan
  params:
    - &o105
      name: chan
      desc: Channels you want to add to the afk message blacklist.
      type: ITextChannel[]
      optional: false
afkremove:
  desc: Removes the AFK status for one or more users.
  args:
    - '@user'
  params:
    - &o106
      name: user
      desc: The user(s) you want to remove afk from.
      type: IGuildUser[]
      optional: false
setafk_=:
  desc: Indicates AFK removed either by receiving a message or typing.
  args:
    - null
  params:
    - *o3
afkdel_noparams:
  desc: Displays the current auto-deletion duration for AFK messages.
  args:
    - ''
  params: [ ]
afkdel_int_1:
  desc: Sets the auto-deletion duration for AFK messages.
  args:
    - number
  params:
    - *o96
timedafk_StoopidTime_string:
  desc: Sets a timed AFK status with a custom message.
  args:
    - time text
  params:
    - *o97
    - *o98
customafkmessage_string:
  desc: Sets a custom AFK embed that will be displayed when a user is AFK. Use "-" to reset to the default embed. Check https://eb.mewdeko.tech for the embed builder and http://mewdeko.tech/placeholders for placeholders.
  args:
    - text
  params:
    - *o99
getactiveafks_noparams:
  desc: Displays a list of active users who are currently AFK.
  args:
    - ''
  params: [ ]
afkview_IGuildUser:
  desc: Displays the AFK status of a specific user.
  args:
    - '@user'
  params:
    - *o100
afkdisabledlist_noparams:
  desc: Lists the text channels where the AFK message doesnt display.
  args:
    - ''
  params: [ ]
afklength_int:
  desc: Sets the maximum length of all AFK messages.
  args:
    - number
  params:
    - *o101
afktype_AfkTypeEnum:
  desc: Sets the type of AFK behavior for the guild.
  args:
    - selfdisable|onmessage|ontype
    - selfdisable
    - onmessage
    - ontype
  params:
    - *o102
afktimeout_StoopidTime:
  desc: Sets the timeout duration before a user is no longer considered afk. Triggers when a user sends a message or types in a channel.
  args:
    - time
  params:
    - *o103
afkundisable_ITextChannel[]:
  desc: Removes the specified channels from the afk message blacklist.
  args:
    - chan
  params:
    - *o104
afkdisable_ITextChannel[]:
  desc: Sets the channels where the AFK message will not display.
  args:
    - chan
  params:
    - *o105
afkremove_IGuildUser[]:
  desc: Removes the AFK status for one or more users.
  args:
    - '@user'
  params:
    - *o106
setafk_=_1:
  desc: Module for managing AFK.
  args:
    - null
  params:
    - *o3
afkdel_noparams_1:
  desc: Displays the current auto-deletion duration for AFK messages.
  args:
    - ''
  params: [ ]
afkdel_int_2:
  desc: Sets the auto-deletion duration for AFK messages.
  args:
    - number
  params:
    - *o96
timedafk_StoopidTime_string_1:
  desc: Sets a timed AFK status with a custom message.
  args:
    - time text
  params:
    - *o97
    - *o98
customafkmessage_string_1:
  desc: Sets a custom AFK embed that will be displayed when a user is AFK. Use "-" to reset to the default embed. Check https://eb.mewdeko.tech for the embed builder and http://mewdeko.tech/placeholders for placeholders.
  args:
    - text
  params:
    - *o99
getactiveafks_noparams_1:
  desc: Displays a list of active users who are currently AFK.
  args:
    - ''
  params: [ ]
afkview_IGuildUser_1:
  desc: Displays the AFK status of a specific user.
  args:
    - '@user'
  params:
    - *o100
afkdisabledlist_noparams_1:
  desc: Lists the text channels where the AFK message doesnt display.
  args:
    - ''
  params: [ ]
afklength_int_1:
  desc: Sets the maximum length of all AFK messages.
  args:
    - number
  params:
    - *o101
afktype_AfkTypeEnum_1:
  desc: Sets the type of AFK behavior for the guild.
  args:
    - selfdisable|onmessage|ontype
    - selfdisable
    - onmessage
    - ontype
  params:
    - *o102
afktimeout_StoopidTime_1:
  desc: Sets the timeout duration before a user is no longer considered afk. Triggers when a user sends a message or types in a channel.
  args:
    - time
  params:
    - *o103
afkundisable_ITextChannel[]_1:
  desc: Removes the specified channels from the afk message blacklist.
  args:
    - chan
  params:
    - *o104
afkdisable_ITextChannel[]_1:
  desc: Sets the channels where the AFK message will not display.
  args:
    - chan
  params:
    - *o105
afkremove_IGuildUser[]_1:
  desc: Removes the AFK status for one or more users.
  args:
    - '@user'
  params:
    - *o106
setafk_=_2:
  desc: Indicates AFK removed either by receiving a message or typing.
  args:
    - null
  params:
    - *o3
afkdel_noparams_2:
  desc: Displays the current auto-deletion duration for AFK messages.
  args:
    - ''
  params: [ ]
afkdel_int_3:
  desc: Sets the auto-deletion duration for AFK messages.
  args:
    - number
  params:
    - *o96
timedafk_StoopidTime_string_2:
  desc: Sets a timed AFK status with a custom message.
  args:
    - time text
  params:
    - *o97
    - *o98
customafkmessage_string_2:
  desc: Sets a custom AFK embed that will be displayed when a user is AFK. Use "-" to reset to the default embed. Check https://eb.mewdeko.tech for the embed builder and http://mewdeko.tech/placeholders for placeholders.
  args:
    - text
  params:
    - *o99
getactiveafks_noparams_2:
  desc: Displays a list of active users who are currently AFK.
  args:
    - ''
  params: [ ]
afkview_IGuildUser_2:
  desc: Displays the AFK status of a specific user.
  args:
    - '@user'
  params:
    - *o100
afkdisabledlist_noparams_2:
  desc: Lists the text channels where the AFK message doesnt display.
  args:
    - ''
  params: [ ]
afklength_int_2:
  desc: Sets the maximum length of all AFK messages.
  args:
    - number
  params:
    - *o101
afktype_AfkTypeEnum_2:
  desc: Sets the type of AFK behavior for the guild.
  args:
    - selfdisable|onmessage|ontype
    - selfdisable
    - onmessage
    - ontype
  params:
    - *o102
afktimeout_StoopidTime_2:
  desc: Sets the timeout duration before a user is no longer considered afk. Triggers when a user sends a message or types in a channel.
  args:
    - time
  params:
    - *o103
afkundisable_ITextChannel[]_2:
  desc: Removes the specified channels from the afk message blacklist.
  args:
    - chan
  params:
    - *o104
afkdisable_ITextChannel[]_2:
  desc: Sets the channels where the AFK message will not display.
  args:
    - chan
  params:
    - *o105
afkremove_IGuildUser[]_2:
  desc: Removes the AFK status for one or more users.
  args:
    - '@user'
  params:
    - *o106
ctsexport:
  desc: Exports chat trigger settings for the current guild.
  args:
    - ''
  params: [ ]
ctsimport:
  desc: Imports chat trigger settings for the current guild.
  args:
    - null
  params:
    - *o3
addchattrigger:
  desc: Adds a new chat trigger.
  args:
    - text text
    - text
  params:
    - &o107
      name: key
      desc: The key for the chat trigger.
      type: string
      optional: false
    - &o108
      name: message
      desc: The message associated with the chat trigger.
      type: string
      optional: true
addchattriggerregex:
  desc: Adds a new chat trigger with regex support.
  args:
    - text text
    - text
  params:
    - *o107
    - *o108
editchattrigger:
  desc: Edits an existing chat trigger.
  args:
    - number text
    - number
  params:
    - &o110
      name: id
      desc: The ID of the chat trigger to edit.
      type: int
      optional: false
    - &o112
      name: message
      desc: The new message for the chat trigger.
      type: string
      optional: true
listchattriggers:
  desc: Lists all chat triggers.
  args:
    - ''
  params: [ ]
listchattriggersgroup:
  desc: Lists all chat triggers grouped by trigger.
  args:
    - ''
  params: [ ]
showchattrigger:
  desc: Shows details of a specific chat trigger.
  args:
    - number
  params:
    - &o113
      name: id
      desc: The ID of the chat trigger to delete.
      type: int
      optional: false
deletechattrigger:
  desc: Deletes a chat trigger by its ID.
  args:
    - number
  params:
    - &o109
      name: id
      desc: The ID of the chat trigger.
      type: int
      optional: false
ctreact:
  desc: Sets reactions for a chat trigger.
  args:
    - number text
  params:
    - *o109
    - &o114
      name: emojiStrs
      desc: The emoji strings to set as reactions.
      type: string[]
      optional: false
ctca:
  desc: Sets a chat trigger to contain anywhere in the message.
  args:
    - number
  params:
    - *o110
rtt:
  desc: Sets a chat trigger to react to the trigger.
  args:
    - number
  params:
    - *o110
ctdm:
  desc: Sets a chat trigger to send a direct message in response.
  args:
    - number
  params:
    - *o110
ctad:
  desc: Sets a chat trigger to auto-delete after triggering.
  args:
    - number
  params:
    - *o110
ctat:
  desc: Sets a chat trigger to allow targeting.
  args:
    - number
  params:
    - *o109
ctnr:
  desc: Sets a chat trigger to not respond.
  args:
    - number
  params:
    - *o109
chattriggerrolegranttype:
  desc: Sets the role grant type for a chat trigger.
  args:
    - number type
  params:
    - *o109
    - &o115
      name: type
      desc: 'The role grant type to set. '
      type: CtRoleGrantType
      optional: false
ctsreload:
  desc: Reloads chat triggers.
  args:
    - ''
  params: [ ]
ctsclear:
  desc: Toggles a chat trigger option.
  args:
    - ''
  params: [ ]
ctrgranttoggle:
  desc: Toggles role grant for a chat trigger.
  args:
    - number @role
  params:
    - *o109
    - &o111
      name: role
      desc: The role to toggle.
      type: IRole
      optional: false
ctrremovetoggle:
  desc: Toggles role removal for a chat trigger.
  args:
    - number @role
  params:
    - *o109
    - *o111
chattriggervalidtype:
  desc: Sets whether a chat trigger is valid for a specific trigger type.
  args:
    - number type true|false
  params:
    - *o109
    - &o116
      name: type
      desc: 'The trigger type to set validity for. '
      type: ChatTriggerType
      optional: false
    - &o117
      name: enabled
      desc: Whether the trigger type should be enabled or disabled.
      type: bool
      optional: false
ctcpsetwebhook:
  desc: Sets the webhook URL for crossposting a chat trigger.
  args:
    - number text
  params:
    - *o109
    - &o118
      name: webhookUrl
      desc: The webhook URL to set.
      type: string
      optional: false
ctcpsetchannel:
  desc: Sets the crossposting channel for a chat trigger.
  args:
    - number channel
  params:
    - *o109
    - &o119
      name: channel
      desc: The channel to set for crossposting.
      type: ITextChannel
      optional: false
setctintertype:
  desc: Sets the interaction type for a chat trigger.
  args:
    - number type
  params:
    - *o109
    - &o120
      name: type
      desc: 'The interaction type to set. '
      type: CtApplicationCommandType
      optional: false
setctintername:
  desc: Sets the interaction name for a chat trigger.
  args:
    - number text
  params:
    - *o109
    - &o121
      name: name
      desc: The name to set for the interaction.
      type: string
      optional: false
setctinterdesc:
  desc: Sets the interaction description for a chat trigger.
  args:
    - number text
  params:
    - *o109
    - &o122
      name: description
      desc: The description to set for the interaction.
      type: string
      optional: false
ctinterephemeral:
  desc: Sets whether the interaction response should be ephemeral for a chat trigger. To not show others my suffering with docs!
  args:
    - number true|false
  params:
    - *o109
    - &o123
      name: ephemeral
      desc: True if the response should be ephemeral, false otherwise.
      type: bool
      optional: false
ctintererrors:
  desc: Displays the interaction errors for chat triggers.
  args:
    - ''
  params: [ ]
ctprefixtype:
  desc: Sets the prefix type for a chat trigger.
  args:
    - number type
  params:
    - *o109
    - &o124
      name: type
      desc: 'The type of prefix to set. '
      type: RequirePrefixType
      optional: false
ctprefix:
  desc: Sets the prefix for a chat trigger.
  args:
    - number text
  params:
    - *o109
    - &o125
      name: prefix
      desc: The new prefix to set.
      type: string
      optional: false
ctsexport_noparams:
  desc: Exports chat trigger settings for the current guild.
  args:
    - ''
  params: [ ]
ctsimport_=:
  desc: Imports chat trigger settings for the current guild.
  args:
    - null
  params:
    - *o3
addchattrigger_string_string:
  desc: Adds a new chat trigger.
  args:
    - text text
    - text
  params:
    - *o107
    - *o108
addchattriggerregex_string_string:
  desc: Adds a new chat trigger with regex support.
  args:
    - text text
    - text
  params:
    - *o107
    - *o112
editchattrigger_int_string:
  desc: Edits an existing chat trigger.
  args:
    - number text
    - number
  params:
    - *o110
    - *o112
listchattriggers_noparams:
  desc: Lists all chat triggers.
  args:
    - ''
  params: [ ]
listchattriggersgroup_noparams:
  desc: Lists all chat triggers grouped by trigger.
  args:
    - ''
  params: [ ]
showchattrigger_int:
  desc: Shows details of a specific chat trigger.
  args:
    - number
  params:
    - *o113
deletechattrigger_int:
  desc: Deletes a chat trigger by its ID.
  args:
    - number
  params:
    - *o109
ctreact_int_string[]:
  desc: Sets reactions for a chat trigger.
  args:
    - number text
  params:
    - *o109
    - *o114
ctca_int:
  desc: Sets a chat trigger to contain anywhere in the message.
  args:
    - number
  params:
    - *o110
rtt_int:
  desc: Sets a chat trigger to react to the trigger.
  args:
    - number
  params:
    - *o110
ctdm_int:
  desc: Sets a chat trigger to send a direct message in response.
  args:
    - number
  params:
    - *o110
ctad_int:
  desc: Sets a chat trigger to auto-delete after triggering.
  args:
    - number
  params:
    - *o110
ctat_int:
  desc: Sets a chat trigger to allow targeting.
  args:
    - number
  params:
    - *o109
ctnr_int:
  desc: Sets a chat trigger to not respond.
  args:
    - number
  params:
    - *o109
chattriggerrolegranttype_int_CtRoleGrantType:
  desc: Sets the role grant type for a chat trigger.
  args:
    - number type
  params:
    - *o109
    - *o115
ctsreload_noparams:
  desc: Reloads chat triggers.
  args:
    - ''
  params: [ ]
ctsclear_noparams:
  desc: Clears all chat triggers.
  args:
    - ''
  params: [ ]
ctrgranttoggle_int_IRole:
  desc: Toggles role grant for a chat trigger.
  args:
    - number @role
  params:
    - *o109
    - *o111
ctrremovetoggle_int_IRole:
  desc: Toggles role removal for a chat trigger.
  args:
    - number @role
  params:
    - *o109
    - *o111
chattriggervalidtype_int_ChatTriggerType_bool:
  desc: Sets whether a chat trigger is valid for a specific trigger type.
  args:
    - number type true|false
  params:
    - *o109
    - *o116
    - *o117
ctcpsetwebhook_int_string:
  desc: Sets the webhook URL for crossposting a chat trigger.
  args:
    - number text
  params:
    - *o109
    - *o118
ctcpsetchannel_int_ITextChannel:
  desc: Sets the crossposting channel for a chat trigger.
  args:
    - number channel
  params:
    - *o109
    - *o119
setctintertype_int_CtApplicationCommandType:
  desc: Sets the interaction type for a chat trigger.
  args:
    - number type
  params:
    - *o109
    - *o120
setctintername_int_string:
  desc: Sets the interaction name for a chat trigger.
  args:
    - number text
  params:
    - *o109
    - *o121
setctinterdesc_int_string:
  desc: Sets the interaction description for a chat trigger.
  args:
    - number text
  params:
    - *o109
    - *o122
ctinterephemeral_int_bool:
  desc: Sets whether the interaction response should be ephemeral for a chat trigger. To not show others my suffering with docs!
  args:
    - number true|false
  params:
    - *o109
    - *o123
ctintererrors_noparams:
  desc: Displays the interaction errors for chat triggers.
  args:
    - ''
  params: [ ]
ctprefixtype_int_RequirePrefixType:
  desc: Sets the prefix type for a chat trigger.
  args:
    - number type
  params:
    - *o109
    - *o124
ctprefix_int_string:
  desc: Sets the prefix for a chat trigger.
  args:
    - number text
  params:
    - *o109
    - *o125
ctsexport_noparams_1:
  desc: Module for chat triggers.
  args:
    - ''
  params: [ ]
ctsimport_=_1:
  desc: Imports chat trigger settings for the current guild.
  args:
    - null
  params:
    - *o3
addchattrigger_string_string_1:
  desc: Adds a new chat trigger.
  args:
    - text text
    - text
  params:
    - *o107
    - *o108
addchattriggerregex_string_string_1:
  desc: Adds a new chat trigger with regex support.
  args:
    - text text
    - text
  params:
    - *o107
    - *o108
editchattrigger_int_string_1:
  desc: Edits an existing chat trigger.
  args:
    - number text
    - number
  params:
    - *o110
    - *o112
listchattriggers_noparams_1:
  desc: Lists all chat triggers.
  args:
    - ''
  params: [ ]
listchattriggersgroup_noparams_1:
  desc: Lists all chat triggers grouped by trigger.
  args:
    - ''
  params: [ ]
showchattrigger_int_1:
  desc: Shows details of a specific chat trigger.
  args:
    - number
  params:
    - *o113
deletechattrigger_int_1:
  desc: Deletes a chat trigger by its ID.
  args:
    - number
  params:
    - *o109
ctreact_int_string[]_1:
  desc: Sets reactions for a chat trigger.
  args:
    - number text
  params:
    - *o109
    - *o114
ctca_int_1:
  desc: Sets a chat trigger to contain anywhere in the message.
  args:
    - number
  params:
    - *o110
rtt_int_1:
  desc: Sets a chat trigger to react to the trigger.
  args:
    - number
  params:
    - *o110
ctdm_int_1:
  desc: Sets a chat trigger to send a direct message in response.
  args:
    - number
  params:
    - *o110
ctad_int_1:
  desc: Sets a chat trigger to auto-delete after triggering.
  args:
    - number
  params:
    - *o110
ctat_int_1:
  desc: Sets a chat trigger to allow targeting.
  args:
    - number
  params:
    - *o109
ctnr_int_1:
  desc: Sets a chat trigger to not respond.
  args:
    - number
  params:
    - *o109
chattriggerrolegranttype_int_CtRoleGrantType_1:
  desc: Sets the role grant type for a chat trigger.
  args:
    - number type
  params:
    - *o109
    - *o115
ctsreload_noparams_1:
  desc: Reloads chat triggers.
  args:
    - ''
  params: [ ]
ctsclear_noparams_1:
  desc: Toggles a chat trigger option.
  args:
    - ''
  params: [ ]
ctrgranttoggle_int_IRole_1:
  desc: Toggles role grant for a chat trigger.
  args:
    - number @role
  params:
    - *o109
    - *o111
ctrremovetoggle_int_IRole_1:
  desc: Toggles role removal for a chat trigger.
  args:
    - number @role
  params:
    - *o109
    - *o111
chattriggervalidtype_int_ChatTriggerType_bool_1:
  desc: Sets whether a chat trigger is valid for a specific trigger type.
  args:
    - number type true|false
  params:
    - *o109
    - *o116
    - *o117
ctcpsetwebhook_int_string_1:
  desc: Sets the webhook URL for crossposting a chat trigger.
  args:
    - number text
  params:
    - *o109
    - *o118
ctcpsetchannel_int_ITextChannel_1:
  desc: Sets the crossposting channel for a chat trigger.
  args:
    - number channel
  params:
    - *o109
    - *o119
setctintertype_int_CtApplicationCommandType_1:
  desc: Sets the interaction type for a chat trigger.
  args:
    - number type
  params:
    - *o109
    - *o120
setctintername_int_string_1:
  desc: Sets the interaction name for a chat trigger.
  args:
    - number text
  params:
    - *o109
    - *o121
setctinterdesc_int_string_1:
  desc: Sets the interaction description for a chat trigger.
  args:
    - number text
  params:
    - *o109
    - *o122
ctinterephemeral_int_bool_1:
  desc: Sets whether the interaction response should be ephemeral for a chat trigger. To not show others my suffering with docs!
  args:
    - number true|false
  params:
    - *o109
    - *o123
ctintererrors_noparams_1:
  desc: Displays the interaction errors for chat triggers.
  args:
    - ''
  params: [ ]
ctprefixtype_int_RequirePrefixType_1:
  desc: Sets the prefix type for a chat trigger.
  args:
    - number type
  params:
    - *o109
    - *o124
ctprefix_int_string_1:
  desc: Sets the prefix for a chat trigger.
  args:
    - number text
  params:
    - *o109
    - *o125
ctsexport_noparams_2:
  desc: Module for chat triggers.
  args:
    - ''
  params: [ ]
ctsimport_=_2:
  desc: Imports chat trigger settings for the current guild.
  args:
    - null
  params:
    - *o3
addchattrigger_string_string_2:
  desc: Adds a new chat trigger.
  args:
    - text text
    - text
  params:
    - *o107
    - *o108
addchattriggerregex_string_string_2:
  desc: Adds a new chat trigger with regex support.
  args:
    - text text
    - text
  params:
    - *o107
    - *o112
editchattrigger_int_string_2:
  desc: Edits an existing chat trigger.
  args:
    - number text
    - number
  params:
    - *o110
    - *o112
listchattriggers_noparams_2:
  desc: Lists all chat triggers.
  args:
    - ''
  params: [ ]
listchattriggersgroup_noparams_2:
  desc: Lists all chat triggers grouped by trigger.
  args:
    - ''
  params: [ ]
showchattrigger_int_2:
  desc: Shows details of a specific chat trigger.
  args:
    - number
  params:
    - *o113
deletechattrigger_int_2:
  desc: Deletes a chat trigger by its ID.
  args:
    - number
  params:
    - *o109
ctreact_int_string[]_2:
  desc: Sets reactions for a chat trigger.
  args:
    - number text
  params:
    - *o109
    - *o114
ctca_int_2:
  desc: Sets a chat trigger to contain anywhere in the message.
  args:
    - number
  params:
    - *o110
rtt_int_2:
  desc: Sets a chat trigger to react to the trigger.
  args:
    - number
  params:
    - *o110
ctdm_int_2:
  desc: Sets a chat trigger to send a direct message in response.
  args:
    - number
  params:
    - *o110
ctad_int_2:
  desc: Sets a chat trigger to auto-delete after triggering.
  args:
    - number
  params:
    - *o110
ctat_int_2:
  desc: Sets a chat trigger to allow targeting.
  args:
    - number
  params:
    - *o109
ctnr_int_2:
  desc: Sets a chat trigger to not respond.
  args:
    - number
  params:
    - *o109
chattriggerrolegranttype_int_CtRoleGrantType_2:
  desc: Sets the role grant type for a chat trigger.
  args:
    - number type
  params:
    - *o109
    - *o115
ctsreload_noparams_2:
  desc: Reloads chat triggers.
  args:
    - ''
  params: [ ]
ctsclear_noparams_2:
  desc: Clears all chat triggers.
  args:
    - ''
  params: [ ]
ctrgranttoggle_int_IRole_2:
  desc: Toggles role grant for a chat trigger.
  args:
    - number @role
  params:
    - *o109
    - *o111
ctrremovetoggle_int_IRole_2:
  desc: Toggles role removal for a chat trigger.
  args:
    - number @role
  params:
    - *o109
    - *o111
chattriggervalidtype_int_ChatTriggerType_bool_2:
  desc: Sets whether a chat trigger is valid for a specific trigger type.
  args:
    - number type true|false
  params:
    - *o109
    - *o116
    - *o117
ctcpsetwebhook_int_string_2:
  desc: Sets the webhook URL for crossposting a chat trigger.
  args:
    - number text
  params:
    - *o109
    - *o118
ctcpsetchannel_int_ITextChannel_2:
  desc: Sets the crossposting channel for a chat trigger.
  args:
    - number channel
  params:
    - *o109
    - *o119
setctintertype_int_CtApplicationCommandType_2:
  desc: Sets the interaction type for a chat trigger.
  args:
    - number type
  params:
    - *o109
    - *o120
setctintername_int_string_2:
  desc: Sets the interaction name for a chat trigger.
  args:
    - number text
  params:
    - *o109
    - *o121
setctinterdesc_int_string_2:
  desc: Sets the interaction description for a chat trigger.
  args:
    - number text
  params:
    - *o109
    - *o122
ctinterephemeral_int_bool_2:
  desc: Sets whether the interaction response should be ephemeral for a chat trigger. To not show others my suffering with docs!
  args:
    - number true|false
  params:
    - *o109
    - *o123
ctintererrors_noparams_2:
  desc: Displays the interaction errors for chat triggers.
  args:
    - ''
  params: [ ]
ctprefixtype_int_RequirePrefixType_2:
  desc: Sets the prefix type for a chat trigger.
  args:
    - number type
  params:
    - *o109
    - *o124
ctprefix_int_string_2:
  desc: Sets the prefix for a chat trigger.
  args:
    - number text
  params:
    - *o109
    - *o125
confess:
  desc: Allows users to confess anonymously.
  args:
    - serverid text
  params:
    - &o126
      name: serverId
      desc: The ID of the server.
      type: ulong
      optional: false
    - &o127
      name: confession
      desc: The confession message
      type: string
      optional: false
confessionchannel:
  desc: Sets the confession channel for anonymous confessions.
  args:
    - null
  params:
    - *o3
confessionlogchannel:
  desc: Sets the confession log channel for logging confessions. Misuse of this feature will end up in me being 2m away from your house.
  args:
    - null
  params:
    - *o3
confessionblacklist:
  desc: Adds or removes a user from the confession blacklist.
  args:
    - '@user'
  params:
    - &o129
      name: user
      desc: The user to add or remove from the blacklist.
      type: IUser
      optional: false
confessionunblacklist:
  desc: Removes a user from the confession blacklist.
  args:
    - '@user'
  params:
    - &o128
      name: user
      desc: The user to remove from the blacklist.
      type: IUser
      optional: false
confess_ulong_string:
  desc: Allows users to confess anonymously.
  args:
    - serverid text
  params:
    - *o126
    - *o127
confessionchannel_=:
  desc: Sets the confession channel for anonymous confessions.
  args:
    - null
  params:
    - *o3
confessionlogchannel_=:
  desc: Sets the confession log channel for logging confessions. Misuse of this feature will end up in me being 2m away from your house.
  args:
    - null
  params:
    - *o3
confessionblacklist_IUser:
  desc: Adds or removes a user from the confession blacklist.
  args:
    - '@user'
  params:
    - *o128
confessionunblacklist_IUser:
  desc: Removes a user from the confession blacklist.
  args:
    - '@user'
  params:
    - *o128
confess_ulong_string_1:
  desc: Module for managing confessions.
  args:
    - serverid text
  params:
    - *o126
    - *o127
confessionchannel_=_1:
  desc: Sets the confession channel for anonymous confessions.
  args:
    - null
  params:
    - *o3
confessionlogchannel_=_1:
  desc: Sets the confession log channel for logging confessions. Misuse of this feature will end up in me being 2m away from your house.
  args:
    - null
  params:
    - *o3
confessionblacklist_IUser_1:
  desc: Adds or removes a user from the confession blacklist.
  args:
    - '@user'
  params:
    - *o129
confessionunblacklist_IUser_1:
  desc: Removes a user from the confession blacklist.
  args:
    - '@user'
  params:
    - *o128
confess_ulong_string_2:
  desc: Allows users to confess anonymously.
  args:
    - serverid text
  params:
    - *o126
    - *o127
confessionchannel_=_2:
  desc: Sets the confession channel for anonymous confessions.
  args:
    - null
  params:
    - *o3
confessionlogchannel_=_2:
  desc: Sets the confession log channel for logging confessions. Misuse of this feature will end up in me being 2m away from your house.
  args:
    - null
  params:
    - *o3
confessionblacklist_IUser_2:
  desc: Adds or removes a user from the confession blacklist.
  args:
    - '@user'
  params:
    - *o128
confessionunblacklist_IUser_2:
  desc: Removes a user from the confession blacklist.
  args:
    - '@user'
  params:
    - *o128
cash:
  desc: Checks the current balance of the user.
  args:
    - ''
  params: [ ]
coinflip:
  desc: Allows the user to flip a coin with a specified bet amount and guess.
  args:
    - number text
  params:
    - &o130
      name: betAmount
      desc: The amount to bet.
      type: long
      optional: false
    - &o132
      name: guess
      desc: The user's guess ("heads" or "tails").
      type: string
      optional: false
modifybalance:
  desc: Adds money to a users balance
  args:
    - '@user number null'
    - '@user number'
  params:
    - &o133
      name: user
      desc: The user to add it to.
      type: IUser
      optional: false
    - &o134
      name: amount
      desc: The amount to add, dont go too crazy lol. Can be negative
      type: long
      optional: false
    - *o3
dailyreward:
  desc: Allows the user to claim their daily reward.
  args:
    - ''
  params: [ ]
highlow:
  desc: Allows the user to guess whether the next number is higher or lower than the current number.
  args:
    - text
  params:
    - &o135
      name: guess
      desc: The user's guess ("higher" or "lower").
      type: string
      optional: false
leaderboard:
  desc: Displays the leaderboard of users with the highest balances.
  args:
    - ''
  params: [ ]
setdaily:
  desc: Sets the daily reward amount and cooldown time for the guild.
  args:
    - number time
  params:
    - &o136
      name: amount
      desc: The amount of the daily reward.
      type: int
      optional: false
    - &o137
      name: time
      desc: The cooldown time for claiming the daily reward.
      type: StoopidTime
      optional: false
spinwheel:
  desc: Allows the user to spin the wheel for a chance to win or lose credits.
  args:
    - 0
  params:
    - &o131
      name: 0
      desc: ''
      type: =
      optional: false
blackjack:
  desc: Starts a new game of Blackjack or joins an existing one.
  args:
    - number
  params:
    - &o138
      name: amount
      desc: The bet amount for the player.
      type: long
      optional: false
hit:
  desc: Hits and draws a new card for the player.
  args:
    - ''
  params: [ ]
stand:
  desc: Stands and ends the player's turn, handling the dealer's turn.
  args:
    - ''
  params: [ ]
slot:
  desc: Ends the game and updates the player's balance and transactions.
  args:
    - 10
  params:
    - &o139
      name: 10
      desc: ''
      type: =
      optional: false
roulette:
  desc: Play a game of roulette with a specified bet amount and type.
  args:
    - number text
  params:
    - *o130
    - &o140
      name: betType
      desc: The type of bet (e.g., "red", "black", "even", "odd", or a number from 0-36).
      type: string
      optional: false
roll:
  desc: // Roll dice and bet on the outcome. //
  args:
    - number @user
    - number
    - '@user number'
  params:
    - *o130
    - &o141
      name: user
      desc: ''
      type: Transactions(IUser
      optional: true
      default: null
rps:
  desc: Play Rock Paper Scissors Lizard Spock against the bot, with or without betting.
  args:
    - text 0
    - text
  params:
    - &o142
      name: choice
      desc: Your choice (rock, paper, scissors, lizard, or spock).
      type: string
      optional: false
    - *o131
cash_noparams:
  desc: Checks the current balance of the user.
  args:
    - ''
  params: [ ]
coinflip_long_string:
  desc: Allows the user to flip a coin with a specified bet amount and guess.
  args:
    - number text
  params:
    - *o130
    - *o132
modifybalance_IUser_long_=:
  desc: Adds money to a users balance
  args:
    - '@user number null'
    - '@user number'
  params:
    - *o133
    - *o134
    - *o3
dailyreward_noparams:
  desc: Allows the user to claim their daily reward.
  args:
    - ''
  params: [ ]
highlow_string:
  desc: Allows the user to guess whether the next number is higher or lower than the current number.
  args:
    - text
  params:
    - *o135
leaderboard_noparams:
  desc: Displays the leaderboard of users with the highest balances.
  args:
    - ''
  params: [ ]
setdaily_int_StoopidTime:
  desc: Sets the daily reward amount and cooldown time for the guild.
  args:
    - number time
  params:
    - *o136
    - *o137
spinwheel_=:
  desc: Allows the user to spin the wheel for a chance to win or lose credits.
  args:
    - 0
  params:
    - *o131
blackjack_long:
  desc: Starts a new game of Blackjack or joins an existing one.
  args:
    - number
  params:
    - *o138
hit_noparams:
  desc: Hits and draws a new card for the player.
  args:
    - ''
  params: [ ]
stand_noparams:
  desc: Stands and ends the player's turn, handling the dealer's turn.
  args:
    - ''
  params: [ ]
slot_=:
  desc: Plays a slot machine game with a specified bet amount.
  args:
    - 10
  params:
    - *o139
roulette_long_string:
  desc: Play a game of roulette with a specified bet amount and type.
  args:
    - number text
  params:
    - *o130
    - *o140
roll_long_Transactions(IUser:
  desc: // Roll dice and bet on the outcome. //
  args:
    - number @user
    - number
    - '@user number'
  params:
    - *o130
    - *o141
rps_string_=:
  desc: Play Rock Paper Scissors Lizard Spock against the bot, with or without betting.
  args:
    - text 0
    - text
  params:
    - *o142
    - *o131
cash_noparams_1:
  desc: Module for managing currency.
  args:
    - ''
  params: [ ]
coinflip_long_string_1:
  desc: Allows the user to flip a coin with a specified bet amount and guess.
  args:
    - number text
  params:
    - *o130
    - *o132
modifybalance_IUser_long_=_1:
  desc: Adds money to a users balance
  args:
    - '@user number null'
    - '@user number'
  params:
    - *o133
    - *o134
    - *o3
dailyreward_noparams_1:
  desc: Allows the user to claim their daily reward.
  args:
    - ''
  params: [ ]
highlow_string_1:
  desc: Allows the user to guess whether the next number is higher or lower than the current number.
  args:
    - text
  params:
    - *o135
leaderboard_noparams_1:
  desc: Displays the leaderboard of users with the highest balances.
  args:
    - ''
  params: [ ]
setdaily_int_StoopidTime_1:
  desc: Sets the daily reward amount and cooldown time for the guild.
  args:
    - number time
  params:
    - *o136
    - *o137
spinwheel_=_1:
  desc: Allows the user to spin the wheel for a chance to win or lose credits.
  args:
    - 0
  params:
    - *o131
blackjack_long_1:
  desc: Starts a new game of Blackjack or joins an existing one.
  args:
    - number
  params:
    - *o138
hit_noparams_1:
  desc: Hits and draws a new card for the player.
  args:
    - ''
  params: [ ]
stand_noparams_1:
  desc: Stands and ends the player's turn, handling the dealer's turn.
  args:
    - ''
  params: [ ]
slot_=_1:
  desc: Ends the game and updates the player's balance and transactions.
  args:
    - 10
  params:
    - *o139
roulette_long_string_1:
  desc: Play a game of roulette with a specified bet amount and type.
  args:
    - number text
  params:
    - *o130
    - *o140
roll_long_Transactions(IUser_1:
  desc: // Roll dice and bet on the outcome. //
  args:
    - number @user
    - number
    - '@user number'
  params:
    - *o130
    - *o141
rps_string_=_1:
  desc: Play Rock Paper Scissors Lizard Spock against the bot, with or without betting.
  args:
    - text 0
    - text
  params:
    - *o142
    - *o131
cash_noparams_2:
  desc: Module for managing currency.
  args:
    - ''
  params: [ ]
coinflip_long_string_2:
  desc: Allows the user to flip a coin with a specified bet amount and guess.
  args:
    - number text
  params:
    - *o130
    - *o132
modifybalance_IUser_long_=_2:
  desc: Adds money to a users balance
  args:
    - '@user number null'
    - '@user number'
  params:
    - *o133
    - *o134
    - *o3
dailyreward_noparams_2:
  desc: Allows the user to claim their daily reward.
  args:
    - ''
  params: [ ]
highlow_string_2:
  desc: Allows the user to guess whether the next number is higher or lower than the current number.
  args:
    - text
  params:
    - *o135
leaderboard_noparams_2:
  desc: Displays the leaderboard of users with the highest balances.
  args:
    - ''
  params: [ ]
setdaily_int_StoopidTime_2:
  desc: Sets the daily reward amount and cooldown time for the guild.
  args:
    - number time
  params:
    - *o136
    - *o137
spinwheel_=_2:
  desc: Allows the user to spin the wheel for a chance to win or lose credits.
  args:
    - 0
  params:
    - *o131
blackjack_long_2:
  desc: Starts a new game of Blackjack or joins an existing one.
  args:
    - number
  params:
    - *o138
hit_noparams_2:
  desc: Hits and draws a new card for the player.
  args:
    - ''
  params: [ ]
stand_noparams_2:
  desc: Stands and ends the player's turn, handling the dealer's turn.
  args:
    - ''
  params: [ ]
slot_=_2:
  desc: Plays a slot machine game with a specified bet amount.
  args:
    - 10
  params:
    - *o139
roulette_long_string_2:
  desc: Play a game of roulette with a specified bet amount and type.
  args:
    - number text
  params:
    - *o130
    - *o140
roll_long_Transactions(IUser_2:
  desc: // Roll dice and bet on the outcome. //
  args:
    - number @user
    - number
    - '@user number'
  params:
    - *o130
    - *o141
rps_string_=_2:
  desc: Play Rock Paper Scissors Lizard Spock against the bot, with or without betting.
  args:
    - text 0
    - text
  params:
    - *o142
    - *o131
horserace:
  desc: Joins or starts a horse race with a specified bet amount.
  args:
    - number
  params:
    - &o143
      name: betAmount
      desc: The amount of currency to bet on the race.
      type: int
      optional: false
horserace_int:
  desc: Joins or starts a horse race with a specified bet amount.
  args:
    - number
  params:
    - *o143
horserace_int_1:
  desc: Submodule for horse racing commands.
  args:
    - number
  params:
    - *o143
horserace_int_2:
  desc: Submodule for horse racing commands.
  args:
    - number
  params:
    - *o143
acrophobia:
  desc: Command for starting an Acrophobia game.
  args:
    - text
  params:
    - &o144
      name: args
      desc: Arguments passed to the command.
      type: string[]
      optional: false
acrophobia_string[]:
  desc: Command for starting an Acrophobia game.
  args:
    - text
  params:
    - *o144
acrophobia_string[]_1:
  desc: A module containing various games.
  args:
    - text
  params:
    - *o144
acrophobia_string[]_2:
  desc: A module containing Acrophobia commands.
  args:
    - text
  params:
    - *o144
choose:
  desc: Initializes a new instance of the Games class.
  args:
    - null
  params:
    - *o3
eightball:
  desc: Command to consult the magic 8-ball for an answer.
  args:
    - null
  params:
    - *o3
rategirl:
  desc: Command that used to exist. Called trans people a slur in NadekoBot. Here as a memory and a fuck you to NadekoBot.
  args:
    - ''
  params: [ ]
linux:
  desc: Funni interjecting linux command
  args:
    - text text
  params:
    - &o145
      name: guhnoo
      desc: The name to replace "GNU".
      type: string
      optional: false
    - &o146
      name: loonix
      desc: The name to replace "Linux".
      type: string
      optional: false
dragon:
  desc: Command to toggle the user's dragon status. Usually used for beta commands.
  args:
    - ''
  params: [ ]
choose_=:
  desc: Command to choose randomly from a list of options.
  args:
    - null
  params:
    - *o3
eightball_=:
  desc: Command to consult the magic 8-ball for an answer.
  args:
    - null
  params:
    - *o3
rategirl_noparams:
  desc: Command that used to exist. Called trans people a slur in NadekoBot. Here as a memory and a fuck you to NadekoBot.
  args:
    - ''
  params: [ ]
linux_string_string:
  desc: Funni interjecting linux command
  args:
    - text text
  params:
    - *o145
    - *o146
dragon_noparams:
  desc: Command to toggle the user's dragon status. Usually used for beta commands.
  args:
    - ''
  params: [ ]
choose_=_1:
  desc: Initializes a new instance of the Games class.
  args:
    - null
  params:
    - *o3
eightball_=_1:
  desc: Command to consult the magic 8-ball for an answer.
  args:
    - null
  params:
    - *o3
rategirl_noparams_1:
  desc: Command that used to exist. Called trans people a slur in NadekoBot. Here as a memory and a fuck you to NadekoBot.
  args:
    - ''
  params: [ ]
linux_string_string_1:
  desc: Funni interjecting linux command
  args:
    - text text
  params:
    - *o145
    - *o146
dragon_noparams_1:
  desc: Command to toggle the user's dragon status. Usually used for beta commands.
  args:
    - ''
  params: [ ]
choose_=_2:
  desc: Command to choose randomly from a list of options.
  args:
    - null
  params:
    - *o3
eightball_=_2:
  desc: Command to consult the magic 8-ball for an answer.
  args:
    - null
  params:
    - *o3
rategirl_noparams_2:
  desc: Command that used to exist. Called trans people a slur in NadekoBot. Here as a memory and a fuck you to NadekoBot.
  args:
    - ''
  params: [ ]
linux_string_string_2:
  desc: Funni interjecting linux command
  args:
    - text text
  params:
    - *o145
    - *o146
dragon_noparams_2:
  desc: Command to toggle the user's dragon status. Usually used for beta commands.
  args:
    - ''
  params: [ ]
hangmanlist:
  desc: Lists the available hangman types in the current guild.
  args:
    - ''
  params: [ ]
hangman:
  desc: Starts a hangman game with the specified type.
  args:
    - '"random"'
  params:
    - &o147
      name: '"random"'
      desc: ''
      type: =
      optional: false
hangmanstop:
  desc: Handles the event when the hangman game ends.
  args:
    - ''
  params: [ ]
hangmanlist_noparams:
  desc: Lists the available hangman types in the current guild.
  args:
    - ''
  params: [ ]
hangman_=:
  desc: Starts a hangman game with the specified type.
  args:
    - '"random"'
  params:
    - *o147
hangmanstop_noparams:
  desc: Stops the currently running hangman game in the current channel.
  args:
    - ''
  params: [ ]
hangmanlist_noparams_1:
  desc: A module containing Hangman commands.
  args:
    - ''
  params: [ ]
hangman_=_1:
  desc: Starts a hangman game with the specified type.
  args:
    - '"random"'
  params:
    - *o147
hangmanstop_noparams_1:
  desc: Handles the event when the hangman game ends.
  args:
    - ''
  params: [ ]
hangmanlist_noparams_2:
  desc: A module containing Hangman commands.
  args:
    - ''
  params: [ ]
hangman_=_2:
  desc: Starts a hangman game with the specified type.
  args:
    - '"random"'
  params:
    - *o147
hangmanstop_noparams_2:
  desc: Stops the currently running hangman game in the current channel.
  args:
    - ''
  params: [ ]
nunchi:
  desc: Starts or joins a game of Nunchi.
  args:
    - ''
  params: [ ]
nunchi_noparams:
  desc: Starts or joins a game of Nunchi.
  args:
    - ''
  params: [ ]
nunchi_noparams_1:
  desc: A module containing Nunchi commands.
  args:
    - ''
  params: [ ]
nunchi_noparams_2:
  desc: A module containing Nunchi commands.
  args:
    - ''
  params: [ ]
poll:
  desc: Starts a poll with a single answer type.
  args:
    - text
  params:
    - &o148
      name: input
      desc: The input string for the poll.
      type: string
      optional: false
poll_PollType_string:
  desc: Starts a poll with the specified type and input.
  args:
    - type text
  params:
    - &o149
      name: type
      desc: The type of the poll.
      type: PollType
      optional: false
    - &o150
      name: arg
      desc: The input string for the poll.
      type: string
      optional: false
pollstats:
  desc: Displays the current statistics of the active poll in the guild.
  args:
    - ''
  params: [ ]
pollend:
  desc: Ends the current poll in the guild and displays the final statistics.
  args:
    - ''
  params: [ ]
poll_string:
  desc: Starts a poll with a single answer type.
  args:
    - text
  params:
    - *o148
poll_PollType_string_1:
  desc: Starts a poll with the specified type and input.
  args:
    - type text
  params:
    - *o149
    - *o150
pollstats_noparams:
  desc: Displays the current statistics of the active poll in the guild.
  args:
    - ''
  params: [ ]
pollend_noparams:
  desc: Ends the current poll in the guild and displays the final statistics.
  args:
    - ''
  params: [ ]
poll_string_1:
  desc: A module containing poll commands.
  args:
    - text
  params:
    - *o148
poll_PollType_string_2:
  desc: Starts a poll with the specified type and input.
  args:
    - type text
  params:
    - *o149
    - *o150
pollstats_noparams_1:
  desc: Displays the current statistics of the active poll in the guild.
  args:
    - ''
  params: [ ]
pollend_noparams_1:
  desc: Ends the current poll in the guild and displays the final statistics.
  args:
    - ''
  params: [ ]
poll_string_2:
  desc: Starts a poll with a single answer type.
  args:
    - text
  params:
    - *o148
poll_PollType_string_3:
  desc: Starts a poll with the specified type and input.
  args:
    - type text
  params:
    - *o149
    - *o150
pollstats_noparams_2:
  desc: Displays the current statistics of the active poll in the guild.
  args:
    - ''
  params: [ ]
pollend_noparams_2:
  desc: Ends the current poll in the guild and displays the final statistics.
  args:
    - ''
  params: [ ]
typestart:
  desc: Initializes a new instance of SpeedTypingCommands.
  args:
    - text
  params:
    - &o151
      name: args
      desc: Arguments for configuring the game.
      type: string[]
      optional: false
typestop:
  desc: Stops the current speed typing game.
  args:
    - ''
  params: [ ]
typeadd:
  desc: Adds a new article for the typing game.
  args:
    - text
  params:
    - &o152
      name: text
      desc: The text of the article to add.
      type: string
      optional: false
typelist:
  desc: Lists the articles available for the typing game.
  args:
    - 1
  params:
    - &o153
      name: 1
      desc: ''
      type: =
      optional: false
typedel:
  desc: Deletes a typing article by its index.
  args:
    - number
  params:
    - &o154
      name: index
      desc: The index of the article to delete.
      type: int
      optional: false
typestart_string[]:
  desc: Starts a speed typing game.
  args:
    - text
  params:
    - *o151
typestop_noparams:
  desc: Stops the current speed typing game.
  args:
    - ''
  params: [ ]
typeadd_string:
  desc: Adds a new article for the typing game.
  args:
    - text
  params:
    - *o152
typelist_=:
  desc: Lists the articles available for the typing game.
  args:
    - 1
  params:
    - *o153
typedel_int:
  desc: Deletes a typing article by its index.
  args:
    - number
  params:
    - *o154
typestart_string[]_1:
  desc: Group containing commands for speed typing games.
  args:
    - text
  params:
    - *o151
typestop_noparams_1:
  desc: Stops the current speed typing game.
  args:
    - ''
  params: [ ]
typeadd_string_1:
  desc: Adds a new article for the typing game.
  args:
    - text
  params:
    - *o152
typelist_=_1:
  desc: Lists the articles available for the typing game.
  args:
    - 1
  params:
    - *o153
typedel_int_1:
  desc: Deletes a typing article by its index.
  args:
    - number
  params:
    - *o154
typestart_string[]_2:
  desc: Starts a speed typing game.
  args:
    - text
  params:
    - *o151
typestop_noparams_2:
  desc: Stops the current speed typing game.
  args:
    - ''
  params: [ ]
typeadd_string_2:
  desc: Adds a new article for the typing game.
  args:
    - text
  params:
    - *o152
typelist_=_2:
  desc: Lists the articles available for the typing game.
  args:
    - 1
  params:
    - *o153
typedel_int_2:
  desc: Deletes a typing article by its index.
  args:
    - number
  params:
    - *o154
tictactoe:
  desc: Starts a game of TicTacToe.
  args:
    - text
  params:
    - &o155
      name: args
      desc: Options for ttt
      type: string[]
      optional: false
tictactoe_string[]:
  desc: Starts a game of TicTacToe.
  args:
    - text
  params:
    - *o155
tictactoe_string[]_1:
  desc: A module containing TicTacToe commands.
  args:
    - text
  params:
    - *o155
tictactoe_string[]_2:
  desc: A module containing TicTacToe commands.
  args:
    - text
  params:
    - *o155
trivia:
  desc: Starts a trivia game.
  args:
    - text
  params:
    - &o156
      name: args
      desc: Optional arguments for trivia
      type: string[]
      optional: false
tl:
  desc: Internal trivia handler.
  args:
    - ''
  params: [ ]
tq:
  desc: Stops the current trivia game.
  args:
    - ''
  params: [ ]
trivia_string[]:
  desc: Starts a trivia game.
  args:
    - text
  params:
    - *o156
tl_noparams:
  desc: Shows the current trivia leaderboard.
  args:
    - ''
  params: [ ]
tq_noparams:
  desc: Stops the current trivia game.
  args:
    - ''
  params: [ ]
trivia_string[]_1:
  desc: A module containing Trivia commands.
  args:
    - text
  params:
    - *o156
tl_noparams_1:
  desc: Internal trivia handler.
  args:
    - ''
  params: [ ]
tq_noparams_1:
  desc: Stops the current trivia game.
  args:
    - ''
  params: [ ]
trivia_string[]_2:
  desc: Starts a trivia game.
  args:
    - text
  params:
    - *o156
tl_noparams_2:
  desc: Shows the current trivia leaderboard.
  args:
    - ''
  params: [ ]
tq_noparams_2:
  desc: Stops the current trivia game.
  args:
    - ''
  params: [ ]
gdmmessage:
  desc: Sets the dm message sent to users when they win a giveaway.
  args:
    - null
  params:
    - *o3
gbanner:
  desc: Sets the default giveaway banner.
  args:
    - text
  params:
    - &o158
      name: banner
      desc: ''
      type: string
      optional: false
gwinembedcolor:
  desc: Sets the color for the winning embed.
  args:
    - text
  params:
    - &o157
      name: color
      desc: The color in hex.
      type: string
      optional: false
gembedcolor:
  desc: Sets the color of the embed for giveaways.
  args:
    - text
  params:
    - *o157
gdm:
  desc: Sets whether to DM the winner of a giveaway.
  args:
    - ''
  params: [ ]
gemote:
  desc: Sets the emote used for giveaways.
  args:
    - emote
  params:
    - &o159
      name: emote
      desc: The emote to set it to.
      type: IEmote
      optional: false
greroll:
  desc: Rerolls a giveaway.
  args:
    - messageid
  params:
    - &o160
      name: messageid
      desc: The messageid of a giveaway
      type: ulong
      optional: false
gstats:
  desc: Shows the stats for giveaways.
  args:
    - ''
  params: [ ]
gstart:
  desc: Quick start a giveaway.
  args:
    - chan time number text
  params:
    - &o161
      name: chan
      desc: The channel to start the giveaway in
      type: ITextChannel
      optional: false
    - &o162
      name: time
      desc: The amount of time the giveaway should go on
      type: StoopidTime
      optional: false
    - &o163
      name: winners
      desc: The amount of winners
      type: int
      optional: false
    - &o164
      name: what
      desc: The item to be given away
      type: string
      optional: false
gstart_noparams:
  desc: More detailed giveaway starting, lets you set a banner, ping role, and more.
  args:
    - ''
  params: [ ]
glist:
  desc: Lists all active giveaways.
  args:
    - ''
  params: [ ]
gend:
  desc: Ends a giveaway.
  args:
    - messageid
  params:
    - &o165
      name: messageid
      desc: The messageid of the giveaway to end
      type: ulong
      optional: false
gdmmessage_=:
  desc: Sets the dm message sent to users when they win a giveaway.
  args:
    - null
  params:
    - *o3
gbanner_string:
  desc: Sets the default giveaway banner.
  args:
    - text
  params:
    - *o158
gwinembedcolor_string:
  desc: Sets the color for the winning embed.
  args:
    - text
  params:
    - *o157
gembedcolor_string:
  desc: Sets the color of the embed for giveaways.
  args:
    - text
  params:
    - *o157
gdm_noparams:
  desc: Sets whether to DM the winner of a giveaway.
  args:
    - ''
  params: [ ]
gemote_IEmote:
  desc: Sets the emote used for giveaways.
  args:
    - emote
  params:
    - *o159
greroll_ulong:
  desc: Rerolls a giveaway.
  args:
    - messageid
  params:
    - *o160
gstats_noparams:
  desc: Shows the stats for giveaways.
  args:
    - ''
  params: [ ]
gstart_ITextChannel_StoopidTime_int_string:
  desc: Quick start a giveaway.
  args:
    - chan time number text
  params:
    - *o161
    - *o162
    - *o163
    - *o164
gstart_noparams_1:
  desc: More detailed giveaway starting, lets you set a banner, ping role, and more.
  args:
    - ''
  params: [ ]
glist_noparams:
  desc: Lists all active giveaways.
  args:
    - ''
  params: [ ]
gend_ulong:
  desc: Ends a giveaway.
  args:
    - messageid
  params:
    - *o165
gdmmessage_=_1:
  desc: Module containing commands for giveaways.
  args:
    - null
  params:
    - *o3
gbanner_string_1:
  desc: Sets the default giveaway banner.
  args:
    - text
  params:
    - *o158
gwinembedcolor_string_1:
  desc: Sets the color for the winning embed.
  args:
    - text
  params:
    - *o157
gembedcolor_string_1:
  desc: Sets the color of the embed for giveaways.
  args:
    - text
  params:
    - *o157
gdm_noparams_1:
  desc: Sets whether to DM the winner of a giveaway.
  args:
    - ''
  params: [ ]
gemote_IEmote_1:
  desc: Sets the emote used for giveaways.
  args:
    - emote
  params:
    - *o159
greroll_ulong_1:
  desc: Rerolls a giveaway.
  args:
    - messageid
  params:
    - *o160
gstats_noparams_1:
  desc: Shows the stats for giveaways.
  args:
    - ''
  params: [ ]
gstart_ITextChannel_StoopidTime_int_string_1:
  desc: Quick start a giveaway.
  args:
    - chan time number text
  params:
    - *o161
    - *o162
    - *o163
    - *o164
gstart_noparams_2:
  desc: More detailed giveaway starting, lets you set a banner, ping role, and more.
  args:
    - ''
  params: [ ]
glist_noparams_1:
  desc: Lists all active giveaways.
  args:
    - ''
  params: [ ]
gend_ulong_1:
  desc: Ends a giveaway.
  args:
    - messageid
  params:
    - *o165
gdmmessage_=_2:
  desc: Sets the dm message sent to users when they win a giveaway.
  args:
    - null
  params:
    - *o3
gbanner_string_2:
  desc: Sets the default giveaway banner.
  args:
    - text
  params:
    - *o158
gwinembedcolor_string_2:
  desc: Sets the color for the winning embed.
  args:
    - text
  params:
    - *o157
gembedcolor_string_2:
  desc: Sets the color of the embed for giveaways.
  args:
    - text
  params:
    - *o157
gdm_noparams_2:
  desc: Sets whether to DM the winner of a giveaway.
  args:
    - ''
  params: [ ]
gemote_IEmote_2:
  desc: Sets the emote used for giveaways.
  args:
    - emote
  params:
    - *o159
greroll_ulong_2:
  desc: Rerolls a giveaway.
  args:
    - messageid
  params:
    - *o160
gstats_noparams_2:
  desc: Shows the stats for giveaways.
  args:
    - ''
  params: [ ]
gstart_ITextChannel_StoopidTime_int_string_2:
  desc: Quick start a giveaway.
  args:
    - chan time number text
  params:
    - *o161
    - *o162
    - *o163
    - *o164
gstart_noparams_3:
  desc: More detailed giveaway starting, lets you set a banner, ping role, and more.
  args:
    - ''
  params: [ ]
glist_noparams_2:
  desc: Lists all active giveaways.
  args:
    - ''
  params: [ ]
gend_ulong_2:
  desc: Ends a giveaway.
  args:
    - messageid
  params:
    - *o165
exportcommandsjson:
  desc: Exports all commands to a json file. Used mainly for https://mewdeko.tech/commands
  args:
    - ''
  params: [ ]
searchcommand:
  desc: Searches for a command by name or description.
  args:
    - text
  params:
    - &o166
      name: commandname
      desc: The term to search for
      type: string
      optional: false
modules:
  desc: Shows a list of all modules. Is basically just a help alias at this point.
  args:
    - ''
  params: [ ]
donate:
  desc: SHows how to support the bot.
  args:
    - ''
  params: [ ]
commands:
  desc: Shows commands for a specific module. If null, is an alias for modules which is an alias for help.
  args:
    - null
  params:
    - *o3
h:
  desc: Shows help for a specific command.
  args:
    - null
  params:
    - *o3
guide:
  desc: Shows the guide for the bot.
  args:
    - ''
  params: [ ]
source:
  desc: Shows the source code link for the bot.
  args:
    - ''
  params: [ ]
vote:
  desc: Shows a link to vote for mewdeko.
  args:
    - ''
  params: [ ]
exportcommandsjson_noparams:
  desc: Exports all commands to a json file. Used mainly for https://mewdeko.tech/commands
  args:
    - ''
  params: [ ]
searchcommand_string:
  desc: Searches for a command by name or description.
  args:
    - text
  params:
    - *o166
modules_noparams:
  desc: Shows a list of all modules. Is basically just a help alias at this point.
  args:
    - ''
  params: [ ]
donate_noparams:
  desc: SHows how to support the bot.
  args:
    - ''
  params: [ ]
commands_=:
  desc: SHows how to support the bot.
  args:
    - null
  params:
    - *o3
h_=:
  desc: Shows help for a specific command.
  args:
    - null
  params:
    - *o3
guide_noparams:
  desc: Shows the guide for the bot.
  args:
    - ''
  params: [ ]
source_noparams:
  desc: Shows the guide for the bot.
  args:
    - ''
  params: [ ]
vote_noparams:
  desc: Shows the source code link for the bot.
  args:
    - ''
  params: [ ]
exportcommandsjson_noparams_1:
  desc: A module containing commands for getting help.
  args:
    - ''
  params: [ ]
searchcommand_string_1:
  desc: Searches for a command by name or description.
  args:
    - text
  params:
    - *o166
modules_noparams_1:
  desc: Shows a list of all modules. Is basically just a help alias at this point.
  args:
    - ''
  params: [ ]
donate_noparams_1:
  desc: SHows how to support the bot.
  args:
    - ''
  params: [ ]
commands_=_1:
  desc: Shows commands for a specific module. If null, is an alias for modules which is an alias for help.
  args:
    - null
  params:
    - *o3
h_=_1:
  desc: Shows help for a specific command.
  args:
    - null
  params:
    - *o3
guide_noparams_1:
  desc: Shows the guide for the bot.
  args:
    - ''
  params: [ ]
source_noparams_1:
  desc: Shows the source code link for the bot.
  args:
    - ''
  params: [ ]
vote_noparams_1:
  desc: Shows a link to vote for mewdeko.
  args:
    - ''
  params: [ ]
exportcommandsjson_noparams_2:
  desc: Exports all commands to a json file. Used mainly for https://mewdeko.tech/commands
  args:
    - ''
  params: [ ]
searchcommand_string_2:
  desc: Searches for a command by name or description.
  args:
    - text
  params:
    - *o166
modules_noparams_2:
  desc: Shows a list of all modules. Is basically just a help alias at this point.
  args:
    - ''
  params: [ ]
donate_noparams_2:
  desc: SHows how to support the bot.
  args:
    - ''
  params: [ ]
commands_=_2:
  desc: SHows how to support the bot.
  args:
    - null
  params:
    - *o3
h_=_2:
  desc: Shows help for a specific command.
  args:
    - null
  params:
    - *o3
guide_noparams_2:
  desc: Shows the guide for the bot.
  args:
    - ''
  params: [ ]
source_noparams_2:
  desc: Shows the guide for the bot.
  args:
    - ''
  params: [ ]
vote_noparams_2:
  desc: Shows the source code link for the bot.
  args:
    - ''
  params: [ ]
highlight:
  desc: The actions available for the highlight command.
  args:
    - add|list|delete null
    - add|list|delete
    - add
    - list
    - delete
  params:
    - &o167
      name: action
      desc: '///  /// Possible values: Add, List, Delete, Remove, Match, ToggleIgnore, Toggle'
      type: HighlightActions
      optional: false
    - *o3
highlight_HighlightActions_=:
  desc: Toggles whether highlights are enabled
  args:
    - add|list|delete null
    - add|list|delete
    - add
    - list
    - delete
  params:
    - *o167
    - *o3
highlight_HighlightActions_=_1:
  desc: Module for managing highlights.
  args:
    - add|list|delete null
    - add|list|delete
    - add
    - list
    - delete
  params:
    - *o167
    - *o3
highlight_HighlightActions_=_2:
  desc: Toggles whether highlights are enabled
  args:
    - add|list|delete null
    - add|list|delete
    - add
    - list
    - delete
  params:
    - *o167
    - *o3
stfu:
  desc: Whats there not to understand? Shuts a user the fuck up.
  args:
    - time @user
    - time
  params:
    - &o173
      name: time
      desc: For how long to shut a user the fuck up for.
      type: StoopidTime
      optional: false
    - &o168
      name: user
      desc: The user to shut up
      type: IGuildUser
      optional: true
removeonmute:
  desc: Toggles whether to remove roles on mute
  args:
    - text
  params:
    - &o174
      name: yesnt
      desc: Nosnt
      type: string
      optional: false
stfu_IGuildUser_=:
  desc: Whats there not to understand? Shuts a user the fuck up.
  args:
    - '@user null'
  params:
    - *o168
    - *o3
unmuteall:
  desc: Unmutes all users in the guild. DANGEROUS!!!!!!!!!!!!!!!!
  args:
    - null
  params:
    - *o3
unstfu:
  desc: Unshuts a user up in the channel.
  args:
    - '@user'
  params:
    - &o175
      name: user
      desc: The user to unshut up
      type: IGuildUser
      optional: true
muterole:
  desc: Sets the mute role for the guild.
  args:
    - null
  params:
    - *o3
mute:
  desc: Mutes a user.
  args:
    - '@user ""'
  params:
    - &o176
      name: target
      desc: The user to mute
      type: IGuildUser
      optional: true
    - &o169
      name: '""'
      desc: ''
      type: =
      optional: false
mute_IGuildUser_StoopidTime_=:
  desc: Mutes a user for a specified amount of time.
  args:
    - '@user time ""'
    - time
  params:
    - &o171
      name: user
      desc: The user to mute
      type: IGuildUser
      optional: true
    - &o170
      name: time
      desc: The amount of time to mute the user for
      type: StoopidTime
      optional: false
    - *o169
mute_StoopidTime_IGuildUser_=:
  desc: Mutes a user for a specified amount of time.
  args:
    - time @user ""
    - time
  params:
    - *o170
    - *o171
    - *o169
unmute:
  desc: Unmutes a user.
  args:
    - '@user ""'
  params:
    - &o172
      name: user
      desc: The user to unmute
      type: IGuildUser
      optional: true
    - *o169
chatmute:
  desc: Mutes a user in chat and not voice.
  args:
    - '@user ""'
  params:
    - *o171
    - *o169
chatunmute:
  desc: Unmutes a user in chat.
  args:
    - '@user ""'
  params:
    - *o172
    - *o169
voicemute:
  desc: Mutes a user in voice and not chat.
  args:
    - time @user ""
    - time
  params:
    - *o170
    - *o171
    - *o169
chatmute_StoopidTime_IGuildUser_=:
  desc: Mutes a user in chat and not voice for a specified amount of time.
  args:
    - time @user ""
    - time
  params:
    - *o170
    - *o171
    - *o169
voicemute_IGuildUser_=:
  desc: Mutes a user in voice and not chat for a specified amount of time.
  args:
    - '@user ""'
  params:
    - *o171
    - *o169
voiceunmute:
  desc: Unmutes a user in voice.
  args:
    - '@user ""'
  params:
    - *o172
    - *o169
stfu_StoopidTime_IGuildUser:
  desc: Whats there not to understand? Shuts a user the fuck up.
  args:
    - time @user
    - time
  params:
    - *o173
    - *o168
removeonmute_string:
  desc: Toggles whether to remove roles on mute
  args:
    - text
  params:
    - *o174
stfu_IGuildUser_=_1:
  desc: Whats there not to understand? Shuts a user the fuck up.
  args:
    - '@user null'
  params:
    - *o168
    - *o3
unmuteall_=:
  desc: Unmutes all users in the guild. DANGEROUS!!!!!!!!!!!!!!!!
  args:
    - null
  params:
    - *o3
unstfu_IGuildUser:
  desc: Unshuts a user up in the channel.
  args:
    - '@user'
  params:
    - *o175
muterole_=:
  desc: Sets the mute role for the guild.
  args:
    - null
  params:
    - *o3
mute_IGuildUser_=:
  desc: Mutes a user.
  args:
    - '@user ""'
  params:
    - *o176
    - *o169
mute_IGuildUser_StoopidTime_=_1:
  desc: Mutes a user for a specified amount of time.
  args:
    - '@user time ""'
    - time
  params:
    - *o171
    - *o170
    - *o169
mute_StoopidTime_IGuildUser_=_1:
  desc: Mutes a user for a specified amount of time.
  args:
    - time @user ""
    - time
  params:
    - *o170
    - *o171
    - *o169
unmute_IGuildUser_=:
  desc: Unmutes a user.
  args:
    - '@user ""'
  params:
    - *o171
    - *o169
chatmute_IGuildUser_=:
  desc: Mutes a user in chat and not voice.
  args:
    - '@user ""'
  params:
    - *o172
    - *o169
chatunmute_IGuildUser_=:
  desc: Unmutes a user in chat.
  args:
    - '@user ""'
  params:
    - *o172
    - *o169
voicemute_StoopidTime_IGuildUser_=:
  desc: Mutes a user in voice and not chat.
  args:
    - time @user ""
    - time
  params:
    - *o170
    - *o171
    - *o169
chatmute_StoopidTime_IGuildUser_=_1:
  desc: Mutes a user in chat and not voice for a specified amount of time.
  args:
    - time @user ""
    - time
  params:
    - *o170
    - *o171
    - *o169
voicemute_IGuildUser_=_1:
  desc: Mutes a user in voice and not chat for a specified amount of time.
  args:
    - '@user ""'
  params:
    - *o172
    - *o169
voiceunmute_IGuildUser_=:
  desc: Unmutes a user in voice.
  args:
    - '@user ""'
  params:
    - *o172
    - *o169
stfu_StoopidTime_IGuildUser_1:
  desc: Module for moderation commands.
  args:
    - time @user
    - time
  params:
    - *o173
    - *o168
removeonmute_string_1:
  desc: Toggles whether to remove roles on mute
  args:
    - text
  params:
    - *o174
stfu_IGuildUser_=_2:
  desc: Whats there not to understand? Shuts a user the fuck up.
  args:
    - '@user null'
  params:
    - *o168
    - *o3
unmuteall_=_1:
  desc: Unmutes all users in the guild. DANGEROUS!!!!!!!!!!!!!!!!
  args:
    - null
  params:
    - *o3
unstfu_IGuildUser_1:
  desc: Unshuts a user up in the channel.
  args:
    - '@user'
  params:
    - *o175
muterole_=_1:
  desc: Sets the mute role for the guild.
  args:
    - null
  params:
    - *o3
mute_IGuildUser_=_1:
  desc: Mutes a user.
  args:
    - '@user ""'
  params:
    - *o176
    - *o169
mute_IGuildUser_StoopidTime_=_2:
  desc: Mutes a user for a specified amount of time.
  args:
    - '@user time ""'
    - time
  params:
    - *o171
    - *o170
    - *o169
mute_StoopidTime_IGuildUser_=_2:
  desc: Mutes a user for a specified amount of time.
  args:
    - time @user ""
    - time
  params:
    - *o170
    - *o171
    - *o169
unmute_IGuildUser_=_1:
  desc: Unmutes a user.
  args:
    - '@user ""'
  params:
    - *o172
    - *o169
chatmute_IGuildUser_=_1:
  desc: Mutes a user in chat and not voice.
  args:
    - '@user ""'
  params:
    - *o171
    - *o169
chatunmute_IGuildUser_=_1:
  desc: Unmutes a user in chat.
  args:
    - '@user ""'
  params:
    - *o172
    - *o169
voicemute_StoopidTime_IGuildUser_=_1:
  desc: Mutes a user in voice and not chat.
  args:
    - time @user ""
    - time
  params:
    - *o170
    - *o171
    - *o169
chatmute_StoopidTime_IGuildUser_=_2:
  desc: Mutes a user in chat and not voice for a specified amount of time.
  args:
    - time @user ""
    - time
  params:
    - *o170
    - *o171
    - *o169
voicemute_IGuildUser_=_2:
  desc: Mutes a user in voice and not chat for a specified amount of time.
  args:
    - '@user ""'
  params:
    - *o171
    - *o169
voiceunmute_IGuildUser_=_1:
  desc: Unmutes a user in voice.
  args:
    - '@user ""'
  params:
    - *o172
    - *o169
stfu_StoopidTime_IGuildUser_2:
  desc: Module for muting and unmuting users.
  args:
    - time @user
    - time
  params:
    - *o173
    - *o168
removeonmute_string_2:
  desc: Toggles whether to remove roles on mute
  args:
    - text
  params:
    - *o174
stfu_IGuildUser_=_3:
  desc: Whats there not to understand? Shuts a user the fuck up.
  args:
    - '@user null'
  params:
    - *o168
    - *o3
unmuteall_=_2:
  desc: Unmutes all users in the guild. DANGEROUS!!!!!!!!!!!!!!!!
  args:
    - null
  params:
    - *o3
unstfu_IGuildUser_2:
  desc: Unshuts a user up in the channel.
  args:
    - '@user'
  params:
    - *o175
muterole_=_2:
  desc: Sets the mute role for the guild.
  args:
    - null
  params:
    - *o3
mute_IGuildUser_=_2:
  desc: Mutes a user.
  args:
    - '@user ""'
  params:
    - *o176
    - *o169
mute_IGuildUser_StoopidTime_=_3:
  desc: Mutes a user for a specified amount of time.
  args:
    - '@user time ""'
    - time
  params:
    - *o171
    - *o170
    - *o169
mute_StoopidTime_IGuildUser_=_3:
  desc: Mutes a user for a specified amount of time.
  args:
    - time @user ""
    - time
  params:
    - *o170
    - *o171
    - *o169
unmute_IGuildUser_=_2:
  desc: Unmutes a user.
  args:
    - '@user ""'
  params:
    - *o171
    - *o169
chatmute_IGuildUser_=_2:
  desc: Mutes a user in chat and not voice.
  args:
    - '@user ""'
  params:
    - *o172
    - *o169
chatunmute_IGuildUser_=_2:
  desc: Unmutes a user in chat.
  args:
    - '@user ""'
  params:
    - *o172
    - *o169
voicemute_StoopidTime_IGuildUser_=_2:
  desc: Mutes a user in voice and not chat.
  args:
    - time @user ""
    - time
  params:
    - *o170
    - *o171
    - *o169
chatmute_StoopidTime_IGuildUser_=_3:
  desc: Mutes a user in chat and not voice for a specified amount of time.
  args:
    - time @user ""
    - time
  params:
    - *o170
    - *o171
    - *o169
voicemute_IGuildUser_=_3:
  desc: Mutes a user in voice and not chat for a specified amount of time.
  args:
    - '@user ""'
  params:
    - *o172
    - *o169
voiceunmute_IGuildUser_=_2:
  desc: Unmutes a user in voice.
  args:
    - '@user ""'
  params:
    - *o172
    - *o169
purge:
  desc: Purges messages from the current channel.
  args:
    - null
  params:
    - *o3
purge_ulong_=:
  desc: 'Purges messages from the current channel with the specific amount and parameters. The options are: -s, --safe: Purge messages that are not pinned -nb, --nobots: Purge messages that are not from bots -ob, --onlybots: Purge messages that are from bots -b, --before: Purge messages before a specific time -a, --after: Purge messages after a specific time -he, --hasembed: Purge messages that have an embed -ne, --noembed: Purge messages that do not have an embed -c, --contains: Purge messages that contain a specific string'
  args:
    - number null
    - number
  params:
    - &o178
      name: count
      desc: The amount of messages to purge
      type: ulong
      optional: false
    - *o3
purge_IGuildUser_=_=:
  desc: Purges messages from the current channel with the specific user and amount.
  args:
    - '@user 100 null'
    - '@user'
  params:
    - &o179
      name: user
      desc: The user to purge messages from
      type: IGuildUser
      optional: false
    - &o177
      name: 100
      desc: ''
      type: =
      optional: false
    - *o3
purge_ulong_=_=:
  desc: Purges messages from the current channel with the specific user id and amount.
  args:
    - userid 100 null
    - userid
  params:
    - &o180
      name: userId
      desc: The user id to purge messages from
      type: ulong
      optional: false
    - *o177
    - *o3
purgeuser:
  desc: Purges all messages from accesible channels for a user.
  args:
    - '@user number'
  params:
    - &o181
      name: user
      desc: The user who's messages to purge
      type: IUser
      optional: false
    - &o182
      name: messageCount
      desc: The count of messages to search
      type: int
      optional: false
purge_=:
  desc: Purges messages from the current channel.
  args:
    - null
  params:
    - *o3
purge_ulong_=_1:
  desc: Execute the Purge command
  args:
    - number null
    - number
  params:
    - *o178
    - *o3
purge_IGuildUser_=_=_1:
  desc: Purges messages from the current channel with the specific user and amount.
  args:
    - '@user 100 null'
    - '@user'
  params:
    - *o179
    - *o177
    - *o3
purge_ulong_=_=_1:
  desc: Purges messages from the current channel with the specific user id and amount.
  args:
    - userid 100 null
    - userid
  params:
    - *o180
    - *o177
    - *o3
purgeuser_IUser_int:
  desc: Purges all messages from accesible channels for a user.
  args:
    - '@user number'
  params:
    - *o181
    - *o182
purge_=_1:
  desc: Module for purging messages.
  args:
    - null
  params:
    - *o3
purge_ulong_=_2:
  desc: 'Purges messages from the current channel with the specific amount and parameters. The options are: -s, --safe: Purge messages that are not pinned -nb, --nobots: Purge messages that are not from bots -ob, --onlybots: Purge messages that are from bots -b, --before: Purge messages before a specific time -a, --after: Purge messages after a specific time -he, --hasembed: Purge messages that have an embed -ne, --noembed: Purge messages that do not have an embed -c, --contains: Purge messages that contain a specific string'
  args:
    - number null
    - number
  params:
    - *o178
    - *o3
purge_IGuildUser_=_=_2:
  desc: Purges messages from the current channel with the specific user and amount.
  args:
    - '@user 100 null'
    - '@user'
  params:
    - *o179
    - *o177
    - *o3
purge_ulong_=_=_2:
  desc: Purges messages from the current channel with the specific user id and amount.
  args:
    - userid 100 null
    - userid
  params:
    - *o180
    - *o177
    - *o3
purgeuser_IUser_int_1:
  desc: Purges all messages from accesible channels for a user.
  args:
    - '@user number'
  params:
    - *o181
    - *o182
purge_=_2:
  desc: Module for purging messages.
  args:
    - null
  params:
    - *o3
purge_ulong_=_3:
  desc: Execute the Purge command
  args:
    - number null
    - number
  params:
    - *o178
    - *o3
purge_IGuildUser_=_=_3:
  desc: Purges messages from the current channel with the specific user and amount.
  args:
    - '@user 100 null'
    - '@user'
  params:
    - *o179
    - *o177
    - *o3
purge_ulong_=_=_3:
  desc: Purges messages from the current channel with the specific user id and amount.
  args:
    - userid 100 null
    - userid
  params:
    - *o180
    - *o177
    - *o3
purgeuser_IUser_int_2:
  desc: Purges all messages from accesible channels for a user.
  args:
    - '@user number'
  params:
    - *o181
    - *o182
massnickprogress:
  desc: The thing used for addrole in commands to be able to parse it
  args:
    - ''
  params: [ ]
massnickstop:
  desc: Stops a mass nickname operation.
  args:
    - ''
  params: [ ]
dehoistall:
  desc: Dehoists all users in the guild by replacing special characters in their nicknames.
  args:
    - false
  params:
    - &o187
      name: false
      desc: ''
      type: =
      optional: false
sanitizeall:
  desc: Sanitizes all users in the guild by replacing special characters in their usernames.
  args:
    - ''
  params: [ ]
dehoist:
  desc: Dehoists a user by replacing special characters in their username.
  args:
    - '@user'
  params:
    - &o188
      name: user
      desc: The user to dehoist
      type: IGuildUser
      optional: false
sanitize:
  desc: Sanitizes a user by replacing special characters in their username.
  args:
    - '@user'
  params:
    - &o189
      name: user
      desc: The user to sanitize
      type: IGuildUser
      optional: false
setwarnchannel:
  desc: Sets the warnlog channel for the guild.
  args:
    - channel
  params:
    - &o190
      name: channel
      desc: ''
      type: ITextChannel
      optional: false
timeout:
  desc: Timeouts a user for a specified amount of time.
  args:
    - time @user null
    - time
  params:
    - &o191
      name: time
      desc: The time to timeout the user
      type: StoopidTime
      optional: false
    - &o192
      name: user
      desc: The user to timeout
      type: IGuildUser
      optional: true
    - *o3
untimeout:
  desc: Removes a timeout from a user.
  args:
    - '@user'
  params:
    - &o183
      name: user
      desc: The user to warn
      type: IGuildUser
      optional: true
warn:
  desc: Warns a user with an optional reason.
  args:
    - '@user null'
  params:
    - *o183
    - *o3
warnexpire:
  desc: Sets the expiration time for warnings.
  args:
    - number options
  params:
    - &o193
      name: days
      desc: The number of days until warnings expire
      type: int
      optional: false
    - &o194
      name: options
      desc: The action to take when a warning expires
      type: WarnExpireAction
      optional: false
warnlog:
  desc: Gets the warnlog for a user.
  args:
    - '@user'
  params:
    - &o195
      name: user
      desc: ''
      type: IGuildUser
      optional: false
warnlog_ulong:
  desc: Gets the warnlog for the user who invoked the command.
  args:
    - userid
  params:
    - &o196
      name: userId
      desc: ''
      type: ulong
      optional: false
warnlogall:
  desc: Gets how many warnings each user has.
  args:
    - ''
  params: [ ]
warnclear:
  desc: Clears a user's warnings. If an index is provided, clears only that warning.
  args:
    - '@user 0'
  params:
    - &o197
      name: user
      desc: The user to clear warnings for
      type: IGuildUser
      optional: true
    - *o131
warnpunish:
  desc: Sets a punishment for a certain number of warnings.
  args:
    - number addrole @role null
    - number addrole @role
    - addrole
  params:
    - &o184
      name: number
      desc: The number of warnings
      type: int
      optional: false
    - &o198
      name: _
      desc: 'The addrole keyword Possible values: AddRole'
      type: AddRole
      optional: false
    - &o199
      name: role
      desc: The role to add
      type: IRole
      optional: false
    - *o3
warnpunish_int_PunishmentAction_=:
  desc: Sets a punishment for a certain number of warnings.
  args:
    - number punish null
    - number punish
  params:
    - *o184
    - &o200
      name: punish
      desc: The punishment to apply
      type: PunishmentAction
      optional: false
    - *o3
warnpunish_int:
  desc: Removes a punishment for a certain number of warnings.
  args:
    - number
  params:
    - *o184
warnpunishlist:
  desc: Lists the warn punishments for the guild.
  args:
    - ''
  params: [ ]
ban:
  desc: Bans a user for a specified amount of time.
  args:
    - time time @user null
    - time time
  params:
    - &o201
      name: pruneTime
      desc: The amount of time to prune messages
      type: StoopidTime
      optional: false
    - &o202
      name: time
      desc: The amount of time to ban the user
      type: StoopidTime
      optional: false
    - &o185
      name: user
      desc: The user to ban
      type: IGuildUser
      optional: true
    - *o3
ban_IUser_=:
  desc: Bans a user.
  args:
    - '@user null'
  params:
    - &o203
      name: user
      desc: The user to ban
      type: IUser
      optional: true
    - *o3
ban_StoopidTime_IUser_=:
  desc: Bans a user for a specified amount of time.
  args:
    - time @user null
    - time @user
  params:
    - &o186
      name: time
      desc: The amount of time to prune messages
      type: StoopidTime
      optional: false
    - &o204
      name: userId
      desc: The ID of the user to ban
      type: IUser
      optional: false
    - *o3
ban_IGuildUser_=:
  desc: Bans a user.
  args:
    - '@user null'
  params:
    - *o185
    - *o3
ban_StoopidTime_IGuildUser_=:
  desc: Bans a user with the specified reason and amount of days to purge messages.
  args:
    - time @user null
    - time
  params:
    - *o186
    - *o185
    - *o3
banmessage:
  desc: Sets the message that users get dmed with when they are banned.
  args:
    - null
  params:
    - *o3
banmsgreset:
  desc: Resets the ban message to the default message.
  args:
    - ''
  params: [ ]
banmessagetest:
  desc: Tests the ban message. Use it as a prank!
  args:
    - null
  params:
    - *o3
banmessagetest_StoopidTime_=:
  desc: Tests the ban message. Use it as a prank!
  args:
    - duration null
    - duration
  params:
    - &o205
      name: duration
      desc: The duration of the ban
      type: StoopidTime
      optional: false
    - *o3
unban:
  desc: Unbans a user.
  args:
    - text
  params:
    - &o206
      name: user
      desc: The user to unban
      type: string
      optional: false
unban_ulong:
  desc: Unbans a user.
  args:
    - userid
  params:
    - &o207
      name: userId
      desc: The ID of the user to unban
      type: ulong
      optional: false
softban:
  desc: Softbans a user. Use this to kick a user and delete their messages.
  args:
    - '@user null'
  params:
    - &o208
      name: user
      desc: The user to softban
      type: IGuildUser
      optional: true
    - *o3
softban_ulong_=:
  desc: Softbans a user. Use this to kick a user and delete their messages.
  args:
    - userid null
    - userid
  params:
    - &o209
      name: userId
      desc: The ID of the user to softban
      type: ulong
      optional: false
    - *o3
kick:
  desc: Kicks a user.
  args:
    - '@user null'
  params:
    - &o210
      name: user
      desc: The user to kick
      type: IGuildUser
      optional: true
    - *o3
kick_ulong_=:
  desc: Kicks a user.
  args:
    - userid null
    - userid
  params:
    - &o211
      name: userId
      desc: The ID of the user to kick
      type: ulong
      optional: false
    - *o3
masskick:
  desc: Kicks multiple users.
  args:
    - '@user'
  params:
    - &o212
      name: usersUnp
      desc: The users to kick
      type: IUser[]
      optional: false
masskill:
  desc: Massbans users. Use this to ban multiple users at once. Blacklists them from the bot as well.
  args:
    - text
  params:
    - &o213
      name: people
      desc: ''
      type: string
      optional: false
massnickprogress_noparams:
  desc: The thing used for addrole in commands to be able to parse it
  args:
    - ''
  params: [ ]
massnickstop_noparams:
  desc: Stops a mass nickname operation.
  args:
    - ''
  params: [ ]
dehoistall_=:
  desc: Dehoists all users in the guild by replacing special characters in their nicknames.
  args:
    - false
  params:
    - *o187
sanitizeall_noparams:
  desc: Sanitizes all users in the guild by replacing special characters in their usernames.
  args:
    - ''
  params: [ ]
dehoist_IGuildUser:
  desc: Dehoists a user by replacing special characters in their username.
  args:
    - '@user'
  params:
    - *o188
sanitize_IGuildUser:
  desc: Sanitizes a user by replacing special characters in their username.
  args:
    - '@user'
  params:
    - *o189
setwarnchannel_ITextChannel:
  desc: Sets the warnlog channel for the guild.
  args:
    - channel
  params:
    - *o190
timeout_StoopidTime_IGuildUser_=:
  desc: Timeouts a user for a specified amount of time.
  args:
    - time @user null
    - time
  params:
    - *o191
    - *o192
    - *o3
untimeout_IGuildUser:
  desc: Removes a timeout from a user.
  args:
    - '@user'
  params:
    - *o183
warn_IGuildUser_=:
  desc: Warns a user with an optional reason.
  args:
    - '@user null'
  params:
    - *o183
    - *o3
warnexpire_int_WarnExpireAction:
  desc: Sets the expiration time for warnings.
  args:
    - number options
  params:
    - *o193
    - *o194
warnlog_IGuildUser:
  desc: Gets the warnlog for a user.
  args:
    - '@user'
  params:
    - *o195
warnlog_ulong_1:
  desc: Gets the warnlog for the user who invoked the command.
  args:
    - userid
  params:
    - *o196
warnlogall_noparams:
  desc: Gets how many warnings each user has.
  args:
    - ''
  params: [ ]
warnclear_IGuildUser_=:
  desc: Clears a user's warnings. If an index is provided, clears only that warning.
  args:
    - '@user 0'
  params:
    - *o197
    - *o131
warnpunish_int_AddRole_IRole_=:
  desc: Sets a punishment for a certain number of warnings.
  args:
    - number addrole @role null
    - number addrole @role
    - addrole
  params:
    - *o184
    - *o198
    - *o199
    - *o3
warnpunish_int_PunishmentAction_=_1:
  desc: Sets a punishment for a certain number of warnings.
  args:
    - number punish null
    - number punish
  params:
    - *o184
    - *o200
    - *o3
warnpunish_int_1:
  desc: Removes a punishment for a certain number of warnings.
  args:
    - number
  params:
    - *o184
warnpunishlist_noparams:
  desc: Lists the warn punishments for the guild.
  args:
    - ''
  params: [ ]
ban_StoopidTime_StoopidTime_IGuildUser_=:
  desc: Bans a user for a specified amount of time.
  args:
    - time time @user null
    - time time
  params:
    - *o201
    - *o202
    - *o185
    - *o3
ban_IUser_=_1:
  desc: Bans a user.
  args:
    - '@user null'
  params:
    - *o203
    - *o3
ban_StoopidTime_IUser_=_1:
  desc: Bans a user for a specified amount of time.
  args:
    - time @user null
    - time @user
  params:
    - *o186
    - *o204
    - *o3
ban_IGuildUser_=_1:
  desc: Bans a user.
  args:
    - '@user null'
  params:
    - *o185
    - *o3
ban_StoopidTime_IGuildUser_=_1:
  desc: Bans a user with the specified reason and amount of days to purge messages.
  args:
    - time @user null
    - time
  params:
    - *o186
    - *o185
    - *o3
banmessage_=:
  desc: Sets the message that users get dmed with when they are banned.
  args:
    - null
  params:
    - *o3
banmsgreset_noparams:
  desc: Resets the ban message to the default message.
  args:
    - ''
  params: [ ]
banmessagetest_=:
  desc: Tests the ban message. Use it as a prank!
  args:
    - null
  params:
    - *o3
banmessagetest_StoopidTime_=_1:
  desc: Tests the ban message. Use it as a prank!
  args:
    - duration null
    - duration
  params:
    - *o205
    - *o3
unban_string:
  desc: Unbans a user.
  args:
    - text
  params:
    - *o206
unban_ulong_1:
  desc: Unbans a user.
  args:
    - userid
  params:
    - *o207
softban_IGuildUser_=:
  desc: Softbans a user. Use this to kick a user and delete their messages.
  args:
    - '@user null'
  params:
    - *o208
    - *o3
softban_ulong_=_1:
  desc: Softbans a user. Use this to kick a user and delete their messages.
  args:
    - userid null
    - userid
  params:
    - *o209
    - *o3
kick_IGuildUser_=:
  desc: Kicks a user.
  args:
    - '@user null'
  params:
    - *o210
    - *o3
kick_ulong_=_1:
  desc: Kicks a user.
  args:
    - userid null
    - userid
  params:
    - *o211
    - *o3
masskick_IUser[]:
  desc: Kicks multiple users.
  args:
    - '@user'
  params:
    - *o212
masskill_string:
  desc: Massbans users. Use this to ban multiple users at once. Blacklists them from the bot as well.
  args:
    - text
  params:
    - *o213
massnickprogress_noparams_1:
  desc: Module for user punishment commands.
  args:
    - ''
  params: [ ]
massnickstop_noparams_1:
  desc: Stops a mass nickname operation.
  args:
    - ''
  params: [ ]
dehoistall_=_1:
  desc: Dehoists all users in the guild by replacing special characters in their nicknames.
  args:
    - false
  params:
    - *o187
sanitizeall_noparams_1:
  desc: Sanitizes all users in the guild by replacing special characters in their usernames.
  args:
    - ''
  params: [ ]
dehoist_IGuildUser_1:
  desc: Dehoists a user by replacing special characters in their username.
  args:
    - '@user'
  params:
    - *o188
sanitize_IGuildUser_1:
  desc: Sanitizes a user by replacing special characters in their username.
  args:
    - '@user'
  params:
    - *o189
setwarnchannel_ITextChannel_1:
  desc: Sets the warnlog channel for the guild.
  args:
    - channel
  params:
    - *o190
timeout_StoopidTime_IGuildUser_=_1:
  desc: Timeouts a user for a specified amount of time.
  args:
    - time @user null
    - time
  params:
    - *o191
    - *o192
    - *o3
untimeout_IGuildUser_1:
  desc: Removes a timeout from a user.
  args:
    - '@user'
  params:
    - *o183
warn_IGuildUser_=_1:
  desc: Warns a user with an optional reason.
  args:
    - '@user null'
  params:
    - *o183
    - *o3
warnexpire_int_WarnExpireAction_1:
  desc: Sets the expiration time for warnings.
  args:
    - number options
  params:
    - *o193
    - *o194
warnlog_IGuildUser_1:
  desc: Gets the warnlog for a user.
  args:
    - '@user'
  params:
    - *o195
warnlog_ulong_2:
  desc: Gets the warnlog for the user who invoked the command.
  args:
    - userid
  params:
    - *o196
warnlogall_noparams_1:
  desc: Gets how many warnings each user has.
  args:
    - ''
  params: [ ]
warnclear_IGuildUser_=_1:
  desc: Clears a user's warnings. If an index is provided, clears only that warning.
  args:
    - '@user 0'
  params:
    - *o197
    - *o131
warnpunish_int_AddRole_IRole_=_1:
  desc: Sets a punishment for a certain number of warnings.
  args:
    - number addrole @role null
    - number addrole @role
    - addrole
  params:
    - *o184
    - *o198
    - *o199
    - *o3
warnpunish_int_PunishmentAction_=_2:
  desc: Sets a punishment for a certain number of warnings.
  args:
    - number punish null
    - number punish
  params:
    - *o184
    - *o200
    - *o3
warnpunish_int_2:
  desc: Removes a punishment for a certain number of warnings.
  args:
    - number
  params:
    - *o184
warnpunishlist_noparams_1:
  desc: Lists the warn punishments for the guild.
  args:
    - ''
  params: [ ]
ban_StoopidTime_StoopidTime_IGuildUser_=_1:
  desc: Bans a user for a specified amount of time.
  args:
    - time time @user null
    - time time
  params:
    - *o201
    - *o202
    - *o185
    - *o3
ban_IUser_=_2:
  desc: Bans a user.
  args:
    - '@user null'
  params:
    - *o203
    - *o3
ban_StoopidTime_IUser_=_2:
  desc: Bans a user for a specified amount of time.
  args:
    - time @user null
    - time @user
  params:
    - *o186
    - *o204
    - *o3
ban_IGuildUser_=_2:
  desc: Bans a user.
  args:
    - '@user null'
  params:
    - *o185
    - *o3
ban_StoopidTime_IGuildUser_=_2:
  desc: Bans a user with the specified reason and amount of days to purge messages.
  args:
    - time @user null
    - time
  params:
    - *o186
    - *o185
    - *o3
banmessage_=_1:
  desc: Sets the message that users get dmed with when they are banned.
  args:
    - null
  params:
    - *o3
banmsgreset_noparams_1:
  desc: Resets the ban message to the default message.
  args:
    - ''
  params: [ ]
banmessagetest_=_1:
  desc: Tests the ban message. Use it as a prank!
  args:
    - null
  params:
    - *o3
banmessagetest_StoopidTime_=_2:
  desc: Tests the ban message. Use it as a prank!
  args:
    - duration null
    - duration
  params:
    - *o205
    - *o3
unban_string_1:
  desc: Unbans a user.
  args:
    - text
  params:
    - *o206
unban_ulong_2:
  desc: Unbans a user.
  args:
    - userid
  params:
    - *o207
softban_IGuildUser_=_1:
  desc: Softbans a user. Use this to kick a user and delete their messages.
  args:
    - '@user null'
  params:
    - *o208
    - *o3
softban_ulong_=_2:
  desc: Softbans a user. Use this to kick a user and delete their messages.
  args:
    - userid null
    - userid
  params:
    - *o209
    - *o3
kick_IGuildUser_=_1:
  desc: Kicks a user.
  args:
    - '@user null'
  params:
    - *o210
    - *o3
kick_ulong_=_2:
  desc: Kicks a user.
  args:
    - userid null
    - userid
  params:
    - *o211
    - *o3
masskick_IUser[]_1:
  desc: Kicks multiple users.
  args:
    - '@user'
  params:
    - *o212
masskill_string_1:
  desc: Massbans users. Use this to ban multiple users at once. Blacklists them from the bot as well.
  args:
    - text
  params:
    - *o213
massnickprogress_noparams_2:
  desc: The thing used for addrole in commands to be able to parse it
  args:
    - ''
  params: [ ]
massnickstop_noparams_2:
  desc: Stops a mass nickname operation.
  args:
    - ''
  params: [ ]
dehoistall_=_2:
  desc: Dehoists all users in the guild by replacing special characters in their nicknames.
  args:
    - false
  params:
    - *o187
sanitizeall_noparams_2:
  desc: Sanitizes all users in the guild by replacing special characters in their usernames.
  args:
    - ''
  params: [ ]
dehoist_IGuildUser_2:
  desc: Dehoists a user by replacing special characters in their username.
  args:
    - '@user'
  params:
    - *o188
sanitize_IGuildUser_2:
  desc: Sanitizes a user by replacing special characters in their username.
  args:
    - '@user'
  params:
    - *o189
setwarnchannel_ITextChannel_2:
  desc: Sets the warnlog channel for the guild.
  args:
    - channel
  params:
    - *o190
timeout_StoopidTime_IGuildUser_=_2:
  desc: Timeouts a user for a specified amount of time.
  args:
    - time @user null
    - time
  params:
    - *o191
    - *o192
    - *o3
untimeout_IGuildUser_2:
  desc: Removes a timeout from a user.
  args:
    - '@user'
  params:
    - *o183
warn_IGuildUser_=_2:
  desc: Warns a user with an optional reason.
  args:
    - '@user null'
  params:
    - *o183
    - *o3
warnexpire_int_WarnExpireAction_2:
  desc: Sets the expiration time for warnings.
  args:
    - number options
  params:
    - *o193
    - *o194
warnlog_IGuildUser_2:
  desc: Gets the warnlog for a user.
  args:
    - '@user'
  params:
    - *o195
warnlog_ulong_3:
  desc: Gets the warnlog for the user who invoked the command.
  args:
    - userid
  params:
    - *o196
warnlogall_noparams_2:
  desc: Gets how many warnings each user has.
  args:
    - ''
  params: [ ]
warnclear_IGuildUser_=_2:
  desc: Clears a user's warnings. If an index is provided, clears only that warning.
  args:
    - '@user 0'
  params:
    - *o197
    - *o131
warnpunish_int_AddRole_IRole_=_2:
  desc: Sets a punishment for a certain number of warnings.
  args:
    - number addrole @role null
    - number addrole @role
    - addrole
  params:
    - *o184
    - *o198
    - *o199
    - *o3
warnpunish_int_PunishmentAction_=_3:
  desc: Sets a punishment for a certain number of warnings.
  args:
    - number punish null
    - number punish
  params:
    - *o184
    - *o200
    - *o3
warnpunish_int_3:
  desc: Removes a punishment for a certain number of warnings.
  args:
    - number
  params:
    - *o184
warnpunishlist_noparams_2:
  desc: Lists the warn punishments for the guild.
  args:
    - ''
  params: [ ]
ban_StoopidTime_StoopidTime_IGuildUser_=_2:
  desc: Bans a user for a specified amount of time.
  args:
    - time time @user null
    - time time
  params:
    - *o201
    - *o202
    - *o185
    - *o3
ban_IUser_=_3:
  desc: Bans a user.
  args:
    - '@user null'
  params:
    - *o203
    - *o3
ban_StoopidTime_IUser_=_3:
  desc: Bans a user for a specified amount of time.
  args:
    - time @user null
    - time @user
  params:
    - *o186
    - *o204
    - *o3
ban_IGuildUser_=_3:
  desc: Bans a user.
  args:
    - '@user null'
  params:
    - *o185
    - *o3
ban_StoopidTime_IGuildUser_=_3:
  desc: Bans a user with the specified reason and amount of days to purge messages.
  args:
    - time @user null
    - time
  params:
    - *o186
    - *o185
    - *o3
banmessage_=_2:
  desc: Sets the message that users get dmed with when they are banned.
  args:
    - null
  params:
    - *o3
banmsgreset_noparams_2:
  desc: Resets the ban message to the default message.
  args:
    - ''
  params: [ ]
banmessagetest_=_2:
  desc: Tests the ban message. Use it as a prank!
  args:
    - null
  params:
    - *o3
banmessagetest_StoopidTime_=_3:
  desc: Tests the ban message. Use it as a prank!
  args:
    - duration null
    - duration
  params:
    - *o205
    - *o3
unban_string_2:
  desc: Unbans a user.
  args:
    - text
  params:
    - *o206
unban_ulong_3:
  desc: Unbans a user.
  args:
    - userid
  params:
    - *o207
softban_IGuildUser_=_2:
  desc: Softbans a user. Use this to kick a user and delete their messages.
  args:
    - '@user null'
  params:
    - *o208
    - *o3
softban_ulong_=_3:
  desc: Softbans a user. Use this to kick a user and delete their messages.
  args:
    - userid null
    - userid
  params:
    - *o209
    - *o3
kick_IGuildUser_=_2:
  desc: Kicks a user.
  args:
    - '@user null'
  params:
    - *o210
    - *o3
kick_ulong_=_3:
  desc: Kicks a user.
  args:
    - userid null
    - userid
  params:
    - *o211
    - *o3
masskick_IUser[]_2:
  desc: Kicks multiple users.
  args:
    - '@user'
  params:
    - *o212
masskill_string_2:
  desc: Massbans users. Use this to ban multiple users at once. Blacklists them from the bot as well.
  args:
    - text
  params:
    - *o213
setmwarnchannel:
  desc: The addrole thing used for punishments
  args:
    - channel
  params:
    - &o216
      name: channel
      desc: The channel to set
      type: ITextChannel
      optional: false
mwarn:
  desc: Mini Warns a user.
  args:
    - '@user null'
    - '@user'
  params:
    - &o217
      name: user
      desc: The user to warn
      type: IGuildUser
      optional: false
    - *o3
mwarnexpire:
  desc: Sets the mini warn expire time.
  args:
    - number warnexpireaction.clear
    - number
  params:
    - &o218
      name: days
      desc: The number of days to set
      type: int
      optional: false
    - &o219
      name: WarnExpireAction.Clear
      desc: ''
      type: =
      optional: false
mwarnlog:
  desc: Gets the mini warnlog for a user.
  args:
    - number @user
  params:
    - &o214
      name: page
      desc: The page number
      type: int
      optional: false
    - *o195
mwarnlog_=:
  desc: Gets the mini warnlog for a user.
  args:
    - null
  params:
    - *o3
mwarnlog_int_ulong:
  desc: Gets the mini warnlog for a user.
  args:
    - number userid
  params:
    - *o214
    - &o215
      name: userId
      desc: The user id to get the warnlog for
      type: ulong
      optional: false
mwarnlog_ulong:
  desc: Gets the mini warnlog for a user.
  args:
    - userid
  params:
    - *o215
mwarnlogall:
  desc: Gets the mini warnlog for all users.
  args:
    - ''
  params: [ ]
mwarnclear:
  desc: Clears a user's mini warnings. If index is specified, clears only that warning.
  args:
    - '@user 0'
    - '@user'
  params:
    - &o220
      name: user
      desc: The user to clear the warnings for
      type: IGuildUser
      optional: false
    - *o131
mwarnclear_ulong_=:
  desc: Clears a user's mini warnings. If index is specified, clears only that warning.
  args:
    - userid 0
    - userid
  params:
    - &o221
      name: userId
      desc: The user id to clear the warnings for
      type: ulong
      optional: false
    - *o131
mwarnpunish:
  desc: Sets the mini warn punishment.
  args:
    - number addrole @role null
    - number addrole @role
    - addrole
  params:
    - *o184
    - &o222
      name: _
      desc: 'The addrole thing Possible values: AddRole'
      type: AddRole
      optional: false
    - &o223
      name: role
      desc: The role to add (used only if addrole is specified)
      type: IRole
      optional: false
    - *o3
mwarnpunish_int_PunishmentAction_=:
  desc: Sets the mini warn punishment.
  args:
    - number punish null
    - number punish
  params:
    - *o184
    - &o224
      name: punish
      desc: The punishment to set
      type: PunishmentAction
      optional: false
    - *o3
mwarnpunish_int:
  desc: Removes a mini warn punishment.
  args:
    - number
  params:
    - *o184
mwarnpunishlist:
  desc: Lists mini warn punishments.
  args:
    - ''
  params: [ ]
setmwarnchannel_ITextChannel:
  desc: The addrole thing used for punishments
  args:
    - channel
  params:
    - *o216
mwarn_IGuildUser_=:
  desc: Mini Warns a user.
  args:
    - '@user null'
    - '@user'
  params:
    - *o217
    - *o3
mwarnexpire_int_=:
  desc: Sets the mini warn expire time.
  args:
    - number warnexpireaction.clear
    - number
  params:
    - *o218
    - *o219
mwarnlog_int_IGuildUser:
  desc: Gets the mini warnlog for a user.
  args:
    - number @user
  params:
    - *o214
    - *o195
mwarnlog_=_1:
  desc: Gets the mini warnlog for a user.
  args:
    - null
  params:
    - *o3
mwarnlog_int_ulong_1:
  desc: Gets the mini warnlog for a user.
  args:
    - number userid
  params:
    - *o214
    - *o215
mwarnlog_ulong_1:
  desc: Gets the mini warnlog for a user.
  args:
    - userid
  params:
    - *o215
mwarnlogall_noparams:
  desc: Gets the mini warnlog for all users.
  args:
    - ''
  params: [ ]
mwarnclear_IGuildUser_=:
  desc: Clears a user's mini warnings. If index is specified, clears only that warning.
  args:
    - '@user 0'
    - '@user'
  params:
    - *o220
    - *o131
mwarnclear_ulong_=_1:
  desc: Clears a user's mini warnings. If index is specified, clears only that warning.
  args:
    - userid 0
    - userid
  params:
    - *o221
    - *o131
mwarnpunish_int_AddRole_IRole_=:
  desc: Sets the mini warn punishment.
  args:
    - number addrole @role null
    - number addrole @role
    - addrole
  params:
    - *o184
    - *o222
    - *o223
    - *o3
mwarnpunish_int_PunishmentAction_=_1:
  desc: Sets the mini warn punishment.
  args:
    - number punish null
    - number punish
  params:
    - *o184
    - *o224
    - *o3
mwarnpunish_int_1:
  desc: Removes a mini warn punishment.
  args:
    - number
  params:
    - *o184
mwarnpunishlist_noparams:
  desc: Lists mini warn punishments.
  args:
    - ''
  params: [ ]
setmwarnchannel_ITextChannel_1:
  desc: Module for managing mini warnings.
  args:
    - channel
  params:
    - *o216
mwarn_IGuildUser_=_1:
  desc: Mini Warns a user.
  args:
    - '@user null'
    - '@user'
  params:
    - *o217
    - *o3
mwarnexpire_int_=_1:
  desc: Sets the mini warn expire time.
  args:
    - number warnexpireaction.clear
    - number
  params:
    - *o218
    - *o219
mwarnlog_int_IGuildUser_1:
  desc: Gets the mini warnlog for a user.
  args:
    - number @user
  params:
    - *o214
    - *o195
mwarnlog_=_2:
  desc: Gets the mini warnlog for a user.
  args:
    - null
  params:
    - *o3
mwarnlog_int_ulong_2:
  desc: Gets the mini warnlog for a user.
  args:
    - number userid
  params:
    - *o214
    - *o215
mwarnlog_ulong_2:
  desc: Gets the mini warnlog for a user.
  args:
    - userid
  params:
    - *o215
mwarnlogall_noparams_1:
  desc: Gets the mini warnlog for all users.
  args:
    - ''
  params: [ ]
mwarnclear_IGuildUser_=_1:
  desc: Clears a user's mini warnings. If index is specified, clears only that warning.
  args:
    - '@user 0'
    - '@user'
  params:
    - *o220
    - *o131
mwarnclear_ulong_=_2:
  desc: Clears a user's mini warnings. If index is specified, clears only that warning.
  args:
    - userid 0
    - userid
  params:
    - *o221
    - *o131
mwarnpunish_int_AddRole_IRole_=_1:
  desc: Sets the mini warn punishment.
  args:
    - number addrole @role null
    - number addrole @role
    - addrole
  params:
    - *o184
    - *o222
    - *o223
    - *o3
mwarnpunish_int_PunishmentAction_=_2:
  desc: Sets the mini warn punishment.
  args:
    - number punish null
    - number punish
  params:
    - *o184
    - *o224
    - *o3
mwarnpunish_int_2:
  desc: Removes a mini warn punishment.
  args:
    - number
  params:
    - *o184
mwarnpunishlist_noparams_1:
  desc: Lists mini warn punishments.
  args:
    - ''
  params: [ ]
setmwarnchannel_ITextChannel_2:
  desc: The addrole thing used for punishments
  args:
    - channel
  params:
    - *o216
mwarn_IGuildUser_=_2:
  desc: Mini Warns a user.
  args:
    - '@user null'
    - '@user'
  params:
    - *o217
    - *o3
mwarnexpire_int_=_2:
  desc: Sets the mini warn expire time.
  args:
    - number warnexpireaction.clear
    - number
  params:
    - *o218
    - *o219
mwarnlog_int_IGuildUser_2:
  desc: Gets the mini warnlog for a user.
  args:
    - number @user
  params:
    - *o214
    - *o195
mwarnlog_=_3:
  desc: Gets the mini warnlog for a user.
  args:
    - null
  params:
    - *o3
mwarnlog_int_ulong_3:
  desc: Gets the mini warnlog for a user.
  args:
    - number userid
  params:
    - *o214
    - *o215
mwarnlog_ulong_3:
  desc: Gets the mini warnlog for a user.
  args:
    - userid
  params:
    - *o215
mwarnlogall_noparams_2:
  desc: Gets the mini warnlog for all users.
  args:
    - ''
  params: [ ]
mwarnclear_IGuildUser_=_2:
  desc: Clears a user's mini warnings. If index is specified, clears only that warning.
  args:
    - '@user 0'
    - '@user'
  params:
    - *o220
    - *o131
mwarnclear_ulong_=_3:
  desc: Clears a user's mini warnings. If index is specified, clears only that warning.
  args:
    - userid 0
    - userid
  params:
    - *o221
    - *o131
mwarnpunish_int_AddRole_IRole_=_2:
  desc: Sets the mini warn punishment.
  args:
    - number addrole @role null
    - number addrole @role
    - addrole
  params:
    - *o184
    - *o222
    - *o223
    - *o3
mwarnpunish_int_PunishmentAction_=_3:
  desc: Sets the mini warn punishment.
  args:
    - number punish null
    - number punish
  params:
    - *o184
    - *o224
    - *o3
mwarnpunish_int_3:
  desc: Removes a mini warn punishment.
  args:
    - number
  params:
    - *o184
mwarnpunishlist_noparams_2:
  desc: Lists mini warn punishments.
  args:
    - ''
  params: [ ]
multigreetadd:
  desc: The types of MultiGreets.
  args:
    - null
  params:
    - *o3
multigreetremove:
  desc: Removes a MultiGreet channel.
  args:
    - number
  params:
    - &o226
      name: id
      desc: The id of the MultiGreet to remove
      type: int
      optional: false
multigreetremove_ITextChannel:
  desc: Removes all MultiGreets from a channel.
  args:
    - channel
  params:
    - &o227
      name: channel
      desc: The channel to remove MultiGreets from
      type: ITextChannel
      optional: false
multigreetdelete:
  desc: Changes the delete time for a MultiGreet message.
  args:
    - number time
  params:
    - &o225
      name: id
      desc: The id of the MultiGreet to change
      type: int
      optional: false
    - &o228
      name: time
      desc: The time to delete the message after
      type: StoopidTime
      optional: false
multigreetdelete_int_int:
  desc: Changes the delete time for a MultiGreet message in seconds.
  args:
    - number number
  params:
    - *o225
    - &o229
      name: howlong
      desc: The time to delete the message after in seconds
      type: int
      optional: false
multigreetdisable:
  desc: Disables a MultiGreet.
  args:
    - number true|false
  params:
    - &o230
      name: num
      desc: The id of the MultiGreet to disable
      type: int
      optional: false
    - &o231
      name: enabled
      desc: Whether to disable the MultiGreet
      type: bool
      optional: false
multigreettype:
  desc: Changes the type of MultiGreet.
  args:
    - multigreet|randomgreet|off
    - multigreet
    - randomgreet
    - off
  params:
    - &o232
      name: types
      desc: 'The type of MultiGreet to set Possible values: MultiGreet, RandomGreet, Off'
      type: MultiGreetTypes
      optional: false
multigreetgreetbots:
  desc: Changes whether a MultiGreet greets bots.
  args:
    - number true|false
  params:
    - &o233
      name: num
      desc: The id of the MultiGreet to change
      type: int
      optional: false
    - &o234
      name: enabled
      desc: Whether to greet bots
      type: bool
      optional: false
multigreetwebhook:
  desc: Changes the webhook for a MultiGreet.
  args:
    - number null null
    - number
  params:
    - *o225
    - *o3
    - *o3
multigreetmessage:
  desc: Changes the message for a MultiGreet.
  args:
    - number null
    - number
  params:
    - *o225
    - *o3
multigreetlist:
  desc: Lists all MultiGreets.
  args:
    - ''
  params: [ ]
multigreetadd_=:
  desc: Executes all MultiGreets.
  args:
    - null
  params:
    - *o3
multigreetremove_int:
  desc: Removes a MultiGreet channel.
  args:
    - number
  params:
    - *o226
multigreetremove_ITextChannel_1:
  desc: Removes all MultiGreets from a channel.
  args:
    - channel
  params:
    - *o227
multigreetdelete_int_StoopidTime:
  desc: Changes the delete time for a MultiGreet message.
  args:
    - number time
  params:
    - *o225
    - *o228
multigreetdelete_int_int_1:
  desc: Changes the delete time for a MultiGreet message in seconds.
  args:
    - number number
  params:
    - *o225
    - *o229
multigreetdisable_int_bool:
  desc: Disables a MultiGreet.
  args:
    - number true|false
  params:
    - *o230
    - *o231
multigreettype_MultiGreetTypes:
  desc: Changes the type of MultiGreet.
  args:
    - multigreet|randomgreet|off
    - multigreet
    - randomgreet
    - off
  params:
    - *o232
multigreetgreetbots_int_bool:
  desc: Changes whether a MultiGreet greets bots.
  args:
    - number true|false
  params:
    - *o233
    - *o234
multigreetwebhook_int_=_=:
  desc: Changes the webhook for a MultiGreet.
  args:
    - number null null
    - number
  params:
    - *o225
    - *o3
    - *o3
multigreetmessage_int_=:
  desc: Changes the message for a MultiGreet.
  args:
    - number null
    - number
  params:
    - *o225
    - *o3
multigreetlist_noparams:
  desc: Lists all MultiGreets.
  args:
    - ''
  params: [ ]
multigreetadd_=_1:
  desc: Module for MultiGreets.
  args:
    - null
  params:
    - *o3
multigreetremove_int_1:
  desc: Removes a MultiGreet channel.
  args:
    - number
  params:
    - *o226
multigreetremove_ITextChannel_2:
  desc: Removes all MultiGreets from a channel.
  args:
    - channel
  params:
    - *o227
multigreetdelete_int_StoopidTime_1:
  desc: Changes the delete time for a MultiGreet message.
  args:
    - number time
  params:
    - *o225
    - *o228
multigreetdelete_int_int_2:
  desc: Changes the delete time for a MultiGreet message in seconds.
  args:
    - number number
  params:
    - *o225
    - *o229
multigreetdisable_int_bool_1:
  desc: Disables a MultiGreet.
  args:
    - number true|false
  params:
    - *o230
    - *o231
multigreettype_MultiGreetTypes_1:
  desc: Changes the type of MultiGreet.
  args:
    - multigreet|randomgreet|off
    - multigreet
    - randomgreet
    - off
  params:
    - *o232
multigreetgreetbots_int_bool_1:
  desc: Changes whether a MultiGreet greets bots.
  args:
    - number true|false
  params:
    - *o233
    - *o234
multigreetwebhook_int_=_=_1:
  desc: Changes the webhook for a MultiGreet.
  args:
    - number null null
    - number
  params:
    - *o225
    - *o3
    - *o3
multigreetmessage_int_=_1:
  desc: Changes the message for a MultiGreet.
  args:
    - number null
    - number
  params:
    - *o225
    - *o3
multigreetlist_noparams_1:
  desc: Lists all MultiGreets.
  args:
    - ''
  params: [ ]
multigreetadd_=_2:
  desc: Executes all MultiGreets.
  args:
    - null
  params:
    - *o3
multigreetremove_int_2:
  desc: Removes a MultiGreet channel.
  args:
    - number
  params:
    - *o226
multigreetremove_ITextChannel_3:
  desc: Removes all MultiGreets from a channel.
  args:
    - channel
  params:
    - *o227
multigreetdelete_int_StoopidTime_2:
  desc: Changes the delete time for a MultiGreet message.
  args:
    - number time
  params:
    - *o225
    - *o228
multigreetdelete_int_int_3:
  desc: Changes the delete time for a MultiGreet message in seconds.
  args:
    - number number
  params:
    - *o225
    - *o229
multigreetdisable_int_bool_2:
  desc: Disables a MultiGreet.
  args:
    - number true|false
  params:
    - *o230
    - *o231
multigreettype_MultiGreetTypes_2:
  desc: Changes the type of MultiGreet.
  args:
    - multigreet|randomgreet|off
    - multigreet
    - randomgreet
    - off
  params:
    - *o232
multigreetgreetbots_int_bool_2:
  desc: Changes whether a MultiGreet greets bots.
  args:
    - number true|false
  params:
    - *o233
    - *o234
multigreetwebhook_int_=_=_2:
  desc: Changes the webhook for a MultiGreet.
  args:
    - number null null
    - number
  params:
    - *o225
    - *o3
    - *o3
multigreetmessage_int_=_2:
  desc: Changes the message for a MultiGreet.
  args:
    - number null
    - number
  params:
    - *o225
    - *o3
multigreetlist_noparams_2:
  desc: Lists all MultiGreets.
  args:
    - ''
  params: [ ]
bass:
  desc: Sets the bass boost level for the current track.
  args:
    - 0
  params:
    - *o131
nightcore:
  desc: Toggles the nightcore effect for the current track.
  args:
    - true
  params:
    - &o235
      name: true
      desc: ''
      type: =
      optional: false
vaporwave:
  desc: Toggles the vaporwave effect for the current track.
  args:
    - true
  params:
    - *o235
karaoke:
  desc: Applies or removes a karaoke filter that attempts to remove vocals from the track.
  args:
    - true
  params:
    - *o235
tremolo:
  desc: Applies or removes a tremolo filter that creates a wavering effect in volume.
  args:
    - true
  params:
    - *o235
vibrato:
  desc: Applies or removes a vibrato filter that creates a wavering effect in pitch.
  args:
    - true
  params:
    - *o235
eightd:
  desc: Applies an 8D audio effect that rotates the audio around the listener.
  args:
    - true
  params:
    - *o235
distortion:
  desc: Applies a distortion effect to the audio.
  args:
    - true
  params:
    - *o235
stereowiden:
  desc: Applies a stereo widening effect to enhance the spatial soundstage.
  args:
    - true
  params:
    - *o235
resetfilters:
  desc: Removes all active audio filters from the current track.
  args:
    - ''
  params: [ ]
activefilters:
  desc: Displays all currently active audio filters.
  args:
    - ''
  params: [ ]
bass_=:
  desc: Sets the bass boost level for the current track.
  args:
    - 0
  params:
    - *o131
nightcore_=:
  desc: Toggles the nightcore effect for the current track.
  args:
    - true
  params:
    - *o235
vaporwave_=:
  desc: Toggles the vaporwave effect for the current track.
  args:
    - true
  params:
    - *o235
karaoke_=:
  desc: Execute the Karaoke command
  args:
    - true
  params:
    - *o235
tremolo_=:
  desc: Execute the Tremolo command
  args:
    - true
  params:
    - *o235
vibrato_=:
  desc: Execute the Vibrato command
  args:
    - true
  params:
    - *o235
eightd_=:
  desc: Execute the EightD command
  args:
    - true
  params:
    - *o235
distortion_=:
  desc: Applies a distortion effect to the audio.
  args:
    - true
  params:
    - *o235
stereowiden_=:
  desc: Applies a stereo widening effect to enhance the spatial soundstage.
  args:
    - true
  params:
    - *o235
resetfilters_noparams:
  desc: Removes all active audio filters from the current track.
  args:
    - ''
  params: [ ]
activefilters_noparams:
  desc: Execute the ActiveFilters command
  args:
    - ''
  params: [ ]
bass_=_1:
  desc: Sets various audio effects for the player
  args:
    - 0
  params:
    - *o131
nightcore_=_1:
  desc: Toggles the nightcore effect for the current track.
  args:
    - true
  params:
    - *o235
vaporwave_=_1:
  desc: Toggles the vaporwave effect for the current track.
  args:
    - true
  params:
    - *o235
karaoke_=_1:
  desc: Applies or removes a karaoke filter that attempts to remove vocals from the track.
  args:
    - true
  params:
    - *o235
tremolo_=_1:
  desc: Applies or removes a tremolo filter that creates a wavering effect in volume.
  args:
    - true
  params:
    - *o235
vibrato_=_1:
  desc: Applies or removes a vibrato filter that creates a wavering effect in pitch.
  args:
    - true
  params:
    - *o235
eightd_=_1:
  desc: Applies an 8D audio effect that rotates the audio around the listener.
  args:
    - true
  params:
    - *o235
distortion_=_1:
  desc: Applies a distortion effect to the audio.
  args:
    - true
  params:
    - *o235
stereowiden_=_1:
  desc: Applies a stereo widening effect to enhance the spatial soundstage.
  args:
    - true
  params:
    - *o235
resetfilters_noparams_1:
  desc: Removes all active audio filters from the current track.
  args:
    - ''
  params: [ ]
activefilters_noparams_1:
  desc: Displays all currently active audio filters.
  args:
    - ''
  params: [ ]
bass_=_2:
  desc: Sets the bass boost level for the current track.
  args:
    - 0
  params:
    - *o131
nightcore_=_2:
  desc: Toggles the nightcore effect for the current track.
  args:
    - true
  params:
    - *o235
vaporwave_=_2:
  desc: Toggles the vaporwave effect for the current track.
  args:
    - true
  params:
    - *o235
karaoke_=_2:
  desc: Execute the Karaoke command
  args:
    - true
  params:
    - *o235
tremolo_=_2:
  desc: Execute the Tremolo command
  args:
    - true
  params:
    - *o235
vibrato_=_2:
  desc: Execute the Vibrato command
  args:
    - true
  params:
    - *o235
eightd_=_2:
  desc: Execute the EightD command
  args:
    - true
  params:
    - *o235
distortion_=_2:
  desc: Applies a distortion effect to the audio.
  args:
    - true
  params:
    - *o235
stereowiden_=_2:
  desc: Applies a stereo widening effect to enhance the spatial soundstage.
  args:
    - true
  params:
    - *o235
resetfilters_noparams_2:
  desc: Removes all active audio filters from the current track.
  args:
    - ''
  params: [ ]
activefilters_noparams_2:
  desc: Execute the ActiveFilters command
  args:
    - ''
  params: [ ]
join:
  desc: A module containing music commands.
  args:
    - ''
  params: [ ]
leave:
  desc: Disconnects the bot from the voice channel.
  args:
    - ''
  params: [ ]
clearqueue:
  desc: Clears the music queue.
  args:
    - ''
  params: [ ]
play:
  desc: Plays a specified track in the current voice channel.
  args:
    - number
  params:
    - &o236
      name: queueNumber
      desc: The queue number to play.
      type: int
      optional: false
play_string:
  desc: Plays music from various sources including YouTube, Spotify, and direct searches. Supports tracks, playlists, and albums from supported platforms.
  args:
    - text
  params:
    - &o237
      name: query
      desc: URL or search query for the music to play
      type: string
      optional: false
pause:
  desc: Pauses or unpauses the player based on the current state.
  args:
    - ''
  params: [ ]
nowplaying:
  desc: Gets the now playing track, if any.
  args:
    - ''
  params: [ ]
songremove:
  desc: Removes the selected track from the queue. If the selected track is the current track, it will be skipped. If next track is not available, the player will stop.
  args:
    - number
  params:
    - &o238
      name: queueNumber
      desc: The queue number to remove.
      type: int
      optional: false
movesong:
  desc: Moves a song in the queue to a new position.
  args:
    - number number
  params:
    - &o239
      name: from
      desc: The current position of the song.
      type: int
      optional: false
    - &o240
      name: to
      desc: The new position of the song.
      type: int
      optional: false
volume:
  desc: Sets the players volume
  args:
    - number
  params:
    - &o241
      name: volume
      desc: The volume to set
      type: int
      optional: false
seek:
  desc: Seeks to a specific position in the current track.
  args:
    - text
  params:
    - &o242
      name: timeSpan
      desc: Time to seek to in format mm:ss
      type: string
      optional: false
voteskip:
  desc: Initiates or participates in a vote to skip the current track.
  args:
    - ''
  params: [ ]
setdjrole:
  desc: Sets the DJ role for music commands that require elevated permissions.
  args:
    - null
  params:
    - *o3
saveplaylist:
  desc: Saves the current queue as a named playlist.
  args:
    - text
  params:
    - &o243
      name: name
      desc: The name to save the playlist as.
      type: string
      optional: false
loadplaylist:
  desc: Loads a previously saved playlist into the queue.
  args:
    - text false
    - text
  params:
    - &o244
      name: name
      desc: The name of the playlist to load.
      type: string
      optional: false
    - *o187
playlists:
  desc: Lists all saved playlists for the guild.
  args:
    - ''
  params: [ ]
deleteplaylist:
  desc: Removes a saved playlist.
  args:
    - text
  params:
    - &o245
      name: name
      desc: The name of the playlist to remove.
      type: string
      optional: false
search:
  desc: Searches for tracks without automatically playing them.
  args:
    - text
  params:
    - &o246
      name: query
      desc: The search query
      type: string
      optional: false
shuffle:
  desc: Shuffles the current music queue.
  args:
    - ''
  params: [ ]
skip:
  desc: Skips to the next track.
  args:
    - ''
  params: [ ]
queue:
  desc: The music queue.
  args:
    - ''
  params: [ ]
autoplay:
  desc: Sets the autoplay amount in the guild. Uses spotify api so client secret and id must be valid.
  args:
    - number
  params:
    - &o247
      name: amount
      desc: The amount of tracks to autoplay. Max of 5
      type: int
      optional: false
musicsettings:
  desc: Gets the guilds current settings for music.
  args:
    - ''
  params: [ ]
setmusicchannel:
  desc: Sets the channel where music events will be sent.
  args:
    - null
  params:
    - *o3
loop:
  desc: Sets if the bot should loop and how.
  args:
    - repeattype
  params:
    - &o248
      name: repeatType
      desc: The repeat type.
      type: PlayerRepeatType
      optional: false
join_noparams:
  desc: A module containing music commands.
  args:
    - ''
  params: [ ]
leave_noparams:
  desc: Disconnects the bot from the voice channel.
  args:
    - ''
  params: [ ]
clearqueue_noparams:
  desc: Clears the music queue.
  args:
    - ''
  params: [ ]
play_int:
  desc: Plays a specified track in the current voice channel.
  args:
    - number
  params:
    - *o236
play_string_1:
  desc: Plays music from various sources including YouTube, Spotify, and direct searches. Supports tracks, playlists, and albums from supported platforms.
  args:
    - text
  params:
    - *o237
pause_noparams:
  desc: Pauses or unpauses the player based on the current state.
  args:
    - ''
  params: [ ]
nowplaying_noparams:
  desc: Gets the now playing track, if any.
  args:
    - ''
  params: [ ]
songremove_int:
  desc: Removes the selected track from the queue. If the selected track is the current track, it will be skipped. If next track is not available, the player will stop.
  args:
    - number
  params:
    - *o238
movesong_int_int:
  desc: Moves a song in the queue to a new position.
  args:
    - number number
  params:
    - *o239
    - *o240
volume_int:
  desc: Sets the players volume
  args:
    - number
  params:
    - *o241
seek_string:
  desc: Seeks to a specific position in the current track.
  args:
    - text
  params:
    - *o242
voteskip_noparams:
  desc: Initiates or participates in a vote to skip the current track.
  args:
    - ''
  params: [ ]
setdjrole_=:
  desc: Sets the DJ role for music commands that require elevated permissions.
  args:
    - null
  params:
    - *o3
saveplaylist_string:
  desc: Saves the current queue as a named playlist.
  args:
    - text
  params:
    - *o243
loadplaylist_string_=:
  desc: Loads a previously saved playlist into the queue.
  args:
    - text false
    - text
  params:
    - *o244
    - *o187
playlists_noparams:
  desc: Lists all saved playlists for the guild.
  args:
    - ''
  params: [ ]
deleteplaylist_string:
  desc: Removes a saved playlist.
  args:
    - text
  params:
    - *o245
search_string:
  desc: Searches for tracks without automatically playing them.
  args:
    - text
  params:
    - *o246
shuffle_noparams:
  desc: Shuffles the current music queue.
  args:
    - ''
  params: [ ]
skip_noparams:
  desc: Skips to the next track.
  args:
    - ''
  params: [ ]
queue_noparams:
  desc: The music queue.
  args:
    - ''
  params: [ ]
autoplay_int:
  desc: Sets the autoplay amount in the guild. Uses spotify api so client secret and id must be valid.
  args:
    - number
  params:
    - *o247
musicsettings_noparams:
  desc: Gets the guilds current settings for music.
  args:
    - ''
  params: [ ]
setmusicchannel_=:
  desc: Sets the channel where music events will be sent.
  args:
    - null
  params:
    - *o3
loop_PlayerRepeatType:
  desc: Sets if the bot should loop and how.
  args:
    - repeattype
  params:
    - *o248
redditnsfw:
  desc: Command to retrieve NSFW content from a specified subreddit.
  args:
    - text
  params:
    - &o255
      name: subreddit
      desc: The name of the subreddit from which to fetch the content.
      type: string
      optional: false
nhentai:
  desc: Command to fetch and display information about a manga from the NHentai website.
  args:
    - number
  params:
    - &o256
      name: num
      desc: The identification number of the manga to fetch.
      type: int
      optional: false
hentaigif:
  desc: Command to fetch and display NSFW content from the "HENTAI_GIF" subreddit.
  args:
    - ''
  params: [ ]
pussy:
  desc: Command to fetch and display NSFW content from the "pussy" subreddit.
  args:
    - ''
  params: [ ]
anal:
  desc: Command to fetch and display NSFW content from the "anal" subreddit.
  args:
    - ''
  params: [ ]
porn:
  desc: Command to fetch and display NSFW content from the "porn" subreddit.
  args:
    - ''
  params: [ ]
bondage:
  desc: Command to fetch and display NSFW content from the "bondage" subreddit.
  args:
    - ''
  params: [ ]
nhentaisearch:
  desc: Command to search for hentai manga on NHentai based on the provided search query.
  args:
    - text
  params:
    - &o249
      name: search
      desc: The search query for NHentai.
      type: string
      optional: false
nhentaisearch_string_string:
  desc: Command to search for hentai manga on NHentai based on the provided search query and blacklist.
  args:
    - text text
  params:
    - *o249
    - &o252
      name: blacklist
      desc: The blacklist for NHentai search.
      type: string
      optional: false
nhentaisearch_string_int:
  desc: Command to search for hentai manga on NHentai based on the provided search query and page number.
  args:
    - text number
  params:
    - *o249
    - &o250
      name: page
      desc: The page number for NHentai search.
      type: int
      optional: false
nhentaisearch_string_int_string:
  desc: Command to search for hentai manga on NHentai based on the provided search query, page number, and type.
  args:
    - text number text
  params:
    - *o249
    - *o250
    - &o251
      name: type
      desc: The type of NHentai search.
      type: string
      optional: false
nhentaisearch_string_int_string_string:
  desc: Command to search for hentai manga on NHentai based on the provided search query, page number, type, and blacklist.
  args:
    - text number text text
  params:
    - *o249
    - *o250
    - *o251
    - *o252
autohentai:
  desc: Command to start or stop automatic posting of NSFW content at specified intervals in the current guild channel.
  args:
    - 0 null
  params:
    - *o131
    - *o3
autoboobs:
  desc: Command to start or stop automatic posting of NSFW content from the "boobs" subreddit at specified intervals in the current guild channel.
  args:
    - 0
  params:
    - *o131
autobutts:
  desc: Command to start or stop automatic posting of NSFW content from the "butts" subreddit at specified intervals in the current guild channel or direct messages.
  args:
    - 0
  params:
    - *o131
hentai:
  desc: Command to fetch and display NSFW content from the "hentai" subreddit with optional tags in the current guild channel or direct messages.
  args:
    - text
  params:
    - &o253
      name: tags
      desc: Optional tags to filter the NSFW content from each source.
      type: string[]
      optional: false
hentaibomb:
  desc: Command to initiate a "hentai bomb" by fetching and displaying NSFW content from multiple sources with optional tags in the current guild channel or direct messages.
  args:
    - text
  params:
    - *o253
pornbomb:
  desc: Command to initiate a "porn bomb" by fetching and displaying NSFW content from a RealBooru source with optional tags in the current guild channel or direct messages.
  args:
    - text
  params:
    - &o257
      name: tags
      desc: Optional tags to filter the NSFW content from the RealBooru source.
      type: string[]
      optional: false
yandere:
  desc: Command to fetch and display NSFW content from the Yandere image board with optional tags in the current guild channel or direct messages.
  args:
    - text
  params:
    - &o258
      name: tags
      desc: Optional tags to filter the NSFW content from the Konachan image board.
      type: string[]
      optional: false
konachan:
  desc: Command to fetch and display NSFW content from the Konachan image board with optional tags in the current guild channel or direct messages.
  args:
    - text
  params:
    - &o259
      name: tags
      desc: Optional tags to filter the NSFW content from the Sankaku image board.
      type: string[]
      optional: false
sankaku:
  desc: Command to fetch and display NSFW content from the Sankaku image board with optional tags in the current guild channel or direct messages.
  args:
    - text
  params:
    - &o260
      name: tags
      desc: Optional tags to filter the NSFW content from the E621 image board.
      type: string[]
      optional: false
e621:
  desc: Command to fetch and display NSFW content from the E621 image board with optional tags in the current guild channel or direct messages.
  args:
    - text
  params:
    - &o261
      name: tags
      desc: Optional tags to filter the NSFW content from the Rule34 image board.
      type: string[]
      optional: false
rule34:
  desc: Command to fetch and display NSFW content from the Rule34 image board with optional tags in the current guild channel or direct messages.
  args:
    - text
  params:
    - &o262
      name: tags
      desc: Optional tags to filter the NSFW content from the Danbooru image board.
      type: string[]
      optional: false
danbooru:
  desc: Command to fetch and display NSFW content from the Danbooru image board with optional tags in the current guild channel or direct messages.
  args:
    - text
  params:
    - &o263
      name: tags
      desc: Optional tags to filter the NSFW content from the Gelbooru image board.
      type: string[]
      optional: false
gelbooru:
  desc: Command to fetch and display NSFW content from the Gelbooru image board with optional tags in the current guild channel or direct messages.
  args:
    - text
  params:
    - &o264
      name: tags
      desc: Optional tags to filter the NSFW content from the Derpibooru image board.
      type: string[]
      optional: false
derpibooru:
  desc: Command to fetch and display NSFW content from the Derpibooru image board with optional tags in the current guild channel or direct messages.
  args:
    - text
  params:
    - &o265
      name: tags
      desc: Optional tags to filter the NSFW content from the Safebooru image board.
      type: string[]
      optional: false
safebooru:
  desc: Command to fetch and display NSFW content from the Safebooru image board with optional tags in the current guild channel or direct messages.
  args:
    - text
  params:
    - &o254
      name: tags
      desc: Optional tags to filter the NSFW content from the Realbooru image board.
      type: string[]
      optional: false
realbooru:
  desc: Command to fetch and display NSFW content from the Realbooru image board with optional tags in the current guild channel or direct messages.
  args:
    - text
  params:
    - *o254
boobs:
  desc: Command to fetch and display NSFW content from the "boobs" subreddit in the current guild channel or direct messages.
  args:
    - ''
  params: [ ]
butts:
  desc: Command to fetch and display NSFW content from the "ass" subreddit in the current guild channel or direct messages.
  args:
    - ''
  params: [ ]
nsfwtagblacklist:
  desc: Command to manage the blacklist of NSFW tags in the current guild.
  args:
    - null
  params:
    - *o3
redditnsfw_string:
  desc: Command to retrieve NSFW content from a specified subreddit.
  args:
    - text
  params:
    - *o255
nhentai_int:
  desc: Command to fetch and display information about a manga from the NHentai website.
  args:
    - number
  params:
    - *o256
hentaigif_noparams:
  desc: Command to fetch and display NSFW content from the "HENTAI_GIF" subreddit.
  args:
    - ''
  params: [ ]
pussy_noparams:
  desc: Command to fetch and display NSFW content from the "pussy" subreddit.
  args:
    - ''
  params: [ ]
anal_noparams:
  desc: Command to fetch and display NSFW content from the "anal" subreddit.
  args:
    - ''
  params: [ ]
porn_noparams:
  desc: Command to fetch and display NSFW content from the "porn" subreddit.
  args:
    - ''
  params: [ ]
bondage_noparams:
  desc: Command to fetch and display NSFW content from the "bondage" subreddit.
  args:
    - ''
  params: [ ]
nhentaisearch_string:
  desc: Command to search for hentai manga on NHentai based on the provided search query.
  args:
    - text
  params:
    - *o249
nhentaisearch_string_string_1:
  desc: Command to search for hentai manga on NHentai based on the provided search query and blacklist.
  args:
    - text text
  params:
    - *o249
    - *o252
nhentaisearch_string_int_1:
  desc: Command to search for hentai manga on NHentai based on the provided search query and page number.
  args:
    - text number
  params:
    - *o249
    - *o250
nhentaisearch_string_int_string_1:
  desc: Command to search for hentai manga on NHentai based on the provided search query, page number, and type.
  args:
    - text number text
  params:
    - *o249
    - *o250
    - *o251
nhentaisearch_string_int_string_string_1:
  desc: Execute the NHentaiSearch command
  args:
    - text number text text
  params:
    - *o249
    - *o250
    - *o251
    - *o252
autohentai_=_=:
  desc: Execute the AutoHentai command
  args:
    - 0 null
  params:
    - *o131
    - *o3
autoboobs_=:
  desc: Command to start or stop automatic posting of NSFW content from the "boobs" subreddit at specified intervals in the current guild channel.
  args:
    - 0
  params:
    - *o131
autobutts_=:
  desc: Command to start or stop automatic posting of NSFW content from the "butts" subreddit at specified intervals in the current guild channel or direct messages.
  args:
    - 0
  params:
    - *o131
hentai_string[]:
  desc: Command to fetch and display NSFW content from the "hentai" subreddit with optional tags in the current guild channel or direct messages.
  args:
    - text
  params:
    - *o253
hentaibomb_string[]:
  desc: Command to initiate a "hentai bomb" by fetching and displaying NSFW content from multiple sources with optional tags in the current guild channel or direct messages.
  args:
    - text
  params:
    - *o253
pornbomb_string[]:
  desc: Command to initiate a "porn bomb" by fetching and displaying NSFW content from a RealBooru source with optional tags in the current guild channel or direct messages.
  args:
    - text
  params:
    - *o257
yandere_string[]:
  desc: Command to fetch and display NSFW content from the Yandere image board with optional tags in the current guild channel or direct messages.
  args:
    - text
  params:
    - *o258
konachan_string[]:
  desc: Command to fetch and display NSFW content from the Konachan image board with optional tags in the current guild channel or direct messages.
  args:
    - text
  params:
    - *o259
sankaku_string[]:
  desc: Command to fetch and display NSFW content from the Sankaku image board with optional tags in the current guild channel or direct messages.
  args:
    - text
  params:
    - *o260
e621_string[]:
  desc: Command to fetch and display NSFW content from the E621 image board with optional tags in the current guild channel or direct messages.
  args:
    - text
  params:
    - *o261
rule34_string[]:
  desc: Command to fetch and display NSFW content from the Rule34 image board with optional tags in the current guild channel or direct messages.
  args:
    - text
  params:
    - *o262
danbooru_string[]:
  desc: Command to fetch and display NSFW content from the Danbooru image board with optional tags in the current guild channel or direct messages.
  args:
    - text
  params:
    - *o263
gelbooru_string[]:
  desc: Command to fetch and display NSFW content from the Gelbooru image board with optional tags in the current guild channel or direct messages.
  args:
    - text
  params:
    - *o264
derpibooru_string[]:
  desc: Command to fetch and display NSFW content from the Derpibooru image board with optional tags in the current guild channel or direct messages.
  args:
    - text
  params:
    - *o265
safebooru_string[]:
  desc: Command to fetch and display NSFW content from the Safebooru image board with optional tags in the current guild channel or direct messages.
  args:
    - text
  params:
    - *o254
realbooru_string[]:
  desc: Command to fetch and display NSFW content from the Realbooru image board with optional tags in the current guild channel or direct messages.
  args:
    - text
  params:
    - *o254
boobs_noparams:
  desc: Command to fetch and display NSFW content from the "boobs" subreddit in the current guild channel or direct messages.
  args:
    - ''
  params: [ ]
butts_noparams:
  desc: Command to fetch and display NSFW content from the "ass" subreddit in the current guild channel or direct messages.
  args:
    - ''
  params: [ ]
nsfwtagblacklist_=:
  desc: Command to manage the blacklist of NSFW tags in the current guild.
  args:
    - null
  params:
    - *o3
redditnsfw_string_1:
  desc: The most used module in Mewdeko, nsfw.
  args:
    - text
  params:
    - *o255
nhentai_int_1:
  desc: Command to fetch and display information about a manga from the NHentai website.
  args:
    - number
  params:
    - *o256
hentaigif_noparams_1:
  desc: Command to fetch and display NSFW content from the "HENTAI_GIF" subreddit.
  args:
    - ''
  params: [ ]
pussy_noparams_1:
  desc: Command to fetch and display NSFW content from the "pussy" subreddit.
  args:
    - ''
  params: [ ]
anal_noparams_1:
  desc: Command to fetch and display NSFW content from the "anal" subreddit.
  args:
    - ''
  params: [ ]
porn_noparams_1:
  desc: Command to fetch and display NSFW content from the "porn" subreddit.
  args:
    - ''
  params: [ ]
bondage_noparams_1:
  desc: Command to fetch and display NSFW content from the "bondage" subreddit.
  args:
    - ''
  params: [ ]
nhentaisearch_string_1:
  desc: Command to search for hentai manga on NHentai based on the provided search query.
  args:
    - text
  params:
    - *o249
nhentaisearch_string_string_2:
  desc: Command to search for hentai manga on NHentai based on the provided search query and blacklist.
  args:
    - text text
  params:
    - *o249
    - *o252
nhentaisearch_string_int_2:
  desc: Command to search for hentai manga on NHentai based on the provided search query and page number.
  args:
    - text number
  params:
    - *o249
    - *o250
nhentaisearch_string_int_string_2:
  desc: Command to search for hentai manga on NHentai based on the provided search query, page number, and type.
  args:
    - text number text
  params:
    - *o249
    - *o250
    - *o251
nhentaisearch_string_int_string_string_2:
  desc: Command to search for hentai manga on NHentai based on the provided search query, page number, type, and blacklist.
  args:
    - text number text text
  params:
    - *o249
    - *o250
    - *o251
    - *o252
autohentai_=_=_1:
  desc: Command to start or stop automatic posting of NSFW content at specified intervals in the current guild channel.
  args:
    - 0 null
  params:
    - *o131
    - *o3
autoboobs_=_1:
  desc: Command to start or stop automatic posting of NSFW content from the "boobs" subreddit at specified intervals in the current guild channel.
  args:
    - 0
  params:
    - *o131
autobutts_=_1:
  desc: Command to start or stop automatic posting of NSFW content from the "butts" subreddit at specified intervals in the current guild channel or direct messages.
  args:
    - 0
  params:
    - *o131
hentai_string[]_1:
  desc: Command to fetch and display NSFW content from the "hentai" subreddit with optional tags in the current guild channel or direct messages.
  args:
    - text
  params:
    - *o253
hentaibomb_string[]_1:
  desc: Command to initiate a "hentai bomb" by fetching and displaying NSFW content from multiple sources with optional tags in the current guild channel or direct messages.
  args:
    - text
  params:
    - *o253
pornbomb_string[]_1:
  desc: Command to initiate a "porn bomb" by fetching and displaying NSFW content from a RealBooru source with optional tags in the current guild channel or direct messages.
  args:
    - text
  params:
    - *o257
yandere_string[]_1:
  desc: Command to fetch and display NSFW content from the Yandere image board with optional tags in the current guild channel or direct messages.
  args:
    - text
  params:
    - *o258
konachan_string[]_1:
  desc: Command to fetch and display NSFW content from the Konachan image board with optional tags in the current guild channel or direct messages.
  args:
    - text
  params:
    - *o259
sankaku_string[]_1:
  desc: Command to fetch and display NSFW content from the Sankaku image board with optional tags in the current guild channel or direct messages.
  args:
    - text
  params:
    - *o260
e621_string[]_1:
  desc: Command to fetch and display NSFW content from the E621 image board with optional tags in the current guild channel or direct messages.
  args:
    - text
  params:
    - *o261
rule34_string[]_1:
  desc: Command to fetch and display NSFW content from the Rule34 image board with optional tags in the current guild channel or direct messages.
  args:
    - text
  params:
    - *o262
danbooru_string[]_1:
  desc: Command to fetch and display NSFW content from the Danbooru image board with optional tags in the current guild channel or direct messages.
  args:
    - text
  params:
    - *o263
gelbooru_string[]_1:
  desc: Command to fetch and display NSFW content from the Gelbooru image board with optional tags in the current guild channel or direct messages.
  args:
    - text
  params:
    - *o264
derpibooru_string[]_1:
  desc: Command to fetch and display NSFW content from the Derpibooru image board with optional tags in the current guild channel or direct messages.
  args:
    - text
  params:
    - *o265
safebooru_string[]_1:
  desc: Command to fetch and display NSFW content from the Safebooru image board with optional tags in the current guild channel or direct messages.
  args:
    - text
  params:
    - *o254
realbooru_string[]_1:
  desc: Command to fetch and display NSFW content from the Realbooru image board with optional tags in the current guild channel or direct messages.
  args:
    - text
  params:
    - *o254
boobs_noparams_1:
  desc: Command to fetch and display NSFW content from the "boobs" subreddit in the current guild channel or direct messages.
  args:
    - ''
  params: [ ]
butts_noparams_1:
  desc: Command to fetch and display NSFW content from the "ass" subreddit in the current guild channel or direct messages.
  args:
    - ''
  params: [ ]
nsfwtagblacklist_=_1:
  desc: Command to manage the blacklist of NSFW tags in the current guild.
  args:
    - null
  params:
    - *o3
redditnsfw_string_2:
  desc: Command to retrieve NSFW content from a specified subreddit.
  args:
    - text
  params:
    - *o255
nhentai_int_2:
  desc: Command to fetch and display information about a manga from the NHentai website.
  args:
    - number
  params:
    - *o256
hentaigif_noparams_2:
  desc: Command to fetch and display NSFW content from the "HENTAI_GIF" subreddit.
  args:
    - ''
  params: [ ]
pussy_noparams_2:
  desc: Command to fetch and display NSFW content from the "pussy" subreddit.
  args:
    - ''
  params: [ ]
anal_noparams_2:
  desc: Command to fetch and display NSFW content from the "anal" subreddit.
  args:
    - ''
  params: [ ]
porn_noparams_2:
  desc: Command to fetch and display NSFW content from the "porn" subreddit.
  args:
    - ''
  params: [ ]
bondage_noparams_2:
  desc: Command to fetch and display NSFW content from the "bondage" subreddit.
  args:
    - ''
  params: [ ]
nhentaisearch_string_2:
  desc: Command to search for hentai manga on NHentai based on the provided search query.
  args:
    - text
  params:
    - *o249
nhentaisearch_string_string_3:
  desc: Command to search for hentai manga on NHentai based on the provided search query and blacklist.
  args:
    - text text
  params:
    - *o249
    - *o252
nhentaisearch_string_int_3:
  desc: Command to search for hentai manga on NHentai based on the provided search query and page number.
  args:
    - text number
  params:
    - *o249
    - *o250
nhentaisearch_string_int_string_3:
  desc: Command to search for hentai manga on NHentai based on the provided search query, page number, and type.
  args:
    - text number text
  params:
    - *o249
    - *o250
    - *o251
nhentaisearch_string_int_string_string_3:
  desc: Execute the NHentaiSearch command
  args:
    - text number text text
  params:
    - *o249
    - *o250
    - *o251
    - *o252
autohentai_=_=_2:
  desc: Execute the AutoHentai command
  args:
    - 0 null
  params:
    - *o131
    - *o3
autoboobs_=_2:
  desc: Command to start or stop automatic posting of NSFW content from the "boobs" subreddit at specified intervals in the current guild channel.
  args:
    - 0
  params:
    - *o131
autobutts_=_2:
  desc: Command to start or stop automatic posting of NSFW content from the "butts" subreddit at specified intervals in the current guild channel or direct messages.
  args:
    - 0
  params:
    - *o131
hentai_string[]_2:
  desc: Command to fetch and display NSFW content from the "hentai" subreddit with optional tags in the current guild channel or direct messages.
  args:
    - text
  params:
    - *o253
hentaibomb_string[]_2:
  desc: Command to initiate a "hentai bomb" by fetching and displaying NSFW content from multiple sources with optional tags in the current guild channel or direct messages.
  args:
    - text
  params:
    - *o253
pornbomb_string[]_2:
  desc: Command to initiate a "porn bomb" by fetching and displaying NSFW content from a RealBooru source with optional tags in the current guild channel or direct messages.
  args:
    - text
  params:
    - *o257
yandere_string[]_2:
  desc: Command to fetch and display NSFW content from the Yandere image board with optional tags in the current guild channel or direct messages.
  args:
    - text
  params:
    - *o258
konachan_string[]_2:
  desc: Command to fetch and display NSFW content from the Konachan image board with optional tags in the current guild channel or direct messages.
  args:
    - text
  params:
    - *o259
sankaku_string[]_2:
  desc: Command to fetch and display NSFW content from the Sankaku image board with optional tags in the current guild channel or direct messages.
  args:
    - text
  params:
    - *o260
e621_string[]_2:
  desc: Command to fetch and display NSFW content from the E621 image board with optional tags in the current guild channel or direct messages.
  args:
    - text
  params:
    - *o261
rule34_string[]_2:
  desc: Command to fetch and display NSFW content from the Rule34 image board with optional tags in the current guild channel or direct messages.
  args:
    - text
  params:
    - *o262
danbooru_string[]_2:
  desc: Command to fetch and display NSFW content from the Danbooru image board with optional tags in the current guild channel or direct messages.
  args:
    - text
  params:
    - *o263
gelbooru_string[]_2:
  desc: Command to fetch and display NSFW content from the Gelbooru image board with optional tags in the current guild channel or direct messages.
  args:
    - text
  params:
    - *o264
derpibooru_string[]_2:
  desc: Command to fetch and display NSFW content from the Derpibooru image board with optional tags in the current guild channel or direct messages.
  args:
    - text
  params:
    - *o265
safebooru_string[]_2:
  desc: Command to fetch and display NSFW content from the Safebooru image board with optional tags in the current guild channel or direct messages.
  args:
    - text
  params:
    - *o254
realbooru_string[]_2:
  desc: Command to fetch and display NSFW content from the Realbooru image board with optional tags in the current guild channel or direct messages.
  args:
    - text
  params:
    - *o254
boobs_noparams_2:
  desc: Command to fetch and display NSFW content from the "boobs" subreddit in the current guild channel or direct messages.
  args:
    - ''
  params: [ ]
butts_noparams_2:
  desc: Command to fetch and display NSFW content from the "ass" subreddit in the current guild channel or direct messages.
  args:
    - ''
  params: [ ]
nsfwtagblacklist_=_2:
  desc: Command to manage the blacklist of NSFW tags in the current guild.
  args:
    - null
  params:
    - *o3
addinstance:
  desc: Adds a bot instance to be managed from the dashboard.
  args:
    - number
  params:
    - &o266
      name: instancePort
      desc: The port number of the instance to remove
      type: int
      optional: false
listinstances:
  desc: Lists all registered bot instances and their status.
  args:
    - ''
  params: [ ]
removeinstance:
  desc: Removes a bot instance from dashboard management.
  args:
    - number
  params:
    - *o266
instancestatus:
  desc: Checks the status of a specific bot instance.
  args:
    - number
  params:
    - &o267
      name: instancePort
      desc: The port number of the instance to check
      type: int
      optional: false
addinstance_int:
  desc: Commands for managing bot instances that can be controlled via the dashboard. These commands are only available to the bot owner.
  args:
    - number
  params:
    - name: instancePort
      desc: The port number the instance is running on
      type: int
      optional: false
listinstances_noparams:
  desc: Lists all registered bot instances and their status.
  args:
    - ''
  params: [ ]
removeinstance_int:
  desc: Removes a bot instance from dashboard management.
  args:
    - number
  params:
    - *o266
instancestatus_int:
  desc: Checks the status of a specific bot instance.
  args:
    - number
  params:
    - *o267
update:
  desc: Defines the set of user statuses that can be programmatically assigned.
  args:
    - ''
  params: [ ]
sudo:
  desc: Executes a command as if it were sent by the specified guild user.
  args:
    - '@user text'
  params:
    - &o270
      name: user
      desc: The guild user to impersonate when executing the command.
      type: IGuildUser
      optional: false
    - &o268
      name: args
      desc: The command string to execute, including command name and arguments.
      type: string
      optional: false
sudo_string:
  desc: Executes a command as if it were sent by the owner of the guild.
  args:
    - text
  params:
    - *o268
generatedocs:
  desc: Generates command documentation YML files
  args:
    - ''
  params: [ ]
redisexec:
  desc: Executes a Redis command and returns the result.
  args:
    - text
  params:
    - &o271
      name: command
      desc: The Redis command to execute.
      type: string
      optional: false
sqlexec:
  desc: Executes a raw SQL command against the database.
  args:
    - text
  params:
    - &o272
      name: sql
      desc: The SQL command to execute.
      type: string
      optional: false
listservers:
  desc: Lists all servers the bot is currently in.
  args:
    - ''
  params: [ ]
commandstats:
  desc: Retrieves and displays statistics on the most used command, module, guild, and user.
  args:
    - ''
  params: [ ]
rotateplaying:
  desc: Changes yml based config for the bot.
  args:
    - ''
  params: [ ]
addplaying:
  desc: Adds a new status to the rotation of playing statuses for the bot.
  args:
    - t text
  params:
    - &o273
      name: t
      desc: The type of activity (e.g., Playing, Streaming).
      type: ActivityType
      optional: false
    - &o274
      name: status
      desc: The text of the status to add.
      type: string
      optional: false
listplaying:
  desc: Lists all statuses currently in the rotation.
  args:
    - ''
  params: [ ]
defprefix:
  desc: Sets or displays the default command prefix.
  args:
    - null
  params:
    - *o3
removeplaying:
  desc: Removes a status from the rotating playing statuses by its index.
  args:
    - number
  params:
    - &o275
      name: index
      desc: The one-based index of the status to remove. The actual removal will use zero-based indexing.
      type: int
      optional: false
languagesetdefault_string_4:
  desc: Sets the default language for the bot by specifying a culture name.
  args:
    - text
  params:
    - &o276
      name: name
      desc: /// The name of the culture to set as the default language. Use "default" to reset to the bot's original /// default language. ///
      type: string
      optional: false
startupcommandadd:
  desc: Adds a new startup command to be executed when the bot starts.
  args:
    - text
  params:
    - &o277
      name: cmdText
      desc: The text of the command to add, excluding the prefix.
      type: string
      optional: false
autocommandadd:
  desc: Adds an auto command to be executed periodically in the specified guild.
  args:
    - number text
  params:
    - &o278
      name: interval
      desc: The interval in seconds at which the command should be executed. Must be 5 seconds or more.
      type: int
      optional: false
    - &o279
      name: cmdText
      desc: The command text to be executed automatically.
      type: string
      optional: false
startupcommandslist:
  desc: Lists the startup commands configured for the guild.
  args:
    - 1
  params:
    - *o153
autocommandslist:
  desc: Lists the auto commands configured for the guild.
  args:
    - 1
  params:
    - *o153
wait:
  desc: Provides a formatted text displaying the interval of an auto command.
  args:
    - number
  params:
    - &o280
      name: miliseconds
      desc: The number of milliseconds to delay.
      type: int
      optional: false
autocommandremove:
  desc: Removes an auto command based on its index.
  args:
    - number
  params:
    - &o289
      name: index
      desc: The one-based index of the auto command to remove.
      type: int
      optional: false
startupcommandremove:
  desc: Removes a startup command based on its index.
  args:
    - number
  params:
    - &o281
      name: index
      desc: The one-based index of the startup command to remove.
      type: int
      optional: false
startupcommandsclear:
  desc: Clears all startup commands for the guild.
  args:
    - ''
  params: [ ]
forwardmessages:
  desc: Toggles the forwarding of direct messages to the bot's owner(s).
  args:
    - ''
  params: [ ]
forwardtoall:
  desc: Toggles whether forwarded messages are sent to all of the bot's owners or just the primary owner.
  args:
    - ''
  params: [ ]
shardstats:
  desc: Displays statistics for all shards of the bot, including their statuses, guild counts, and user counts.
  args:
    - ''
  params: [ ]
leaveserver:
  desc: Commands the bot to leave a server.
  args:
    - text
  params:
    - &o282
      name: guildStr
      desc: The identifier or name of the guild to leave.
      type: string
      optional: false
die:
  desc: Initiates a shutdown of the bot.
  args:
    - ''
  params: [ ]
setname:
  desc: Changes the bot's username to the specified new name.
  args:
    - text
  params:
    - &o283
      name: newName
      desc: The new username for the bot.
      type: string
      optional: false
setstatus:
  desc: Sets the bot's online status.
  args:
    - online|invisible|idle
    - online
    - invisible
    - idle
  params:
    - &o284
      name: status
      desc: 'The new status to set. Possible values: Online, Invisible, Idle, Dnd'
      type: SettableUserStatus
      optional: false
setavatar:
  desc: Sets the bot's avatar.
  args:
    - null
  params:
    - *o3
setgame:
  desc: Sets the bot's currently playing game.
  args:
    - type null
    - type
  params:
    - &o285
      name: type
      desc: The type of activity (e.g., Playing, Streaming).
      type: ActivityType
      optional: false
    - *o3
setstream:
  desc: Sets the bot's streaming status.
  args:
    - text null
    - text
  params:
    - &o286
      name: url
      desc: The URL of the stream.
      type: string
      optional: false
    - *o3
send:
  desc: Sends a message to a specified channel or user.
  args:
    - whereorto text
  params:
    - &o269
      name: whereOrTo
      desc: The ID of the channel or user to send the message to.
      type: ulong
      optional: false
    - &o287
      name: msg
      desc: The message to send.
      type: string
      optional: false
send_ulong_=_=:
  desc: Sends a message to a specified channel or user.
  args:
    - whereorto 0 null
    - whereorto
  params:
    - *o269
    - *o131
    - *o3
imagesreload:
  desc: Initiates the reloading of images used by the bot.
  args:
    - ''
  params: [ ]
stringsreload:
  desc: Initiates the reloading of bot strings (localizations).
  args:
    - ''
  params: [ ]
bash:
  desc: Executes a bash command. Depending on the platform, the command is executed in either bash or PowerShell.
  args:
    - text
  params:
    - &o288
      name: message
      desc: The command to execute.
      type: string
      optional: false
evaluate:
  desc: Evaluates a C# code snippet.
  args:
    - null
  params:
    - *o3
update_noparams:
  desc: Indicates the user is idle and may be away from their device.
  args:
    - ''
  params: [ ]
sudo_IGuildUser_string:
  desc: Execute the Sudo command
  args:
    - '@user text'
  params:
    - *o270
    - *o268
sudo_string_1:
  desc: Execute the Sudo command
  args:
    - text
  params:
    - *o268
generatedocs_noparams:
  desc: Generates command documentation YML files
  args:
    - ''
  params: [ ]
redisexec_string:
  desc: Executes a Redis command and returns the result.
  args:
    - text
  params:
    - *o271
sqlexec_string:
  desc: Executes a raw SQL command against the database.
  args:
    - text
  params:
    - *o272
listservers_noparams:
  desc: Lists all servers the bot is currently in.
  args:
    - ''
  params: [ ]
commandstats_noparams:
  desc: Execute the CommandStats command
  args:
    - ''
  params: [ ]
rotateplaying_noparams:
  desc: Changes yml based config for the bot.
  args:
    - ''
  params: [ ]
addplaying_ActivityType_string:
  desc: Adds a new status to the rotation of playing statuses for the bot.
  args:
    - t text
  params:
    - *o273
    - *o274
listplaying_noparams:
  desc: Lists all statuses currently in the rotation.
  args:
    - ''
  params: [ ]
defprefix_=:
  desc: Sets or displays the default command prefix.
  args:
    - null
  params:
    - *o3
removeplaying_int:
  desc: Removes a status from the rotating playing statuses by its index.
  args:
    - number
  params:
    - *o275
languagesetdefault_string_5:
  desc: Execute the LanguageSetDefault command
  args:
    - text
  params:
    - *o276
startupcommandadd_string:
  desc: Adds a new startup command to be executed when the bot starts.
  args:
    - text
  params:
    - *o277
autocommandadd_int_string:
  desc: Execute the AutoCommandAdd command
  args:
    - number text
  params:
    - *o278
    - *o279
startupcommandslist_=:
  desc: Lists the startup commands configured for the guild.
  args:
    - 1
  params:
    - *o153
autocommandslist_=:
  desc: Execute the AutoCommandsList command
  args:
    - 1
  params:
    - *o153
wait_int:
  desc: Execute the Wait command
  args:
    - number
  params:
    - *o280
autocommandremove_int:
  desc: Removes an auto command based on its index.
  args:
    - number
  params:
    - *o281
startupcommandremove_int:
  desc: Removes a startup command based on its index.
  args:
    - number
  params:
    - *o281
startupcommandsclear_noparams:
  desc: Clears all startup commands for the guild.
  args:
    - ''
  params: [ ]
forwardmessages_noparams:
  desc: Toggles the forwarding of direct messages to the bot's owner(s).
  args:
    - ''
  params: [ ]
forwardtoall_noparams:
  desc: Toggles whether forwarded messages are sent to all of the bot's owners or just the primary owner.
  args:
    - ''
  params: [ ]
shardstats_noparams:
  desc: Execute the ShardStats command
  args:
    - ''
  params: [ ]
leaveserver_string:
  desc: Commands the bot to leave a server.
  args:
    - text
  params:
    - *o282
die_noparams:
  desc: Initiates a shutdown of the bot.
  args:
    - ''
  params: [ ]
setname_string:
  desc: Changes the bot's username to the specified new name.
  args:
    - text
  params:
    - *o283
setstatus_SettableUserStatus:
  desc: Sets the bot's online status.
  args:
    - online|invisible|idle
    - online
    - invisible
    - idle
  params:
    - *o284
setavatar_=:
  desc: Sets the bot's avatar.
  args:
    - null
  params:
    - *o3
setgame_ActivityType_=:
  desc: Sets the bot's currently playing game.
  args:
    - type null
    - type
  params:
    - *o285
    - *o3
setstream_string_=:
  desc: Sets the bot's streaming status.
  args:
    - text null
    - text
  params:
    - *o286
    - *o3
send_ulong_string:
  desc: Sends a message to a specified channel or user.
  args:
    - whereorto text
  params:
    - *o269
    - *o287
send_ulong_=_=_1:
  desc: Sends a message to a specified channel or user.
  args:
    - whereorto 0 null
    - whereorto
  params:
    - *o269
    - *o131
    - *o3
imagesreload_noparams:
  desc: Initiates the reloading of images used by the bot.
  args:
    - ''
  params: [ ]
stringsreload_noparams:
  desc: Initiates the reloading of bot strings (localizations).
  args:
    - ''
  params: [ ]
bash_string:
  desc: Execute the Bash command
  args:
    - text
  params:
    - *o288
evaluate_=:
  desc: Evaluates a C# code snippet.
  args:
    - null
  params:
    - *o3
update_noparams_1:
  desc: Initializes a new instance of the OwnerOnly class, intended for owner-only operations within the Mewdeko bot framework.
  args:
    - ''
  params: [ ]
sudo_IGuildUser_string_1:
  desc: Executes a command as if it were sent by the specified guild user.
  args:
    - '@user text'
  params:
    - *o270
    - *o268
sudo_string_2:
  desc: Executes a command as if it were sent by the owner of the guild.
  args:
    - text
  params:
    - *o268
generatedocs_noparams_1:
  desc: Generates command documentation YML files
  args:
    - ''
  params: [ ]
redisexec_string_1:
  desc: Executes a Redis command and returns the result.
  args:
    - text
  params:
    - *o271
sqlexec_string_1:
  desc: Executes a raw SQL command against the database.
  args:
    - text
  params:
    - *o272
listservers_noparams_1:
  desc: Lists all servers the bot is currently in.
  args:
    - ''
  params: [ ]
commandstats_noparams_1:
  desc: Retrieves and displays statistics on the most used command, module, guild, and user.
  args:
    - ''
  params: [ ]
rotateplaying_noparams_1:
  desc: Changes yml based config for the bot.
  args:
    - ''
  params: [ ]
addplaying_ActivityType_string_1:
  desc: Adds a new status to the rotation of playing statuses for the bot.
  args:
    - t text
  params:
    - *o273
    - *o274
listplaying_noparams_1:
  desc: Lists all statuses currently in the rotation.
  args:
    - ''
  params: [ ]
defprefix_=_1:
  desc: Sets or displays the default command prefix.
  args:
    - null
  params:
    - *o3
removeplaying_int_1:
  desc: Removes a status from the rotating playing statuses by its index.
  args:
    - number
  params:
    - *o275
languagesetdefault_string_6:
  desc: Sets the default language for the bot by specifying a culture name.
  args:
    - text
  params:
    - *o276
startupcommandadd_string_1:
  desc: Adds a new startup command to be executed when the bot starts.
  args:
    - text
  params:
    - *o277
autocommandadd_int_string_1:
  desc: Adds an auto command to be executed periodically in the specified guild.
  args:
    - number text
  params:
    - *o278
    - *o279
startupcommandslist_=_1:
  desc: Lists the startup commands configured for the guild.
  args:
    - 1
  params:
    - *o153
autocommandslist_=_1:
  desc: Lists the auto commands configured for the guild.
  args:
    - 1
  params:
    - *o153
wait_int_1:
  desc: Provides a formatted text displaying the interval of an auto command.
  args:
    - number
  params:
    - *o280
autocommandremove_int_1:
  desc: Removes an auto command based on its index.
  args:
    - number
  params:
    - *o289
startupcommandremove_int_1:
  desc: Removes a startup command based on its index.
  args:
    - number
  params:
    - *o281
startupcommandsclear_noparams_1:
  desc: Clears all startup commands for the guild.
  args:
    - ''
  params: [ ]
forwardmessages_noparams_1:
  desc: Toggles the forwarding of direct messages to the bot's owner(s).
  args:
    - ''
  params: [ ]
forwardtoall_noparams_1:
  desc: Toggles whether forwarded messages are sent to all of the bot's owners or just the primary owner.
  args:
    - ''
  params: [ ]
shardstats_noparams_1:
  desc: Displays statistics for all shards of the bot, including their statuses, guild counts, and user counts.
  args:
    - ''
  params: [ ]
leaveserver_string_1:
  desc: Commands the bot to leave a server.
  args:
    - text
  params:
    - *o282
die_noparams_1:
  desc: Initiates a shutdown of the bot.
  args:
    - ''
  params: [ ]
setname_string_1:
  desc: Changes the bot's username to the specified new name.
  args:
    - text
  params:
    - *o283
setstatus_SettableUserStatus_1:
  desc: Sets the bot's online status.
  args:
    - online|invisible|idle
    - online
    - invisible
    - idle
  params:
    - *o284
setavatar_=_1:
  desc: Sets the bot's avatar.
  args:
    - null
  params:
    - *o3
setgame_ActivityType_=_1:
  desc: Sets the bot's currently playing game.
  args:
    - type null
    - type
  params:
    - *o285
    - *o3
setstream_string_=_1:
  desc: Sets the bot's streaming status.
  args:
    - text null
    - text
  params:
    - *o286
    - *o3
send_ulong_string_1:
  desc: Sends a message to a specified channel or user.
  args:
    - whereorto text
  params:
    - *o269
    - *o287
send_ulong_=_=_2:
  desc: Sends a message to a specified channel or user.
  args:
    - whereorto 0 null
    - whereorto
  params:
    - *o269
    - *o131
    - *o3
imagesreload_noparams_1:
  desc: Initiates the reloading of images used by the bot.
  args:
    - ''
  params: [ ]
stringsreload_noparams_1:
  desc: Initiates the reloading of bot strings (localizations).
  args:
    - ''
  params: [ ]
bash_string_1:
  desc: Executes a bash command. Depending on the platform, the command is executed in either bash or PowerShell.
  args:
    - text
  params:
    - *o288
evaluate_=_1:
  desc: Evaluates a C# code snippet.
  args:
    - null
  params:
    - *o3
update_noparams_2:
  desc: Indicates the user is idle and may be away from their device.
  args:
    - ''
  params: [ ]
sudo_IGuildUser_string_2:
  desc: Execute the Sudo command
  args:
    - '@user text'
  params:
    - *o270
    - *o268
sudo_string_3:
  desc: Execute the Sudo command
  args:
    - text
  params:
    - *o268
generatedocs_noparams_2:
  desc: Generates command documentation YML files
  args:
    - ''
  params: [ ]
redisexec_string_2:
  desc: Executes a Redis command and returns the result.
  args:
    - text
  params:
    - *o271
sqlexec_string_2:
  desc: Executes a raw SQL command against the database.
  args:
    - text
  params:
    - *o272
listservers_noparams_2:
  desc: Lists all servers the bot is currently in.
  args:
    - ''
  params: [ ]
commandstats_noparams_2:
  desc: Execute the CommandStats command
  args:
    - ''
  params: [ ]
rotateplaying_noparams_2:
  desc: Changes yml based config for the bot.
  args:
    - ''
  params: [ ]
addplaying_ActivityType_string_2:
  desc: Adds a new status to the rotation of playing statuses for the bot.
  args:
    - t text
  params:
    - *o273
    - *o274
listplaying_noparams_2:
  desc: Lists all statuses currently in the rotation.
  args:
    - ''
  params: [ ]
defprefix_=_2:
  desc: Sets or displays the default command prefix.
  args:
    - null
  params:
    - *o3
removeplaying_int_2:
  desc: Removes a status from the rotating playing statuses by its index.
  args:
    - number
  params:
    - *o275
languagesetdefault_string_7:
  desc: Execute the LanguageSetDefault command
  args:
    - text
  params:
    - *o276
startupcommandadd_string_2:
  desc: Adds a new startup command to be executed when the bot starts.
  args:
    - text
  params:
    - *o277
autocommandadd_int_string_2:
  desc: Execute the AutoCommandAdd command
  args:
    - number text
  params:
    - *o278
    - *o279
startupcommandslist_=_2:
  desc: Lists the startup commands configured for the guild.
  args:
    - 1
  params:
    - *o153
autocommandslist_=_2:
  desc: Execute the AutoCommandsList command
  args:
    - 1
  params:
    - *o153
wait_int_2:
  desc: Execute the Wait command
  args:
    - number
  params:
    - *o280
autocommandremove_int_2:
  desc: Removes an auto command based on its index.
  args:
    - number
  params:
    - *o281
startupcommandremove_int_2:
  desc: Removes a startup command based on its index.
  args:
    - number
  params:
    - *o281
startupcommandsclear_noparams_2:
  desc: Clears all startup commands for the guild.
  args:
    - ''
  params: [ ]
forwardmessages_noparams_2:
  desc: Toggles the forwarding of direct messages to the bot's owner(s).
  args:
    - ''
  params: [ ]
forwardtoall_noparams_2:
  desc: Toggles whether forwarded messages are sent to all of the bot's owners or just the primary owner.
  args:
    - ''
  params: [ ]
shardstats_noparams_2:
  desc: Execute the ShardStats command
  args:
    - ''
  params: [ ]
leaveserver_string_2:
  desc: Commands the bot to leave a server.
  args:
    - text
  params:
    - *o282
die_noparams_2:
  desc: Initiates a shutdown of the bot.
  args:
    - ''
  params: [ ]
setname_string_2:
  desc: Changes the bot's username to the specified new name.
  args:
    - text
  params:
    - *o283
setstatus_SettableUserStatus_2:
  desc: Sets the bot's online status.
  args:
    - online|invisible|idle
    - online
    - invisible
    - idle
  params:
    - *o284
setavatar_=_2:
  desc: Sets the bot's avatar.
  args:
    - null
  params:
    - *o3
setgame_ActivityType_=_2:
  desc: Sets the bot's currently playing game.
  args:
    - type null
    - type
  params:
    - *o285
    - *o3
setstream_string_=_2:
  desc: Sets the bot's streaming status.
  args:
    - text null
    - text
  params:
    - *o286
    - *o3
send_ulong_string_2:
  desc: Sends a message to a specified channel or user.
  args:
    - whereorto text
  params:
    - *o269
    - *o287
send_ulong_=_=_3:
  desc: Sends a message to a specified channel or user.
  args:
    - whereorto 0 null
    - whereorto
  params:
    - *o269
    - *o131
    - *o3
imagesreload_noparams_2:
  desc: Initiates the reloading of images used by the bot.
  args:
    - ''
  params: [ ]
stringsreload_noparams_2:
  desc: Initiates the reloading of bot strings (localizations).
  args:
    - ''
  params: [ ]
bash_string_2:
  desc: Execute the Bash command
  args:
    - text
  params:
    - *o288
evaluate_=_2:
  desc: Evaluates a C# code snippet.
  args:
    - null
  params:
    - *o3
userblacklist:
  desc: Blacklists or unblacklists a user by their ID, with an optional reason.
  args:
    - action id text
    - action id
  params:
    - &o290
      name: action
      desc: Specifies whether to add or remove from the blacklist.
      type: AddRemove
      optional: false
    - &o292
      name: id
      desc: The server's ID.
      type: ulong
      optional: false
    - &o291
      name: reason
      desc: The reason for the blacklist operation.
      type: string
      optional: true
userblacklist_AddRemove_IUser_string:
  desc: Blacklists or unblacklists a user by their user object, with an optional reason.
  args:
    - action @user text
    - action @user
  params:
    - *o290
    - &o293
      name: usr
      desc: The user object.
      type: IUser
      optional: false
    - *o291
channelblacklist:
  desc: Blacklists or unblacklists a channel by its ID, with an optional reason.
  args:
    - action id text
    - action id
  params:
    - *o290
    - *o292
    - *o291
serverblacklist:
  desc: Blacklists or unblacklists a server by its ID, with an optional reason.
  args:
    - action id text
    - action id
  params:
    - *o290
    - *o292
    - *o291
serverblacklist_AddRemove_IGuild_string:
  desc: Blacklists or unblacklists a server by its guild object, with an optional reason.
  args:
    - action guild text
    - action guild
  params:
    - *o290
    - &o294
      name: guild
      desc: The guild object.
      type: IGuild
      optional: false
    - *o291
manualblacklistcheck:
  desc: Performs a manual check for blacklisted entities across the bot's scope.
  args:
    - ''
  params: [ ]
userblacklist_AddRemove_ulong_string:
  desc: Execute the UserBlacklist command
  args:
    - action id text
    - action id
  params:
    - *o290
    - *o292
    - *o291
userblacklist_AddRemove_IUser_string_1:
  desc: Execute the UserBlacklist command
  args:
    - action @user text
    - action @user
  params:
    - *o290
    - *o293
    - *o291
channelblacklist_AddRemove_ulong_string:
  desc: Execute the ChannelBlacklist command
  args:
    - action id text
    - action id
  params:
    - *o290
    - *o292
    - *o291
serverblacklist_AddRemove_ulong_string:
  desc: Execute the ServerBlacklist command
  args:
    - action id text
    - action id
  params:
    - *o290
    - *o292
    - *o291
serverblacklist_AddRemove_IGuild_string_1:
  desc: Execute the ServerBlacklist command
  args:
    - action guild text
    - action guild
  params:
    - *o290
    - *o294
    - *o291
manualblacklistcheck_noparams:
  desc: Performs a manual check for blacklisted entities across the bot's scope.
  args:
    - ''
  params: [ ]
userblacklist_AddRemove_ulong_string_1:
  desc: Defines permission-related commands, including user, channel, and server blacklist operations.
  args:
    - action id text
    - action id
  params:
    - *o290
    - &o295
      name: id
      desc: The channel's ID.
      type: ulong
      optional: false
    - *o291
userblacklist_AddRemove_IUser_string_2:
  desc: Blacklists or unblacklists a user by their user object, with an optional reason.
  args:
    - action @user text
    - action @user
  params:
    - *o290
    - *o293
    - *o291
channelblacklist_AddRemove_ulong_string_1:
  desc: Blacklists or unblacklists a channel by its ID, with an optional reason.
  args:
    - action id text
    - action id
  params:
    - *o290
    - *o295
    - *o291
serverblacklist_AddRemove_ulong_string_1:
  desc: Blacklists or unblacklists a server by its ID, with an optional reason.
  args:
    - action id text
    - action id
  params:
    - *o290
    - *o292
    - *o291
serverblacklist_AddRemove_IGuild_string_2:
  desc: Blacklists or unblacklists a server by its guild object, with an optional reason.
  args:
    - action guild text
    - action guild
  params:
    - *o290
    - *o294
    - *o291
manualblacklistcheck_noparams_1:
  desc: Performs a manual check for blacklisted entities across the bot's scope.
  args:
    - ''
  params: [ ]
userblacklist_AddRemove_ulong_string_2:
  desc: Execute the UserBlacklist command
  args:
    - action id text
    - action id
  params:
    - *o290
    - *o295
    - *o291
userblacklist_AddRemove_IUser_string_3:
  desc: Execute the UserBlacklist command
  args:
    - action @user text
    - action @user
  params:
    - *o290
    - *o293
    - *o291
channelblacklist_AddRemove_ulong_string_2:
  desc: Execute the ChannelBlacklist command
  args:
    - action id text
    - action id
  params:
    - *o290
    - *o292
    - *o291
serverblacklist_AddRemove_ulong_string_2:
  desc: Execute the ServerBlacklist command
  args:
    - action id text
    - action id
  params:
    - *o290
    - *o292
    - *o291
serverblacklist_AddRemove_IGuild_string_3:
  desc: Execute the ServerBlacklist command
  args:
    - action guild text
    - action guild
  params:
    - *o290
    - *o294
    - *o291
manualblacklistcheck_noparams_2:
  desc: Performs a manual check for blacklisted entities across the bot's scope.
  args:
    - ''
  params: [ ]
globalpermlist:
  desc: Lists all currently globally blocked modules and commands.
  args:
    - ''
  params: [ ]
resetglobalperms:
  desc: Resets all global permissions, clearing all global command and module blocks.
  args:
    - ''
  params: [ ]
globalmodule:
  desc: Toggles a module on or off the global block list.
  args:
    - module
  params:
    - &o296
      name: module
      desc: The module to toggle.
      type: ModuleOrCrInfo
      optional: false
globalcommand:
  desc: Toggles a command on or off the global block list.
  args:
    - cmd
  params:
    - &o297
      name: cmd
      desc: The command to toggle.
      type: CommandOrCrInfo
      optional: false
globalpermlist_noparams:
  desc: Lists all currently globally blocked modules and commands.
  args:
    - ''
  params: [ ]
resetglobalperms_noparams:
  desc: Resets all global permissions, clearing all global command and module blocks.
  args:
    - ''
  params: [ ]
globalmodule_ModuleOrCrInfo:
  desc: Toggles a module on or off the global block list.
  args:
    - module
  params:
    - *o296
globalcommand_CommandOrCrInfo:
  desc: Toggles a command on or off the global block list.
  args:
    - cmd
  params:
    - *o297
globalpermlist_noparams_1:
  desc: Provides commands for managing global permissions, allowing for the blocking or unblocking of specific commands and modules across all guilds.
  args:
    - ''
  params: [ ]
resetglobalperms_noparams_1:
  desc: Resets all global permissions, clearing all global command and module blocks.
  args:
    - ''
  params: [ ]
globalmodule_ModuleOrCrInfo_1:
  desc: Toggles a module on or off the global block list.
  args:
    - module
  params:
    - *o296
globalcommand_CommandOrCrInfo_1:
  desc: Toggles a command on or off the global block list.
  args:
    - cmd
  params:
    - *o297
globalpermlist_noparams_2:
  desc: Lists all currently globally blocked modules and commands.
  args:
    - ''
  params: [ ]
resetglobalperms_noparams_2:
  desc: Resets all global permissions, clearing all global command and module blocks.
  args:
    - ''
  params: [ ]
globalmodule_ModuleOrCrInfo_2:
  desc: Toggles a module on or off the global block list.
  args:
    - module
  params:
    - *o296
globalcommand_CommandOrCrInfo_2:
  desc: Toggles a command on or off the global block list.
  args:
    - cmd
  params:
    - *o297
cmdcooldown:
  desc: Sets or clears the cooldown for a specified command in the guild.
  args:
    - command null
    - command
  params:
    - &o298
      name: command
      desc: The command to set the cooldown for.
      type: CommandOrCrInfo
      optional: false
    - *o3
allcmdcooldowns:
  desc: Displays all commands with active cooldowns in the guild.
  args:
    - ''
  params: [ ]
cmdcooldown_CommandOrCrInfo_=:
  desc: Execute the CmdCooldown command
  args:
    - command null
    - command
  params:
    - *o298
    - *o3
allcmdcooldowns_noparams:
  desc: Execute the AllCmdCooldowns command
  args:
    - ''
  params: [ ]
cmdcooldown_CommandOrCrInfo_=_1:
  desc: Represents commands for managing command cooldowns.
  args:
    - command null
    - command
  params:
    - *o298
    - *o3
allcmdcooldowns_noparams_1:
  desc: Displays all commands with active cooldowns in the guild.
  args:
    - ''
  params: [ ]
cmdcooldown_CommandOrCrInfo_=_2:
  desc: Execute the CmdCooldown command
  args:
    - command null
    - command
  params:
    - *o298
    - *o3
allcmdcooldowns_noparams_2:
  desc: Execute the AllCmdCooldowns command
  args:
    - ''
  params: [ ]
autobanword:
  desc: Toggles a word on or off the automatic ban list for the current guild.
  args:
    - text
  params:
    - &o300
      name: word
      desc: The word to toggle on the auto ban list.
      type: string
      optional: false
autobanwordlist:
  desc: Displays a paginated list of all words on the automatic ban list for the current guild.
  args:
    - ''
  params: [ ]
fwarn:
  desc: Enables or disables warnings for filtered words in the current guild.
  args:
    - text
  params:
    - &o299
      name: yesnt
      desc: A string indicating whether to enable ("y") or disable ("n") the warning.
      type: string
      optional: false
invwarn:
  desc: Enables or disables warnings for invite links posted in the current guild.
  args:
    - text
  params:
    - *o299
fwclear:
  desc: Clears all filtered words for the current guild.
  args:
    - ''
  params: [ ]
srvrfilterinv:
  desc: Toggles the server-wide invite link filter on or off.
  args:
    - ''
  params: [ ]
chnlfilterinv:
  desc: Toggles the invite link filter for a specific channel on or off.
  args:
    - ''
  params: [ ]
srvrfilterlin:
  desc: Toggles the server-wide link filter on or off.
  args:
    - ''
  params: [ ]
chnlfilterlin:
  desc: Toggles the link filter for a specific channel on or off.
  args:
    - ''
  params: [ ]
srvrfilterwords:
  desc: Toggles the server-wide word filter on or off.
  args:
    - ''
  params: [ ]
chnlfilterwords:
  desc: Toggles the word filter for a specific channel on or off.
  args:
    - ''
  params: [ ]
filterword:
  desc: Adds or removes a word from the filtered words list in the current guild.
  args:
    - text
  params:
    - &o301
      name: word
      desc: The word to toggle on the filtered words list.
      type: string
      optional: true
lstfilterwords:
  desc: Lists all words currently on the filtered words list for the current guild.
  args:
    - ''
  params: [ ]
autobanword_string:
  desc: Execute the AutoBanWord command
  args:
    - text
  params:
    - *o300
autobanwordlist_noparams:
  desc: Execute the AutoBanWordList command
  args:
    - ''
  params: [ ]
fwarn_string:
  desc: Execute the FWarn command
  args:
    - text
  params:
    - *o299
invwarn_string:
  desc: Execute the InvWarn command
  args:
    - text
  params:
    - *o299
fwclear_noparams:
  desc: Execute the FwClear command
  args:
    - ''
  params: [ ]
srvrfilterinv_noparams:
  desc: Execute the SrvrFilterInv command
  args:
    - ''
  params: [ ]
chnlfilterinv_noparams:
  desc: Execute the ChnlFilterInv command
  args:
    - ''
  params: [ ]
srvrfilterlin_noparams:
  desc: Execute the SrvrFilterLin command
  args:
    - ''
  params: [ ]
chnlfilterlin_noparams:
  desc: Execute the ChnlFilterLin command
  args:
    - ''
  params: [ ]
srvrfilterwords_noparams:
  desc: Execute the SrvrFilterWords command
  args:
    - ''
  params: [ ]
chnlfilterwords_noparams:
  desc: Execute the ChnlFilterWords command
  args:
    - ''
  params: [ ]
filterword_string:
  desc: Execute the FilterWord command
  args:
    - text
  params:
    - *o301
lstfilterwords_noparams:
  desc: Execute the LstFilterWords command
  args:
    - ''
  params: [ ]
autobanword_string_1:
  desc: Provides commands for managing word filters and automatic bans within guilds.
  args:
    - text
  params:
    - *o300
autobanwordlist_noparams_1:
  desc: Displays a paginated list of all words on the automatic ban list for the current guild.
  args:
    - ''
  params: [ ]
fwarn_string_1:
  desc: Enables or disables warnings for filtered words in the current guild.
  args:
    - text
  params:
    - *o299
invwarn_string_1:
  desc: Enables or disables warnings for invite links posted in the current guild.
  args:
    - text
  params:
    - *o299
fwclear_noparams_1:
  desc: Clears all filtered words for the current guild.
  args:
    - ''
  params: [ ]
srvrfilterinv_noparams_1:
  desc: Toggles the server-wide invite link filter on or off.
  args:
    - ''
  params: [ ]
chnlfilterinv_noparams_1:
  desc: Toggles the invite link filter for a specific channel on or off.
  args:
    - ''
  params: [ ]
srvrfilterlin_noparams_1:
  desc: Toggles the server-wide link filter on or off.
  args:
    - ''
  params: [ ]
chnlfilterlin_noparams_1:
  desc: Toggles the link filter for a specific channel on or off.
  args:
    - ''
  params: [ ]
srvrfilterwords_noparams_1:
  desc: Toggles the server-wide word filter on or off.
  args:
    - ''
  params: [ ]
chnlfilterwords_noparams_1:
  desc: Toggles the word filter for a specific channel on or off.
  args:
    - ''
  params: [ ]
filterword_string_1:
  desc: Adds or removes a word from the filtered words list in the current guild.
  args:
    - text
  params:
    - *o301
lstfilterwords_noparams_1:
  desc: Lists all words currently on the filtered words list for the current guild.
  args:
    - ''
  params: [ ]
autobanword_string_2:
  desc: Execute the AutoBanWord command
  args:
    - text
  params:
    - *o300
autobanwordlist_noparams_2:
  desc: Execute the AutoBanWordList command
  args:
    - ''
  params: [ ]
fwarn_string_2:
  desc: Execute the FWarn command
  args:
    - text
  params:
    - *o299
invwarn_string_2:
  desc: Execute the InvWarn command
  args:
    - text
  params:
    - *o299
fwclear_noparams_2:
  desc: Execute the FwClear command
  args:
    - ''
  params: [ ]
srvrfilterinv_noparams_2:
  desc: Execute the SrvrFilterInv command
  args:
    - ''
  params: [ ]
chnlfilterinv_noparams_2:
  desc: Execute the ChnlFilterInv command
  args:
    - ''
  params: [ ]
srvrfilterlin_noparams_2:
  desc: Execute the SrvrFilterLin command
  args:
    - ''
  params: [ ]
chnlfilterlin_noparams_2:
  desc: Execute the ChnlFilterLin command
  args:
    - ''
  params: [ ]
srvrfilterwords_noparams_2:
  desc: Execute the SrvrFilterWords command
  args:
    - ''
  params: [ ]
chnlfilterwords_noparams_2:
  desc: Execute the ChnlFilterWords command
  args:
    - ''
  params: [ ]
filterword_string_2:
  desc: Execute the FilterWord command
  args:
    - text
  params:
    - *o301
lstfilterwords_noparams_2:
  desc: Execute the LstFilterWords command
  args:
    - ''
  params: [ ]
resetperms:
  desc: Used with the permrole command to reset the permission role.
  args:
    - ''
  params: [ ]
verbose:
  desc: Sets whether commands should throw an error based on what the issue is when using a command.
  args:
    - null
  params:
    - *o3
permrole:
  desc: Sets the role that will be used for permissions. If no role is provided, it will show the current permission role.
  args:
    - null
  params:
    - *o3
permrole_Reset:
  desc: Resets the permission role.
  args:
    - reset
  params:
    - &o309
      name: _
      desc: 'Possible values: Reset'
      type: Reset
      optional: false
listperms:
  desc: Lists the permissions for the guild.
  args:
    - ''
  params: [ ]
removeperm:
  desc: Removes a permission from the list based on its index.
  args:
    - number
  params:
    - &o310
      name: index
      desc: The perm to remove
      type: int
      optional: false
moveperm:
  desc: Moves a permission higher in the heirarchy.
  args:
    - number number
  params:
    - &o311
      name: from
      desc: Initial Index
      type: int
      optional: false
    - &o312
      name: to
      desc: Replacement index
      type: int
      optional: false
srvrcmd:
  desc: Enables or disables a command in the server.
  args:
    - command action
  params:
    - &o313
      name: command
      desc: The command to run an action on
      type: CommandOrCrInfo
      optional: false
    - &o314
      name: action
      desc: Whether to disable or enable the command
      type: PermissionAction
      optional: false
srvrmdl:
  desc: Adds or removes server-level permissions for a specific module.
  args:
    - module action
  params:
    - &o303
      name: module
      desc: The module to set permissions for.
      type: ModuleOrCrInfo
      optional: false
    - &o302
      name: action
      desc: The action to perform (enable/disable).
      type: PermissionAction
      optional: false
usrcmd:
  desc: Adds or removes user-specific permissions for a specific command.
  args:
    - command action @user
  params:
    - &o305
      name: command
      desc: The command to set permissions for.
      type: CommandOrCrInfo
      optional: false
    - *o302
    - &o304
      name: user
      desc: The user to set permissions for.
      type: IGuildUser
      optional: false
usrmdl:
  desc: Adds or removes user-specific permissions for a specific module.
  args:
    - module action @user
  params:
    - *o303
    - *o302
    - *o304
rolecmd:
  desc: Adds or removes role-specific permissions for a specific command.
  args:
    - command action @role
  params:
    - *o305
    - *o302
    - &o306
      name: role
      desc: The role to set permissions for.
      type: IRole
      optional: false
rolemdl:
  desc: Adds or removes role-specific permissions for a specific module.
  args:
    - module action @role
  params:
    - *o303
    - *o302
    - *o306
chnlcmd:
  desc: Adds or removes channel-specific permissions for a specific command.
  args:
    - command action chnl
  params:
    - *o305
    - *o302
    - &o307
      name: chnl
      desc: The channel to set permissions for.
      type: ITextChannel
      optional: false
chnlmdl:
  desc: Adds or removes channel-specific permissions for a specific module.
  args:
    - module action chnl
  params:
    - *o303
    - *o302
    - *o307
allchnlmdls:
  desc: Adds or removes permissions for all modules in a specific channel.
  args:
    - action chnl
  params:
    - *o302
    - *o307
catcmd:
  desc: Adds or removes command-specific permissions for a specific category.
  args:
    - command action chnl
  params:
    - *o305
    - *o302
    - &o308
      name: chnl
      desc: The category to set permissions for.
      type: ICategoryChannel
      optional: false
catmdl:
  desc: Adds or removes module-specific permissions for a specific category.
  args:
    - module action chnl
  params:
    - *o303
    - *o302
    - *o308
allcatmdls:
  desc: Adds or removes permissions for all modules in a specific category.
  args:
    - action chnl
  params:
    - *o302
    - *o308
allrolemdls:
  desc: Adds or removes permissions for all modules for a specific role.
  args:
    - action @role
  params:
    - *o302
    - *o306
allusrmdls:
  desc: Adds or removes permissions for all modules for a specific user.
  args:
    - action @user
  params:
    - *o302
    - &o315
      name: user
      desc: The user to set permissions for.
      type: IUser
      optional: false
allsrvrmdls:
  desc: Adds or removes permissions for all modules for the entire server.
  args:
    - action
  params:
    - *o302
resetperms_noparams:
  desc: Used with the permrole command to reset the permission role.
  args:
    - ''
  params: [ ]
verbose_=:
  desc: Sets whether commands should throw an error based on what the issue is when using a command.
  args:
    - null
  params:
    - *o3
permrole_=:
  desc: Sets the role that will be used for permissions. If no role is provided, it will show the current permission role.
  args:
    - null
  params:
    - *o3
permrole_Reset_1:
  desc: Resets the permission role.
  args:
    - reset
  params:
    - *o309
listperms_noparams:
  desc: Lists the permissions for the guild.
  args:
    - ''
  params: [ ]
removeperm_int:
  desc: Removes a permission from the list based on its index.
  args:
    - number
  params:
    - *o310
moveperm_int_int:
  desc: Moves a permission higher in the heirarchy.
  args:
    - number number
  params:
    - *o311
    - *o312
srvrcmd_CommandOrCrInfo_PermissionAction:
  desc: Enables or disables a command in the server.
  args:
    - command action
  params:
    - *o313
    - *o314
srvrmdl_ModuleOrCrInfo_PermissionAction:
  desc: Adds or removes server-level permissions for a specific module.
  args:
    - module action
  params:
    - *o303
    - *o302
usrcmd_CommandOrCrInfo_PermissionAction_IGuildUser:
  desc: Adds or removes user-specific permissions for a specific command.
  args:
    - command action @user
  params:
    - *o305
    - *o302
    - *o304
usrmdl_ModuleOrCrInfo_PermissionAction_IGuildUser:
  desc: Adds or removes user-specific permissions for a specific module.
  args:
    - module action @user
  params:
    - *o303
    - *o302
    - *o304
rolecmd_CommandOrCrInfo_PermissionAction_IRole:
  desc: Adds or removes role-specific permissions for a specific command.
  args:
    - command action @role
  params:
    - *o305
    - *o302
    - *o306
rolemdl_ModuleOrCrInfo_PermissionAction_IRole:
  desc: Adds or removes role-specific permissions for a specific module.
  args:
    - module action @role
  params:
    - *o303
    - *o302
    - *o306
chnlcmd_CommandOrCrInfo_PermissionAction_ITextChannel:
  desc: Adds or removes channel-specific permissions for a specific command.
  args:
    - command action chnl
  params:
    - *o305
    - *o302
    - *o307
chnlmdl_ModuleOrCrInfo_PermissionAction_ITextChannel:
  desc: Adds or removes channel-specific permissions for a specific module.
  args:
    - module action chnl
  params:
    - *o303
    - *o302
    - *o307
allchnlmdls_PermissionAction_ITextChannel:
  desc: Adds or removes permissions for all modules in a specific channel.
  args:
    - action chnl
  params:
    - *o302
    - *o307
catcmd_CommandOrCrInfo_PermissionAction_ICategoryChannel:
  desc: Adds or removes command-specific permissions for a specific category.
  args:
    - command action chnl
  params:
    - *o305
    - *o302
    - *o308
catmdl_ModuleOrCrInfo_PermissionAction_ICategoryChannel:
  desc: Adds or removes module-specific permissions for a specific category.
  args:
    - module action chnl
  params:
    - *o303
    - *o302
    - *o308
allcatmdls_PermissionAction_ICategoryChannel:
  desc: Adds or removes permissions for all modules in a specific category.
  args:
    - action chnl
  params:
    - *o302
    - *o308
allrolemdls_PermissionAction_IRole:
  desc: Adds or removes permissions for all modules for a specific role.
  args:
    - action @role
  params:
    - *o302
    - *o306
allusrmdls_PermissionAction_IUser:
  desc: Adds or removes permissions for all modules for a specific user.
  args:
    - action @user
  params:
    - *o302
    - *o315
allsrvrmdls_PermissionAction:
  desc: Adds or removes permissions for all modules for the entire server.
  args:
    - action
  params:
    - *o302
resetperms_noparams_1:
  desc: A module for managing permissions for commands.
  args:
    - ''
  params: [ ]
verbose_=_1:
  desc: Sets whether commands should throw an error based on what the issue is when using a command.
  args:
    - null
  params:
    - *o3
permrole_=_1:
  desc: Sets the role that will be used for permissions. If no role is provided, it will show the current permission role.
  args:
    - null
  params:
    - *o3
permrole_Reset_2:
  desc: Resets the permission role.
  args:
    - reset
  params:
    - *o309
listperms_noparams_1:
  desc: Lists the permissions for the guild.
  args:
    - ''
  params: [ ]
removeperm_int_1:
  desc: Removes a permission from the list based on its index.
  args:
    - number
  params:
    - *o310
moveperm_int_int_1:
  desc: Moves a permission higher in the heirarchy.
  args:
    - number number
  params:
    - *o311
    - *o312
srvrcmd_CommandOrCrInfo_PermissionAction_1:
  desc: Enables or disables a command in the server.
  args:
    - command action
  params:
    - *o313
    - *o314
srvrmdl_ModuleOrCrInfo_PermissionAction_1:
  desc: Adds or removes server-level permissions for a specific module.
  args:
    - module action
  params:
    - *o303
    - *o302
usrcmd_CommandOrCrInfo_PermissionAction_IGuildUser_1:
  desc: Adds or removes user-specific permissions for a specific command.
  args:
    - command action @user
  params:
    - *o305
    - *o302
    - *o304
usrmdl_ModuleOrCrInfo_PermissionAction_IGuildUser_1:
  desc: Adds or removes user-specific permissions for a specific module.
  args:
    - module action @user
  params:
    - *o303
    - *o302
    - *o304
rolecmd_CommandOrCrInfo_PermissionAction_IRole_1:
  desc: Adds or removes role-specific permissions for a specific command.
  args:
    - command action @role
  params:
    - *o305
    - *o302
    - *o306
rolemdl_ModuleOrCrInfo_PermissionAction_IRole_1:
  desc: Adds or removes role-specific permissions for a specific module.
  args:
    - module action @role
  params:
    - *o303
    - *o302
    - *o306
chnlcmd_CommandOrCrInfo_PermissionAction_ITextChannel_1:
  desc: Adds or removes channel-specific permissions for a specific command.
  args:
    - command action chnl
  params:
    - *o305
    - *o302
    - *o307
chnlmdl_ModuleOrCrInfo_PermissionAction_ITextChannel_1:
  desc: Adds or removes channel-specific permissions for a specific module.
  args:
    - module action chnl
  params:
    - *o303
    - *o302
    - *o307
allchnlmdls_PermissionAction_ITextChannel_1:
  desc: Adds or removes permissions for all modules in a specific channel.
  args:
    - action chnl
  params:
    - *o302
    - *o307
catcmd_CommandOrCrInfo_PermissionAction_ICategoryChannel_1:
  desc: Adds or removes command-specific permissions for a specific category.
  args:
    - command action chnl
  params:
    - *o305
    - *o302
    - *o308
catmdl_ModuleOrCrInfo_PermissionAction_ICategoryChannel_1:
  desc: Adds or removes module-specific permissions for a specific category.
  args:
    - module action chnl
  params:
    - *o303
    - *o302
    - *o308
allcatmdls_PermissionAction_ICategoryChannel_1:
  desc: Adds or removes permissions for all modules in a specific category.
  args:
    - action chnl
  params:
    - *o302
    - *o308
allrolemdls_PermissionAction_IRole_1:
  desc: Adds or removes permissions for all modules for a specific role.
  args:
    - action @role
  params:
    - *o302
    - *o306
allusrmdls_PermissionAction_IUser_1:
  desc: Adds or removes permissions for all modules for a specific user.
  args:
    - action @user
  params:
    - *o302
    - *o315
allsrvrmdls_PermissionAction_1:
  desc: Adds or removes permissions for all modules for the entire server.
  args:
    - action
  params:
    - *o302
resetperms_noparams_2:
  desc: Used with the permrole command to reset the permission role.
  args:
    - ''
  params: [ ]
verbose_=_2:
  desc: Sets whether commands should throw an error based on what the issue is when using a command.
  args:
    - null
  params:
    - *o3
permrole_=_2:
  desc: Sets the role that will be used for permissions. If no role is provided, it will show the current permission role.
  args:
    - null
  params:
    - *o3
permrole_Reset_3:
  desc: Resets the permission role.
  args:
    - reset
  params:
    - *o309
listperms_noparams_2:
  desc: Lists the permissions for the guild.
  args:
    - ''
  params: [ ]
removeperm_int_2:
  desc: Removes a permission from the list based on its index.
  args:
    - number
  params:
    - *o310
moveperm_int_int_2:
  desc: Moves a permission higher in the heirarchy.
  args:
    - number number
  params:
    - *o311
    - *o312
srvrcmd_CommandOrCrInfo_PermissionAction_2:
  desc: Enables or disables a command in the server.
  args:
    - command action
  params:
    - *o313
    - *o314
srvrmdl_ModuleOrCrInfo_PermissionAction_2:
  desc: Adds or removes server-level permissions for a specific module.
  args:
    - module action
  params:
    - *o303
    - *o302
usrcmd_CommandOrCrInfo_PermissionAction_IGuildUser_2:
  desc: Adds or removes user-specific permissions for a specific command.
  args:
    - command action @user
  params:
    - *o305
    - *o302
    - *o304
usrmdl_ModuleOrCrInfo_PermissionAction_IGuildUser_2:
  desc: Adds or removes user-specific permissions for a specific module.
  args:
    - module action @user
  params:
    - *o303
    - *o302
    - *o304
rolecmd_CommandOrCrInfo_PermissionAction_IRole_2:
  desc: Adds or removes role-specific permissions for a specific command.
  args:
    - command action @role
  params:
    - *o305
    - *o302
    - *o306
rolemdl_ModuleOrCrInfo_PermissionAction_IRole_2:
  desc: Adds or removes role-specific permissions for a specific module.
  args:
    - module action @role
  params:
    - *o303
    - *o302
    - *o306
chnlcmd_CommandOrCrInfo_PermissionAction_ITextChannel_2:
  desc: Adds or removes channel-specific permissions for a specific command.
  args:
    - command action chnl
  params:
    - *o305
    - *o302
    - *o307
chnlmdl_ModuleOrCrInfo_PermissionAction_ITextChannel_2:
  desc: Adds or removes channel-specific permissions for a specific module.
  args:
    - module action chnl
  params:
    - *o303
    - *o302
    - *o307
allchnlmdls_PermissionAction_ITextChannel_2:
  desc: Adds or removes permissions for all modules in a specific channel.
  args:
    - action chnl
  params:
    - *o302
    - *o307
catcmd_CommandOrCrInfo_PermissionAction_ICategoryChannel_2:
  desc: Adds or removes command-specific permissions for a specific category.
  args:
    - command action chnl
  params:
    - *o305
    - *o302
    - *o308
catmdl_ModuleOrCrInfo_PermissionAction_ICategoryChannel_2:
  desc: Adds or removes module-specific permissions for a specific category.
  args:
    - module action chnl
  params:
    - *o303
    - *o302
    - *o308
allcatmdls_PermissionAction_ICategoryChannel_2:
  desc: Adds or removes permissions for all modules in a specific category.
  args:
    - action chnl
  params:
    - *o302
    - *o308
allrolemdls_PermissionAction_IRole_2:
  desc: Adds or removes permissions for all modules for a specific role.
  args:
    - action @role
  params:
    - *o302
    - *o306
allusrmdls_PermissionAction_IUser_2:
  desc: Adds or removes permissions for all modules for a specific user.
  args:
    - action @user
  params:
    - *o302
    - *o315
allsrvrmdls_PermissionAction_2:
  desc: Adds or removes permissions for all modules for the entire server.
  args:
    - action
  params:
    - *o302
rolegreetadd:
  desc: Adds a new role greet message for a specified role. If no channel is specified, the current channel is used.
  args:
    - '@role null'
    - '@role'
  params:
    - &o316
      name: role
      desc: The role to delete rgs for.
      type: IRole
      optional: false
    - *o3
rolegreetremove:
  desc: Removes a role greet message by its list ID.
  args:
    - number
  params:
    - &o319
      name: id
      desc: The ID of the role greet to remove, based on its position in the list of all role greets.
      type: int
      optional: false
rolegreetremove_IRole:
  desc: Removes rolegreets associated with the given roleid
  args:
    - '@role'
  params:
    - *o316
rolegreetdelete:
  desc: Updates a role greet message to be automatically deleted after a specified duration.
  args:
    - number time
  params:
    - &o317
      name: id
      desc: The ID of the role greet to update, based on its position in the list of all role greets.
      type: int
      optional: false
    - &o320
      name: time
      desc: /// The duration after which the greet message will be deleted, specified in seconds or as a /// human-readable string. ///
      type: StoopidTime
      optional: false
rolegreetdelete_int_int:
  desc: Updates a role greet message to be automatically deleted after a specified duration.
  args:
    - number number
  params:
    - *o317
    - &o321
      name: howlong
      desc: The duration, in seconds, after which the greet message will be deleted.
      type: int
      optional: false
rolegreetgreetbots:
  desc: Enables or disables the greeting of bots by a specific role greet.
  args:
    - number true|false
  params:
    - &o318
      name: num
      desc: The ID of the role greet to update, based on its position in the list of all role greets.
      type: int
      optional: false
    - &o324
      name: enabled
      desc: Whether to enable or disable greeting bots.
      type: bool
      optional: false
rolegreetdisable:
  desc: Enables or disables a role greet message.
  args:
    - number true|false
  params:
    - *o318
    - &o322
      name: enabled
      desc: Whether to enable or disable the greet message.
      type: bool
      optional: false
rolegreetwebhook:
  desc: Configures a webhook for a role greet message, allowing for custom name and avatar. If no name is provided, the webhook is disabled.
  args:
    - number null null
    - number
  params:
    - &o323
      name: id
      desc: /// The ID of the role greet to configure the webhook for, based on its position in the list of all role /// greets. ///
      type: int
      optional: false
    - *o3
    - *o3
rolegreetmessage:
  desc: Updates the message content of a role greet. If no message is provided, presents options to preview the message as is or view it as regular text.
  args:
    - number null
    - number
  params:
    - *o317
    - *o3
rolegreetlist:
  desc: Lists all role greets set up in the guild, providing detailed information for each.
  args:
    - ''
  params: [ ]
rolegreetadd_IRole_=:
  desc: Adds a new role greet message for a specified role. If no channel is specified, the current channel is used.
  args:
    - '@role null'
    - '@role'
  params:
    - *o316
    - *o3
rolegreetremove_int:
  desc: Removes a role greet message by its list ID.
  args:
    - number
  params:
    - *o319
rolegreetremove_IRole_1:
  desc: Removes rolegreets associated with the given roleid
  args:
    - '@role'
  params:
    - *o316
rolegreetdelete_int_StoopidTime:
  desc: Updates a role greet message to be automatically deleted after a specified duration.
  args:
    - number time
  params:
    - *o317
    - *o320
rolegreetdelete_int_int_1:
  desc: Updates a role greet message to be automatically deleted after a specified duration.
  args:
    - number number
  params:
    - *o317
    - *o321
rolegreetgreetbots_int_bool:
  desc: Enables or disables the greeting of bots by a specific role greet.
  args:
    - number true|false
  params:
    - *o318
    - *o322
rolegreetdisable_int_bool:
  desc: Enables or disables a role greet message.
  args:
    - number true|false
  params:
    - *o318
    - *o322
rolegreetwebhook_int_=_=:
  desc: Execute the RoleGreetWebhook command
  args:
    - number null null
    - number
  params:
    - *o323
    - *o3
    - *o3
rolegreetmessage_int_=:
  desc: Updates the message content of a role greet. If no message is provided, presents options to preview the message as is or view it as regular text.
  args:
    - number null
    - number
  params:
    - *o317
    - *o3
rolegreetlist_noparams:
  desc: Lists all role greets set up in the guild, providing detailed information for each.
  args:
    - ''
  params: [ ]
rolegreetadd_IRole_=_1:
  desc: The RoleGreets module provides commands for managing role greet messages within a Discord guild. These messages are sent when a user receives a specific role, allowing for custom greetings or information to be shared automatically.
  args:
    - '@role null'
    - '@role'
  params:
    - *o316
    - *o3
rolegreetremove_int_1:
  desc: Removes a role greet message by its list ID.
  args:
    - number
  params:
    - *o319
rolegreetremove_IRole_2:
  desc: Removes rolegreets associated with the given roleid
  args:
    - '@role'
  params:
    - *o316
rolegreetdelete_int_StoopidTime_1:
  desc: Updates a role greet message to be automatically deleted after a specified duration.
  args:
    - number time
  params:
    - *o317
    - *o320
rolegreetdelete_int_int_2:
  desc: Updates a role greet message to be automatically deleted after a specified duration.
  args:
    - number number
  params:
    - *o317
    - *o321
rolegreetgreetbots_int_bool_1:
  desc: Enables or disables the greeting of bots by a specific role greet.
  args:
    - number true|false
  params:
    - *o318
    - *o324
rolegreetdisable_int_bool_1:
  desc: Enables or disables a role greet message.
  args:
    - number true|false
  params:
    - *o318
    - *o322
rolegreetwebhook_int_=_=_1:
  desc: Configures a webhook for a role greet message, allowing for custom name and avatar. If no name is provided, the webhook is disabled.
  args:
    - number null null
    - number
  params:
    - *o323
    - *o3
    - *o3
rolegreetmessage_int_=_1:
  desc: Updates the message content of a role greet. If no message is provided, presents options to preview the message as is or view it as regular text.
  args:
    - number null
    - number
  params:
    - *o317
    - *o3
rolegreetlist_noparams_1:
  desc: Lists all role greets set up in the guild, providing detailed information for each.
  args:
    - ''
  params: [ ]
rolegreetadd_IRole_=_2:
  desc: Adds a new role greet message for a specified role. If no channel is specified, the current channel is used.
  args:
    - '@role null'
    - '@role'
  params:
    - *o316
    - *o3
rolegreetremove_int_2:
  desc: Removes a role greet message by its list ID.
  args:
    - number
  params:
    - *o319
rolegreetremove_IRole_3:
  desc: Removes rolegreets associated with the given roleid
  args:
    - '@role'
  params:
    - *o316
rolegreetdelete_int_StoopidTime_2:
  desc: Updates a role greet message to be automatically deleted after a specified duration.
  args:
    - number time
  params:
    - *o317
    - *o320
rolegreetdelete_int_int_3:
  desc: Updates a role greet message to be automatically deleted after a specified duration.
  args:
    - number number
  params:
    - *o317
    - *o321
rolegreetgreetbots_int_bool_2:
  desc: Enables or disables the greeting of bots by a specific role greet.
  args:
    - number true|false
  params:
    - *o318
    - *o322
rolegreetdisable_int_bool_2:
  desc: Enables or disables a role greet message.
  args:
    - number true|false
  params:
    - *o318
    - *o322
rolegreetwebhook_int_=_=_2:
  desc: Execute the RoleGreetWebhook command
  args:
    - number null null
    - number
  params:
    - *o323
    - *o3
    - *o3
rolegreetmessage_int_=_2:
  desc: Updates the message content of a role greet. If no message is provided, presents options to preview the message as is or view it as regular text.
  args:
    - number null
    - number
  params:
    - *o317
    - *o3
rolegreetlist_noparams_2:
  desc: Lists all role greets set up in the guild, providing detailed information for each.
  args:
    - ''
  params: [ ]
togglerolestates:
  desc: Toggles the role states feature on or off.
  args:
    - ''
  params: [ ]
saveallrolestates:
  desc: Saves role states for all users in the server.
  args:
    - ''
  params: [ ]
transferrolestates:
  desc: Transfers role states from the current server to another server.
  args:
    - serverid
  params:
    - &o326
      name: serverId
      desc: The ID of the target server.
      type: ulong
      optional: false
togglerolestatesignorebots:
  desc: Toggles whether bots should be ignored by the role states feature.
  args:
    - ''
  params: [ ]
togglerolestatesclearonban:
  desc: Toggles whether role states should be cleared when a user is banned.
  args:
    - ''
  params: [ ]
viewrolestatessettings:
  desc: Displays the current settings for the role states feature.
  args:
    - ''
  params: [ ]
viewuserrolestates:
  desc: Displays the role states for all users.
  args:
    - ''
  params: [ ]
deleteuserrolestate:
  desc: Deletes the role state for a specific user.
  args:
    - '@user'
  params:
    - &o327
      name: user
      desc: The user whose role state should be deleted.
      type: IGuildUser
      optional: false
rolestatesadddenyrole:
  desc: Adds roles to the deny list for the role states feature.
  args:
    - '@role'
  params:
    - &o328
      name: roles
      desc: The roles to be added to the deny list.
      type: IRole[]
      optional: false
rolestatesremovedenyrole:
  desc: Removes roles from the deny list for the role states feature.
  args:
    - '@role'
  params:
    - &o329
      name: roles
      desc: The roles to be removed from the deny list.
      type: IRole[]
      optional: false
rolestatesadddenyuser:
  desc: Adds users to the deny list for the role states feature.
  args:
    - '@user'
  params:
    - &o330
      name: users
      desc: The users to be added to the deny list.
      type: IGuildUser[]
      optional: false
rolestatesremovedenyuser:
  desc: Removes users from the deny list for the role states feature.
  args:
    - '@user'
  params:
    - &o331
      name: users
      desc: The users to be removed from the deny list.
      type: IGuildUser[]
      optional: false
setuserrolestate:
  desc: Sets the role state for a specific user.
  args:
    - '@user @role'
  params:
    - &o335
      name: user
      desc: The user whose role state should be set.
      type: IGuildUser
      optional: false
    - &o336
      name: roles
      desc: The roles to be included in the user's role state.
      type: IRole[]
      optional: false
removerolesfromrolestate:
  desc: Removes roles from a user's role state.
  args:
    - '@user @role'
  params:
    - &o325
      name: user
      desc: The user whose role state should be modified.
      type: IUser
      optional: false
    - &o332
      name: roles
      desc: The roles to be removed from the user's role state.
      type: IRole[]
      optional: false
addrolestorolestate:
  desc: Adds roles to a user's role state.
  args:
    - '@user @role'
  params:
    - *o325
    - &o333
      name: roles
      desc: The roles to be added to the user's role state.
      type: IRole[]
      optional: false
deleteuserrolestate_IUser:
  desc: Deletes the role state for a specific user.
  args:
    - '@user'
  params:
    - &o334
      name: user
      desc: The user whose role state should be deleted.
      type: IUser
      optional: false
togglerolestates_noparams:
  desc: Toggles the role states feature on or off.
  args:
    - ''
  params: [ ]
saveallrolestates_noparams:
  desc: Saves role states for all users in the server.
  args:
    - ''
  params: [ ]
transferrolestates_ulong:
  desc: Transfers role states from the current server to another server.
  args:
    - serverid
  params:
    - *o326
togglerolestatesignorebots_noparams:
  desc: Toggles whether bots should be ignored by the role states feature.
  args:
    - ''
  params: [ ]
togglerolestatesclearonban_noparams:
  desc: Toggles whether role states should be cleared when a user is banned.
  args:
    - ''
  params: [ ]
viewrolestatessettings_noparams:
  desc: Displays the current settings for the role states feature.
  args:
    - ''
  params: [ ]
viewuserrolestates_noparams:
  desc: Displays the role states for all users.
  args:
    - ''
  params: [ ]
deleteuserrolestate_IGuildUser:
  desc: Deletes the role state for a specific user.
  args:
    - '@user'
  params:
    - *o327
rolestatesadddenyrole_IRole[]:
  desc: Adds roles to the deny list for the role states feature.
  args:
    - '@role'
  params:
    - *o328
rolestatesremovedenyrole_IRole[]:
  desc: Removes roles from the deny list for the role states feature.
  args:
    - '@role'
  params:
    - *o329
rolestatesadddenyuser_IGuildUser[]:
  desc: Adds users to the deny list for the role states feature.
  args:
    - '@user'
  params:
    - *o330
rolestatesremovedenyuser_IGuildUser[]:
  desc: Removes users from the deny list for the role states feature.
  args:
    - '@user'
  params:
    - *o331
setuserrolestate_IGuildUser_IRole[]:
  desc: Sets the role state for a specific user.
  args:
    - '@user @role'
  params:
    - &o337
      name: user
      desc: The user whose role state should be modified.
      type: IGuildUser
      optional: false
    - *o332
removerolesfromrolestate_IUser_IRole[]:
  desc: Removes roles from a user's role state.
  args:
    - '@user @role'
  params:
    - *o325
    - *o333
addrolestorolestate_IUser_IRole[]:
  desc: Adds roles to a user's role state.
  args:
    - '@user @role'
  params:
    - *o334
    - *o333
deleteuserrolestate_IUser_1:
  desc: Deletes the role state for a specific user.
  args:
    - '@user'
  params:
    - *o334
togglerolestates_noparams_1:
  desc: Execute the ToggleRoleStates command
  args:
    - ''
  params: [ ]
saveallrolestates_noparams_1:
  desc: Saves role states for all users in the server.
  args:
    - ''
  params: [ ]
transferrolestates_ulong_1:
  desc: Transfers role states from the current server to another server.
  args:
    - serverid
  params:
    - *o326
togglerolestatesignorebots_noparams_1:
  desc: Toggles whether bots should be ignored by the role states feature.
  args:
    - ''
  params: [ ]
togglerolestatesclearonban_noparams_1:
  desc: Toggles whether role states should be cleared when a user is banned.
  args:
    - ''
  params: [ ]
viewrolestatessettings_noparams_1:
  desc: Displays the current settings for the role states feature.
  args:
    - ''
  params: [ ]
viewuserrolestates_noparams_1:
  desc: Displays the role states for all users.
  args:
    - ''
  params: [ ]
deleteuserrolestate_IGuildUser_1:
  desc: Deletes the role state for a specific user.
  args:
    - '@user'
  params:
    - *o327
rolestatesadddenyrole_IRole[]_1:
  desc: Adds roles to the deny list for the role states feature.
  args:
    - '@role'
  params:
    - *o328
rolestatesremovedenyrole_IRole[]_1:
  desc: Removes roles from the deny list for the role states feature.
  args:
    - '@role'
  params:
    - *o329
rolestatesadddenyuser_IGuildUser[]_1:
  desc: Adds users to the deny list for the role states feature.
  args:
    - '@user'
  params:
    - *o330
rolestatesremovedenyuser_IGuildUser[]_1:
  desc: Removes users from the deny list for the role states feature.
  args:
    - '@user'
  params:
    - *o331
setuserrolestate_IGuildUser_IRole[]_1:
  desc: Sets the role state for a specific user.
  args:
    - '@user @role'
  params:
    - *o335
    - *o336
removerolesfromrolestate_IUser_IRole[]_1:
  desc: Removes roles from a user's role state.
  args:
    - '@user @role'
  params:
    - *o325
    - *o332
addrolestorolestate_IUser_IRole[]_1:
  desc: Adds roles to a user's role state.
  args:
    - '@user @role'
  params:
    - *o325
    - *o333
deleteuserrolestate_IUser_2:
  desc: Deletes the role state for a specific user.
  args:
    - '@user'
  params:
    - *o334
togglerolestates_noparams_2:
  desc: Execute the ToggleRoleStates command
  args:
    - ''
  params: [ ]
saveallrolestates_noparams_2:
  desc: Saves role states for all users in the server.
  args:
    - ''
  params: [ ]
transferrolestates_ulong_2:
  desc: Transfers role states from the current server to another server.
  args:
    - serverid
  params:
    - *o326
togglerolestatesignorebots_noparams_2:
  desc: Toggles whether bots should be ignored by the role states feature.
  args:
    - ''
  params: [ ]
togglerolestatesclearonban_noparams_2:
  desc: Toggles whether role states should be cleared when a user is banned.
  args:
    - ''
  params: [ ]
viewrolestatessettings_noparams_2:
  desc: Displays the current settings for the role states feature.
  args:
    - ''
  params: [ ]
viewuserrolestates_noparams_2:
  desc: Displays the role states for all users.
  args:
    - ''
  params: [ ]
deleteuserrolestate_IGuildUser_2:
  desc: Deletes the role state for a specific user.
  args:
    - '@user'
  params:
    - *o327
rolestatesadddenyrole_IRole[]_2:
  desc: Adds roles to the deny list for the role states feature.
  args:
    - '@role'
  params:
    - *o328
rolestatesremovedenyrole_IRole[]_2:
  desc: Removes roles from the deny list for the role states feature.
  args:
    - '@role'
  params:
    - *o329
rolestatesadddenyuser_IGuildUser[]_2:
  desc: Adds users to the deny list for the role states feature.
  args:
    - '@user'
  params:
    - *o330
rolestatesremovedenyuser_IGuildUser[]_2:
  desc: Removes users from the deny list for the role states feature.
  args:
    - '@user'
  params:
    - *o331
setuserrolestate_IGuildUser_IRole[]_2:
  desc: Sets the role state for a specific user.
  args:
    - '@user @role'
  params:
    - *o337
    - *o332
removerolesfromrolestate_IUser_IRole[]_2:
  desc: Removes roles from a user's role state.
  args:
    - '@user @role'
  params:
    - *o325
    - *o333
addrolestorolestate_IUser_IRole[]_2:
  desc: Adds roles to a user's role state.
  args:
    - '@user @role'
  params:
    - *o334
    - *o333
deleteuserrolestate_IUser_3:
  desc: Deletes the role state for a specific user.
  args:
    - '@user'
  params:
    - *o334
shoot:
  desc: Shoots someone.
  args:
    - text
  params:
    - &o338
      name: toShow
      desc: The person to tickle.
      type: string
      optional: false
handhold:
  desc: Holds someone's hand.
  args:
    - text
  params:
    - *o338
punch:
  desc: Punches someone.
  args:
    - text
  params:
    - *o338
hug:
  desc: Hugs someone.
  args:
    - text
  params:
    - *o338
kiss:
  desc: Kisses someone.
  args:
    - text
  params:
    - *o338
pat:
  desc: Pats someone.
  args:
    - text
  params:
    - *o338
tickle:
  desc: Tickles someone.
  args:
    - text
  params:
    - &o340
      name: toShow
      desc: The person to slap.
      type: string
      optional: false
slap:
  desc: Slaps someone.
  args:
    - text
  params:
    - &o341
      name: toShow
      desc: The person to cuddle with.
      type: string
      optional: false
cuddle:
  desc: Cuddles with someone.
  args:
    - text
  params:
    - &o342
      name: toShow
      desc: The person to poke.
      type: string
      optional: false
poke:
  desc: Pokes someone.
  args:
    - text
  params:
    - &o343
      name: toShow
      desc: The person to feed.
      type: string
      optional: false
feed:
  desc: Feeds someone.
  args:
    - text
  params:
    - &o344
      name: toShow
      desc: The person to call baka.
      type: string
      optional: false
baka:
  desc: Calls someone a baka.
  args:
    - text
  params:
    - &o345
      name: toShow
      desc: The person to bite.
      type: string
      optional: false
bite:
  desc: Bites someone.
  args:
    - text
  params:
    - &o339
      name: toShow
      desc: Additional text (optional).
      type: string
      optional: false
blush:
  desc: Blushes.
  args:
    - null
  params:
    - *o3
bored:
  desc: Indicates boredom.
  args:
    - null
  params:
    - *o3
cry:
  desc: Cries.
  args:
    - null
  params:
    - *o3
dance:
  desc: Dances.
  args:
    - null
  params:
    - *o3
facepalm:
  desc: Facepalms.
  args:
    - null
  params:
    - *o3
happy:
  desc: Expresses happiness.
  args:
    - null
  params:
    - *o3
highfive:
  desc: Gives someone a high-five.
  args:
    - text
  params:
    - *o339
laugh:
  desc: Laughs.
  args:
    - null
  params:
    - *o3
pout:
  desc: Pouts.
  args:
    - null
  params:
    - *o3
shrug:
  desc: Shrugs.
  args:
    - null
  params:
    - *o3
sleep:
  desc: Sleeps.
  args:
    - null
  params:
    - *o3
smile:
  desc: Smiles.
  args:
    - null
  params:
    - *o3
smug:
  desc: Is smug.
  args:
    - null
  params:
    - *o3
stare:
  desc: Stares.
  args:
    - null
  params:
    - *o3
think:
  desc: Thinks.
  args:
    - null
  params:
    - *o3
thumbsup:
  desc: Gives a thumbs-up.
  args:
    - null
  params:
    - *o3
wave:
  desc: Waves.
  args:
    - null
  params:
    - *o3
wink:
  desc: Winks.
  args:
    - null
  params:
    - *o3
shoot_string:
  desc: Shoots someone.
  args:
    - text
  params:
    - *o338
handhold_string:
  desc: Holds someone's hand.
  args:
    - text
  params:
    - *o338
punch_string:
  desc: Punches someone.
  args:
    - text
  params:
    - *o338
hug_string:
  desc: Hugs someone.
  args:
    - text
  params:
    - *o338
kiss_string:
  desc: Kisses someone.
  args:
    - text
  params:
    - *o338
pat_string:
  desc: Pats someone.
  args:
    - text
  params:
    - *o340
tickle_string:
  desc: Tickles someone.
  args:
    - text
  params:
    - *o341
slap_string:
  desc: Slaps someone.
  args:
    - text
  params:
    - *o342
cuddle_string:
  desc: Cuddles with someone.
  args:
    - text
  params:
    - *o343
poke_string:
  desc: Pokes someone.
  args:
    - text
  params:
    - *o344
feed_string:
  desc: Feeds someone.
  args:
    - text
  params:
    - *o345
baka_string:
  desc: Calls someone a baka.
  args:
    - text
  params:
    - *o339
bite_string:
  desc: Bites someone.
  args:
    - text
  params:
    - *o339
blush_=:
  desc: Blushes.
  args:
    - null
  params:
    - *o3
bored_=:
  desc: Indicates boredom.
  args:
    - null
  params:
    - *o3
cry_=:
  desc: Cries.
  args:
    - null
  params:
    - *o3
dance_=:
  desc: Dances.
  args:
    - null
  params:
    - *o3
facepalm_=:
  desc: Facepalms.
  args:
    - null
  params:
    - *o3
happy_=:
  desc: Expresses happiness.
  args:
    - null
  params:
    - *o3
highfive_string:
  desc: Gives someone a high-five.
  args:
    - text
  params:
    - *o339
laugh_=:
  desc: Laughs.
  args:
    - null
  params:
    - *o3
pout_=:
  desc: Pouts.
  args:
    - null
  params:
    - *o3
shrug_=:
  desc: Shrugs.
  args:
    - null
  params:
    - *o3
sleep_=:
  desc: Sleeps.
  args:
    - null
  params:
    - *o3
smile_=:
  desc: Smiles.
  args:
    - null
  params:
    - *o3
smug_=:
  desc: Is smug.
  args:
    - null
  params:
    - *o3
stare_=:
  desc: Stares.
  args:
    - null
  params:
    - *o3
think_=:
  desc: Thinks.
  args:
    - null
  params:
    - *o3
thumbsup_=:
  desc: Gives a thumbs-up.
  args:
    - null
  params:
    - *o3
wave_=:
  desc: Waves.
  args:
    - null
  params:
    - *o3
wink_=:
  desc: Winks.
  args:
    - null
  params:
    - *o3
shoot_string_1:
  desc: Submodule containing action commands.
  args:
    - text
  params:
    - &o346
      name: toShow
      desc: The person to pat.
      type: string
      optional: false
handhold_string_1:
  desc: Holds someone's hand.
  args:
    - text
  params:
    - *o346
punch_string_1:
  desc: Punches someone.
  args:
    - text
  params:
    - *o346
hug_string_1:
  desc: Hugs someone.
  args:
    - text
  params:
    - *o346
kiss_string_1:
  desc: Kisses someone.
  args:
    - text
  params:
    - *o346
pat_string_1:
  desc: Pats someone.
  args:
    - text
  params:
    - *o338
tickle_string_1:
  desc: Tickles someone.
  args:
    - text
  params:
    - *o340
slap_string_1:
  desc: Slaps someone.
  args:
    - text
  params:
    - *o341
cuddle_string_1:
  desc: Cuddles with someone.
  args:
    - text
  params:
    - *o342
poke_string_1:
  desc: Pokes someone.
  args:
    - text
  params:
    - *o343
feed_string_1:
  desc: Feeds someone.
  args:
    - text
  params:
    - *o344
baka_string_1:
  desc: Calls someone a baka.
  args:
    - text
  params:
    - *o345
bite_string_1:
  desc: Bites someone.
  args:
    - text
  params:
    - *o339
blush_=_1:
  desc: Blushes.
  args:
    - null
  params:
    - *o3
bored_=_1:
  desc: Indicates boredom.
  args:
    - null
  params:
    - *o3
cry_=_1:
  desc: Cries.
  args:
    - null
  params:
    - *o3
dance_=_1:
  desc: Dances.
  args:
    - null
  params:
    - *o3
facepalm_=_1:
  desc: Facepalms.
  args:
    - null
  params:
    - *o3
happy_=_1:
  desc: Expresses happiness.
  args:
    - null
  params:
    - *o3
highfive_string_1:
  desc: Gives someone a high-five.
  args:
    - text
  params:
    - *o339
laugh_=_1:
  desc: Laughs.
  args:
    - null
  params:
    - *o3
pout_=_1:
  desc: Pouts.
  args:
    - null
  params:
    - *o3
shrug_=_1:
  desc: Shrugs.
  args:
    - null
  params:
    - *o3
sleep_=_1:
  desc: Sleeps.
  args:
    - null
  params:
    - *o3
smile_=_1:
  desc: Smiles.
  args:
    - null
  params:
    - *o3
smug_=_1:
  desc: Is smug.
  args:
    - null
  params:
    - *o3
stare_=_1:
  desc: Stares.
  args:
    - null
  params:
    - *o3
think_=_1:
  desc: Thinks.
  args:
    - null
  params:
    - *o3
thumbsup_=_1:
  desc: Gives a thumbs-up.
  args:
    - null
  params:
    - *o3
wave_=_1:
  desc: Waves.
  args:
    - null
  params:
    - *o3
wink_=_1:
  desc: Winks.
  args:
    - null
  params:
    - *o3
shoot_string_2:
  desc: Submodule containing action commands.
  args:
    - text
  params:
    - *o346
handhold_string_2:
  desc: Holds someone's hand.
  args:
    - text
  params:
    - *o346
punch_string_2:
  desc: Punches someone.
  args:
    - text
  params:
    - *o346
hug_string_2:
  desc: Hugs someone.
  args:
    - text
  params:
    - *o346
kiss_string_2:
  desc: Kisses someone.
  args:
    - text
  params:
    - *o338
pat_string_2:
  desc: Pats someone.
  args:
    - text
  params:
    - *o340
tickle_string_2:
  desc: Tickles someone.
  args:
    - text
  params:
    - *o341
slap_string_2:
  desc: Slaps someone.
  args:
    - text
  params:
    - *o342
cuddle_string_2:
  desc: Cuddles with someone.
  args:
    - text
  params:
    - *o343
poke_string_2:
  desc: Pokes someone.
  args:
    - text
  params:
    - *o344
feed_string_2:
  desc: Feeds someone.
  args:
    - text
  params:
    - *o345
baka_string_2:
  desc: Calls someone a baka.
  args:
    - text
  params:
    - *o339
bite_string_2:
  desc: Bites someone.
  args:
    - text
  params:
    - *o339
blush_=_2:
  desc: Blushes.
  args:
    - null
  params:
    - *o3
bored_=_2:
  desc: Indicates boredom.
  args:
    - null
  params:
    - *o3
cry_=_2:
  desc: Cries.
  args:
    - null
  params:
    - *o3
dance_=_2:
  desc: Dances.
  args:
    - null
  params:
    - *o3
facepalm_=_2:
  desc: Facepalms.
  args:
    - null
  params:
    - *o3
happy_=_2:
  desc: Expresses happiness.
  args:
    - null
  params:
    - *o3
highfive_string_2:
  desc: Gives someone a high-five.
  args:
    - text
  params:
    - *o339
laugh_=_2:
  desc: Laughs.
  args:
    - null
  params:
    - *o3
pout_=_2:
  desc: Pouts.
  args:
    - null
  params:
    - *o3
shrug_=_2:
  desc: Shrugs.
  args:
    - null
  params:
    - *o3
sleep_=_2:
  desc: Sleeps.
  args:
    - null
  params:
    - *o3
smile_=_2:
  desc: Smiles.
  args:
    - null
  params:
    - *o3
smug_=_2:
  desc: Is smug.
  args:
    - null
  params:
    - *o3
stare_=_2:
  desc: Stares.
  args:
    - null
  params:
    - *o3
think_=_2:
  desc: Thinks.
  args:
    - null
  params:
    - *o3
thumbsup_=_2:
  desc: Gives a thumbs-up.
  args:
    - null
  params:
    - *o3
wave_=_2:
  desc: Waves.
  args:
    - null
  params:
    - *o3
wink_=_2:
  desc: Winks.
  args:
    - null
  params:
    - *o3
ship:
  desc: Sends a ship image based on compatibility between two users.
  args:
    - '@user @user'
  params:
    - &o347
      name: user
      desc: The user to be compared with the current user.
      type: IUser
      optional: false
    - &o349
      name: user2
      desc: The second user to be compared.
      type: IUser
      optional: false
ship_IUser:
  desc: Sends a ship image based on compatibility between the current user and another user.
  args:
    - '@user'
  params:
    - *o347
randomneko:
  desc: Sends a random neko image.
  args:
    - ''
  params: [ ]
randomkitsune:
  desc: Sends a random kitsune image.
  args:
    - ''
  params: [ ]
randomwaifu:
  desc: Sends a random waifu image.
  args:
    - ''
  params: [ ]
mal:
  desc: Retrieves and displays information about a MyAnimeList profile.
  args:
    - text
  params:
    - &o350
      name: name
      desc: The username of the MyAnimeList profile.
      type: string
      optional: true
mal_IGuildUser:
  desc: Retrieves and displays information about a MyAnimeList profile for a specified user in the current guild.
  args:
    - '@user'
  params:
    - &o351
      name: usr
      desc: The user for whom to retrieve the MyAnimeList profile information.
      type: IGuildUser
      optional: false
findanime:
  desc: Finds anime information based on an image.
  args:
    - null
  params:
    - *o3
charinfo:
  desc: Retrieves and displays information about a character.
  args:
    - text
  params:
    - &o352
      name: chara
      desc: The name of the character to search for.
      type: string
      optional: false
anime:
  desc: Searches for anime and displays information about the search results.
  args:
    - text
  params:
    - &o348
      name: query
      desc: The query to search for.
      type: string
      optional: false
manga:
  desc: Searches for manga and displays information about the search results.
  args:
    - text
  params:
    - *o348
ship_IUser_IUser:
  desc: Execute the Ship command
  args:
    - '@user @user'
  params:
    - *o347
    - *o349
ship_IUser_1:
  desc: Execute the Ship command
  args:
    - '@user'
  params:
    - *o347
randomneko_noparams:
  desc: Sends a random neko image.
  args:
    - ''
  params: [ ]
randomkitsune_noparams:
  desc: Sends a random kitsune image.
  args:
    - ''
  params: [ ]
randomwaifu_noparams:
  desc: Sends a random waifu image.
  args:
    - ''
  params: [ ]
mal_string:
  desc: Execute the Mal command
  args:
    - text
  params:
    - *o350
mal_IGuildUser_1:
  desc: Execute the Mal command
  args:
    - '@user'
  params:
    - *o351
findanime_=:
  desc: Finds anime information based on an image.
  args:
    - null
  params:
    - *o3
charinfo_string:
  desc: Execute the CharInfo command
  args:
    - text
  params:
    - *o352
anime_string:
  desc: Execute the Anime command
  args:
    - text
  params:
    - *o348
manga_string:
  desc: Execute the Manga command
  args:
    - text
  params:
    - *o348
ship_IUser_IUser_1:
  desc: Group of commands related to anime.
  args:
    - '@user @user'
  params:
    - &o353
      name: user
      desc: The first user to be compared.
      type: IUser
      optional: false
    - *o349
ship_IUser_2:
  desc: Sends a ship image based on compatibility between the current user and another user.
  args:
    - '@user'
  params:
    - *o347
randomneko_noparams_1:
  desc: Sends a random neko image.
  args:
    - ''
  params: [ ]
randomkitsune_noparams_1:
  desc: Sends a random kitsune image.
  args:
    - ''
  params: [ ]
randomwaifu_noparams_1:
  desc: Sends a random waifu image.
  args:
    - ''
  params: [ ]
mal_string_1:
  desc: Retrieves and displays information about a MyAnimeList profile.
  args:
    - text
  params:
    - *o350
mal_IGuildUser_2:
  desc: Retrieves and displays information about a MyAnimeList profile for a specified user in the current guild.
  args:
    - '@user'
  params:
    - *o351
findanime_=_1:
  desc: Finds anime information based on an image.
  args:
    - null
  params:
    - *o3
charinfo_string_1:
  desc: Retrieves and displays information about a character.
  args:
    - text
  params:
    - *o352
anime_string_1:
  desc: Searches for anime and displays information about the search results.
  args:
    - text
  params:
    - *o348
manga_string_1:
  desc: Searches for manga and displays information about the search results.
  args:
    - text
  params:
    - *o348
ship_IUser_IUser_2:
  desc: Execute the Ship command
  args:
    - '@user @user'
  params:
    - *o353
    - *o349
ship_IUser_3:
  desc: Execute the Ship command
  args:
    - '@user'
  params:
    - *o347
randomneko_noparams_2:
  desc: Sends a random neko image.
  args:
    - ''
  params: [ ]
randomkitsune_noparams_2:
  desc: Sends a random kitsune image.
  args:
    - ''
  params: [ ]
randomwaifu_noparams_2:
  desc: Sends a random waifu image.
  args:
    - ''
  params: [ ]
mal_string_2:
  desc: Execute the Mal command
  args:
    - text
  params:
    - *o350
mal_IGuildUser_3:
  desc: Execute the Mal command
  args:
    - '@user'
  params:
    - *o351
findanime_=_2:
  desc: Finds anime information based on an image.
  args:
    - null
  params:
    - *o3
charinfo_string_2:
  desc: Execute the CharInfo command
  args:
    - text
  params:
    - *o352
anime_string_2:
  desc: Execute the Anime command
  args:
    - text
  params:
    - *o348
manga_string_2:
  desc: Execute the Manga command
  args:
    - text
  params:
    - *o348
feedadd:
  desc: Adds a new RSS feed to the guild's feed list.
  args:
    - text null
    - text
  params:
    - &o355
      name: url
      desc: The URL of the RSS feed.
      type: string
      optional: false
    - *o3
feedremove:
  desc: Removes an RSS feed from the guild's feed list.
  args:
    - number
  params:
    - &o354
      name: index
      desc: The index of the feed in the list.
      type: int
      optional: false
feedmessage:
  desc: Sets a custom message format for feed updates in a specific channel.
  args:
    - number text
  params:
    - *o354
    - &o356
      name: message
      desc: The custom message format.
      type: string
      optional: false
rsstest:
  desc: Tests the retrieval of an RSS feed to check for updates.
  args:
    - number
  params:
    - *o354
feedlist:
  desc: Lists all RSS feeds added to the guild.
  args:
    - ''
  params: [ ]
feedadd_string_=:
  desc: Execute the FeedAdd command
  args:
    - text null
    - text
  params:
    - *o355
    - *o3
feedremove_int:
  desc: Removes an RSS feed from the guild's feed list.
  args:
    - number
  params:
    - *o354
feedmessage_int_string:
  desc: Execute the FeedMessage command
  args:
    - number text
  params:
    - *o354
    - *o356
rsstest_int:
  desc: Tests the retrieval of an RSS feed to check for updates.
  args:
    - number
  params:
    - *o354
feedlist_noparams:
  desc: Lists all RSS feeds added to the guild.
  args:
    - ''
  params: [ ]
feedadd_string_=_1:
  desc: Module for managing RSS feeds in the guild.
  args:
    - text null
    - text
  params:
    - *o355
    - *o3
feedremove_int_1:
  desc: Removes an RSS feed from the guild's feed list.
  args:
    - number
  params:
    - *o354
feedmessage_int_string_1:
  desc: Sets a custom message format for feed updates in a specific channel.
  args:
    - number text
  params:
    - *o354
    - *o356
rsstest_int_1:
  desc: Tests the retrieval of an RSS feed to check for updates.
  args:
    - number
  params:
    - *o354
feedlist_noparams_1:
  desc: Lists all RSS feeds added to the guild.
  args:
    - ''
  params: [ ]
feedadd_string_=_2:
  desc: Execute the FeedAdd command
  args:
    - text null
    - text
  params:
    - *o355
    - *o3
feedremove_int_2:
  desc: Removes an RSS feed from the guild's feed list.
  args:
    - number
  params:
    - *o354
feedmessage_int_string_2:
  desc: Execute the FeedMessage command
  args:
    - number text
  params:
    - *o354
    - *o356
rsstest_int_2:
  desc: Tests the retrieval of an RSS feed to check for updates.
  args:
    - number
  params:
    - *o354
feedlist_noparams_2:
  desc: Lists all RSS feeds added to the guild.
  args:
    - ''
  params: [ ]
yomama:
  desc: Retrieves a Yo Mama joke.
  args:
    - ''
  params: [ ]
randjoke:
  desc: Retrieves a random joke.
  args:
    - ''
  params: [ ]
chucknorris:
  desc: Retrieves a Chuck Norris joke.
  args:
    - ''
  params: [ ]
wowjoke:
  desc: Retrieves a joke related to World of Warcraft.
  args:
    - ''
  params: [ ]
magicitem:
  desc: Retrieves a magic item description related to World of Warcraft.
  args:
    - ''
  params: [ ]
yomama_noparams:
  desc: Retrieves a Yo Mama joke.
  args:
    - ''
  params: [ ]
randjoke_noparams:
  desc: Retrieves a random joke.
  args:
    - ''
  params: [ ]
chucknorris_noparams:
  desc: Retrieves a Chuck Norris joke.
  args:
    - ''
  params: [ ]
wowjoke_noparams:
  desc: Retrieves a joke related to World of Warcraft.
  args:
    - ''
  params: [ ]
magicitem_noparams:
  desc: Retrieves a magic item description related to World of Warcraft.
  args:
    - ''
  params: [ ]
yomama_noparams_1:
  desc: Module for retrieving various types of jokes.
  args:
    - ''
  params: [ ]
randjoke_noparams_1:
  desc: Retrieves a random joke.
  args:
    - ''
  params: [ ]
chucknorris_noparams_1:
  desc: Retrieves a Chuck Norris joke.
  args:
    - ''
  params: [ ]
wowjoke_noparams_1:
  desc: Retrieves a joke related to World of Warcraft.
  args:
    - ''
  params: [ ]
magicitem_noparams_1:
  desc: Retrieves a magic item description related to World of Warcraft.
  args:
    - ''
  params: [ ]
yomama_noparams_2:
  desc: Module for retrieving various types of jokes.
  args:
    - ''
  params: [ ]
randjoke_noparams_2:
  desc: Retrieves a random joke.
  args:
    - ''
  params: [ ]
chucknorris_noparams_2:
  desc: Retrieves a Chuck Norris joke.
  args:
    - ''
  params: [ ]
wowjoke_noparams_2:
  desc: Retrieves a joke related to World of Warcraft.
  args:
    - ''
  params: [ ]
magicitem_noparams_2:
  desc: Retrieves a magic item description related to World of Warcraft.
  args:
    - ''
  params: [ ]
memelist:
  desc: Lists available meme templates.
  args:
    - ''
  params: [ ]
memegen:
  desc: Generates a meme with the specified template and text.
  args:
    - text null
    - text
  params:
    - &o357
      name: meme
      desc: The name of the meme template.
      type: string
      optional: false
    - *o3
memelist_noparams:
  desc: Lists available meme templates.
  args:
    - ''
  params: [ ]
memegen_string_=:
  desc: Execute the Memegen command
  args:
    - text null
    - text
  params:
    - *o357
    - *o3
memelist_noparams_1:
  desc: Module for generating memes using the memegen API.
  args:
    - ''
  params: [ ]
memegen_string_=_1:
  desc: Generates a meme with the specified template and text.
  args:
    - text null
    - text
  params:
    - *o357
    - *o3
memelist_noparams_2:
  desc: Lists available meme templates.
  args:
    - ''
  params: [ ]
memegen_string_=_2:
  desc: Execute the Memegen command
  args:
    - text null
    - text
  params:
    - *o357
    - *o3
osu:
  desc: Retrieves osu! user profile information.
  args:
    - text null
    - text
  params:
    - &o358
      name: user
      desc: The osu! username to retrieve information for.
      type: string
      optional: false
    - *o3
gatari:
  desc: Retrieves osu!Gatari user profile information.
  args:
    - text null
    - text
  params:
    - &o359
      name: user
      desc: The osu!Gatari username to retrieve information for.
      type: string
      optional: false
    - *o3
osu5:
  desc: Retrieves the top 5 osu! plays for a user.
  args:
    - text null
    - text
  params:
    - &o360
      name: user
      desc: The osu! username to retrieve plays for.
      type: string
      optional: false
    - *o3
osu_string_=:
  desc: Execute the Osu command
  args:
    - text null
    - text
  params:
    - *o358
    - *o3
gatari_string_=:
  desc: Execute the Gatari command
  args:
    - text null
    - text
  params:
    - *o359
    - *o3
osu5_string_=:
  desc: Execute the Osu5 command
  args:
    - text null
    - text
  params:
    - *o360
    - *o3
osu_string_=_1:
  desc: Module for interacting with osu! APIs and retrieving user data.
  args:
    - text null
    - text
  params:
    - *o358
    - *o3
gatari_string_=_1:
  desc: Retrieves osu!Gatari user profile information.
  args:
    - text null
    - text
  params:
    - *o359
    - *o3
osu5_string_=_1:
  desc: Retrieves the top 5 osu! plays for a user.
  args:
    - text null
    - text
  params:
    - *o360
    - *o3
osu_string_=_2:
  desc: Execute the Osu command
  args:
    - text null
    - text
  params:
    - *o358
    - *o3
gatari_string_=_2:
  desc: Execute the Gatari command
  args:
    - text null
    - text
  params:
    - *o359
    - *o3
osu5_string_=_2:
  desc: Execute the Osu5 command
  args:
    - text null
    - text
  params:
    - *o360
    - *o3
pokemon:
  desc: Retrieves information about a Pokémon.
  args:
    - text
  params:
    - &o361
      name: name
      desc: The name of the Pokémon.
      type: string
      optional: false
pokemon_string:
  desc: Retrieves information about a Pokémon.
  args:
    - text
  params:
    - *o361
pokemon_string_1:
  desc: Module for retrieving Pokémon information.
  args:
    - text
  params:
    - *o361
pokemon_string_2:
  desc: Retrieves information about a Pokémon.
  args:
    - text
  params:
    - *o361
streamadd:
  desc: Adds a new stream to the notification list for the current guild.
  args:
    - text
  params:
    - &o362
      name: link
      desc: The link to the stream to be added.
      type: string
      optional: false
streamremove:
  desc: Removes a stream from the notification list based on its index.
  args:
    - number
  params:
    - &o363
      name: index
      desc: The 1-based index of the stream in the notification list to be removed.
      type: int
      optional: false
streamsclear:
  desc: Clears all streams from the guild's notification list.
  args:
    - ''
  params: [ ]
streamlist:
  desc: Lists all streams currently followed by the guild.
  args:
    - ''
  params: [ ]
streamoffline:
  desc: Toggles the setting for notifying the guild when a followed stream goes offline.
  args:
    - ''
  params: [ ]
streammessage:
  desc: Sets a custom notification message for a specific stream in the guild's notification list.
  args:
    - number text
  params:
    - &o364
      name: index
      desc: The 1-based index of the stream to set the message for.
      type: int
      optional: false
    - &o365
      name: message
      desc: /// The custom message to be sent when the stream goes live. An empty message will reset it to /// default. ///
      type: string
      optional: false
streamcheck:
  desc: Checks the live status of a stream by its URL.
  args:
    - text
  params:
    - &o366
      name: url
      desc: The URL of the stream to check.
      type: string
      optional: false
streamadd_string:
  desc: Execute the StreamAdd command
  args:
    - text
  params:
    - *o362
streamremove_int:
  desc: Execute the StreamRemove command
  args:
    - number
  params:
    - *o363
streamsclear_noparams:
  desc: Clears all streams from the guild's notification list.
  args:
    - ''
  params: [ ]
streamlist_noparams:
  desc: Lists all streams currently followed by the guild.
  args:
    - ''
  params: [ ]
streamoffline_noparams:
  desc: Toggles the setting for notifying the guild when a followed stream goes offline.
  args:
    - ''
  params: [ ]
streammessage_int_string:
  desc: Execute the StreamMessage command
  args:
    - number text
  params:
    - *o364
    - *o365
streamcheck_string:
  desc: Checks the live status of a stream by its URL.
  args:
    - text
  params:
    - *o366
streamadd_string_1:
  desc: Contains commands for managing stream notifications within a Discord guild.
  args:
    - text
  params:
    - *o362
streamremove_int_1:
  desc: Removes a stream from the notification list based on its index.
  args:
    - number
  params:
    - *o363
streamsclear_noparams_1:
  desc: Clears all streams from the guild's notification list.
  args:
    - ''
  params: [ ]
streamlist_noparams_1:
  desc: Lists all streams currently followed by the guild.
  args:
    - ''
  params: [ ]
streamoffline_noparams_1:
  desc: Toggles the setting for notifying the guild when a followed stream goes offline.
  args:
    - ''
  params: [ ]
streammessage_int_string_1:
  desc: Sets a custom notification message for a specific stream in the guild's notification list.
  args:
    - number text
  params:
    - *o364
    - *o365
streamcheck_string_1:
  desc: Checks the live status of a stream by its URL.
  args:
    - text
  params:
    - *o366
streamadd_string_2:
  desc: Execute the StreamAdd command
  args:
    - text
  params:
    - *o362
streamremove_int_2:
  desc: Execute the StreamRemove command
  args:
    - number
  params:
    - *o363
streamsclear_noparams_2:
  desc: Clears all streams from the guild's notification list.
  args:
    - ''
  params: [ ]
streamlist_noparams_2:
  desc: Lists all streams currently followed by the guild.
  args:
    - ''
  params: [ ]
streamoffline_noparams_2:
  desc: Toggles the setting for notifying the guild when a followed stream goes offline.
  args:
    - ''
  params: [ ]
streammessage_int_string_2:
  desc: Execute the StreamMessage command
  args:
    - number text
  params:
    - *o364
    - *o365
streamcheck_string_2:
  desc: Checks the live status of a stream by its URL.
  args:
    - text
  params:
    - *o366
translate:
  desc: Enumeration for auto-delete options in auto-translate feature.
  args:
    - text null
    - text
  params:
    - &o367
      name: langs
      desc: The language pair in the format 'from>to'.
      type: string
      optional: false
    - *o3
autotranslate:
  desc: Toggles auto-translation for the current channel, optionally enabling auto-deletion of the original message.
  args:
    - autodeleteautotranslate.nodel
  params:
    - &o368
      name: AutoDeleteAutoTranslate.Nodel
      desc: ''
      type: =
      optional: false
autotranslang:
  desc: Sets or removes the preferred language pair for auto-translation for the user in the current channel.
  args:
    - null
  params:
    - *o3
translangs:
  desc: Lists all available languages for translation.
  args:
    - ''
  params: [ ]
translate_string_=:
  desc: Execute the Translate command
  args:
    - text null
    - text
  params:
    - *o367
    - *o3
autotranslate_=:
  desc: Execute the AutoTranslate command
  args:
    - autodeleteautotranslate.nodel
  params:
    - *o368
autotranslang_=:
  desc: Execute the AutoTransLang command
  args:
    - null
  params:
    - *o3
translangs_noparams:
  desc: Lists all available languages for translation.
  args:
    - ''
  params: [ ]
translate_string_=_1:
  desc: Provides commands for translating text and managing auto-translation settings within a Discord guild.
  args:
    - text null
    - text
  params:
    - *o367
    - *o3
autotranslate_=_1:
  desc: Toggles auto-translation for the current channel, optionally enabling auto-deletion of the original message.
  args:
    - autodeleteautotranslate.nodel
  params:
    - *o368
autotranslang_=_1:
  desc: Sets or removes the preferred language pair for auto-translation for the user in the current channel.
  args:
    - null
  params:
    - *o3
translangs_noparams_1:
  desc: Lists all available languages for translation.
  args:
    - ''
  params: [ ]
translate_string_=_2:
  desc: Execute the Translate command
  args:
    - text null
    - text
  params:
    - *o367
    - *o3
autotranslate_=_2:
  desc: Execute the AutoTranslate command
  args:
    - autodeleteautotranslate.nodel
  params:
    - *o368
autotranslang_=_2:
  desc: Execute the AutoTransLang command
  args:
    - null
  params:
    - *o3
translangs_noparams_2:
  desc: Lists all available languages for translation.
  args:
    - ''
  params: [ ]
xkcd:
  desc: Fetches and displays an XKCD comic. If 'latest' is specified, fetches the latest comic; otherwise, fetches a random comic.
  args:
    - null
  params:
    - *o3
xkcd_int:
  desc: Fetches and displays an XKCD comic by its number.
  args:
    - number
  params:
    - &o369
      name: num
      desc: The number of the XKCD comic to fetch.
      type: int
      optional: false
xkcd_=:
  desc: Fetches and displays an XKCD comic. If 'latest' is specified, fetches the latest comic; otherwise, fetches a random comic.
  args:
    - null
  params:
    - *o3
xkcd_int_1:
  desc: Fetches and displays an XKCD comic by its number.
  args:
    - number
  params:
    - *o369
xkcd_=_1:
  desc: Provides commands for fetching and displaying XKCD comics.
  args:
    - null
  params:
    - *o3
xkcd_int_2:
  desc: Fetches and displays an XKCD comic by its number.
  args:
    - number
  params:
    - *o369
xkcd_=_2:
  desc: Fetches and displays an XKCD comic. If 'latest' is specified, fetches the latest comic; otherwise, fetches a random comic.
  args:
    - null
  params:
    - *o3
xkcd_int_3:
  desc: Fetches and displays an XKCD comic by its number.
  args:
    - number
  params:
    - *o369
meme:
  desc: Fetches and displays a random meme from Reddit.
  args:
    - ''
  params: [ ]
randomreddit:
  desc: Fetches and displays a random post from a specified subreddit.
  args:
    - text
  params:
    - &o370
      name: subreddit
      desc: The subreddit from which to fetch a random post.
      type: string
      optional: false
rip:
  desc: Displays a RIP image with the user's name and avatar.
  args:
    - '@user'
  params:
    - &o371
      name: usr
      desc: The user for whom to generate the RIP image.
      type: IGuildUser
      optional: false
weather:
  desc: Fetches and displays weather information for a given location query.
  args:
    - text
  params:
    - &o372
      name: query
      desc: The location query to search for weather information.
      type: string
      optional: false
time:
  desc: Displays the current time in a specified location.
  args:
    - text
  params:
    - &o373
      name: query
      desc: The location query to search for the current time.
      type: string
      optional: false
youtube:
  desc: Searches for YouTube videos based on a provided query and displays the results.
  args:
    - text
  params:
    - &o374
      name: query
      desc: The search query to find YouTube videos.
      type: string
      optional: false
movie:
  desc: Fetches and displays information about a movie from IMDb based on the provided query.
  args:
    - null
  params:
    - *o3
randomcat:
  desc: Displays a random cat image.
  args:
    - ''
  params: [ ]
randomdog:
  desc: Displays a random dog image.
  args:
    - ''
  params: [ ]
randomfood:
  desc: Displays a random food image.
  args:
    - ''
  params: [ ]
randombird:
  desc: Displays birb.
  args:
    - ''
  params: [ ]
image:
  desc: Fetches and displays a random image from the specified category using Martine API.
  args:
    - text
  params:
    - &o386
      name: query
      desc: ''
      type: string
      optional: false
shorten:
  desc: Shortens a provided URL using the goolnk.com API.
  args:
    - text
  params:
    - &o375
      name: query
      desc: The URL to be shortened.
      type: string
      optional: false
google:
  desc: Performs a general search using the Google or DuckDuckGo search engines and displays the results.
  args:
    - null
  params:
    - *o3
urbandict:
  desc: Searches the Urban Dictionary and displays definitions for a given term.
  args:
    - null
  params:
    - *o3
define:
  desc: Retrieves and displays a definition from the Pearson dictionary.
  args:
    - text
  params:
    - &o378
      name: word
      desc: The word to define.
      type: string
      optional: false
catfact:
  desc: Fetches and shares a random cat fact.
  args:
    - ''
  params: [ ]
revav:
  desc: Performs a reverse image search using an avatar link.
  args:
    - null
  params:
    - *o3
revimg:
  desc: Performs a reverse image search using the provided image link.
  args:
    - null
  params:
    - *o3
safebooru_=:
  desc: Searches for and displays an image based on the provided tag from Safebooru.
  args:
    - null
  params:
    - *o3
wiki:
  desc: Searches for and displays Wikipedia information based on the provided query.
  args:
    - null
  params:
    - *o3
color:
  desc: Displays a color swatch based on the provided hexadecimal color codes.
  args:
    - colors
  params:
    - &o379
      name: colors
      desc: An array of SKColor objects representing the colors to display.
      type: SKColor[]
      optional: false
wikia:
  desc: Fetches and displays detailed information about a specific topic from a wikia.
  args:
    - text text
  params:
    - &o380
      name: target
      desc: The target wikia site.
      type: string
      optional: false
    - &o381
      name: query
      desc: The search term for the wikia.
      type: string
      optional: false
bible:
  desc: Searches for and displays Bible verses based on the book, chapter, and verse provided.
  args:
    - text text
  params:
    - &o382
      name: book
      desc: The book of the Bible.
      type: string
      optional: false
    - &o383
      name: chapterAndVerse
      desc: The chapter and verse in the format "Chapter:Verse".
      type: string
      optional: false
steam:
  desc: Searches for a game on Steam by name and provides a link to its Steam Store page.
  args:
    - text
  params:
    - &o384
      name: query
      desc: The name of the game to search for on Steam.
      type: string
      optional: false
resolvetonetags:
  desc: Resolves tone tags in a message and provides explanations for each identified tag.
  args:
    - text
  params:
    - &o385
      name: tag
      desc: The message containing tone tags to be resolved.
      type: string
      optional: false
meme_noparams:
  desc: Fetches and displays a random meme from Reddit.
  args:
    - ''
  params: [ ]
randomreddit_string:
  desc: Execute the RandomReddit command
  args:
    - text
  params:
    - *o370
rip_IGuildUser:
  desc: Displays a RIP image with the user's name and avatar.
  args:
    - '@user'
  params:
    - *o371
weather_string:
  desc: Execute the Weather command
  args:
    - text
  params:
    - *o372
time_string:
  desc: Execute the Time command
  args:
    - text
  params:
    - *o373
youtube_string:
  desc: Execute the Youtube command
  args:
    - text
  params:
    - *o374
movie_=:
  desc: Execute the Movie command
  args:
    - null
  params:
    - *o3
randomcat_noparams:
  desc: Displays a random cat image.
  args:
    - ''
  params: [ ]
randomdog_noparams:
  desc: Displays a random dog image.
  args:
    - ''
  params: [ ]
randomfood_noparams:
  desc: Displays a random food image.
  args:
    - ''
  params: [ ]
randombird_noparams:
  desc: Displays birb.
  args:
    - ''
  params: [ ]
image_string:
  desc: Execute the Image command
  args:
    - text
  params:
    - &o388
      name: query
      desc: The search query for the image.
      type: string
      optional: false
shorten_string:
  desc: Execute the Shorten command
  args:
    - text
  params:
    - *o375
google_=:
  desc: Execute the Google command
  args:
    - null
  params:
    - *o3
urbandict_=:
  desc: Execute the UrbanDict command
  args:
    - null
  params:
    - *o3
define_string:
  desc: Execute the Define command
  args:
    - text
  params:
    - *o378
catfact_noparams:
  desc: Fetches and shares a random cat fact.
  args:
    - ''
  params: [ ]
revav_=:
  desc: Execute the Revav command
  args:
    - null
  params:
    - *o3
revimg_=:
  desc: Execute the Revimg command
  args:
    - null
  params:
    - *o3
safebooru_=_1:
  desc: Execute the Safebooru command
  args:
    - null
  params:
    - *o3
wiki_=:
  desc: Execute the Wiki command
  args:
    - null
  params:
    - *o3
color_SKColor[]:
  desc: Execute the Color command
  args:
    - colors
  params:
    - *o379
wikia_string_string:
  desc: Execute the Wikia command
  args:
    - text text
  params:
    - *o380
    - *o381
bible_string_string:
  desc: Execute the Bible command
  args:
    - text text
  params:
    - *o382
    - *o383
steam_string:
  desc: Execute the Steam command
  args:
    - text
  params:
    - *o384
resolvetonetags_string:
  desc: Execute the ResolveToneTags command
  args:
    - text
  params:
    - *o385
meme_noparams_1:
  desc: The Searches module provides commands for searching and retrieving various types of information. It includes commands for searching memes, Reddit posts, weather, and more.
  args:
    - ''
  params: [ ]
randomreddit_string_1:
  desc: Fetches and displays a random post from a specified subreddit.
  args:
    - text
  params:
    - *o370
rip_IGuildUser_1:
  desc: Displays a RIP image with the user's name and avatar.
  args:
    - '@user'
  params:
    - *o371
weather_string_1:
  desc: Fetches and displays weather information for a given location query.
  args:
    - text
  params:
    - *o372
time_string_1:
  desc: Displays the current time in a specified location.
  args:
    - text
  params:
    - *o373
youtube_string_1:
  desc: Searches for YouTube videos based on a provided query and displays the results.
  args:
    - text
  params:
    - *o374
movie_=_1:
  desc: Fetches and displays information about a movie from IMDb based on the provided query.
  args:
    - null
  params:
    - *o3
randomcat_noparams_1:
  desc: Displays a random cat image.
  args:
    - ''
  params: [ ]
randomdog_noparams_1:
  desc: Displays a random dog image.
  args:
    - ''
  params: [ ]
randomfood_noparams_1:
  desc: Displays a random food image.
  args:
    - ''
  params: [ ]
randombird_noparams_1:
  desc: Displays birb.
  args:
    - ''
  params: [ ]
image_string_1:
  desc: Fetches and displays a random image from the specified category using Martine API.
  args:
    - text
  params:
    - *o386
shorten_string_1:
  desc: Shortens a provided URL using the goolnk.com API.
  args:
    - text
  params:
    - *o375
google_=_1:
  desc: Performs a general search using the Google or DuckDuckGo search engines and displays the results.
  args:
    - null
  params:
    - *o3
urbandict_=_1:
  desc: Searches the Urban Dictionary and displays definitions for a given term.
  args:
    - null
  params:
    - *o3
define_string_1:
  desc: Retrieves and displays a definition from the Pearson dictionary.
  args:
    - text
  params:
    - *o378
catfact_noparams_1:
  desc: Fetches and shares a random cat fact.
  args:
    - ''
  params: [ ]
revav_=_1:
  desc: Performs a reverse image search using an avatar link.
  args:
    - null
  params:
    - *o3
revimg_=_1:
  desc: Performs a reverse image search using the provided image link.
  args:
    - null
  params:
    - *o3
safebooru_=_2:
  desc: Searches for and displays an image based on the provided tag from Safebooru.
  args:
    - null
  params:
    - *o3
wiki_=_1:
  desc: Searches for and displays Wikipedia information based on the provided query.
  args:
    - null
  params:
    - *o3
color_SKColor[]_1:
  desc: Displays a color swatch based on the provided hexadecimal color codes.
  args:
    - colors
  params:
    - *o379
wikia_string_string_1:
  desc: Fetches and displays detailed information about a specific topic from a wikia.
  args:
    - text text
  params:
    - *o380
    - *o381
bible_string_string_1:
  desc: Searches for and displays Bible verses based on the book, chapter, and verse provided.
  args:
    - text text
  params:
    - *o382
    - *o383
steam_string_1:
  desc: Searches for a game on Steam by name and provides a link to its Steam Store page.
  args:
    - text
  params:
    - *o384
resolvetonetags_string_1:
  desc: Resolves tone tags in a message and provides explanations for each identified tag.
  args:
    - text
  params:
    - *o385
meme_noparams_2:
  desc: Fetches and displays a random meme from Reddit.
  args:
    - ''
  params: [ ]
randomreddit_string_2:
  desc: Execute the RandomReddit command
  args:
    - text
  params:
    - *o370
rip_IGuildUser_2:
  desc: Displays a RIP image with the user's name and avatar.
  args:
    - '@user'
  params:
    - *o371
weather_string_2:
  desc: Execute the Weather command
  args:
    - text
  params:
    - *o372
time_string_2:
  desc: Execute the Time command
  args:
    - text
  params:
    - *o373
youtube_string_2:
  desc: Execute the Youtube command
  args:
    - text
  params:
    - *o374
movie_=_2:
  desc: Execute the Movie command
  args:
    - null
  params:
    - *o3
randomcat_noparams_2:
  desc: Displays a random cat image.
  args:
    - ''
  params: [ ]
randomdog_noparams_2:
  desc: Displays a random dog image.
  args:
    - ''
  params: [ ]
randomfood_noparams_2:
  desc: Displays a random food image.
  args:
    - ''
  params: [ ]
randombird_noparams_2:
  desc: Displays birb.
  args:
    - ''
  params: [ ]
image_string_2:
  desc: Execute the Image command
  args:
    - text
  params:
    - *o388
shorten_string_2:
  desc: Execute the Shorten command
  args:
    - text
  params:
    - *o375
google_=_2:
  desc: Execute the Google command
  args:
    - null
  params:
    - *o3
urbandict_=_2:
  desc: Execute the UrbanDict command
  args:
    - null
  params:
    - *o3
define_string_2:
  desc: Execute the Define command
  args:
    - text
  params:
    - *o378
catfact_noparams_2:
  desc: Fetches and shares a random cat fact.
  args:
    - ''
  params: [ ]
revav_=_2:
  desc: Execute the Revav command
  args:
    - null
  params:
    - *o3
revimg_=_2:
  desc: Execute the Revimg command
  args:
    - null
  params:
    - *o3
safebooru_=_3:
  desc: Execute the Safebooru command
  args:
    - null
  params:
    - *o3
wiki_=_2:
  desc: Execute the Wiki command
  args:
    - null
  params:
    - *o3
color_SKColor[]_2:
  desc: Execute the Color command
  args:
    - colors
  params:
    - *o379
wikia_string_string_2:
  desc: Execute the Wikia command
  args:
    - text text
  params:
    - *o380
    - *o381
bible_string_string_2:
  desc: Execute the Bible command
  args:
    - text text
  params:
    - *o382
    - *o383
steam_string_2:
  desc: Execute the Steam command
  args:
    - text
  params:
    - *o384
resolvetonetags_string_2:
  desc: Execute the ResolveToneTags command
  args:
    - text
  params:
    - *o385
permcontrol:
  desc: Computes the raw value of a set of channel permissions by aggregating their bitwise representations.
  args:
    - channel perm @role perms
  params:
    - &o389
      name: channel
      desc: The channel for which permissions are being modified.
      type: SocketGuildChannel
      optional: false
    - &o390
      name: perm
      desc: The action to perform (Allow, Deny, Inherit).
      type: PermValue
      optional: false
    - &o392
      name: role
      desc: The role to which the permissions modifications apply.
      type: IRole
      optional: false
    - &o391
      name: perms
      desc: A set of permissions to be modified.
      type: ChannelPermission[]
      optional: false
permcontrol_SocketGuildChannel_PermValue_IUser_ChannelPermission[]:
  desc: Modifies channel permissions for a specified user according to the provided permissions and action.
  args:
    - channel perm @user perms
  params:
    - *o389
    - *o390
    - &o393
      name: user
      desc: The user to which the permissions modifications apply.
      type: IUser
      optional: false
    - *o391
permcontrol_SocketGuildChannel_PermValue_IRole_ChannelPermission[]:
  desc: Execute the PermControl command
  args:
    - channel perm @role perms
  params:
    - *o389
    - *o390
    - *o392
    - *o391
permcontrol_SocketGuildChannel_PermValue_IUser_ChannelPermission[]_1:
  desc: Execute the PermControl command
  args:
    - channel perm @user perms
  params:
    - *o389
    - *o390
    - *o393
    - *o391
permcontrol_SocketGuildChannel_PermValue_IRole_ChannelPermission[]_1:
  desc: Contains commands for managing channel permission overrides for roles and users.
  args:
    - channel perm @role perms
  params:
    - *o389
    - *o390
    - *o392
    - *o391
permcontrol_SocketGuildChannel_PermValue_IUser_ChannelPermission[]_2:
  desc: Modifies channel permissions for a specified user according to the provided permissions and action.
  args:
    - channel perm @user perms
  params:
    - *o389
    - *o390
    - *o393
    - *o391
permcontrol_SocketGuildChannel_PermValue_IRole_ChannelPermission[]_2:
  desc: Execute the PermControl command
  args:
    - channel perm @role perms
  params:
    - *o389
    - *o390
    - *o392
    - *o391
permcontrol_SocketGuildChannel_PermValue_IUser_ChannelPermission[]_3:
  desc: Execute the PermControl command
  args:
    - channel perm @user perms
  params:
    - *o389
    - *o390
    - *o393
    - *o391
createroles:
  desc: Creates multiple roles within the guild based on a provided list of role names.
  args:
    - text
  params:
    - &o395
      name: roles
      desc: A space-separated list of role names to create.
      type: string
      optional: false
syncroletoall:
  desc: Synchronizes a role's permissions to all text channels and categories within the guild.
  args:
    - '@role'
  params:
    - &o396
      name: role
      desc: The role to synchronize across the guild.
      type: IRole
      optional: false
syncroletoallchannels:
  desc: Synchronizes a role's permissions to all text channels within the guild.
  args:
    - '@role'
  params:
    - &o397
      name: role
      desc: The role to synchronize across text channels.
      type: IRole
      optional: false
syncroletoallcategories:
  desc: Synchronizes a role's permissions to all categories within the guild.
  args:
    - '@role'
  params:
    - &o398
      name: role
      desc: The role to synchronize across categories.
      type: IRole
      optional: false
deleteroles:
  desc: Deletes a list of roles from the guild.
  args:
    - '@role'
  params:
    - &o399
      name: roles
      desc: An array of roles to delete.
      type: IRole[]
      optional: false
stopjob:
  desc: Stops a mass role operation job by its job number.
  args:
    - number
  params:
    - &o400
      name: jobnum
      desc: The job number of the mass role operation to stop.
      type: int
      optional: false
setroles:
  desc: Modifies the roles of a user by adding new roles and/or removing existing ones.
  args:
    - '@user @role'
  params:
    - &o401
      name: user
      desc: The user whose roles will be modified.
      type: IGuildUser
      optional: false
    - &o402
      name: roles
      desc: The roles to be added to the user.
      type: IRole[]
      optional: false
adduserstorole:
  desc: Assigns a specific role to a list of users, adding the role if they don't already have it.
  args:
    - '@role @user'
    - '@user @role'
  params:
    - &o403
      name: role
      desc: The role to be added to the users.
      type: IRole
      optional: false
    - &o404
      name: users
      desc: The users to whom the role will be added.
      type: IUser[]
      optional: false
removeusersfromrole:
  desc: Removes a specific role from a list of users, if they have the role.
  args:
    - '@role @user'
    - '@user @role'
  params:
    - &o405
      name: role
      desc: The role to be removed from the users.
      type: IRole
      optional: false
    - &o406
      name: users
      desc: The users from whom the role will be removed.
      type: IUser[]
      optional: false
removeroles:
  desc: Removes specified roles from a user.
  args:
    - '@user @role'
  params:
    - &o407
      name: user
      desc: The user from whom the roles will be removed.
      type: IGuildUser
      optional: false
    - &o408
      name: roles
      desc: The roles to be removed from the user.
      type: IRole[]
      optional: false
rolejobs:
  desc: Lists all ongoing mass role operations within the server, providing details about each.
  args:
    - ''
  params: [ ]
addtoall:
  desc: Adds a specified role to all server members.
  args:
    - '@role'
  params:
    - &o409
      name: role
      desc: The role to be added to all server members.
      type: IRole
      optional: false
addtoallbots:
  desc: Adds a specified role to all bots in the server.
  args:
    - '@role'
  params:
    - &o410
      name: role
      desc: The role to be added to all bots.
      type: IRole
      optional: false
addtoallusers:
  desc: Adds a specified role to all human users in the server, excluding bots.
  args:
    - '@role'
  params:
    - &o411
      name: role
      desc: The role to be added to all human users.
      type: IRole
      optional: false
exportrolelist:
  desc: Exports a list of roles and their associated users to a text file, allowing for easy backup and transfer.
  args:
    - ''
  params: [ ]
importrolelist:
  desc: Imports roles and user associations from a text file, applying the specified roles to the mentioned users.
  args:
    - false
  params:
    - *o187
addroletolist:
  desc: Adds a specified role to a list of users defined in an attached file.
  args:
    - '@role'
  params:
    - &o412
      name: role
      desc: The role to be added to the users listed in the attached file.
      type: IRole
      optional: false
addtousersover:
  desc: Adds a specified role to all users who have been a server member for longer than a specified duration.
  args:
    - time @role
  params:
    - &o413
      name: time
      desc: The minimum duration a user must have been a member of the server to receive the role.
      type: StoopidTime
      optional: false
    - &o394
      name: role
      desc: The role to be added to qualifying users.
      type: IRole
      optional: false
addtousersunder:
  desc: Adds a specified role to all users who have been a server member for shorter than a specified duration.
  args:
    - time @role
  params:
    - &o414
      name: time
      desc: The maximum duration a user can have been a member of the server to receive the role.
      type: StoopidTime
      optional: false
    - *o394
removefromall:
  desc: Removes a specified role from all server members.
  args:
    - '@role'
  params:
    - &o415
      name: role
      desc: The role to be removed from all server members.
      type: IRole
      optional: false
removefromallusers:
  desc: Removes a specified role from all human users, excluding bots.
  args:
    - '@role'
  params:
    - &o416
      name: role
      desc: The role to be removed from all human members.
      type: IRole
      optional: false
removefromallbots:
  desc: Removes a specified role from all bots in the server.
  args:
    - '@role'
  params:
    - &o417
      name: role
      desc: The role to be removed from all bots.
      type: IRole
      optional: false
addroletorole:
  desc: Adds a specified role to all users who currently have another specified role.
  args:
    - '@role @role'
  params:
    - &o418
      name: role
      desc: The role to add.
      type: IRole
      optional: false
    - &o419
      name: role2
      desc: The role whose members will receive the new role.
      type: IRole
      optional: false
removefromrole:
  desc: Removes a specified role from all users who currently have another specified role.
  args:
    - '@role @role'
  params:
    - &o420
      name: role
      desc: The role to remove from users.
      type: IRole
      optional: false
    - &o421
      name: role2
      desc: The role whose members will have the first role removed.
      type: IRole
      optional: false
addthenremove:
  desc: Adds a role to users and then removes a different role from them in one operation.
  args:
    - '@role @role'
  params:
    - &o422
      name: role
      desc: The role to add to the users.
      type: IRole
      optional: false
    - &o423
      name: role2
      desc: The role to remove from the same users.
      type: IRole
      optional: false
createroles_string:
  desc: Creates multiple roles within the guild based on a provided list of role names.
  args:
    - text
  params:
    - *o395
syncroletoall_IRole:
  desc: Synchronizes a role's permissions to all text channels and categories within the guild.
  args:
    - '@role'
  params:
    - *o396
syncroletoallchannels_IRole:
  desc: Synchronizes a role's permissions to all text channels within the guild.
  args:
    - '@role'
  params:
    - *o397
syncroletoallcategories_IRole:
  desc: Synchronizes a role's permissions to all categories within the guild.
  args:
    - '@role'
  params:
    - *o398
deleteroles_IRole[]:
  desc: Deletes a list of roles from the guild.
  args:
    - '@role'
  params:
    - *o399
stopjob_int:
  desc: Stops a mass role operation job by its job number.
  args:
    - number
  params:
    - *o400
setroles_IGuildUser_IRole[]:
  desc: Modifies the roles of a user by adding new roles and/or removing existing ones.
  args:
    - '@user @role'
  params:
    - *o401
    - *o402
adduserstorole_IRole_IUser[]:
  desc: Assigns a specific role to a list of users, adding the role if they don't already have it.
  args:
    - '@role @user'
    - '@user @role'
  params:
    - *o403
    - *o404
removeusersfromrole_IRole_IUser[]:
  desc: Removes a specific role from a list of users, if they have the role.
  args:
    - '@role @user'
    - '@user @role'
  params:
    - *o405
    - *o406
removeroles_IGuildUser_IRole[]:
  desc: Removes specified roles from a user.
  args:
    - '@user @role'
  params:
    - *o407
    - *o408
rolejobs_noparams:
  desc: Lists all ongoing mass role operations within the server, providing details about each.
  args:
    - ''
  params: [ ]
addtoall_IRole:
  desc: Adds a specified role to all server members.
  args:
    - '@role'
  params:
    - *o409
addtoallbots_IRole:
  desc: Adds a specified role to all bots in the server.
  args:
    - '@role'
  params:
    - *o410
addtoallusers_IRole:
  desc: Adds a specified role to all human users in the server, excluding bots.
  args:
    - '@role'
  params:
    - *o411
exportrolelist_noparams:
  desc: Exports a list of roles and their associated users to a text file, allowing for easy backup and transfer.
  args:
    - ''
  params: [ ]
importrolelist_=:
  desc: Imports roles and user associations from a text file, applying the specified roles to the mentioned users.
  args:
    - false
  params:
    - *o187
addroletolist_IRole:
  desc: Adds a specified role to a list of users defined in an attached file.
  args:
    - '@role'
  params:
    - *o412
addtousersover_StoopidTime_IRole:
  desc: Execute the AddToUsersOver command
  args:
    - time @role
  params:
    - *o413
    - *o394
addtousersunder_StoopidTime_IRole:
  desc: Execute the AddToUsersUnder command
  args:
    - time @role
  params:
    - *o414
    - *o394
removefromall_IRole:
  desc: Removes a specified role from all server members.
  args:
    - '@role'
  params:
    - *o415
removefromallusers_IRole:
  desc: Removes a specified role from all human users, excluding bots.
  args:
    - '@role'
  params:
    - *o416
removefromallbots_IRole:
  desc: Removes a specified role from all bots in the server.
  args:
    - '@role'
  params:
    - *o417
addroletorole_IRole_IRole:
  desc: Execute the AddRoleToRole command
  args:
    - '@role @role'
  params:
    - *o418
    - *o419
removefromrole_IRole_IRole:
  desc: Execute the RemoveFromRole command
  args:
    - '@role @role'
  params:
    - *o420
    - *o421
addthenremove_IRole_IRole:
  desc: Execute the AddThenRemove command
  args:
    - '@role @role'
  params:
    - *o422
    - *o423
createroles_string_1:
  desc: Provides commands for managing roles within a guild, including creation, deletion, synchronization, and user assignment.
  args:
    - text
  params:
    - *o395
syncroletoall_IRole_1:
  desc: Synchronizes a role's permissions to all text channels and categories within the guild.
  args:
    - '@role'
  params:
    - *o396
syncroletoallchannels_IRole_1:
  desc: Synchronizes a role's permissions to all text channels within the guild.
  args:
    - '@role'
  params:
    - *o397
syncroletoallcategories_IRole_1:
  desc: Synchronizes a role's permissions to all categories within the guild.
  args:
    - '@role'
  params:
    - *o398
deleteroles_IRole[]_1:
  desc: Deletes a list of roles from the guild.
  args:
    - '@role'
  params:
    - *o399
stopjob_int_1:
  desc: Stops a mass role operation job by its job number.
  args:
    - number
  params:
    - *o400
setroles_IGuildUser_IRole[]_1:
  desc: Modifies the roles of a user by adding new roles and/or removing existing ones.
  args:
    - '@user @role'
  params:
    - *o401
    - *o402
adduserstorole_IRole_IUser[]_1:
  desc: Assigns a specific role to a list of users, adding the role if they don't already have it.
  args:
    - '@role @user'
    - '@user @role'
  params:
    - *o403
    - *o404
removeusersfromrole_IRole_IUser[]_1:
  desc: Removes a specific role from a list of users, if they have the role.
  args:
    - '@role @user'
    - '@user @role'
  params:
    - *o405
    - *o406
removeroles_IGuildUser_IRole[]_1:
  desc: Removes specified roles from a user.
  args:
    - '@user @role'
  params:
    - *o407
    - *o408
rolejobs_noparams_1:
  desc: Lists all ongoing mass role operations within the server, providing details about each.
  args:
    - ''
  params: [ ]
addtoall_IRole_1:
  desc: Adds a specified role to all server members.
  args:
    - '@role'
  params:
    - *o409
addtoallbots_IRole_1:
  desc: Adds a specified role to all bots in the server.
  args:
    - '@role'
  params:
    - *o410
addtoallusers_IRole_1:
  desc: Adds a specified role to all human users in the server, excluding bots.
  args:
    - '@role'
  params:
    - *o411
exportrolelist_noparams_1:
  desc: Exports a list of roles and their associated users to a text file, allowing for easy backup and transfer.
  args:
    - ''
  params: [ ]
importrolelist_=_1:
  desc: Imports roles and user associations from a text file, applying the specified roles to the mentioned users.
  args:
    - false
  params:
    - *o187
addroletolist_IRole_1:
  desc: Adds a specified role to a list of users defined in an attached file.
  args:
    - '@role'
  params:
    - *o412
addtousersover_StoopidTime_IRole_1:
  desc: Adds a specified role to all users who have been a server member for longer than a specified duration.
  args:
    - time @role
  params:
    - *o413
    - *o394
addtousersunder_StoopidTime_IRole_1:
  desc: Adds a specified role to all users who have been a server member for shorter than a specified duration.
  args:
    - time @role
  params:
    - *o414
    - *o394
removefromall_IRole_1:
  desc: Removes a specified role from all server members.
  args:
    - '@role'
  params:
    - *o415
removefromallusers_IRole_1:
  desc: Removes a specified role from all human users, excluding bots.
  args:
    - '@role'
  params:
    - *o416
removefromallbots_IRole_1:
  desc: Removes a specified role from all bots in the server.
  args:
    - '@role'
  params:
    - *o417
addroletorole_IRole_IRole_1:
  desc: Adds a specified role to all users who currently have another specified role.
  args:
    - '@role @role'
  params:
    - *o418
    - *o419
removefromrole_IRole_IRole_1:
  desc: Removes a specified role from all users who currently have another specified role.
  args:
    - '@role @role'
  params:
    - *o420
    - *o421
addthenremove_IRole_IRole_1:
  desc: Adds a role to users and then removes a different role from them in one operation.
  args:
    - '@role @role'
  params:
    - *o422
    - *o423
createroles_string_2:
  desc: Creates multiple roles within the guild based on a provided list of role names.
  args:
    - text
  params:
    - *o395
syncroletoall_IRole_2:
  desc: Synchronizes a role's permissions to all text channels and categories within the guild.
  args:
    - '@role'
  params:
    - *o396
syncroletoallchannels_IRole_2:
  desc: Synchronizes a role's permissions to all text channels within the guild.
  args:
    - '@role'
  params:
    - *o397
syncroletoallcategories_IRole_2:
  desc: Synchronizes a role's permissions to all categories within the guild.
  args:
    - '@role'
  params:
    - *o398
deleteroles_IRole[]_2:
  desc: Deletes a list of roles from the guild.
  args:
    - '@role'
  params:
    - *o399
stopjob_int_2:
  desc: Stops a mass role operation job by its job number.
  args:
    - number
  params:
    - *o400
setroles_IGuildUser_IRole[]_2:
  desc: Modifies the roles of a user by adding new roles and/or removing existing ones.
  args:
    - '@user @role'
  params:
    - *o401
    - *o402
adduserstorole_IRole_IUser[]_2:
  desc: Assigns a specific role to a list of users, adding the role if they don't already have it.
  args:
    - '@role @user'
    - '@user @role'
  params:
    - *o403
    - *o404
removeusersfromrole_IRole_IUser[]_2:
  desc: Removes a specific role from a list of users, if they have the role.
  args:
    - '@role @user'
    - '@user @role'
  params:
    - *o405
    - *o406
removeroles_IGuildUser_IRole[]_2:
  desc: Removes specified roles from a user.
  args:
    - '@user @role'
  params:
    - *o407
    - *o408
rolejobs_noparams_2:
  desc: Lists all ongoing mass role operations within the server, providing details about each.
  args:
    - ''
  params: [ ]
addtoall_IRole_2:
  desc: Adds a specified role to all server members.
  args:
    - '@role'
  params:
    - *o409
addtoallbots_IRole_2:
  desc: Adds a specified role to all bots in the server.
  args:
    - '@role'
  params:
    - *o410
addtoallusers_IRole_2:
  desc: Adds a specified role to all human users in the server, excluding bots.
  args:
    - '@role'
  params:
    - *o411
exportrolelist_noparams_2:
  desc: Exports a list of roles and their associated users to a text file, allowing for easy backup and transfer.
  args:
    - ''
  params: [ ]
importrolelist_=_2:
  desc: Imports roles and user associations from a text file, applying the specified roles to the mentioned users.
  args:
    - false
  params:
    - *o187
addroletolist_IRole_2:
  desc: Adds a specified role to a list of users defined in an attached file.
  args:
    - '@role'
  params:
    - *o412
addtousersover_StoopidTime_IRole_2:
  desc: Execute the AddToUsersOver command
  args:
    - time @role
  params:
    - *o413
    - *o394
addtousersunder_StoopidTime_IRole_2:
  desc: Execute the AddToUsersUnder command
  args:
    - time @role
  params:
    - *o414
    - *o394
removefromall_IRole_2:
  desc: Removes a specified role from all server members.
  args:
    - '@role'
  params:
    - *o415
removefromallusers_IRole_2:
  desc: Removes a specified role from all human users, excluding bots.
  args:
    - '@role'
  params:
    - *o416
removefromallbots_IRole_2:
  desc: Removes a specified role from all bots in the server.
  args:
    - '@role'
  params:
    - *o417
addroletorole_IRole_IRole_2:
  desc: Execute the AddRoleToRole command
  args:
    - '@role @role'
  params:
    - *o418
    - *o419
removefromrole_IRole_IRole_2:
  desc: Execute the RemoveFromRole command
  args:
    - '@role @role'
  params:
    - *o420
    - *o421
addthenremove_IRole_IRole_2:
  desc: Execute the AddThenRemove command
  args:
    - '@role @role'
  params:
    - *o422
    - *o423
permview:
  desc: Contains commands related to server management.
  args:
    - ''
  params: [ ]
permview_IGuildUser:
  desc: Displays the list of allowed permissions for the specified user.
  args:
    - '@user'
  params:
    - &o426
      name: user
      desc: The role whose permissions will be displayed.
      type: IGuildUser
      optional: false
permview_IRole:
  desc: Displays the list of allowed permissions for the specified role.
  args:
    - '@role'
  params:
    - &o427
      name: user
      desc: The role whose permissions will be displayed.
      type: IRole
      optional: false
setsplash:
  desc: Sets the splash image of the server.
  args:
    - text
  params:
    - name: img
      desc: The URL of the new splash image.
      type: string
      optional: false
seticon:
  desc: Sets the icon of the server.
  args:
    - text
  params:
    - &o428
      name: img
      desc: The URL of the new server icon.
      type: string
      optional: false
setbanner:
  desc: Sets the banner of the server.
  args:
    - text
  params:
    - &o429
      name: img
      desc: The URL of the new server banner.
      type: string
      optional: false
setservername:
  desc: Sets the name of the server.
  args:
    - text
  params:
    - &o424
      name: name
      desc: The name of the emote.
      type: string
      optional: false
addemote:
  desc: Adds a new emote to the server.
  args:
    - text null
    - text
  params:
    - *o424
    - *o3
removeemote:
  desc: Removes an emote from the server.
  args:
    - text
  params:
    - &o430
      name: _
      desc: Placeholder parameter to satisfy command signature requirements.
      type: string
      optional: false
renameemote:
  desc: Renames an existing emote on the server.
  args:
    - text text
  params:
    - &o431
      name: emote
      desc: The existing emote to rename.
      type: string
      optional: false
    - &o432
      name: name
      desc: The new name for the emote.
      type: string
      optional: false
stealemotes:
  desc: Steals emotes from a message and adds them to the server.
  args:
    - text
  params:
    - &o425
      name: e
      desc: The message containing the emotes to steal.
      type: string
      optional: false
stealforrole:
  desc: Steals emotes from a message and locks them to a specified role.
  args:
    - '@role text'
  params:
    - &o433
      name: role
      desc: The role to add the emotes to.
      type: IRole
      optional: false
    - *o425
permview_noparams:
  desc: Contains commands related to server management.
  args:
    - ''
  params: [ ]
permview_IGuildUser_1:
  desc: Displays the list of allowed permissions for the specified user.
  args:
    - '@user'
  params:
    - *o426
permview_IRole_1:
  desc: Displays the list of allowed permissions for the specified role.
  args:
    - '@role'
  params:
    - *o427
setsplash_string:
  desc: Sets the splash image of the server.
  args:
    - text
  params:
    - *o428
seticon_string:
  desc: Sets the icon of the server.
  args:
    - text
  params:
    - *o429
setbanner_string:
  desc: Sets the banner of the server.
  args:
    - text
  params:
    - *o429
setservername_string:
  desc: Sets the name of the server.
  args:
    - text
  params:
    - *o424
addemote_string_=:
  desc: Adds a new emote to the server.
  args:
    - text null
    - text
  params:
    - *o424
    - *o3
removeemote_string:
  desc: Removes an emote from the server.
  args:
    - text
  params:
    - *o430
renameemote_string_string:
  desc: Renames an existing emote on the server.
  args:
    - text text
  params:
    - *o431
    - *o432
stealemotes_string:
  desc: Steals emotes from a message and adds them to the server.
  args:
    - text
  params:
    - *o425
stealforrole_IRole_string:
  desc: Steals emotes from a message and locks them to a specified role.
  args:
    - '@role text'
  params:
    - *o433
    - *o425
lockdown:
  desc: Locks down the server based on the specified lockdown type (Joins, Readonly, Full).
  args:
    - lockdowntype.readonly punishmentaction.ban false
  params:
    - &o434
      name: LockdownType.Readonly
      desc: ''
      type: =
      optional: false
    - &o437
      name: PunishmentAction.Ban
      desc: ''
      type: =
      optional: false
    - *o187
liftlockdown:
  desc: Lifts the lockdown based on the specified lockdown type (Joins, Readonly, Full).
  args:
    - lockdowntype.readonly
  params:
    - *o434
moveto:
  desc: Moves the command issuer to a specified voice channel.
  args:
    - channel
  params:
    - &o435
      name: channel
      desc: The target voice channel to move the user to.
      type: IVoiceChannel
      optional: false
moveuserto:
  desc: Moves a specified user to a given voice channel.
  args:
    - '@user channel'
  params:
    - &o448
      name: user
      desc: The user to be moved.
      type: IGuildUser
      optional: false
    - *o435
grab:
  desc: Brings a user to the command issuer's current voice channel.
  args:
    - '@user'
  params:
    - &o438
      name: user
      desc: The user to grab and move.
      type: IGuildUser
      optional: false
unlockdown:
  desc: Unlocks the server by allowing @everyone to send messages again.
  args:
    - ''
  params: [ ]
nuke:
  desc: Deletes and recreates a text channel, effectively "nuking" it.
  args:
    - null
  params:
    - *o3
lock:
  desc: Enables or disables slowmode in a channel, with customizable duration.
  args:
    - null
  params:
    - *o3
createcatandtxtchannels:
  desc: Creates a category and the specified channels in a server.
  args:
    - text text
  params:
    - &o439
      name: catName
      desc: The name of the category to create
      type: string
      optional: false
    - &o440
      name: channels
      desc: The names of the channels to create
      type: string[]
      optional: false
createcatandvcchannels:
  desc: Creates a category with multiple voice channels in it.
  args:
    - text text
  params:
    - &o441
      name: catName
      desc: The name of the category to be created.
      type: string
      optional: false
    - &o442
      name: channels
      desc: The names of the voice channels to be created within the category.
      type: string[]
      optional: false
createcatvcchans:
  desc: Adds multiple voice channels to an existing category.
  args:
    - chan text
  params:
    - &o436
      name: chan
      desc: The target category channel.
      type: ICategoryChannel
      optional: false
    - &o443
      name: channels
      desc: The names of the voice channels to be added.
      type: string[]
      optional: false
createcattxtchans:
  desc: Adds multiple text channels to an existing category.
  args:
    - chan text
  params:
    - *o436
    - &o444
      name: channels
      desc: The names of the text channels to be added.
      type: string[]
      optional: false
unlock:
  desc: Unlocks a specific channel, allowing everyone to send messages again.
  args:
    - null
  params:
    - *o3
slowmode:
  desc: Applies or removes slowmode settings in a channel.
  args:
    - time channel
  params:
    - &o449
      name: time
      desc: The duration for slowmode. Use 0 or omit to toggle or remove slowmode.
      type: StoopidTime
      optional: false
    - &o446
      name: channel
      desc: The channel to apply slowmode to. If omitted, applies to the current channel.
      type: ITextChannel
      optional: false
slowmode_StoopidTime:
  desc: Sets the slowmode interval for the current text channel.
  args:
    - time
  params:
    - &o445
      name: time
      desc: The duration for slowmode, specified in various time formats (e.g., "1m", "30s").
      type: StoopidTime
      optional: false
slowmode_ITextChannel:
  desc: Sets or removes the slowmode interval for a specified text channel.
  args:
    - channel
  params:
    - &o447
      name: channel
      desc: The text channel to apply the slowmode settings to.
      type: ITextChannel
      optional: false
slowmode_noparams:
  desc: Toggles the slowmode interval for the current text channel between off and a default interval.
  args:
    - ''
  params: [ ]
createwebhook:
  desc: Creates a webhook in a text channel with an optional custom avatar.
  args:
    - channel text null
    - channel text
  params:
    - *o190
    - *o43
    - *o3
lockdown_=_=_=:
  desc: Execute the Lockdown command
  args:
    - lockdowntype.readonly punishmentaction.ban false
  params:
    - *o434
    - *o437
    - *o187
liftlockdown_=:
  desc: Lifts the lockdown based on the specified lockdown type (Joins, Readonly, Full).
  args:
    - lockdowntype.readonly
  params:
    - *o434
moveto_IVoiceChannel:
  desc: Moves the command issuer to a specified voice channel.
  args:
    - channel
  params:
    - *o435
moveuserto_IGuildUser_IVoiceChannel:
  desc: Moves a specified user to a given voice channel.
  args:
    - '@user channel'
  params:
    - *o438
    - *o435
grab_IGuildUser:
  desc: Brings a user to the command issuer's current voice channel.
  args:
    - '@user'
  params:
    - *o438
unlockdown_noparams:
  desc: Unlocks the server by allowing @everyone to send messages again.
  args:
    - ''
  params: [ ]
nuke_=:
  desc: Deletes and recreates a text channel, effectively "nuking" it.
  args:
    - null
  params:
    - *o3
lock_=:
  desc: Enables or disables slowmode in a channel, with customizable duration.
  args:
    - null
  params:
    - *o3
createcatandtxtchannels_string_string[]:
  desc: Creates a category and the specified channels in a server.
  args:
    - text text
  params:
    - *o439
    - *o440
createcatandvcchannels_string_string[]:
  desc: Creates a category with multiple voice channels in it.
  args:
    - text text
  params:
    - *o441
    - *o442
createcatvcchans_ICategoryChannel_string[]:
  desc: Adds multiple voice channels to an existing category.
  args:
    - chan text
  params:
    - *o436
    - *o443
createcattxtchans_ICategoryChannel_string[]:
  desc: Adds multiple text channels to an existing category.
  args:
    - chan text
  params:
    - *o436
    - *o444
unlock_=:
  desc: Unlocks a specific channel, allowing everyone to send messages again.
  args:
    - null
  params:
    - *o3
slowmode_StoopidTime_ITextChannel:
  desc: Execute the Slowmode command
  args:
    - time channel
  params:
    - *o445
    - *o446
slowmode_StoopidTime_1:
  desc: Execute the Slowmode command
  args:
    - time
  params:
    - *o445
slowmode_ITextChannel_1:
  desc: Execute the Slowmode command
  args:
    - channel
  params:
    - *o447
slowmode_noparams_1:
  desc: Execute the Slowmode command
  args:
    - ''
  params: [ ]
createwebhook_ITextChannel_string_=:
  desc: Creates a webhook in a text channel with an optional custom avatar.
  args:
    - channel text null
    - channel text
  params:
    - *o190
    - *o43
    - *o3
lockdown_=_=_=_1:
  desc: Represents the type of lockdown that can be applied to the server.
  args:
    - lockdowntype.readonly punishmentaction.ban false
  params:
    - *o434
    - *o437
    - *o187
liftlockdown_=_1:
  desc: Lifts the lockdown based on the specified lockdown type (Joins, Readonly, Full).
  args:
    - lockdowntype.readonly
  params:
    - *o434
moveto_IVoiceChannel_1:
  desc: Moves the command issuer to a specified voice channel.
  args:
    - channel
  params:
    - *o435
moveuserto_IGuildUser_IVoiceChannel_1:
  desc: Moves a specified user to a given voice channel.
  args:
    - '@user channel'
  params:
    - *o448
    - *o435
grab_IGuildUser_1:
  desc: Brings a user to the command issuer's current voice channel.
  args:
    - '@user'
  params:
    - *o438
unlockdown_noparams_1:
  desc: Unlocks the server by allowing @everyone to send messages again.
  args:
    - ''
  params: [ ]
nuke_=_1:
  desc: Deletes and recreates a text channel, effectively "nuking" it.
  args:
    - null
  params:
    - *o3
lock_=_1:
  desc: Enables or disables slowmode in a channel, with customizable duration.
  args:
    - null
  params:
    - *o3
createcatandtxtchannels_string_string[]_1:
  desc: Creates a category and the specified channels in a server.
  args:
    - text text
  params:
    - *o439
    - *o440
createcatandvcchannels_string_string[]_1:
  desc: Creates a category with multiple voice channels in it.
  args:
    - text text
  params:
    - *o441
    - *o442
createcatvcchans_ICategoryChannel_string[]_1:
  desc: Adds multiple voice channels to an existing category.
  args:
    - chan text
  params:
    - *o436
    - *o443
createcattxtchans_ICategoryChannel_string[]_1:
  desc: Adds multiple text channels to an existing category.
  args:
    - chan text
  params:
    - *o436
    - *o444
unlock_=_1:
  desc: Unlocks a specific channel, allowing everyone to send messages again.
  args:
    - null
  params:
    - *o3
slowmode_StoopidTime_ITextChannel_1:
  desc: Applies or removes slowmode settings in a channel.
  args:
    - time channel
  params:
    - *o449
    - *o446
slowmode_StoopidTime_2:
  desc: Sets the slowmode interval for the current text channel.
  args:
    - time
  params:
    - *o445
slowmode_ITextChannel_2:
  desc: Sets or removes the slowmode interval for a specified text channel.
  args:
    - channel
  params:
    - *o447
slowmode_noparams_2:
  desc: Toggles the slowmode interval for the current text channel between off and a default interval.
  args:
    - ''
  params: [ ]
createwebhook_ITextChannel_string_=_1:
  desc: Creates a webhook in a text channel with an optional custom avatar.
  args:
    - channel text null
    - channel text
  params:
    - *o190
    - *o43
    - *o3
lockdown_=_=_=_2:
  desc: Execute the Lockdown command
  args:
    - lockdowntype.readonly punishmentaction.ban false
  params:
    - *o434
    - *o437
    - *o187
liftlockdown_=_2:
  desc: Lifts the lockdown based on the specified lockdown type (Joins, Readonly, Full).
  args:
    - lockdowntype.readonly
  params:
    - *o434
moveto_IVoiceChannel_2:
  desc: Moves the command issuer to a specified voice channel.
  args:
    - channel
  params:
    - *o435
moveuserto_IGuildUser_IVoiceChannel_2:
  desc: Moves a specified user to a given voice channel.
  args:
    - '@user channel'
  params:
    - *o438
    - *o435
grab_IGuildUser_2:
  desc: Brings a user to the command issuer's current voice channel.
  args:
    - '@user'
  params:
    - *o438
unlockdown_noparams_2:
  desc: Unlocks the server by allowing @everyone to send messages again.
  args:
    - ''
  params: [ ]
nuke_=_2:
  desc: Deletes and recreates a text channel, effectively "nuking" it.
  args:
    - null
  params:
    - *o3
lock_=_2:
  desc: Enables or disables slowmode in a channel, with customizable duration.
  args:
    - null
  params:
    - *o3
createcatandtxtchannels_string_string[]_2:
  desc: Creates a category and the specified channels in a server.
  args:
    - text text
  params:
    - *o439
    - *o440
createcatandvcchannels_string_string[]_2:
  desc: Creates a category with multiple voice channels in it.
  args:
    - text text
  params:
    - *o441
    - *o442
createcatvcchans_ICategoryChannel_string[]_2:
  desc: Adds multiple voice channels to an existing category.
  args:
    - chan text
  params:
    - *o436
    - *o443
createcattxtchans_ICategoryChannel_string[]_2:
  desc: Adds multiple text channels to an existing category.
  args:
    - chan text
  params:
    - *o436
    - *o444
unlock_=_2:
  desc: Unlocks a specific channel, allowing everyone to send messages again.
  args:
    - null
  params:
    - *o3
slowmode_StoopidTime_ITextChannel_2:
  desc: Execute the Slowmode command
  args:
    - time channel
  params:
    - *o445
    - *o446
slowmode_StoopidTime_3:
  desc: Execute the Slowmode command
  args:
    - time
  params:
    - *o445
slowmode_ITextChannel_3:
  desc: Execute the Slowmode command
  args:
    - channel
  params:
    - *o447
slowmode_noparams_3:
  desc: Execute the Slowmode command
  args:
    - ''
  params: [ ]
createwebhook_ITextChannel_string_=_2:
  desc: Creates a webhook in a text channel with an optional custom avatar.
  args:
    - channel text null
    - channel text
  params:
    - *o190
    - *o43
    - *o3
setdefaultpunishment:
  desc: Sets the default punishment action for the guild.
  args:
    - punishmentaction
  params:
    - &o453
      name: punishmentAction
      desc: Optional punishment action specific to this permission.
      type: PunishmentAction
      optional: false
addblacklistedrole:
  desc: Adds a role to the blacklist.
  args:
    - '@role null'
    - '@role'
  params:
    - &o450
      name: role
      desc: The role to remove from the blacklist.
      type: IRole
      optional: false
    - *o3
removeblacklistedrole:
  desc: Removes a role from the blacklist.
  args:
    - '@role'
  params:
    - *o450
addblacklistedpermission:
  desc: Adds a permission to the blacklist.
  args:
    - permission null
    - permission
  params:
    - &o455
      name: permission
      desc: The permission to blacklist.
      type: GuildPermission
      optional: false
    - *o3
removeblacklistedpermission:
  desc: Removes a permission from the blacklist.
  args:
    - permission
  params:
    - &o454
      name: permission
      desc: The permission to remove from the blacklist.
      type: GuildPermission
      optional: false
addwhitelisteduser:
  desc: Adds a user to the whitelist.
  args:
    - '@user'
  params:
    - &o451
      name: user
      desc: The user to remove from the whitelist.
      type: IGuildUser
      optional: false
removewhitelisteduser:
  desc: Removes a user from the whitelist.
  args:
    - '@user'
  params:
    - *o451
addwhitelistedrole:
  desc: Adds a role to the whitelist.
  args:
    - '@role'
  params:
    - &o452
      name: role
      desc: The role to remove from the whitelist.
      type: IRole
      optional: false
removewhitelistedrole:
  desc: Removes a role from the whitelist.
  args:
    - '@role'
  params:
    - *o452
listblacklists:
  desc: Lists all blacklisted and whitelisted roles and permissions.
  args:
    - ''
  params: [ ]
setdefaultpunishment_PunishmentAction:
  desc: Sets the default punishment action for the guild.
  args:
    - punishmentaction
  params:
    - *o453
addblacklistedrole_IRole_=:
  desc: Adds a role to the blacklist.
  args:
    - '@role null'
    - '@role'
  params:
    - *o450
    - *o3
removeblacklistedrole_IRole:
  desc: Removes a role from the blacklist.
  args:
    - '@role'
  params:
    - *o450
addblacklistedpermission_GuildPermission_=:
  desc: Adds a permission to the blacklist.
  args:
    - permission null
    - permission
  params:
    - *o454
    - *o3
removeblacklistedpermission_GuildPermission:
  desc: Removes a permission from the blacklist.
  args:
    - permission
  params:
    - *o454
addwhitelisteduser_IGuildUser:
  desc: Adds a user to the whitelist.
  args:
    - '@user'
  params:
    - *o451
removewhitelisteduser_IGuildUser:
  desc: Removes a user from the whitelist.
  args:
    - '@user'
  params:
    - *o451
addwhitelistedrole_IRole:
  desc: Adds a role to the whitelist.
  args:
    - '@role'
  params:
    - *o452
removewhitelistedrole_IRole:
  desc: Removes a role from the whitelist.
  args:
    - '@role'
  params:
    - *o452
listblacklists_noparams:
  desc: Lists all blacklisted and whitelisted roles and permissions.
  args:
    - ''
  params: [ ]
setdefaultpunishment_PunishmentAction_1:
  desc: Manages role monitoring settings, blacklists, and whitelists.
  args:
    - punishmentaction
  params:
    - &o456
      name: punishmentAction
      desc: Optional punishment action specific to this role.
      type: PunishmentAction
      optional: false
addblacklistedrole_IRole_=_1:
  desc: Adds a role to the blacklist.
  args:
    - '@role null'
    - '@role'
  params:
    - *o450
    - *o3
removeblacklistedrole_IRole_1:
  desc: Removes a role from the blacklist.
  args:
    - '@role'
  params:
    - *o450
addblacklistedpermission_GuildPermission_=_1:
  desc: Adds a permission to the blacklist.
  args:
    - permission null
    - permission
  params:
    - *o455
    - *o3
removeblacklistedpermission_GuildPermission_1:
  desc: Removes a permission from the blacklist.
  args:
    - permission
  params:
    - *o454
addwhitelisteduser_IGuildUser_1:
  desc: Adds a user to the whitelist.
  args:
    - '@user'
  params:
    - *o451
removewhitelisteduser_IGuildUser_1:
  desc: Removes a user from the whitelist.
  args:
    - '@user'
  params:
    - *o451
addwhitelistedrole_IRole_1:
  desc: Adds a role to the whitelist.
  args:
    - '@role'
  params:
    - *o452
removewhitelistedrole_IRole_1:
  desc: Removes a role from the whitelist.
  args:
    - '@role'
  params:
    - *o452
listblacklists_noparams_1:
  desc: Lists all blacklisted and whitelisted roles and permissions.
  args:
    - ''
  params: [ ]
setdefaultpunishment_PunishmentAction_2:
  desc: Sets the default punishment action for the guild.
  args:
    - punishmentaction
  params:
    - *o456
addblacklistedrole_IRole_=_2:
  desc: Adds a role to the blacklist.
  args:
    - '@role null'
    - '@role'
  params:
    - *o450
    - *o3
removeblacklistedrole_IRole_2:
  desc: Removes a role from the blacklist.
  args:
    - '@role'
  params:
    - *o450
addblacklistedpermission_GuildPermission_=_2:
  desc: Adds a permission to the blacklist.
  args:
    - permission null
    - permission
  params:
    - *o454
    - *o3
removeblacklistedpermission_GuildPermission_2:
  desc: Removes a permission from the blacklist.
  args:
    - permission
  params:
    - *o454
addwhitelisteduser_IGuildUser_2:
  desc: Adds a user to the whitelist.
  args:
    - '@user'
  params:
    - *o451
removewhitelisteduser_IGuildUser_2:
  desc: Removes a user from the whitelist.
  args:
    - '@user'
  params:
    - *o451
addwhitelistedrole_IRole_2:
  desc: Adds a role to the whitelist.
  args:
    - '@role'
  params:
    - *o452
removewhitelistedrole_IRole_2:
  desc: Removes a role from the whitelist.
  args:
    - '@role'
  params:
    - *o452
listblacklists_noparams_2:
  desc: Lists all blacklisted and whitelisted roles and permissions.
  args:
    - ''
  params: [ ]
createstarboard:
  desc: Enum representing the mode for whitelisting or blacklisting channels for starboard.
  args:
    - channel emote 1
    - channel emote
  params:
    - &o458
      name: channel
      desc: The channel where starred messages will be posted.
      type: ITextChannel
      optional: false
    - &o459
      name: emote
      desc: The emote to use for starring messages.
      type: IEmote
      optional: false
    - *o153
deletestarboard:
  desc: Removes a starboard configuration from the guild.
  args:
    - number
  params:
    - &o460
      name: starboardId
      desc: The ID of the starboard to remove.
      type: int
      optional: false
liststarboards:
  desc: Lists all starboard configurations in the guild.
  args:
    - ''
  params: [ ]
starboardallowbots:
  desc: Sets whether bots are allowed to be counted for a specific starboard.
  args:
    - number true|false
  params:
    - &o457
      name: starboardId
      desc: The ID of the starboard configuration.
      type: int
      optional: false
    - &o466
      name: enabled
      desc: Whether to allow bots to be counted.
      type: bool
      optional: false
starboardremoveonreactionsclear:
  desc: Sets whether to remove starboard posts when reactions are cleared.
  args:
    - number true|false
  params:
    - *o457
    - &o461
      name: enabled
      desc: Whether to remove posts when reactions are cleared.
      type: bool
      optional: false
starboardremoveondelete:
  desc: Sets whether to remove starboard posts when the original message is deleted.
  args:
    - number true|false
  params:
    - *o457
    - &o467
      name: enabled
      desc: Whether to remove posts when the original message is deleted.
      type: bool
      optional: false
starboardremoveonbelowthreshold:
  desc: Sets whether to remove starboard posts when they fall below the threshold.
  args:
    - number true|false
  params:
    - *o457
    - &o462
      name: enabled
      desc: Whether to remove posts when they fall below threshold.
      type: bool
      optional: false
starboardwlmode:
  desc: Sets the whitelist/blacklist mode for a starboard configuration.
  args:
    - number whitelist|wl|white
    - whitelist
    - wl
    - white
  params:
    - *o457
    - &o463
      name: mode
      desc: 'The whitelist/blacklist mode to set. Possible values: Whitelist, Wl, White, Blacklist, Bl, Black'
      type: WhitelistMode
      optional: false
starboardchtoggle:
  desc: Toggles whether a channel is checked for a specific starboard.
  args:
    - number channel
  params:
    - *o457
    - &o464
      name: channel
      desc: The channel to toggle.
      type: ITextChannel
      optional: false
setrepostthreshold:
  desc: Sets the repost threshold for a starboard configuration.
  args:
    - number number
  params:
    - *o457
    - &o468
      name: threshold
      desc: The repost threshold to set.
      type: int
      optional: false
setstarthreshold:
  desc: Sets the star threshold for a starboard configuration.
  args:
    - number number
  params:
    - *o457
    - &o465
      name: threshold
      desc: The star threshold to set.
      type: int
      optional: false
createstarboard_ITextChannel_IEmote_=:
  desc: Alias for Blacklist mode.
  args:
    - channel emote 1
    - channel emote
  params:
    - *o458
    - *o459
    - *o153
deletestarboard_int:
  desc: Removes a starboard configuration from the guild.
  args:
    - number
  params:
    - *o460
liststarboards_noparams:
  desc: Lists all starboard configurations in the guild.
  args:
    - ''
  params: [ ]
starboardallowbots_int_bool:
  desc: Sets whether bots are allowed to be counted for a specific starboard.
  args:
    - number true|false
  params:
    - *o457
    - *o461
starboardremoveonreactionsclear_int_bool:
  desc: Sets whether to remove starboard posts when reactions are cleared.
  args:
    - number true|false
  params:
    - *o457
    - *o461
starboardremoveondelete_int_bool:
  desc: Sets whether to remove starboard posts when the original message is deleted.
  args:
    - number true|false
  params:
    - *o457
    - *o462
starboardremoveonbelowthreshold_int_bool:
  desc: Sets whether to remove starboard posts when they fall below the threshold.
  args:
    - number true|false
  params:
    - *o457
    - *o462
starboardwlmode_int_WhitelistMode:
  desc: Sets the whitelist/blacklist mode for a starboard configuration.
  args:
    - number whitelist|wl|white
    - whitelist
    - wl
    - white
  params:
    - *o457
    - *o463
starboardchtoggle_int_ITextChannel:
  desc: Toggles whether a channel is checked for a specific starboard.
  args:
    - number channel
  params:
    - *o457
    - *o464
setrepostthreshold_int_int:
  desc: Sets the repost threshold for a starboard configuration.
  args:
    - number number
  params:
    - *o457
    - *o465
setstarthreshold_int_int:
  desc: Sets the star threshold for a starboard configuration.
  args:
    - number number
  params:
    - *o457
    - *o465
createstarboard_ITextChannel_IEmote_=_1:
  desc: Module for managing multiple starboard configurations in a guild.
  args:
    - channel emote 1
    - channel emote
  params:
    - *o458
    - *o459
    - *o153
deletestarboard_int_1:
  desc: Removes a starboard configuration from the guild.
  args:
    - number
  params:
    - *o460
liststarboards_noparams_1:
  desc: Lists all starboard configurations in the guild.
  args:
    - ''
  params: [ ]
starboardallowbots_int_bool_1:
  desc: Sets whether bots are allowed to be counted for a specific starboard.
  args:
    - number true|false
  params:
    - *o457
    - *o466
starboardremoveonreactionsclear_int_bool_1:
  desc: Sets whether to remove starboard posts when reactions are cleared.
  args:
    - number true|false
  params:
    - *o457
    - *o461
starboardremoveondelete_int_bool_1:
  desc: Sets whether to remove starboard posts when the original message is deleted.
  args:
    - number true|false
  params:
    - *o457
    - *o467
starboardremoveonbelowthreshold_int_bool_1:
  desc: Sets whether to remove starboard posts when they fall below the threshold.
  args:
    - number true|false
  params:
    - *o457
    - *o462
starboardwlmode_int_WhitelistMode_1:
  desc: Sets the whitelist/blacklist mode for a starboard configuration.
  args:
    - number whitelist|wl|white
    - whitelist
    - wl
    - white
  params:
    - *o457
    - *o463
starboardchtoggle_int_ITextChannel_1:
  desc: Toggles whether a channel is checked for a specific starboard.
  args:
    - number channel
  params:
    - *o457
    - *o464
setrepostthreshold_int_int_1:
  desc: Sets the repost threshold for a starboard configuration.
  args:
    - number number
  params:
    - *o457
    - *o468
setstarthreshold_int_int_1:
  desc: Sets the star threshold for a starboard configuration.
  args:
    - number number
  params:
    - *o457
    - *o465
createstarboard_ITextChannel_IEmote_=_2:
  desc: Alias for Blacklist mode.
  args:
    - channel emote 1
    - channel emote
  params:
    - *o458
    - *o459
    - *o153
deletestarboard_int_2:
  desc: Removes a starboard configuration from the guild.
  args:
    - number
  params:
    - *o460
liststarboards_noparams_2:
  desc: Lists all starboard configurations in the guild.
  args:
    - ''
  params: [ ]
starboardallowbots_int_bool_2:
  desc: Sets whether bots are allowed to be counted for a specific starboard.
  args:
    - number true|false
  params:
    - *o457
    - *o461
starboardremoveonreactionsclear_int_bool_2:
  desc: Sets whether to remove starboard posts when reactions are cleared.
  args:
    - number true|false
  params:
    - *o457
    - *o461
starboardremoveondelete_int_bool_2:
  desc: Sets whether to remove starboard posts when the original message is deleted.
  args:
    - number true|false
  params:
    - *o457
    - *o462
starboardremoveonbelowthreshold_int_bool_2:
  desc: Sets whether to remove starboard posts when they fall below the threshold.
  args:
    - number true|false
  params:
    - *o457
    - *o462
starboardwlmode_int_WhitelistMode_2:
  desc: Sets the whitelist/blacklist mode for a starboard configuration.
  args:
    - number whitelist|wl|white
    - whitelist
    - wl
    - white
  params:
    - *o457
    - *o463
starboardchtoggle_int_ITextChannel_2:
  desc: Toggles whether a channel is checked for a specific starboard.
  args:
    - number channel
  params:
    - *o457
    - *o464
setrepostthreshold_int_int_2:
  desc: Sets the repost threshold for a starboard configuration.
  args:
    - number number
  params:
    - *o457
    - *o465
setstarthreshold_int_int_2:
  desc: Sets the star threshold for a starboard configuration.
  args:
    - number number
  params:
    - *o457
    - *o465
addstatusrole:
  desc: Adds a status role configuration.
  args:
    - text
  params:
    - &o471
      name: status
      desc: The status to add.
      type: string
      optional: false
removestatusrole:
  desc: Removes a status role configuration.
  args:
    - number
  params:
    - &o469
      name: index
      desc: The index of the status role.
      type: int
      optional: false
setstatusroleembed:
  desc: Sets or previews the embed text for a specific status role.
  args:
    - number null
    - number
  params:
    - *o469
    - *o3
setstatusrolechannel:
  desc: Sets the channel for a specific status role.
  args:
    - number channel
  params:
    - *o469
    - &o472
      name: channel
      desc: The channel to set.
      type: ITextChannel
      optional: false
setaddroles:
  desc: Sets the roles to add when a user has the selected status.
  args:
    - number @role
  params:
    - *o469
    - &o473
      name: roles
      desc: The roles to add.
      type: IRole[]
      optional: false
setremoveroles:
  desc: Sets the roles to remove when a user has the selected status.
  args:
    - number @role
  params:
    - *o469
    - &o470
      name: roles
      desc: The roles to remove.
      type: IRole[]
      optional: false
removeaddroles:
  desc: Sets the roles to remove when a user has the selected status.
  args:
    - number @role
  params:
    - *o469
    - *o470
removeremoveroles:
  desc: Removes one or more roles from the roles added when a user has the selected status.
  args:
    - number @role
  params:
    - *o469
    - *o470
toggleremoveadded:
  desc: Toggles whether added roles are removed when a user no longer has a status by the provided index
  args:
    - number
  params:
    - *o469
togglereaddremoved:
  desc: Toggles whether added roles are removed when a status is removed.
  args:
    - number
  params:
    - *o469
liststatusroles:
  desc: Lists all current status roles with their details.
  args:
    - ''
  params: [ ]
addstatusrole_string:
  desc: Adds a status role configuration.
  args:
    - text
  params:
    - *o471
removestatusrole_int:
  desc: Removes a status role configuration.
  args:
    - number
  params:
    - *o469
setstatusroleembed_int_=:
  desc: Sets or previews the embed text for a specific status role.
  args:
    - number null
    - number
  params:
    - *o469
    - *o3
setstatusrolechannel_int_ITextChannel:
  desc: Sets the channel for a specific status role.
  args:
    - number channel
  params:
    - *o469
    - *o472
setaddroles_int_IRole[]:
  desc: Sets the roles to add when a user has the selected status.
  args:
    - number @role
  params:
    - *o469
    - *o473
setremoveroles_int_IRole[]:
  desc: Sets the roles to remove when a user has the selected status.
  args:
    - number @role
  params:
    - *o469
    - *o470
removeaddroles_int_IRole[]:
  desc: Sets the roles to remove when a user has the selected status.
  args:
    - number @role
  params:
    - *o469
    - *o470
removeremoveroles_int_IRole[]:
  desc: Removes one or more roles from the roles added when a user has the selected status.
  args:
    - number @role
  params:
    - *o469
    - *o470
toggleremoveadded_int:
  desc: Toggles whether added roles are removed when a user no longer has a status by the provided index
  args:
    - number
  params:
    - *o469
togglereaddremoved_int:
  desc: Toggles whether added roles are removed when a status is removed.
  args:
    - number
  params:
    - *o469
liststatusroles_noparams:
  desc: Lists all current status roles with their details.
  args:
    - ''
  params: [ ]
addstatusrole_string_1:
  desc: Module for managing roles that are assigned based on user status.
  args:
    - text
  params:
    - *o471
removestatusrole_int_1:
  desc: Removes a status role configuration.
  args:
    - number
  params:
    - *o469
setstatusroleembed_int_=_1:
  desc: Sets or previews the embed text for a specific status role.
  args:
    - number null
    - number
  params:
    - *o469
    - *o3
setstatusrolechannel_int_ITextChannel_1:
  desc: Sets the channel for a specific status role.
  args:
    - number channel
  params:
    - *o469
    - *o472
setaddroles_int_IRole[]_1:
  desc: Sets the roles to add when a user has the selected status.
  args:
    - number @role
  params:
    - *o469
    - *o473
setremoveroles_int_IRole[]_1:
  desc: Sets the roles to remove when a user has the selected status.
  args:
    - number @role
  params:
    - *o469
    - *o470
removeaddroles_int_IRole[]_1:
  desc: Sets the roles to remove when a user has the selected status.
  args:
    - number @role
  params:
    - *o469
    - *o470
removeremoveroles_int_IRole[]_1:
  desc: Removes one or more roles from the roles added when a user has the selected status.
  args:
    - number @role
  params:
    - *o469
    - *o470
toggleremoveadded_int_1:
  desc: Toggles whether added roles are removed when a user no longer has a status by the provided index
  args:
    - number
  params:
    - *o469
togglereaddremoved_int_1:
  desc: Toggles whether added roles are removed when a status is removed.
  args:
    - number
  params:
    - *o469
liststatusroles_noparams_1:
  desc: Lists all current status roles with their details.
  args:
    - ''
  params: [ ]
addstatusrole_string_2:
  desc: Module for managing roles that are assigned based on user status.
  args:
    - text
  params:
    - *o471
removestatusrole_int_2:
  desc: Removes a status role configuration.
  args:
    - number
  params:
    - *o469
setstatusroleembed_int_=_2:
  desc: Sets or previews the embed text for a specific status role.
  args:
    - number null
    - number
  params:
    - *o469
    - *o3
setstatusrolechannel_int_ITextChannel_2:
  desc: Sets the channel for a specific status role.
  args:
    - number channel
  params:
    - *o469
    - *o472
setaddroles_int_IRole[]_2:
  desc: Sets the roles to add when a user has the selected status.
  args:
    - number @role
  params:
    - *o469
    - *o473
setremoveroles_int_IRole[]_2:
  desc: Sets the roles to remove when a user has the selected status.
  args:
    - number @role
  params:
    - *o469
    - *o470
removeaddroles_int_IRole[]_2:
  desc: Sets the roles to remove when a user has the selected status.
  args:
    - number @role
  params:
    - *o469
    - *o470
removeremoveroles_int_IRole[]_2:
  desc: Removes one or more roles from the roles added when a user has the selected status.
  args:
    - number @role
  params:
    - *o469
    - *o470
toggleremoveadded_int_2:
  desc: Toggles whether added roles are removed when a user no longer has a status by the provided index
  args:
    - number
  params:
    - *o469
togglereaddremoved_int_2:
  desc: Toggles whether added roles are removed when a status is removed.
  args:
    - number
  params:
    - *o469
liststatusroles_noparams_2:
  desc: Lists all current status roles with their details.
  args:
    - ''
  params: [ ]
setsuggestchannel:
  desc: Sets or disables the suggestion channel for the server.
  args:
    - null
  params:
    - *o3
suggestinfo:
  desc: Provides detailed information about a specific suggestion.
  args:
    - num
  params:
    - &o475
      name: num
      desc: The unique number (ID) of the suggestion to retrieve information for.
      type: ulong
      optional: false
suggestclear:
  desc: Clears all suggestions from the server.
  args:
    - ''
  params: [ ]
suggest:
  desc: Submits a new suggestion to the designated suggestion channel.
  args:
    - text
  params:
    - &o476
      name: suggestion
      desc: The content of the suggestion to be submitted.
      type: string
      optional: false
deny:
  desc: Denies a suggestion, marking it as rejected.
  args:
    - sid null
    - sid
  params:
    - &o477
      name: sid
      desc: The unique number (ID) of the suggestion to accept.
      type: ulong
      optional: false
    - *o3
accept:
  desc: Accepts a suggestion, marking it as approved.
  args:
    - sid null
    - sid
  params:
    - &o478
      name: sid
      desc: The unique number (ID) of the suggestion to mark as implemented.
      type: ulong
      optional: false
    - *o3
implemented:
  desc: Marks a suggestion as implemented.
  args:
    - sid null
    - sid
  params:
    - &o474
      name: sid
      desc: The unique number (ID) of the suggestion to mark as considered.
      type: ulong
      optional: false
    - *o3
consider:
  desc: Marks a suggestion as being considered.
  args:
    - sid null
    - sid
  params:
    - *o474
    - *o3
setsuggestchannel_=:
  desc: Sets or disables the suggestion channel for the server.
  args:
    - null
  params:
    - *o3
suggestinfo_ulong:
  desc: Provides detailed information about a specific suggestion.
  args:
    - num
  params:
    - *o475
suggestclear_noparams:
  desc: Clears all suggestions from the server.
  args:
    - ''
  params: [ ]
suggest_string:
  desc: Submits a new suggestion to the designated suggestion channel.
  args:
    - text
  params:
    - *o476
deny_ulong_=:
  desc: Denies a suggestion, marking it as rejected.
  args:
    - sid null
    - sid
  params:
    - *o477
    - *o3
accept_ulong_=:
  desc: Accepts a suggestion, marking it as approved.
  args:
    - sid null
    - sid
  params:
    - *o478
    - *o3
implemented_ulong_=:
  desc: Marks a suggestion as implemented.
  args:
    - sid null
    - sid
  params:
    - *o474
    - *o3
consider_ulong_=:
  desc: Marks a suggestion as being considered.
  args:
    - sid null
    - sid
  params:
    - *o474
    - *o3
setsuggestchannel_=_1:
  desc: Commands for managing and interacting with suggestions.
  args:
    - null
  params:
    - *o3
suggestinfo_ulong_1:
  desc: Provides detailed information about a specific suggestion.
  args:
    - num
  params:
    - *o475
suggestclear_noparams_1:
  desc: Clears all suggestions from the server.
  args:
    - ''
  params: [ ]
suggest_string_1:
  desc: Submits a new suggestion to the designated suggestion channel.
  args:
    - text
  params:
    - *o476
deny_ulong_=_1:
  desc: Denies a suggestion, marking it as rejected.
  args:
    - sid null
    - sid
  params:
    - *o477
    - *o3
accept_ulong_=_1:
  desc: Accepts a suggestion, marking it as approved.
  args:
    - sid null
    - sid
  params:
    - *o478
    - *o3
implemented_ulong_=_1:
  desc: Marks a suggestion as implemented.
  args:
    - sid null
    - sid
  params:
    - *o474
    - *o3
consider_ulong_=_1:
  desc: Marks a suggestion as being considered.
  args:
    - sid null
    - sid
  params:
    - *o474
    - *o3
setsuggestchannel_=_2:
  desc: Sets or disables the suggestion channel for the server.
  args:
    - null
  params:
    - *o3
suggestinfo_ulong_2:
  desc: Provides detailed information about a specific suggestion.
  args:
    - num
  params:
    - *o475
suggestclear_noparams_2:
  desc: Clears all suggestions from the server.
  args:
    - ''
  params: [ ]
suggest_string_2:
  desc: Submits a new suggestion to the designated suggestion channel.
  args:
    - text
  params:
    - *o476
deny_ulong_=_2:
  desc: Denies a suggestion, marking it as rejected.
  args:
    - sid null
    - sid
  params:
    - *o477
    - *o3
accept_ulong_=_2:
  desc: Accepts a suggestion, marking it as approved.
  args:
    - sid null
    - sid
  params:
    - *o478
    - *o3
implemented_ulong_=_2:
  desc: Marks a suggestion as implemented.
  args:
    - sid null
    - sid
  params:
    - *o474
    - *o3
consider_ulong_=_2:
  desc: Marks a suggestion as being considered.
  args:
    - sid null
    - sid
  params:
    - *o474
    - *o3
suggestmessage:
  desc: Sets or updates the suggestion message.
  args:
    - text
  params:
    - &o479
      name: embed
      desc: The message or embed code. Use "-" to reset to the default message.
      type: string
      optional: false
minsuggestionlength:
  desc: Sets the minimum length for suggestions.
  args:
    - number
  params:
    - &o480
      name: length
      desc: The minimum number of characters a suggestion must have.
      type: int
      optional: false
suggestmotesmode:
  desc: Sets the mode for suggestion emotes, either as reactions or buttons.
  args:
    - reactions|buttons
    - reactions
    - buttons
  params:
    - &o481
      name: mode
      desc: 'The mode to use for suggestion emotes. Possible values: Reactions, Buttons'
      type: SuggestEmoteModeEnum
      optional: false
suggestbuttoncolor:
  desc: Sets the color of the suggestion button.
  args:
    - blurple|blue|grey
    - blurple
    - blue
    - grey
  params:
    - &o489
      name: type
      desc: 'The color type for the suggestion button. Possible values: Blurple, Blue, Grey, Gray, Green, Red'
      type: ButtonType
      optional: false
suggestmotecolor:
  desc: Sets the color of specific emote buttons on suggestions.
  args:
    - number blurple|blue|grey
    - blurple
    - blue
    - grey
  params:
    - &o483
      name: num
      desc: The button number to change.
      type: int
      optional: false
    - &o482
      name: type
      desc: 'The color type to apply to the button. Possible values: Blurple, Blue, Grey, Gray, Green, Red'
      type: ButtonType
      optional: false
maxsuggestionlength:
  desc: Sets the maximum length for suggestions.
  args:
    - number
  params:
    - &o484
      name: length
      desc: The maximum number of characters a suggestion can have.
      type: int
      optional: false
acceptmessage:
  desc: Sets or updates the accept message for suggestions.
  args:
    - text
  params:
    - *o479
acceptchannel:
  desc: Sets the channel where accepted suggestions are posted.
  args:
    - null
  params:
    - *o3
denychannel:
  desc: Sets the channel where denied suggestions are posted.
  args:
    - null
  params:
    - *o3
considerchannel:
  desc: Sets the channel where considered suggestions are posted.
  args:
    - null
  params:
    - *o3
implementchannel:
  desc: Sets the channel where implemented suggestions are posted.
  args:
    - null
  params:
    - *o3
implementmessage:
  desc: Sets or updates the implement message for suggestions.
  args:
    - text
  params:
    - *o479
suggestthreadstype:
  desc: Sets the type of threads used in suggestions.
  args:
    - none|public|private
    - none
    - public
    - private
  params:
    - &o485
      name: type
      desc: 'The type of thread to use for new suggestions. Possible values: None, Public, Private'
      type: SuggestThreadType
      optional: false
suggestbuttonchannel:
  desc: Sets the suggestion button channel.
  args:
    - channel
  params:
    - &o486
      name: channel
      desc: The channel to set as the suggestion button channel.
      type: ITextChannel
      optional: false
suggestbuttonmessage:
  desc: Sets or updates the suggest button message.
  args:
    - text
  params:
    - &o487
      name: toSet
      desc: The message to set for the suggest button. Use "-" to reset to default.
      type: string
      optional: true
suggestbuttonlabel:
  desc: Sets the label for the suggest button.
  args:
    - text
  params:
    - &o488
      name: toSet
      desc: The label text for the suggest button. Use "-" to reset to default.
      type: string
      optional: false
suggestbuttonemote:
  desc: Sets the emote for the suggest button.
  args:
    - null
  params:
    - *o3
archiveondeny:
  desc: Toggles the archive setting for suggestions upon denial.
  args:
    - ''
  params: [ ]
archiveonaccept:
  desc: Toggles the archive setting for suggestions upon acceptance.
  args:
    - ''
  params: [ ]
archiveonconsider:
  desc: Toggles the archive setting for suggestions upon consideration.
  args:
    - ''
  params: [ ]
archiveonimplement:
  desc: Toggles the archive setting for suggestions upon implementation.
  args:
    - ''
  params: [ ]
denymessage:
  desc: Sets or updates the deny message for suggestions.
  args:
    - text
  params:
    - *o479
considermessage:
  desc: Sets or updates the consider message for suggestions.
  args:
    - text
  params:
    - *o479
suggestmotes:
  desc: Configures the custom emotes used for suggestions.
  args:
    - null
  params:
    - *o3
suggestmessage_string:
  desc: Sets or updates the suggestion message.
  args:
    - text
  params:
    - *o479
minsuggestionlength_int:
  desc: Sets the minimum length for suggestions.
  args:
    - number
  params:
    - *o480
suggestmotesmode_SuggestEmoteModeEnum:
  desc: Sets the mode for suggestion emotes, either as reactions or buttons.
  args:
    - reactions|buttons
    - reactions
    - buttons
  params:
    - *o481
suggestbuttoncolor_ButtonType:
  desc: Sets the color of the suggestion button.
  args:
    - blurple|blue|grey
    - blurple
    - blue
    - grey
  params:
    - *o482
suggestmotecolor_int_ButtonType:
  desc: Sets the color of specific emote buttons on suggestions.
  args:
    - number blurple|blue|grey
    - blurple
    - blue
    - grey
  params:
    - *o483
    - *o482
maxsuggestionlength_int:
  desc: Sets the maximum length for suggestions.
  args:
    - number
  params:
    - *o484
acceptmessage_string:
  desc: Sets or updates the accept message for suggestions.
  args:
    - text
  params:
    - *o479
acceptchannel_=:
  desc: Sets the channel where accepted suggestions are posted.
  args:
    - null
  params:
    - *o3
denychannel_=:
  desc: Sets the channel where denied suggestions are posted.
  args:
    - null
  params:
    - *o3
considerchannel_=:
  desc: Execute the ConsiderChannel command
  args:
    - null
  params:
    - *o3
implementchannel_=:
  desc: Execute the ImplementChannel command
  args:
    - null
  params:
    - *o3
implementmessage_string:
  desc: Execute the ImplementMessage command
  args:
    - text
  params:
    - *o479
suggestthreadstype_SuggestThreadType:
  desc: Sets the type of threads used in suggestions.
  args:
    - none|public|private
    - none
    - public
    - private
  params:
    - *o485
suggestbuttonchannel_ITextChannel:
  desc: Sets the suggestion button channel.
  args:
    - channel
  params:
    - *o486
suggestbuttonmessage_string:
  desc: Sets or updates the suggest button message.
  args:
    - text
  params:
    - *o487
suggestbuttonlabel_string:
  desc: Sets the label for the suggest button.
  args:
    - text
  params:
    - *o488
suggestbuttonemote_=:
  desc: Sets the emote for the suggest button.
  args:
    - null
  params:
    - *o3
archiveondeny_noparams:
  desc: Toggles the archive setting for suggestions upon denial.
  args:
    - ''
  params: [ ]
archiveonaccept_noparams:
  desc: Toggles the archive setting for suggestions upon acceptance.
  args:
    - ''
  params: [ ]
archiveonconsider_noparams:
  desc: Toggles the archive setting for suggestions upon consideration.
  args:
    - ''
  params: [ ]
archiveonimplement_noparams:
  desc: Toggles the archive setting for suggestions upon implementation.
  args:
    - ''
  params: [ ]
denymessage_string:
  desc: Sets or updates the deny message for suggestions.
  args:
    - text
  params:
    - *o479
considermessage_string:
  desc: Sets or updates the consider message for suggestions.
  args:
    - text
  params:
    - *o479
suggestmotes_=:
  desc: Execute the SuggestMotes command
  args:
    - null
  params:
    - *o3
suggestmessage_string_1:
  desc: Defines the color options for suggestion buttons.
  args:
    - text
  params:
    - name: embed
      desc: ''
      type: string
      optional: false
minsuggestionlength_int_1:
  desc: Sets the minimum length for suggestions.
  args:
    - number
  params:
    - *o480
suggestmotesmode_SuggestEmoteModeEnum_1:
  desc: Sets the mode for suggestion emotes, either as reactions or buttons.
  args:
    - reactions|buttons
    - reactions
    - buttons
  params:
    - *o481
suggestbuttoncolor_ButtonType_1:
  desc: Sets the color of the suggestion button.
  args:
    - blurple|blue|grey
    - blurple
    - blue
    - grey
  params:
    - *o489
suggestmotecolor_int_ButtonType_1:
  desc: Sets the color of specific emote buttons on suggestions.
  args:
    - number blurple|blue|grey
    - blurple
    - blue
    - grey
  params:
    - *o483
    - *o482
maxsuggestionlength_int_1:
  desc: Sets the maximum length for suggestions.
  args:
    - number
  params:
    - *o484
acceptmessage_string_1:
  desc: Sets or updates the accept message for suggestions.
  args:
    - text
  params:
    - *o479
acceptchannel_=_1:
  desc: Sets the channel where accepted suggestions are posted.
  args:
    - null
  params:
    - *o3
denychannel_=_1:
  desc: Sets the channel where denied suggestions are posted.
  args:
    - null
  params:
    - *o3
considerchannel_=_1:
  desc: Sets the channel where considered suggestions are posted.
  args:
    - null
  params:
    - *o3
implementchannel_=_1:
  desc: Sets the channel where implemented suggestions are posted.
  args:
    - null
  params:
    - *o3
implementmessage_string_1:
  desc: Sets or updates the implement message for suggestions.
  args:
    - text
  params:
    - *o479
suggestthreadstype_SuggestThreadType_1:
  desc: Sets the type of threads used in suggestions.
  args:
    - none|public|private
    - none
    - public
    - private
  params:
    - *o485
suggestbuttonchannel_ITextChannel_1:
  desc: Sets the suggestion button channel.
  args:
    - channel
  params:
    - *o486
suggestbuttonmessage_string_1:
  desc: Sets or updates the suggest button message.
  args:
    - text
  params:
    - *o487
suggestbuttonlabel_string_1:
  desc: Sets the label for the suggest button.
  args:
    - text
  params:
    - *o488
suggestbuttonemote_=_1:
  desc: Sets the emote for the suggest button.
  args:
    - null
  params:
    - *o3
archiveondeny_noparams_1:
  desc: Toggles the archive setting for suggestions upon denial.
  args:
    - ''
  params: [ ]
archiveonaccept_noparams_1:
  desc: Toggles the archive setting for suggestions upon acceptance.
  args:
    - ''
  params: [ ]
archiveonconsider_noparams_1:
  desc: Toggles the archive setting for suggestions upon consideration.
  args:
    - ''
  params: [ ]
archiveonimplement_noparams_1:
  desc: Toggles the archive setting for suggestions upon implementation.
  args:
    - ''
  params: [ ]
denymessage_string_1:
  desc: Sets or updates the deny message for suggestions.
  args:
    - text
  params:
    - *o479
considermessage_string_1:
  desc: Sets or updates the consider message for suggestions.
  args:
    - text
  params:
    - *o479
suggestmotes_=_1:
  desc: Configures the custom emotes used for suggestions.
  args:
    - null
  params:
    - *o3
suggestmessage_string_2:
  desc: Sets or updates the suggestion message.
  args:
    - text
  params:
    - *o479
minsuggestionlength_int_2:
  desc: Sets the minimum length for suggestions.
  args:
    - number
  params:
    - *o480
suggestmotesmode_SuggestEmoteModeEnum_2:
  desc: Sets the mode for suggestion emotes, either as reactions or buttons.
  args:
    - reactions|buttons
    - reactions
    - buttons
  params:
    - *o481
suggestbuttoncolor_ButtonType_2:
  desc: Sets the color of the suggestion button.
  args:
    - blurple|blue|grey
    - blurple
    - blue
    - grey
  params:
    - *o482
suggestmotecolor_int_ButtonType_2:
  desc: Sets the color of specific emote buttons on suggestions.
  args:
    - number blurple|blue|grey
    - blurple
    - blue
    - grey
  params:
    - *o483
    - *o482
maxsuggestionlength_int_2:
  desc: Sets the maximum length for suggestions.
  args:
    - number
  params:
    - *o484
acceptmessage_string_2:
  desc: Sets or updates the accept message for suggestions.
  args:
    - text
  params:
    - *o479
acceptchannel_=_2:
  desc: Sets the channel where accepted suggestions are posted.
  args:
    - null
  params:
    - *o3
denychannel_=_2:
  desc: Sets the channel where denied suggestions are posted.
  args:
    - null
  params:
    - *o3
considerchannel_=_2:
  desc: Execute the ConsiderChannel command
  args:
    - null
  params:
    - *o3
implementchannel_=_2:
  desc: Execute the ImplementChannel command
  args:
    - null
  params:
    - *o3
implementmessage_string_2:
  desc: Execute the ImplementMessage command
  args:
    - text
  params:
    - *o479
suggestthreadstype_SuggestThreadType_2:
  desc: Sets the type of threads used in suggestions.
  args:
    - none|public|private
    - none
    - public
    - private
  params:
    - *o485
suggestbuttonchannel_ITextChannel_2:
  desc: Sets the suggestion button channel.
  args:
    - channel
  params:
    - *o486
suggestbuttonmessage_string_2:
  desc: Sets or updates the suggest button message.
  args:
    - text
  params:
    - *o487
suggestbuttonlabel_string_2:
  desc: Sets the label for the suggest button.
  args:
    - text
  params:
    - *o488
suggestbuttonemote_=_2:
  desc: Sets the emote for the suggest button.
  args:
    - null
  params:
    - *o3
archiveondeny_noparams_2:
  desc: Toggles the archive setting for suggestions upon denial.
  args:
    - ''
  params: [ ]
archiveonaccept_noparams_2:
  desc: Toggles the archive setting for suggestions upon acceptance.
  args:
    - ''
  params: [ ]
archiveonconsider_noparams_2:
  desc: Toggles the archive setting for suggestions upon consideration.
  args:
    - ''
  params: [ ]
archiveonimplement_noparams_2:
  desc: Toggles the archive setting for suggestions upon implementation.
  args:
    - ''
  params: [ ]
denymessage_string_2:
  desc: Sets or updates the deny message for suggestions.
  args:
    - text
  params:
    - *o479
considermessage_string_2:
  desc: Sets or updates the consider message for suggestions.
  args:
    - text
  params:
    - *o479
suggestmotes_=_2:
  desc: Execute the SuggestMotes command
  args:
    - null
  params:
    - *o3
panellist:
  desc: Provides configuration commands for managing ticket panels, buttons, and select menus.
  args:
    - ''
  params: [ ]
deletebutton:
  desc: Deletes a button from a panel.
  args:
    - number
  params:
    - &o494
      name: buttonId
      desc: The ID of the button to delete.
      type: int
      optional: false
setpaneltranscripts:
  desc: Enables or disables transcript saving for a panel.
  args:
    - panelid true|false
  params:
    - &o495
      name: panelId
      desc: The ID of the panel to modify.
      type: ulong
      optional: false
    - &o496
      name: enable
      desc: Whether to enable or disable transcript saving.
      type: bool
      optional: false
addselectmenu:
  desc: Adds a select menu to a ticket panel.
  args:
    - panelid
  params:
    - &o497
      name: panelId
      desc: The ID of the panel to add the menu to
      type: ulong
      optional: false
addoption:
  desc: Adds an option to an existing select menu
  args:
    - text text null null
    - text text
  params:
    - &o498
      name: menuId
      desc: The ID of the menu to add the option to
      type: string
      optional: false
    - &o499
      name: label
      desc: The label shown to users
      type: string
      optional: false
    - *o3
    - *o3
listoptions:
  desc: Lists all options in a select menu
  args:
    - text
  params:
    - &o500
      name: menuId
      desc: The ID of the menu to view
      type: string
      optional: false
removeoption:
  desc: Removes an option from a select menu
  args:
    - text text
  params:
    - &o490
      name: menuId
      desc: The ID of the menu
      type: string
      optional: false
    - &o501
      name: optionValue
      desc: The value of the option to remove
      type: string
      optional: false
setplaceholder:
  desc: Updates the placeholder text for a select menu
  args:
    - text text
  params:
    - *o490
    - &o502
      name: placeholder
      desc: The new placeholder text
      type: string
      optional: false
setresponsetime:
  desc: Sets the required response time for tickets created by a button.
  args:
    - number number
    - number
  params:
    - &o491
      name: buttonId
      desc: The ID of the button to modify.
      type: int
      optional: false
    - &o503
      name: minutes
      desc: The number of minutes, or null to disable.
      type: int
      optional: true
panelinfo:
  desc: Displays detailed information about a ticket panel.
  args:
    - panelid
  params:
    - &o504
      name: panelId
      desc: The ID of the panel to view.
      type: ulong
      optional: false
setautoclose:
  desc: Sets the auto-close time for tickets created by a button.
  args:
    - number number
    - number
  params:
    - *o491
    - &o505
      name: hours
      desc: The number of hours of inactivity before auto-close, or null to disable.
      type: int
      optional: true
buttoninfo:
  desc: Displays detailed information about a button.
  args:
    - number
  params:
    - &o506
      name: buttonId
      desc: The ID of the button to view.
      type: int
      optional: false
setmodaltitle:
  desc: Sets the title for a ticket creation modal
  args:
    - number text
  params:
    - &o492
      name: buttonId
      desc: The ID of the button to configure
      type: int
      optional: false
    - &o507
      name: title
      desc: The title to display on the modal
      type: string
      optional: false
addmodalfield:
  desc: Adds a field to the ticket creation modal
  args:
    - number text null
    - number text
  params:
    - *o492
    - &o508
      name: label
      desc: The label for the field
      type: string
      optional: false
    - *o3
removemodalfield:
  desc: Removes a field from a ticket creation modal
  args:
    - number text
  params:
    - &o493
      name: buttonId
      desc: ''
      type: int
      optional: false
    - &o509
      name: fieldId
      desc: ''
      type: string
      optional: false
listmodalfields:
  desc: Lists all fields in a ticket creation modal
  args:
    - number
  params:
    - *o493
ticketlistpanel:
  desc: Lists all components of a specific ticket panel
  args:
    - panelid
  params:
    - &o510
      name: panelId
      desc: The message ID of the panel to inspect
      type: ulong
      optional: false
ticketlistpanels:
  desc: Lists all ticket panels in the guild
  args:
    - ''
  params: [ ]
panellist_noparams:
  desc: Lists all ticket panels in the guild.
  args:
    - ''
  params: [ ]
deletebutton_int:
  desc: Deletes a button from a panel.
  args:
    - number
  params:
    - *o494
setpaneltranscripts_ulong_bool:
  desc: Enables or disables transcript saving for a panel.
  args:
    - panelid true|false
  params:
    - *o495
    - *o496
addselectmenu_ulong:
  desc: Adds a select menu to a ticket panel.
  args:
    - panelid
  params:
    - *o497
addoption_string_string_=_=:
  desc: Adds an option to an existing select menu
  args:
    - text text null null
    - text text
  params:
    - *o498
    - *o499
    - *o3
    - *o3
listoptions_string:
  desc: Lists all options in a select menu
  args:
    - text
  params:
    - *o500
removeoption_string_string:
  desc: Removes an option from a select menu
  args:
    - text text
  params:
    - *o490
    - *o501
setplaceholder_string_string:
  desc: Updates the placeholder text for a select menu
  args:
    - text text
  params:
    - *o490
    - *o502
setresponsetime_int_int:
  desc: Sets the required response time for tickets created by a button.
  args:
    - number number
    - number
  params:
    - *o491
    - *o503
panelinfo_ulong:
  desc: Displays detailed information about a ticket panel.
  args:
    - panelid
  params:
    - *o504
setautoclose_int_int:
  desc: Execute the SetAutoClose command
  args:
    - number number
    - number
  params:
    - *o491
    - *o505
buttoninfo_int:
  desc: Displays detailed information about a button.
  args:
    - number
  params:
    - *o506
setmodaltitle_int_string:
  desc: Sets the title for a ticket creation modal
  args:
    - number text
  params:
    - *o492
    - *o507
addmodalfield_int_string_=:
  desc: Execute the AddModalField command
  args:
    - number text null
    - number text
  params:
    - *o492
    - *o508
    - *o3
removemodalfield_int_string:
  desc: Removes a field from a ticket creation modal
  args:
    - number text
  params:
    - *o493
    - *o509
listmodalfields_int:
  desc: Lists all fields in a ticket creation modal
  args:
    - number
  params:
    - *o493
ticketlistpanel_ulong:
  desc: Execute the TicketListPanel command
  args:
    - panelid
  params:
    - *o510
ticketlistpanels_noparams:
  desc: Lists all ticket panels in the guild
  args:
    - ''
  params: [ ]
panellist_noparams_1:
  desc: Initializes a new instance of the TicketConfig class.
  args:
    - ''
  params: [ ]
deletebutton_int_1:
  desc: Deletes a button from a panel.
  args:
    - number
  params:
    - *o494
setpaneltranscripts_ulong_bool_1:
  desc: Enables or disables transcript saving for a panel.
  args:
    - panelid true|false
  params:
    - *o495
    - *o496
addselectmenu_ulong_1:
  desc: Adds a select menu to a ticket panel.
  args:
    - panelid
  params:
    - *o497
addoption_string_string_=_=_1:
  desc: Adds an option to an existing select menu
  args:
    - text text null null
    - text text
  params:
    - *o498
    - *o499
    - *o3
    - *o3
listoptions_string_1:
  desc: Lists all options in a select menu
  args:
    - text
  params:
    - *o500
removeoption_string_string_1:
  desc: Removes an option from a select menu
  args:
    - text text
  params:
    - *o490
    - *o501
setplaceholder_string_string_1:
  desc: Updates the placeholder text for a select menu
  args:
    - text text
  params:
    - *o490
    - *o502
setresponsetime_int_int_1:
  desc: Sets the required response time for tickets created by a button.
  args:
    - number number
    - number
  params:
    - *o491
    - *o503
panelinfo_ulong_1:
  desc: Displays detailed information about a ticket panel.
  args:
    - panelid
  params:
    - *o504
setautoclose_int_int_1:
  desc: Sets the auto-close time for tickets created by a button.
  args:
    - number number
    - number
  params:
    - *o491
    - *o505
buttoninfo_int_1:
  desc: Displays detailed information about a button.
  args:
    - number
  params:
    - *o506
setmodaltitle_int_string_1:
  desc: Sets the title for a ticket creation modal
  args:
    - number text
  params:
    - *o492
    - *o507
addmodalfield_int_string_=_1:
  desc: Adds a field to the ticket creation modal
  args:
    - number text null
    - number text
  params:
    - *o492
    - *o508
    - *o3
removemodalfield_int_string_1:
  desc: Removes a field from a ticket creation modal
  args:
    - number text
  params:
    - *o493
    - *o509
listmodalfields_int_1:
  desc: Lists all fields in a ticket creation modal
  args:
    - number
  params:
    - *o493
ticketlistpanel_ulong_1:
  desc: Lists all components of a specific ticket panel
  args:
    - panelid
  params:
    - *o510
ticketlistpanels_noparams_1:
  desc: Lists all ticket panels in the guild
  args:
    - ''
  params: [ ]
panellist_noparams_2:
  desc: Lists all ticket panels in the guild.
  args:
    - ''
  params: [ ]
deletebutton_int_2:
  desc: Deletes a button from a panel.
  args:
    - number
  params:
    - *o494
setpaneltranscripts_ulong_bool_2:
  desc: Enables or disables transcript saving for a panel.
  args:
    - panelid true|false
  params:
    - *o495
    - *o496
addselectmenu_ulong_2:
  desc: Adds a select menu to a ticket panel.
  args:
    - panelid
  params:
    - *o497
addoption_string_string_=_=_2:
  desc: Adds an option to an existing select menu
  args:
    - text text null null
    - text text
  params:
    - *o498
    - *o499
    - *o3
    - *o3
listoptions_string_2:
  desc: Lists all options in a select menu
  args:
    - text
  params:
    - *o500
removeoption_string_string_2:
  desc: Removes an option from a select menu
  args:
    - text text
  params:
    - *o490
    - *o501
setplaceholder_string_string_2:
  desc: Updates the placeholder text for a select menu
  args:
    - text text
  params:
    - *o490
    - *o502
setresponsetime_int_int_2:
  desc: Sets the required response time for tickets created by a button.
  args:
    - number number
    - number
  params:
    - *o491
    - *o503
panelinfo_ulong_2:
  desc: Displays detailed information about a ticket panel.
  args:
    - panelid
  params:
    - *o504
setautoclose_int_int_2:
  desc: Execute the SetAutoClose command
  args:
    - number number
    - number
  params:
    - *o491
    - *o505
buttoninfo_int_2:
  desc: Displays detailed information about a button.
  args:
    - number
  params:
    - *o506
setmodaltitle_int_string_2:
  desc: Sets the title for a ticket creation modal
  args:
    - number text
  params:
    - *o492
    - *o507
addmodalfield_int_string_=_2:
  desc: Execute the AddModalField command
  args:
    - number text null
    - number text
  params:
    - *o492
    - *o508
    - *o3
removemodalfield_int_string_2:
  desc: Removes a field from a ticket creation modal
  args:
    - number text
  params:
    - *o493
    - *o509
listmodalfields_int_2:
  desc: Lists all fields in a ticket creation modal
  args:
    - number
  params:
    - *o493
ticketlistpanel_ulong_2:
  desc: Execute the TicketListPanel command
  args:
    - panelid
  params:
    - *o510
ticketlistpanels_noparams_2:
  desc: Lists all ticket panels in the guild
  args:
    - ''
  params: [ ]
panellist_noparams_3:
  desc: Provides configuration commands for managing ticket panels, buttons, and select menus.
  args:
    - ''
  params: [ ]
deletebutton_int_3:
  desc: Deletes a button from a panel.
  args:
    - number
  params:
    - *o494
setpaneltranscripts_ulong_bool_3:
  desc: Enables or disables transcript saving for a panel.
  args:
    - panelid true|false
  params:
    - *o495
    - *o496
addselectmenu_ulong_3:
  desc: Adds a select menu to a ticket panel.
  args:
    - panelid
  params:
    - *o497
addoption_string_string_=_=_3:
  desc: Adds an option to an existing select menu
  args:
    - text text null null
    - text text
  params:
    - *o498
    - *o499
    - *o3
    - *o3
listoptions_string_3:
  desc: Lists all options in a select menu
  args:
    - text
  params:
    - *o500
removeoption_string_string_3:
  desc: Removes an option from a select menu
  args:
    - text text
  params:
    - *o490
    - *o501
setplaceholder_string_string_3:
  desc: Updates the placeholder text for a select menu
  args:
    - text text
  params:
    - *o490
    - *o502
setresponsetime_int_int_3:
  desc: Sets the required response time for tickets created by a button.
  args:
    - number number
    - number
  params:
    - *o491
    - *o503
panelinfo_ulong_3:
  desc: Displays detailed information about a ticket panel.
  args:
    - panelid
  params:
    - *o504
setautoclose_int_int_3:
  desc: Sets the auto-close time for tickets created by a button.
  args:
    - number number
    - number
  params:
    - *o491
    - *o505
buttoninfo_int_3:
  desc: Displays detailed information about a button.
  args:
    - number
  params:
    - *o506
setmodaltitle_int_string_3:
  desc: Sets the title for a ticket creation modal
  args:
    - number text
  params:
    - *o492
    - *o507
addmodalfield_int_string_=_3:
  desc: Adds a field to the ticket creation modal
  args:
    - number text null
    - number text
  params:
    - *o492
    - *o508
    - *o3
removemodalfield_int_string_3:
  desc: Removes a field from a ticket creation modal
  args:
    - number text
  params:
    - *o493
    - *o509
listmodalfields_int_3:
  desc: Lists all fields in a ticket creation modal
  args:
    - number
  params:
    - *o493
ticketlistpanel_ulong_3:
  desc: Lists all components of a specific ticket panel
  args:
    - panelid
  params:
    - *o510
ticketlistpanels_noparams_3:
  desc: Lists all ticket panels in the guild
  args:
    - ''
  params: [ ]
panellist_noparams_4:
  desc: Lists all ticket panels in the guild.
  args:
    - ''
  params: [ ]
deletebutton_int_4:
  desc: Deletes a button from a panel.
  args:
    - number
  params:
    - *o494
setpaneltranscripts_ulong_bool_4:
  desc: Enables or disables transcript saving for a panel.
  args:
    - panelid true|false
  params:
    - *o495
    - *o496
addselectmenu_ulong_4:
  desc: Adds a select menu to a ticket panel.
  args:
    - panelid
  params:
    - *o497
addoption_string_string_=_=_4:
  desc: Adds an option to an existing select menu
  args:
    - text text null null
    - text text
  params:
    - *o498
    - *o499
    - *o3
    - *o3
listoptions_string_4:
  desc: Lists all options in a select menu
  args:
    - text
  params:
    - *o500
removeoption_string_string_4:
  desc: Removes an option from a select menu
  args:
    - text text
  params:
    - *o490
    - *o501
setplaceholder_string_string_4:
  desc: Updates the placeholder text for a select menu
  args:
    - text text
  params:
    - *o490
    - *o502
setresponsetime_int_int_4:
  desc: Sets the required response time for tickets created by a button.
  args:
    - number number
    - number
  params:
    - *o491
    - *o503
panelinfo_ulong_4:
  desc: Displays detailed information about a ticket panel.
  args:
    - panelid
  params:
    - *o504
setautoclose_int_int_4:
  desc: Execute the SetAutoClose command
  args:
    - number number
    - number
  params:
    - *o491
    - *o505
buttoninfo_int_4:
  desc: Displays detailed information about a button.
  args:
    - number
  params:
    - *o506
setmodaltitle_int_string_4:
  desc: Sets the title for a ticket creation modal
  args:
    - number text
  params:
    - *o492
    - *o507
addmodalfield_int_string_=_4:
  desc: Execute the AddModalField command
  args:
    - number text null
    - number text
  params:
    - *o492
    - *o508
    - *o3
removemodalfield_int_string_4:
  desc: Removes a field from a ticket creation modal
  args:
    - number text
  params:
    - *o493
    - *o509
listmodalfields_int_4:
  desc: Lists all fields in a ticket creation modal
  args:
    - number
  params:
    - *o493
ticketlistpanel_ulong_4:
  desc: Execute the TicketListPanel command
  args:
    - panelid
  params:
    - *o510
ticketlistpanels_noparams_4:
  desc: Lists all ticket panels in the guild
  args:
    - ''
  params: [ ]
ticketpanel:
  desc: Creates a ticket panel
  args:
    - channel null
    - channel
  params:
    - *o190
    - *o3
ticketaddbutton:
  desc: Adds a button to an existing ticket panel.
  args:
    - panelid text buttonstyle.primary null
    - panelid text
  params:
    - &o511
      name: panelId
      desc: ''
      type: ulong
      optional: false
    - &o517
      name: label
      desc: ''
      type: string
      optional: false
    - &o518
      name: ButtonStyle.Primary
      desc: ''
      type: =
      optional: false
    - *o3
ticketpaneldelete:
  desc: Deletes an existing ticket panel.
  args:
    - panelid
  params:
    - *o511
ticketcategory:
  desc: Sets the category where tickets will be created.
  args:
    - number null
    - number
  params:
    - *o493
    - *o3
ticketarchivecategory:
  desc: Sets the category where closed tickets will be archived.
  args:
    - number null
    - number
  params:
    - *o493
    - *o3
ticketclaim:
  desc: Claims the current ticket as a staff member.
  args:
    - ''
  params: [ ]
ticketunclaim:
  desc: Unclaims the current ticket.
  args:
    - ''
  params: [ ]
ticketclose:
  desc: Closes the current ticket.
  args:
    - ''
  params: [ ]
ticketarchive:
  desc: Archives a ticket, moving it to the archive category if set.
  args:
    - ''
  params: [ ]
ticketcreatecase:
  desc: Creates a new ticket case.
  args:
    - text text
  params:
    - &o519
      name: title
      desc: ''
      type: string
      optional: false
    - &o513
      name: description
      desc: ''
      type: string
      optional: false
ticketlinkcase:
  desc: Links the current ticket to a case.
  args:
    - number
  params:
    - &o520
      name: caseId
      desc: ''
      type: int
      optional: false
ticketunlinkcase:
  desc: Unlinks the current ticket from its case.
  args:
    - ''
  params: [ ]
ticketpriority:
  desc: Sets the priority level for the current ticket.
  args:
    - text
  params:
    - &o521
      name: priority
      desc: ''
      type: string
      optional: false
ticketaddpriority:
  desc: Creates a new priority level for tickets.
  args:
    - text text text number true|false time text
  params:
    - &o512
      name: id
      desc: ''
      type: string
      optional: false
    - *o43
    - &o522
      name: emoji
      desc: ''
      type: string
      optional: false
    - &o523
      name: level
      desc: ''
      type: int
      optional: false
    - &o524
      name: pingStaff
      desc: ''
      type: bool
      optional: false
    - &o525
      name: responseTime
      desc: ''
      type: TimeSpan
      optional: false
    - &o514
      name: color
      desc: ''
      type: string
      optional: false
ticketremovepriority:
  desc: Deletes a priority level.
  args:
    - text
  params:
    - &o526
      name: priorityId
      desc: ''
      type: string
      optional: false
ticketaddtag:
  desc: Creates a new tag for tickets.
  args:
    - text text text text
  params:
    - *o512
    - *o43
    - *o513
    - *o514
ticketremovetag:
  desc: Removes a tag.
  args:
    - text
  params:
    - &o527
      name: tagId
      desc: ''
      type: string
      optional: false
ticketaddtags:
  desc: Adds tags to the current ticket.
  args:
    - text
  params:
    - &o515
      name: tags
      desc: ''
      type: string[]
      optional: false
ticketremovetags:
  desc: Removes tags from the current ticket.
  args:
    - text
  params:
    - *o515
ticketblock:
  desc: Blocks a user from creating tickets.
  args:
    - '@user null'
    - '@user'
  params:
    - *o195
    - *o3
ticketunblock:
  desc: Unblocks a user from creating tickets.
  args:
    - '@user'
  params:
    - *o195
ticketstats:
  desc: Shows ticket statistics for the guild.
  args:
    - ''
  params: [ ]
ticketuserstats:
  desc: Shows ticket statistics for a user.
  args:
    - null
  params:
    - *o3
tickettranscriptchannel:
  desc: Sets the transcript channel for tickets.
  args:
    - null
  params:
    - *o3
ticketlogchannel:
  desc: Sets the log channel for tickets.
  args:
    - null
  params:
    - *o3
ticketmoveall:
  desc: Moves all tickets between categories.
  args:
    - sourcecategory targetcategory
  params:
    - &o528
      name: sourceCategory
      desc: ''
      type: ICategoryChannel
      optional: false
    - &o529
      name: targetCategory
      desc: ''
      type: ICategoryChannel
      optional: false
ticketcloseinactive:
  desc: Closes inactive tickets.
  args:
    - number
  params:
    - &o530
      name: hours
      desc: ''
      type: int
      optional: false
ticketresponsetime:
  desc: Sets the required response time for a ticket type.
  args:
    - number null
    - number
  params:
    - *o493
    - *o3
ticketduplicatepanel:
  desc: Duplicates a ticket panel.
  args:
    - panelid targetchannel
  params:
    - *o511
    - &o516
      name: targetChannel
      desc: ''
      type: ITextChannel
      optional: false
ticketupdatepanel:
  desc: Updates a ticket panel's embed.
  args:
    - panelid text
  params:
    - *o511
    - &o531
      name: embedJson
      desc: ''
      type: string
      optional: false
ticketmovepanel:
  desc: Moves a ticket panel to another channel.
  args:
    - panelid targetchannel
  params:
    - *o511
    - *o516
ticketautoclose:
  desc: Sets auto-close time for a ticket type.
  args:
    - number null
    - number
  params:
    - *o493
    - *o3
ticketnote:
  desc: Adds a note to the current ticket.
  args:
    - text
  params:
    - &o532
      name: content
      desc: ''
      type: string
      optional: false
ticketpanel_ITextChannel_=:
  desc: Creates a ticket panel
  args:
    - channel null
    - channel
  params:
    - *o190
    - *o3
ticketaddbutton_ulong_string_=_=:
  desc: Adds a button to an existing ticket panel.
  args:
    - panelid text buttonstyle.primary null
    - panelid text
  params:
    - *o511
    - *o517
    - *o518
    - *o3
ticketpaneldelete_ulong:
  desc: Deletes an existing ticket panel.
  args:
    - panelid
  params:
    - *o511
ticketcategory_int_=:
  desc: Sets the category where tickets will be created.
  args:
    - number null
    - number
  params:
    - *o493
    - *o3
ticketarchivecategory_int_=:
  desc: Sets the category where closed tickets will be archived.
  args:
    - number null
    - number
  params:
    - *o493
    - *o3
ticketclaim_noparams:
  desc: Claims the current ticket as a staff member.
  args:
    - ''
  params: [ ]
ticketunclaim_noparams:
  desc: Unclaims the current ticket.
  args:
    - ''
  params: [ ]
ticketclose_noparams:
  desc: Closes the current ticket.
  args:
    - ''
  params: [ ]
ticketarchive_noparams:
  desc: Archives a ticket, moving it to the archive category if set.
  args:
    - ''
  params: [ ]
ticketcreatecase_string_string:
  desc: Creates a new ticket case.
  args:
    - text text
  params:
    - *o519
    - *o513
ticketlinkcase_int:
  desc: Links the current ticket to a case.
  args:
    - number
  params:
    - *o520
ticketunlinkcase_noparams:
  desc: Unlinks the current ticket from its case.
  args:
    - ''
  params: [ ]
ticketpriority_string:
  desc: Sets the priority level for the current ticket.
  args:
    - text
  params:
    - *o521
ticketaddpriority_string_string_string_int_bool_TimeSpan_string:
  desc: Creates a new priority level for tickets.
  args:
    - text text text number true|false time text
  params:
    - *o512
    - *o43
    - *o522
    - *o523
    - *o524
    - *o525
    - *o514
ticketremovepriority_string:
  desc: Deletes a priority level.
  args:
    - text
  params:
    - *o526
ticketaddtag_string_string_string_string:
  desc: Creates a new tag for tickets.
  args:
    - text text text text
  params:
    - *o512
    - *o43
    - *o513
    - *o514
ticketremovetag_string:
  desc: Removes a tag.
  args:
    - text
  params:
    - *o527
ticketaddtags_string[]:
  desc: Adds tags to the current ticket.
  args:
    - text
  params:
    - *o515
ticketremovetags_string[]:
  desc: Removes tags from the current ticket.
  args:
    - text
  params:
    - *o515
ticketblock_IGuildUser_=:
  desc: Blocks a user from creating tickets.
  args:
    - '@user null'
    - '@user'
  params:
    - *o195
    - *o3
ticketunblock_IGuildUser:
  desc: Unblocks a user from creating tickets.
  args:
    - '@user'
  params:
    - *o195
ticketstats_noparams:
  desc: Shows ticket statistics for the guild.
  args:
    - ''
  params: [ ]
ticketuserstats_=:
  desc: Shows ticket statistics for a user.
  args:
    - null
  params:
    - *o3
tickettranscriptchannel_=:
  desc: Sets the transcript channel for tickets.
  args:
    - null
  params:
    - *o3
ticketlogchannel_=:
  desc: Sets the log channel for tickets.
  args:
    - null
  params:
    - *o3
ticketmoveall_ICategoryChannel_ICategoryChannel:
  desc: Moves all tickets between categories.
  args:
    - sourcecategory targetcategory
  params:
    - *o528
    - *o529
ticketcloseinactive_int:
  desc: Closes inactive tickets.
  args:
    - number
  params:
    - *o530
ticketresponsetime_int_=:
  desc: Sets the required response time for a ticket type.
  args:
    - number null
    - number
  params:
    - *o493
    - *o3
ticketduplicatepanel_ulong_ITextChannel:
  desc: Duplicates a ticket panel.
  args:
    - panelid targetchannel
  params:
    - *o511
    - *o516
ticketupdatepanel_ulong_string:
  desc: Updates a ticket panel's embed.
  args:
    - panelid text
  params:
    - *o511
    - *o531
ticketmovepanel_ulong_ITextChannel:
  desc: Moves a ticket panel to another channel.
  args:
    - panelid targetchannel
  params:
    - *o511
    - *o516
ticketautoclose_int_=:
  desc: Sets auto-close time for a ticket type.
  args:
    - number null
    - number
  params:
    - *o493
    - *o3
ticketnote_string:
  desc: Adds a note to the current ticket.
  args:
    - text
  params:
    - *o532
ticketpanel_ITextChannel_=_1:
  desc: Commands for managing the ticket system, including panels, tickets, cases, and administrative functions.
  args:
    - channel null
    - channel
  params:
    - *o190
    - *o3
ticketaddbutton_ulong_string_=_=_1:
  desc: Adds a button to an existing ticket panel.
  args:
    - panelid text buttonstyle.primary null
    - panelid text
  params:
    - *o511
    - *o517
    - *o518
    - *o3
ticketpaneldelete_ulong_1:
  desc: Deletes an existing ticket panel.
  args:
    - panelid
  params:
    - *o511
ticketcategory_int_=_1:
  desc: Sets the category where tickets will be created.
  args:
    - number null
    - number
  params:
    - *o493
    - *o3
ticketarchivecategory_int_=_1:
  desc: Sets the category where closed tickets will be archived.
  args:
    - number null
    - number
  params:
    - *o493
    - *o3
ticketclaim_noparams_1:
  desc: Claims the current ticket as a staff member.
  args:
    - ''
  params: [ ]
ticketunclaim_noparams_1:
  desc: Unclaims the current ticket.
  args:
    - ''
  params: [ ]
ticketclose_noparams_1:
  desc: Closes the current ticket.
  args:
    - ''
  params: [ ]
ticketarchive_noparams_1:
  desc: Archives a ticket, moving it to the archive category if set.
  args:
    - ''
  params: [ ]
ticketcreatecase_string_string_1:
  desc: Creates a new ticket case.
  args:
    - text text
  params:
    - *o519
    - *o513
ticketlinkcase_int_1:
  desc: Links the current ticket to a case.
  args:
    - number
  params:
    - *o520
ticketunlinkcase_noparams_1:
  desc: Unlinks the current ticket from its case.
  args:
    - ''
  params: [ ]
ticketpriority_string_1:
  desc: Sets the priority level for the current ticket.
  args:
    - text
  params:
    - *o521
ticketaddpriority_string_string_string_int_bool_TimeSpan_string_1:
  desc: Creates a new priority level for tickets.
  args:
    - text text text number true|false time text
  params:
    - *o512
    - *o43
    - *o522
    - *o523
    - *o524
    - *o525
    - *o514
ticketremovepriority_string_1:
  desc: Deletes a priority level.
  args:
    - text
  params:
    - *o526
ticketaddtag_string_string_string_string_1:
  desc: Creates a new tag for tickets.
  args:
    - text text text text
  params:
    - *o512
    - *o43
    - *o513
    - *o514
ticketremovetag_string_1:
  desc: Removes a tag.
  args:
    - text
  params:
    - *o527
ticketaddtags_string[]_1:
  desc: Adds tags to the current ticket.
  args:
    - text
  params:
    - *o515
ticketremovetags_string[]_1:
  desc: Removes tags from the current ticket.
  args:
    - text
  params:
    - *o515
ticketblock_IGuildUser_=_1:
  desc: Blocks a user from creating tickets.
  args:
    - '@user null'
    - '@user'
  params:
    - *o195
    - *o3
ticketunblock_IGuildUser_1:
  desc: Unblocks a user from creating tickets.
  args:
    - '@user'
  params:
    - *o195
ticketstats_noparams_1:
  desc: Shows ticket statistics for the guild.
  args:
    - ''
  params: [ ]
ticketuserstats_=_1:
  desc: Shows ticket statistics for a user.
  args:
    - null
  params:
    - *o3
tickettranscriptchannel_=_1:
  desc: Sets the transcript channel for tickets.
  args:
    - null
  params:
    - *o3
ticketlogchannel_=_1:
  desc: Sets the log channel for tickets.
  args:
    - null
  params:
    - *o3
ticketmoveall_ICategoryChannel_ICategoryChannel_1:
  desc: Moves all tickets between categories.
  args:
    - sourcecategory targetcategory
  params:
    - *o528
    - *o529
ticketcloseinactive_int_1:
  desc: Closes inactive tickets.
  args:
    - number
  params:
    - *o530
ticketresponsetime_int_=_1:
  desc: Sets the required response time for a ticket type.
  args:
    - number null
    - number
  params:
    - *o493
    - *o3
ticketduplicatepanel_ulong_ITextChannel_1:
  desc: Duplicates a ticket panel.
  args:
    - panelid targetchannel
  params:
    - *o511
    - *o516
ticketupdatepanel_ulong_string_1:
  desc: Updates a ticket panel's embed.
  args:
    - panelid text
  params:
    - *o511
    - *o531
ticketmovepanel_ulong_ITextChannel_1:
  desc: Moves a ticket panel to another channel.
  args:
    - panelid targetchannel
  params:
    - *o511
    - *o516
ticketautoclose_int_=_1:
  desc: Sets auto-close time for a ticket type.
  args:
    - number null
    - number
  params:
    - *o493
    - *o3
ticketnote_string_1:
  desc: Adds a note to the current ticket.
  args:
    - text
  params:
    - *o532
ticketpanel_ITextChannel_=_2:
  desc: Commands for managing the ticket system, including panels, tickets, cases, and administrative functions.
  args:
    - channel null
    - channel
  params:
    - *o190
    - *o3
ticketaddbutton_ulong_string_=_=_2:
  desc: Adds a button to an existing ticket panel.
  args:
    - panelid text buttonstyle.primary null
    - panelid text
  params:
    - *o511
    - *o517
    - *o518
    - *o3
ticketpaneldelete_ulong_2:
  desc: Deletes an existing ticket panel.
  args:
    - panelid
  params:
    - *o511
ticketcategory_int_=_2:
  desc: Sets the category where tickets will be created.
  args:
    - number null
    - number
  params:
    - *o493
    - *o3
ticketarchivecategory_int_=_2:
  desc: Sets the category where closed tickets will be archived.
  args:
    - number null
    - number
  params:
    - *o493
    - *o3
ticketclaim_noparams_2:
  desc: Claims the current ticket as a staff member.
  args:
    - ''
  params: [ ]
ticketunclaim_noparams_2:
  desc: Unclaims the current ticket.
  args:
    - ''
  params: [ ]
ticketclose_noparams_2:
  desc: Closes the current ticket.
  args:
    - ''
  params: [ ]
ticketarchive_noparams_2:
  desc: Archives a ticket, moving it to the archive category if set.
  args:
    - ''
  params: [ ]
ticketcreatecase_string_string_2:
  desc: Creates a new ticket case.
  args:
    - text text
  params:
    - *o519
    - *o513
ticketlinkcase_int_2:
  desc: Links the current ticket to a case.
  args:
    - number
  params:
    - *o520
ticketunlinkcase_noparams_2:
  desc: Unlinks the current ticket from its case.
  args:
    - ''
  params: [ ]
ticketpriority_string_2:
  desc: Sets the priority level for the current ticket.
  args:
    - text
  params:
    - *o521
ticketaddpriority_string_string_string_int_bool_TimeSpan_string_2:
  desc: Creates a new priority level for tickets.
  args:
    - text text text number true|false time text
  params:
    - *o512
    - *o43
    - *o522
    - *o523
    - *o524
    - *o525
    - *o514
ticketremovepriority_string_2:
  desc: Deletes a priority level.
  args:
    - text
  params:
    - *o526
ticketaddtag_string_string_string_string_2:
  desc: Creates a new tag for tickets.
  args:
    - text text text text
  params:
    - *o512
    - *o43
    - *o513
    - *o514
ticketremovetag_string_2:
  desc: Removes a tag.
  args:
    - text
  params:
    - *o527
ticketaddtags_string[]_2:
  desc: Adds tags to the current ticket.
  args:
    - text
  params:
    - *o515
ticketremovetags_string[]_2:
  desc: Removes tags from the current ticket.
  args:
    - text
  params:
    - *o515
ticketblock_IGuildUser_=_2:
  desc: Blocks a user from creating tickets.
  args:
    - '@user null'
    - '@user'
  params:
    - *o195
    - *o3
ticketunblock_IGuildUser_2:
  desc: Unblocks a user from creating tickets.
  args:
    - '@user'
  params:
    - *o195
ticketstats_noparams_2:
  desc: Shows ticket statistics for the guild.
  args:
    - ''
  params: [ ]
ticketuserstats_=_2:
  desc: Shows ticket statistics for a user.
  args:
    - null
  params:
    - *o3
tickettranscriptchannel_=_2:
  desc: Sets the transcript channel for tickets.
  args:
    - null
  params:
    - *o3
ticketlogchannel_=_2:
  desc: Sets the log channel for tickets.
  args:
    - null
  params:
    - *o3
ticketmoveall_ICategoryChannel_ICategoryChannel_2:
  desc: Moves all tickets between categories.
  args:
    - sourcecategory targetcategory
  params:
    - *o528
    - *o529
ticketcloseinactive_int_2:
  desc: Closes inactive tickets.
  args:
    - number
  params:
    - *o530
ticketresponsetime_int_=_2:
  desc: Sets the required response time for a ticket type.
  args:
    - number null
    - number
  params:
    - *o493
    - *o3
ticketduplicatepanel_ulong_ITextChannel_2:
  desc: Duplicates a ticket panel.
  args:
    - panelid targetchannel
  params:
    - *o511
    - *o516
ticketupdatepanel_ulong_string_2:
  desc: Updates a ticket panel's embed.
  args:
    - panelid text
  params:
    - *o511
    - *o531
ticketmovepanel_ulong_ITextChannel_2:
  desc: Moves a ticket panel to another channel.
  args:
    - panelid targetchannel
  params:
    - *o511
    - *o516
ticketautoclose_int_=_2:
  desc: Sets auto-close time for a ticket type.
  args:
    - number null
    - number
  params:
    - *o493
    - *o3
ticketnote_string_2:
  desc: Adds a note to the current ticket.
  args:
    - text
  params:
    - *o532
profile:
  desc: Shows the user's profile or another user's profile if specified.
  args:
    - null
  params:
    - *o3
greetdmoptout:
  desc: Allows a user to toggle opting out of greet dms. Only works if the server they are joining uses mewdeko for dm greets.
  args:
    - ''
  params: [ ]
setbio:
  desc: Sets or updates the biography in the user's profile.
  args:
    - text
  params:
    - &o535
      name: bio
      desc: The biography text. Must be under 2048 characters.
      type: string
      optional: false
setzodiac:
  desc: Sets the zodiac sign in the user's profile.
  args:
    - text
  params:
    - &o536
      name: zodiac
      desc: The zodiac sign to set.
      type: string
      optional: false
setprofilecolor:
  desc: Sets the profile color based on an SKColor input.
  args:
    - input
  params:
    - &o537
      name: input
      desc: The SKColor representing the desired profile color.
      type: SKColor
      optional: false
setbirthday:
  desc: Sets the birthday in the user's profile.
  args:
    - time
  params:
    - &o538
      name: dateTime
      desc: The birthday date.
      type: DateTime
      optional: false
userstatsoptout:
  desc: Toggles the user's opt-out status for command statistics collection.
  args:
    - ''
  params: [ ]
deleteuserstatsdata:
  desc: Deletes the user's command statistics data.
  args:
    - ''
  params: [ ]
setbirthdayprivacy:
  desc: Sets the birthday privacy mode in the user's profile.
  args:
    - birthdaydisplaymodeenum
  params:
    - &o539
      name: birthdayDisplayModeEnum
      desc: The birthday display mode to set.
      type: BirthdayDisplayModeEnum
      optional: false
setprofileimage:
  desc: Sets the profile image URL in the user's profile.
  args:
    - text
  params:
    - &o540
      name: url
      desc: The URL of the image to set as the profile image.
      type: string
      optional: false
setprivacy:
  desc: Sets the privacy level of the user's profile.
  args:
    - privacyenum
  params:
    - &o541
      name: privacyEnum
      desc: The privacy setting to apply.
      type: ProfilePrivacyEnum
      optional: false
setswitchfc:
  desc: Sets or clears the Nintendo Switch friend code in the user's profile.
  args:
    - '""'
  params:
    - *o169
pronouns:
  desc: Displays the pronouns of the specified user or the command caller if no user is specified.
  args:
    - null
  params:
    - *o3
setpronouns:
  desc: Sets or clears the pronouns for the user.
  args:
    - null
  params:
    - *o3
pronounsforceclear:
  desc: Force-clears the pronouns for a user, optionally marking them as disabled due to abuse.
  args:
    - '@user true|false text'
    - true|false text
  params:
    - &o542
      name: user
      desc: The user whose pronouns are to be cleared.
      type: IUser
      optional: true
    - &o533
      name: pronounsDisabledAbuse
      desc: Whether the pronouns are being disabled due to abuse.
      type: bool
      optional: false
    - &o534
      name: reason
      desc: The reason for the action.
      type: string
      optional: false
pronounsforceclear_ulong_bool_string:
  desc: Force-clears the pronouns for a user by ID, optionally marking them as disabled due to abuse.
  args:
    - user true|false text
  params:
    - &o543
      name: user
      desc: The user ID of the user whose pronouns are to be cleared.
      type: ulong
      optional: false
    - *o533
    - *o534
profile_=:
  desc: Shows the user's profile or another user's profile if specified.
  args:
    - null
  params:
    - *o3
greetdmoptout_noparams:
  desc: Allows a user to toggle opting out of greet dms. Only works if the server they are joining uses mewdeko for dm greets.
  args:
    - ''
  params: [ ]
setbio_string:
  desc: Sets or updates the biography in the user's profile.
  args:
    - text
  params:
    - *o535
setzodiac_string:
  desc: Sets the zodiac sign in the user's profile.
  args:
    - text
  params:
    - *o536
setprofilecolor_SKColor:
  desc: Sets the profile color based on an SKColor input.
  args:
    - input
  params:
    - *o537
setbirthday_DateTime:
  desc: Sets the birthday in the user's profile.
  args:
    - time
  params:
    - *o538
userstatsoptout_noparams:
  desc: Toggles the user's opt-out status for command statistics collection.
  args:
    - ''
  params: [ ]
deleteuserstatsdata_noparams:
  desc: Deletes the user's command statistics data.
  args:
    - ''
  params: [ ]
setbirthdayprivacy_BirthdayDisplayModeEnum:
  desc: Sets the birthday privacy mode in the user's profile.
  args:
    - birthdaydisplaymodeenum
  params:
    - *o539
setprofileimage_string:
  desc: Sets the profile image URL in the user's profile.
  args:
    - text
  params:
    - *o540
setprivacy_ProfilePrivacyEnum:
  desc: Sets the privacy level of the user's profile.
  args:
    - privacyenum
  params:
    - *o541
setswitchfc_=:
  desc: Sets or clears the Nintendo Switch friend code in the user's profile.
  args:
    - '""'
  params:
    - *o169
pronouns_=:
  desc: Displays the pronouns of the specified user or the command caller if no user is specified.
  args:
    - null
  params:
    - *o3
setpronouns_=:
  desc: Sets or clears the pronouns for the user.
  args:
    - null
  params:
    - *o3
pronounsforceclear_IUser_bool_string:
  desc: Force-clears the pronouns for a user, optionally marking them as disabled due to abuse.
  args:
    - '@user true|false text'
    - true|false text
  params:
    - *o542
    - *o533
    - *o534
pronounsforceclear_ulong_bool_string_1:
  desc: Force-clears the pronouns for a user by ID, optionally marking them as disabled due to abuse.
  args:
    - user true|false text
  params:
    - *o543
    - *o533
    - *o534
profile_=_1:
  desc: Handles text commands for user profiles, providing functionalities to view and manage user profile details.
  args:
    - null
  params:
    - *o3
greetdmoptout_noparams_1:
  desc: Allows a user to toggle opting out of greet dms. Only works if the server they are joining uses mewdeko for dm greets.
  args:
    - ''
  params: [ ]
setbio_string_1:
  desc: Sets or updates the biography in the user's profile.
  args:
    - text
  params:
    - *o535
setzodiac_string_1:
  desc: Sets the zodiac sign in the user's profile.
  args:
    - text
  params:
    - *o536
setprofilecolor_SKColor_1:
  desc: Sets the profile color based on an SKColor input.
  args:
    - input
  params:
    - *o537
setbirthday_DateTime_1:
  desc: Sets the birthday in the user's profile.
  args:
    - time
  params:
    - *o538
userstatsoptout_noparams_1:
  desc: Toggles the user's opt-out status for command statistics collection.
  args:
    - ''
  params: [ ]
deleteuserstatsdata_noparams_1:
  desc: Deletes the user's command statistics data.
  args:
    - ''
  params: [ ]
setbirthdayprivacy_BirthdayDisplayModeEnum_1:
  desc: Sets the birthday privacy mode in the user's profile.
  args:
    - birthdaydisplaymodeenum
  params:
    - *o539
setprofileimage_string_1:
  desc: Sets the profile image URL in the user's profile.
  args:
    - text
  params:
    - *o540
setprivacy_ProfilePrivacyEnum_1:
  desc: Sets the privacy level of the user's profile.
  args:
    - privacyenum
  params:
    - *o541
setswitchfc_=_1:
  desc: Sets or clears the Nintendo Switch friend code in the user's profile.
  args:
    - '""'
  params:
    - *o169
pronouns_=_1:
  desc: Displays the pronouns of the specified user or the command caller if no user is specified.
  args:
    - null
  params:
    - *o3
setpronouns_=_1:
  desc: Sets or clears the pronouns for the user.
  args:
    - null
  params:
    - *o3
pronounsforceclear_IUser_bool_string_1:
  desc: Force-clears the pronouns for a user, optionally marking them as disabled due to abuse.
  args:
    - '@user true|false text'
    - true|false text
  params:
    - *o542
    - *o533
    - *o534
pronounsforceclear_ulong_bool_string_2:
  desc: Force-clears the pronouns for a user by ID, optionally marking them as disabled due to abuse.
  args:
    - user true|false text
  params:
    - *o543
    - *o533
    - *o534
profile_=_2:
  desc: Handles text commands for user profiles, providing functionalities to view and manage user profile details.
  args:
    - null
  params:
    - *o3
greetdmoptout_noparams_2:
  desc: Allows a user to toggle opting out of greet dms. Only works if the server they are joining uses mewdeko for dm greets.
  args:
    - ''
  params: [ ]
setbio_string_2:
  desc: Sets or updates the biography in the user's profile.
  args:
    - text
  params:
    - *o535
setzodiac_string_2:
  desc: Sets the zodiac sign in the user's profile.
  args:
    - text
  params:
    - *o536
setprofilecolor_SKColor_2:
  desc: Sets the profile color based on an SKColor input.
  args:
    - input
  params:
    - *o537
setbirthday_DateTime_2:
  desc: Sets the birthday in the user's profile.
  args:
    - time
  params:
    - *o538
userstatsoptout_noparams_2:
  desc: Toggles the user's opt-out status for command statistics collection.
  args:
    - ''
  params: [ ]
deleteuserstatsdata_noparams_2:
  desc: Deletes the user's command statistics data.
  args:
    - ''
  params: [ ]
setbirthdayprivacy_BirthdayDisplayModeEnum_2:
  desc: Sets the birthday privacy mode in the user's profile.
  args:
    - birthdaydisplaymodeenum
  params:
    - *o539
setprofileimage_string_2:
  desc: Sets the profile image URL in the user's profile.
  args:
    - text
  params:
    - *o540
setprivacy_ProfilePrivacyEnum_2:
  desc: Sets the privacy level of the user's profile.
  args:
    - privacyenum
  params:
    - *o541
setswitchfc_=_2:
  desc: Sets or clears the Nintendo Switch friend code in the user's profile.
  args:
    - '""'
  params:
    - *o169
pronouns_=_2:
  desc: Displays the pronouns of the specified user or the command caller if no user is specified.
  args:
    - null
  params:
    - *o3
setpronouns_=_2:
  desc: Sets or clears the pronouns for the user.
  args:
    - null
  params:
    - *o3
pronounsforceclear_IUser_bool_string_2:
  desc: Force-clears the pronouns for a user, optionally marking them as disabled due to abuse.
  args:
    - '@user true|false text'
    - true|false text
  params:
    - *o542
    - *o533
    - *o534
pronounsforceclear_ulong_bool_string_3:
  desc: Force-clears the pronouns for a user by ID, optionally marking them as disabled due to abuse.
  args:
    - user true|false text
  params:
    - *o543
    - *o533
    - *o534
listquotes:
  desc: Lists quotes in the guild. Quotes can be ordered by keyword or date added.
  args:
    - ordertype.keyword
  params:
    - &o544
      name: OrderType.Keyword
      desc: ''
      type: =
      optional: false
listquotes_=_=:
  desc: Lists quotes in the guild on a specific page. Quotes can be ordered by keyword or date added.
  args:
    - 1 ordertype.keyword
  params:
    - *o153
    - *o544
quoteprint:
  desc: Displays a random quote matching the specified keyword.
  args:
    - text
  params:
    - &o546
      name: keyword
      desc: The keyword to search for in quotes.
      type: string
      optional: false
quoteshow:
  desc: Displays the quote with the specified ID.
  args:
    - number
  params:
    - &o545
      name: id
      desc: The ID of the quote to display.
      type: int
      optional: false
quotesearch:
  desc: Searches for and displays a quote that matches both a keyword and a text query.
  args:
    - text text
  params:
    - &o547
      name: keyword
      desc: The keyword to match in the quotes.
      type: string
      optional: false
    - &o548
      name: text
      desc: The text to match in the quotes.
      type: string
      optional: false
quoteid:
  desc: Displays who added a quote with the specified ID.
  args:
    - number
  params:
    - *o545
quoteadd:
  desc: Adds a new quote with the specified keyword and text.
  args:
    - text text
  params:
    - &o549
      name: keyword
      desc: The keyword associated with the quote.
      type: string
      optional: false
    - &o550
      name: text
      desc: The text of the quote.
      type: string
      optional: false
quotedelete:
  desc: Deletes a quote with the specified ID.
  args:
    - number
  params:
    - &o551
      name: id
      desc: The ID of the quote to delete.
      type: int
      optional: false
delallquotes:
  desc: Deletes all quotes associated with the specified keyword.
  args:
    - text
  params:
    - &o552
      name: keyword
      desc: The keyword whose associated quotes will be deleted.
      type: string
      optional: false
quoteexport:
  desc: Exports all quotes from the guild in JSON format.
  args: [ ]
  params: [ ]
quoteimport:
  desc: Imports quotes from a JSON file attachment. Duplicate quotes are allowed.
  args: [ ]
  params: [ ]
listquotes_=:
  desc: Lists quotes in the guild. Quotes can be ordered by keyword or date added.
  args:
    - ordertype.keyword
  params:
    - *o544
listquotes_=_=_1:
  desc: Lists quotes in the guild on a specific page. Quotes can be ordered by keyword or date added.
  args:
    - 1 ordertype.keyword
  params:
    - *o153
    - *o544
quoteprint_string:
  desc: Displays a random quote matching the specified keyword.
  args:
    - text
  params:
    - *o546
quoteshow_int:
  desc: Displays the quote with the specified ID.
  args:
    - number
  params:
    - *o545
quotesearch_string_string:
  desc: Searches for and displays a quote that matches both a keyword and a text query.
  args:
    - text text
  params:
    - *o547
    - *o548
quoteid_int:
  desc: Displays who added a quote with the specified ID.
  args:
    - number
  params:
    - *o545
quoteadd_string_string:
  desc: Adds a new quote with the specified keyword and text.
  args:
    - text text
  params:
    - *o549
    - *o550
quotedelete_int:
  desc: Deletes a quote with the specified ID.
  args:
    - number
  params:
    - *o551
delallquotes_string:
  desc: Deletes all quotes associated with the specified keyword.
  args:
    - text
  params:
    - *o552
listquotes_=_1:
  desc: Provides commands for managing and displaying quotes within a guild. I dont know why you would use this when chat triggers exist.
  args:
    - ordertype.keyword
  params:
    - *o544
listquotes_=_=_2:
  desc: Lists quotes in the guild on a specific page. Quotes can be ordered by keyword or date added.
  args:
    - 1 ordertype.keyword
  params:
    - *o153
    - *o544
quoteprint_string_1:
  desc: Displays a random quote matching the specified keyword.
  args:
    - text
  params:
    - *o546
quoteshow_int_1:
  desc: Displays the quote with the specified ID.
  args:
    - number
  params:
    - *o545
quotesearch_string_string_1:
  desc: Searches for and displays a quote that matches both a keyword and a text query.
  args:
    - text text
  params:
    - *o547
    - *o548
quoteid_int_1:
  desc: Displays who added a quote with the specified ID.
  args:
    - number
  params:
    - *o545
quoteadd_string_string_1:
  desc: Adds a new quote with the specified keyword and text.
  args:
    - text text
  params:
    - *o549
    - *o550
quotedelete_int_1:
  desc: Deletes a quote with the specified ID.
  args:
    - number
  params:
    - *o551
delallquotes_string_1:
  desc: Deletes all quotes associated with the specified keyword.
  args:
    - text
  params:
    - *o552
listquotes_=_2:
  desc: Lists quotes in the guild. Quotes can be ordered by keyword or date added.
  args:
    - ordertype.keyword
  params:
    - *o544
listquotes_=_=_3:
  desc: Lists quotes in the guild on a specific page. Quotes can be ordered by keyword or date added.
  args:
    - 1 ordertype.keyword
  params:
    - *o153
    - *o544
quoteprint_string_2:
  desc: Displays a random quote matching the specified keyword.
  args:
    - text
  params:
    - *o546
quoteshow_int_2:
  desc: Displays the quote with the specified ID.
  args:
    - number
  params:
    - *o545
quotesearch_string_string_2:
  desc: Searches for and displays a quote that matches both a keyword and a text query.
  args:
    - text text
  params:
    - *o547
    - *o548
quoteid_int_2:
  desc: Displays who added a quote with the specified ID.
  args:
    - number
  params:
    - *o545
quoteadd_string_string_2:
  desc: Adds a new quote with the specified keyword and text.
  args:
    - text text
  params:
    - *o549
    - *o550
quotedelete_int_2:
  desc: Deletes a quote with the specified ID.
  args:
    - number
  params:
    - *o551
delallquotes_string_2:
  desc: Deletes all quotes associated with the specified keyword.
  args:
    - text
  params:
    - *o552
streamrole:
  desc: Sets a stream role for users in the server. When users start streaming, they are automatically assigned a specific role.
  args:
    - '@role @role'
  params:
    - &o555
      name: fromRole
      desc: The role to monitor for streaming activity.
      type: IRole
      optional: false
    - &o556
      name: addRole
      desc: The role to assign to users who start streaming.
      type: IRole
      optional: false
streamrole_noparams:
  desc: Disables the stream role feature in the server.
  args:
    - ''
  params: [ ]
streamrolekeyword:
  desc: Sets a keyword for the stream role feature. Only users with streams containing this keyword will receive the stream role.
  args:
    - null
  params:
    - *o3
streamroleblacklist:
  desc: Adds or removes a user to/from the blacklist for the stream role feature.
  args:
    - action @user
  params:
    - &o553
      name: action
      desc: The action to perform (add or remove).
      type: AddRemove
      optional: false
    - &o554
      name: user
      desc: The user to add or remove from the list.
      type: IGuildUser
      optional: false
streamrolewhitelist:
  desc: Adds or removes a user to/from the whitelist for the stream role feature.
  args:
    - action @user
  params:
    - *o553
    - *o554
streamrole_IRole_IRole:
  desc: Sets a stream role for users in the server. When users start streaming, they are automatically assigned a specific role.
  args:
    - '@role @role'
  params:
    - *o555
    - *o556
streamrole_noparams_1:
  desc: Disables the stream role feature in the server.
  args:
    - ''
  params: [ ]
streamrolekeyword_=:
  desc: Sets a keyword for the stream role feature. Only users with streams containing this keyword will receive the stream role.
  args:
    - null
  params:
    - *o3
streamroleblacklist_AddRemove_IGuildUser:
  desc: Adds or removes a user to/from the blacklist for the stream role feature.
  args:
    - action @user
  params:
    - *o553
    - *o554
streamrolewhitelist_AddRemove_IGuildUser:
  desc: Adds or removes a user to/from the whitelist for the stream role feature.
  args:
    - action @user
  params:
    - *o553
    - *o554
streamrole_IRole_IRole_1:
  desc: Contains commands related to stream roles in Discord servers.
  args:
    - '@role @role'
  params:
    - *o555
    - *o556
streamrole_noparams_2:
  desc: Disables the stream role feature in the server.
  args:
    - ''
  params: [ ]
streamrolekeyword_=_1:
  desc: Sets a keyword for the stream role feature. Only users with streams containing this keyword will receive the stream role.
  args:
    - null
  params:
    - *o3
streamroleblacklist_AddRemove_IGuildUser_1:
  desc: Adds or removes a user to/from the blacklist for the stream role feature.
  args:
    - action @user
  params:
    - *o553
    - *o554
streamrolewhitelist_AddRemove_IGuildUser_1:
  desc: Adds or removes a user to/from the whitelist for the stream role feature.
  args:
    - action @user
  params:
    - *o553
    - *o554
streamrole_IRole_IRole_2:
  desc: Sets a stream role for users in the server. When users start streaming, they are automatically assigned a specific role.
  args:
    - '@role @role'
  params:
    - *o555
    - *o556
streamrole_noparams_3:
  desc: Disables the stream role feature in the server.
  args:
    - ''
  params: [ ]
streamrolekeyword_=_2:
  desc: Sets a keyword for the stream role feature. Only users with streams containing this keyword will receive the stream role.
  args:
    - null
  params:
    - *o3
streamroleblacklist_AddRemove_IGuildUser_2:
  desc: Adds or removes a user to/from the blacklist for the stream role feature.
  args:
    - action @user
  params:
    - *o553
    - *o554
streamrolewhitelist_AddRemove_IGuildUser_2:
  desc: Adds or removes a user to/from the whitelist for the stream role feature.
  args:
    - action @user
  params:
    - *o553
    - *o554
convertlist:
  desc: Lists all available units that can be converted.
  args:
    - ''
  params: [ ]
convert:
  desc: Converts a specified value from one unit to another.
  args:
    - text text number
  params:
    - &o557
      name: origin
      desc: The original unit of the value.
      type: string
      optional: false
    - &o558
      name: target
      desc: The target unit to convert to.
      type: string
      optional: false
    - &o559
      name: value
      desc: The value to be converted.
      type: decimal
      optional: false
convertlist_noparams:
  desc: Lists all available units that can be converted.
  args:
    - ''
  params: [ ]
convert_string_string_decimal:
  desc: Converts a specified value from one unit to another.
  args:
    - text text number
  params:
    - *o557
    - *o558
    - *o559
convertlist_noparams_1:
  desc: Contains commands for converting units from one system to another.
  args:
    - ''
  params: [ ]
convert_string_string_decimal_1:
  desc: Converts a specified value from one unit to another.
  args:
    - text text number
  params:
    - *o557
    - *o558
    - *o559
convertlist_noparams_2:
  desc: Contains commands for converting units from one system to another.
  args:
    - ''
  params: [ ]
convert_string_string_decimal_2:
  desc: Converts a specified value from one unit to another.
  args:
    - text text number
  params:
    - *o557
    - *o558
    - *o559
debugembed:
  desc: Parses the type of permission search.
  args:
    - text
  params:
    - &o566
      name: embedText
      desc: The text to parse as an embed.
      type: string
      optional: false
rolepermlist:
  desc: Lists all roles that have the specified permissions.
  args:
    - permissiontype.and perms
    - perms
  params:
    - &o567
      name: PermissionType.And
      desc: ''
      type: =
      optional: false
    - &o560
      name: perms
      desc: The permissions to search for.
      type: GuildPermission[]
      optional: false
rolepermlist_GuildPermission[]:
  desc: Lists all roles that have the specified permissions. Default search type is And.
  args:
    - perms
  params:
    - *o560
getjson:
  desc: Gets the mewdeko specific json of a message.
  args:
    - id null
    - id
  params:
    - &o568
      name: id
      desc: The id of the message to get the json of.
      type: ulong
      optional: false
    - *o3
getjson_ITextChannel_ulong:
  desc: Gets the mewdeko specific json of a message.
  args:
    - channel messageid
  params:
    - *o190
    - &o569
      name: messageId
      desc: The id of the message to get the json of.
      type: ulong
      optional: false
savechat:
  desc: Saves the chat log of a channel. Public mewdeko saves this to the nginx cdn then sends you a link to display it on the cdn
  args:
    - time null
    - time
  params:
    - &o570
      name: time
      desc: ''
      type: StoopidTime
      optional: false
    - *o3
emotelist:
  desc: Gets the emotes in a guild. If an emote type is specified, only the emotes of that type will be listed.
  args:
    - null
  params:
    - *o3
invite:
  desc: Gets the bots invite link. As well as showing the website, docs, and support server.
  args:
    - ''
  params: [ ]
snipeset:
  desc: Enables or disables sniping of deleted messages. Default is disabled.
  args:
    - value
  params:
    - &o571
      name: value
      desc: The value to set.
      type: PermissionAction
      optional: false
snipe:
  desc: Snipes the last deleted message in the channel.
  args:
    - ''
  params: [ ]
snipelist:
  desc: Gets the last x amount of deleted messages in a channel.
  args:
    - 5
  params:
    - &o561
      name: 5
      desc: ''
      type: =
      optional: false
snipelist_IUser_=:
  desc: Gets the last x amount of deleted messages by a user in a channel.
  args:
    - '@user 5'
    - '@user'
    - '@user number'
  params:
    - &o563
      name: user
      desc: The user to get the messages of.
      type: IUser
      optional: false
    - *o561
snipelist_ITextChannel_=:
  desc: Gets the last x amount of deleted messages in a channel.
  args:
    - channel 5
    - channel
  params:
    - &o562
      name: channel
      desc: The channel to get the messages of.
      type: ITextChannel
      optional: false
    - *o561
snipelist_ITextChannel_IUser_=:
  desc: Gets the last x amount of deleted messages by a user in a specified channel.
  args:
    - channel @user 5
    - channel @user
    - '@user number'
  params:
    - *o562
    - *o563
    - *o561
editsnipelist:
  desc: Gets the last x amount of edited messages in the current channel.
  args:
    - 5
  params:
    - *o561
editsnipelist_IUser_=:
  desc: Gets the last x amount of edited messages in a channel by a user.
  args:
    - '@user 5'
    - '@user'
    - '@user number'
  params:
    - *o563
    - *o561
editsnipelist_ITextChannel_=:
  desc: Gets the last x amount of edited messages in a channel.
  args:
    - channel 5
    - channel
  params:
    - *o562
    - *o561
editsnipelist_ITextChannel_IUser_=:
  desc: Gets the last x amount of edited messages by a user in a specified channel.
  args:
    - channel @user 5
    - channel @user
    - '@user number'
  params:
    - *o562
    - *o563
    - *o561
snipe_IUser:
  desc: Snipes the last deleted message by a user in the current channel.
  args:
    - '@user'
  params:
    - &o565
      name: user1
      desc: The user to get the message of.
      type: IUser
      optional: false
vcheck:
  desc: Checks a url for viruses using the virustotal api.
  args:
    - null
  params:
    - *o3
snipe_ITextChannel:
  desc: Snipes the last deleted message in a specified channel.
  args:
    - chan
  params:
    - &o564
      name: chan
      desc: The channel to get the message of.
      type: ITextChannel
      optional: false
snipe_ITextChannel_IUser:
  desc: Snipes the last deleted message by a user in a specified channel.
  args:
    - chan @user
  params:
    - *o564
    - *o565
editsnipe:
  desc: Snipes the last edited message in the current channel.
  args:
    - ''
  params: [ ]
editsnipe_IUser:
  desc: Snipes the last edited message by a user in the current channel.
  args:
    - '@user'
  params:
    - *o565
editsnipe_ITextChannel:
  desc: Snipes the last edited message in a specified channel.
  args:
    - chan
  params:
    - *o564
editsnipe_ITextChannel_IUser:
  desc: Snipes the last edited message by a user in a specified channel.
  args:
    - chan @user
  params:
    - *o564
    - *o565
whosplaying:
  desc: Shows a list of users playing a specified game.
  args:
    - text
  params:
    - &o572
      name: game
      desc: The game to search for.
      type: string
      optional: true
vote_noparams_3:
  desc: Shows a link to vote for mewdeko.
  args:
    - ''
  params: [ ]
inrole:
  desc: Shows a list of users in a specified role.
  args:
    - '@role'
  params:
    - &o573
      name: role
      desc: The role to search for.
      type: IRole
      optional: false
inroles:
  desc: Shows a list of users in the specified roles.
  args:
    - '@role @role'
  params:
    - &o574
      name: role
      desc: The first role to search for.
      type: IRole
      optional: false
    - &o575
      name: role2
      desc: The second role to search for.
      type: IRole
      optional: false
userid:
  desc: Gets the user id of a specified user.
  args:
    - null
  params:
    - *o3
roleid:
  desc: Gets the role id of a specified role.
  args:
    - '@role'
  params:
    - &o576
      name: role
      desc: The role to get the id of.
      type: IRole
      optional: false
channelid:
  desc: Gets the channel id of the current channel.
  args:
    - ''
  params: [ ]
serverid:
  desc: Gets the server id of the current server.
  args:
    - ''
  params: [ ]
roles:
  desc: Gets a list of roles in the current server. Shows a user's roles if a user is specified.
  args:
    - null
  params:
    - *o3
channeltopic:
  desc: Gets the topic of the current channel. Shows the topic of a specified channel if one is specified.
  args:
    - null
  params:
    - *o3
say:
  desc: Used to say or embed a message as the bot.
  args:
    - channel text
    - channel
  params:
    - &o577
      name: channel
      desc: The channel to send the message to.
      type: ITextChannel
      optional: false
    - &o578
      name: message
      desc: The message to send.
      type: string
      optional: true
say_=:
  desc: Used to say or embed a message as the bot.
  args:
    - null
  params:
    - *o3
stats:
  desc: Shows the bot's stats.
  args:
    - ''
  params: [ ]
showemojis:
  desc: Enlarges one or more specified emojis.
  args:
    - text
  params:
    - &o579
      name: _
      desc: ''
      type: string
      optional: false
ping:
  desc: Shows the bot's ping.
  args:
    - ''
  params: [ ]
roll_string:
  desc: Rolls a dice with the specified number of sides. Dnd dice are supported.
  args:
    - text
  params:
    - &o580
      name: roll
      desc: The roll to make.
      type: string
      optional: false
owoify:
  desc: O-OwoIfy WoIfy's the specified input.
  args:
    - text
  params:
    - &o581
      name: input
      desc: The input to owoify woify.
      type: string
      optional: false
debugembed_string:
  desc: Searches for roles that have any of the specified permissions.
  args:
    - text
  params:
    - *o566
rolepermlist_=_GuildPermission[]:
  desc: Lists all roles that have the specified permissions.
  args:
    - permissiontype.and perms
    - perms
  params:
    - *o567
    - *o560
rolepermlist_GuildPermission[]_1:
  desc: Lists all roles that have the specified permissions. Default search type is And.
  args:
    - perms
  params:
    - *o560
getjson_ulong_=:
  desc: Gets the mewdeko specific json of a message.
  args:
    - id null
    - id
  params:
    - *o568
    - *o3
getjson_ITextChannel_ulong_1:
  desc: Gets the mewdeko specific json of a message.
  args:
    - channel messageid
  params:
    - *o190
    - *o569
savechat_StoopidTime_=:
  desc: Saves the chat log of a channel. Public mewdeko saves this to the nginx cdn then sends you a link to display it on the cdn
  args:
    - time null
    - time
  params:
    - *o570
    - *o3
emotelist_=:
  desc: Gets the emotes in a guild. If an emote type is specified, only the emotes of that type will be listed.
  args:
    - null
  params:
    - *o3
invite_noparams:
  desc: Gets the bots invite link. As well as showing the website, docs, and support server.
  args:
    - ''
  params: [ ]
snipeset_PermissionAction:
  desc: Enables or disables sniping of deleted messages. Default is disabled.
  args:
    - value
  params:
    - *o571
snipe_noparams:
  desc: Snipes the last deleted message in the channel.
  args:
    - ''
  params: [ ]
snipelist_=:
  desc: Gets the last x amount of deleted messages in a channel.
  args:
    - 5
  params:
    - *o561
snipelist_IUser_=_1:
  desc: Gets the last x amount of deleted messages by a user in a channel.
  args:
    - '@user 5'
    - '@user'
    - '@user number'
  params:
    - *o563
    - *o561
snipelist_ITextChannel_=_1:
  desc: Gets the last x amount of deleted messages in a channel.
  args:
    - channel 5
    - channel
  params:
    - *o562
    - *o561
snipelist_ITextChannel_IUser_=_1:
  desc: Gets the last x amount of deleted messages by a user in a specified channel.
  args:
    - channel @user 5
    - channel @user
    - '@user number'
  params:
    - *o562
    - *o563
    - *o561
editsnipelist_=:
  desc: Gets the last x amount of edited messages in the current channel.
  args:
    - 5
  params:
    - *o561
editsnipelist_IUser_=_1:
  desc: Gets the last x amount of edited messages in a channel by a user.
  args:
    - '@user 5'
    - '@user'
    - '@user number'
  params:
    - *o563
    - *o561
editsnipelist_ITextChannel_=_1:
  desc: Gets the last x amount of edited messages in a channel.
  args:
    - channel 5
    - channel
  params:
    - *o562
    - *o561
editsnipelist_ITextChannel_IUser_=_1:
  desc: Gets the last x amount of edited messages by a user in a specified channel.
  args:
    - channel @user 5
    - channel @user
    - '@user number'
  params:
    - *o562
    - *o563
    - *o561
snipe_IUser_1:
  desc: Snipes the last deleted message by a user in the current channel.
  args:
    - '@user'
  params:
    - *o565
vcheck_=:
  desc: Checks a url for viruses using the virustotal api.
  args:
    - null
  params:
    - *o3
snipe_ITextChannel_1:
  desc: Snipes the last deleted message in a specified channel.
  args:
    - chan
  params:
    - *o564
snipe_ITextChannel_IUser_1:
  desc: Snipes the last deleted message by a user in a specified channel.
  args:
    - chan @user
  params:
    - *o564
    - *o565
editsnipe_noparams:
  desc: Snipes the last edited message in the current channel.
  args:
    - ''
  params: [ ]
editsnipe_IUser_1:
  desc: Snipes the last edited message by a user in the current channel.
  args:
    - '@user'
  params:
    - *o565
editsnipe_ITextChannel_1:
  desc: Snipes the last edited message in a specified channel.
  args:
    - chan
  params:
    - *o564
editsnipe_ITextChannel_IUser_1:
  desc: Snipes the last edited message by a user in a specified channel.
  args:
    - chan @user
  params:
    - *o564
    - *o565
whosplaying_string:
  desc: Shows a list of users playing a specified game.
  args:
    - text
  params:
    - *o572
vote_noparams_4:
  desc: Shows a link to vote for mewdeko.
  args:
    - ''
  params: [ ]
inrole_IRole:
  desc: Shows a list of users in a specified role.
  args:
    - '@role'
  params:
    - *o573
inroles_IRole_IRole:
  desc: Shows a list of users in the specified roles.
  args:
    - '@role @role'
  params:
    - *o574
    - *o575
userid_=:
  desc: Gets the user id of a specified user.
  args:
    - null
  params:
    - *o3
roleid_IRole:
  desc: Gets the role id of a specified role.
  args:
    - '@role'
  params:
    - *o576
channelid_noparams:
  desc: Gets the channel id of the current channel.
  args:
    - ''
  params: [ ]
serverid_noparams:
  desc: Gets the channel id of the current channel.
  args:
    - ''
  params: [ ]
roles_=:
  desc: Gets a list of roles in the current server. Shows a user's roles if a user is specified.
  args:
    - null
  params:
    - *o3
channeltopic_=:
  desc: Gets the topic of the current channel. Shows the topic of a specified channel if one is specified.
  args:
    - null
  params:
    - *o3
say_ITextChannel_string:
  desc: Used to say or embed a message as the bot.
  args:
    - channel text
    - channel
  params:
    - *o577
    - *o578
say_=_1:
  desc: Used to say or embed a message as the bot.
  args:
    - null
  params:
    - *o3
stats_noparams:
  desc: Shows the bot's stats.
  args:
    - ''
  params: [ ]
showemojis_string:
  desc: Enlarges one or more specified emojis.
  args:
    - text
  params:
    - *o579
ping_noparams:
  desc: Shows the bot's ping.
  args:
    - ''
  params: [ ]
roll_string_1:
  desc: Rolls a dice with the specified number of sides. Dnd dice are supported.
  args:
    - text
  params:
    - *o580
owoify_string:
  desc: O-OwoIfy WoIfy's the specified input.
  args:
    - text
  params:
    - *o581
debugembed_string_1:
  desc: Contains various utility commands like sniping deleted messages, getting a list of roles with specific permissions, etc.
  args:
    - text
  params:
    - *o566
rolepermlist_=_GuildPermission[]_1:
  desc: Lists all roles that have the specified permissions.
  args:
    - permissiontype.and perms
    - perms
  params:
    - *o567
    - *o560
rolepermlist_GuildPermission[]_2:
  desc: Lists all roles that have the specified permissions. Default search type is And.
  args:
    - perms
  params:
    - *o560
getjson_ulong_=_1:
  desc: Gets the mewdeko specific json of a message.
  args:
    - id null
    - id
  params:
    - *o568
    - *o3
getjson_ITextChannel_ulong_2:
  desc: Gets the mewdeko specific json of a message.
  args:
    - channel messageid
  params:
    - *o190
    - *o569
savechat_StoopidTime_=_1:
  desc: Saves the chat log of a channel. Public mewdeko saves this to the nginx cdn then sends you a link to display it on the cdn
  args:
    - time null
    - time
  params:
    - *o570
    - *o3
emotelist_=_1:
  desc: Gets the emotes in a guild. If an emote type is specified, only the emotes of that type will be listed.
  args:
    - null
  params:
    - *o3
invite_noparams_1:
  desc: Gets the bots invite link. As well as showing the website, docs, and support server.
  args:
    - ''
  params: [ ]
snipeset_PermissionAction_1:
  desc: Enables or disables sniping of deleted messages. Default is disabled.
  args:
    - value
  params:
    - *o571
snipe_noparams_1:
  desc: Snipes the last deleted message in the channel.
  args:
    - ''
  params: [ ]
snipelist_=_1:
  desc: Gets the last x amount of deleted messages in a channel.
  args:
    - 5
  params:
    - *o561
snipelist_IUser_=_2:
  desc: Gets the last x amount of deleted messages by a user in a channel.
  args:
    - '@user 5'
    - '@user'
    - '@user number'
  params:
    - *o563
    - *o561
snipelist_ITextChannel_=_2:
  desc: Gets the last x amount of deleted messages in a channel.
  args:
    - channel 5
    - channel
  params:
    - *o562
    - *o561
snipelist_ITextChannel_IUser_=_2:
  desc: Gets the last x amount of deleted messages by a user in a specified channel.
  args:
    - channel @user 5
    - channel @user
    - '@user number'
  params:
    - *o562
    - *o563
    - *o561
editsnipelist_=_1:
  desc: Gets the last x amount of edited messages in the current channel.
  args:
    - 5
  params:
    - *o561
editsnipelist_IUser_=_2:
  desc: Gets the last x amount of edited messages in a channel by a user.
  args:
    - '@user 5'
    - '@user'
    - '@user number'
  params:
    - *o563
    - *o561
editsnipelist_ITextChannel_=_2:
  desc: Gets the last x amount of edited messages in a channel.
  args:
    - channel 5
    - channel
  params:
    - *o562
    - *o561
editsnipelist_ITextChannel_IUser_=_2:
  desc: Gets the last x amount of edited messages by a user in a specified channel.
  args:
    - channel @user 5
    - channel @user
    - '@user number'
  params:
    - *o562
    - *o563
    - *o561
snipe_IUser_2:
  desc: Snipes the last deleted message by a user in the current channel.
  args:
    - '@user'
  params:
    - *o565
vcheck_=_1:
  desc: Checks a url for viruses using the virustotal api.
  args:
    - null
  params:
    - *o3
snipe_ITextChannel_2:
  desc: Snipes the last deleted message in a specified channel.
  args:
    - chan
  params:
    - *o564
snipe_ITextChannel_IUser_2:
  desc: Snipes the last deleted message by a user in a specified channel.
  args:
    - chan @user
  params:
    - *o564
    - *o565
editsnipe_noparams_1:
  desc: Snipes the last edited message in the current channel.
  args:
    - ''
  params: [ ]
editsnipe_IUser_2:
  desc: Snipes the last edited message by a user in the current channel.
  args:
    - '@user'
  params:
    - *o565
editsnipe_ITextChannel_2:
  desc: Snipes the last edited message in a specified channel.
  args:
    - chan
  params:
    - *o564
editsnipe_ITextChannel_IUser_2:
  desc: Snipes the last edited message by a user in a specified channel.
  args:
    - chan @user
  params:
    - *o564
    - *o565
whosplaying_string_1:
  desc: Shows a list of users playing a specified game.
  args:
    - text
  params:
    - *o572
vote_noparams_5:
  desc: Shows a link to vote for mewdeko.
  args:
    - ''
  params: [ ]
inrole_IRole_1:
  desc: Shows a list of users in a specified role.
  args:
    - '@role'
  params:
    - *o573
inroles_IRole_IRole_1:
  desc: Shows a list of users in the specified roles.
  args:
    - '@role @role'
  params:
    - *o574
    - *o575
userid_=_1:
  desc: Gets the user id of a specified user.
  args:
    - null
  params:
    - *o3
roleid_IRole_1:
  desc: Gets the role id of a specified role.
  args:
    - '@role'
  params:
    - *o576
channelid_noparams_1:
  desc: Gets the channel id of the current channel.
  args:
    - ''
  params: [ ]
serverid_noparams_1:
  desc: Gets the server id of the current server.
  args:
    - ''
  params: [ ]
roles_=_1:
  desc: Gets a list of roles in the current server. Shows a user's roles if a user is specified.
  args:
    - null
  params:
    - *o3
channeltopic_=_1:
  desc: Gets the topic of the current channel. Shows the topic of a specified channel if one is specified.
  args:
    - null
  params:
    - *o3
say_ITextChannel_string_1:
  desc: Used to say or embed a message as the bot.
  args:
    - channel text
    - channel
  params:
    - *o577
    - *o578
say_=_2:
  desc: Used to say or embed a message as the bot.
  args:
    - null
  params:
    - *o3
stats_noparams_1:
  desc: Shows the bot's stats.
  args:
    - ''
  params: [ ]
showemojis_string_1:
  desc: Enlarges one or more specified emojis.
  args:
    - text
  params:
    - *o579
ping_noparams_1:
  desc: Shows the bot's ping.
  args:
    - ''
  params: [ ]
roll_string_2:
  desc: Rolls a dice with the specified number of sides. Dnd dice are supported.
  args:
    - text
  params:
    - *o580
owoify_string_1:
  desc: O-OwoIfy WoIfy's the specified input.
  args:
    - text
  params:
    - *o581
debugembed_string_2:
  desc: Searches for roles that have any of the specified permissions.
  args:
    - text
  params:
    - *o566
rolepermlist_=_GuildPermission[]_2:
  desc: Lists all roles that have the specified permissions.
  args:
    - permissiontype.and perms
    - perms
  params:
    - *o567
    - *o560
rolepermlist_GuildPermission[]_3:
  desc: Lists all roles that have the specified permissions. Default search type is And.
  args:
    - perms
  params:
    - *o560
getjson_ulong_=_2:
  desc: Gets the mewdeko specific json of a message.
  args:
    - id null
    - id
  params:
    - *o568
    - *o3
getjson_ITextChannel_ulong_3:
  desc: Gets the mewdeko specific json of a message.
  args:
    - channel messageid
  params:
    - *o190
    - *o569
savechat_StoopidTime_=_2:
  desc: Saves the chat log of a channel. Public mewdeko saves this to the nginx cdn then sends you a link to display it on the cdn
  args:
    - time null
    - time
  params:
    - *o570
    - *o3
emotelist_=_2:
  desc: Gets the emotes in a guild. If an emote type is specified, only the emotes of that type will be listed.
  args:
    - null
  params:
    - *o3
invite_noparams_2:
  desc: Gets the bots invite link. As well as showing the website, docs, and support server.
  args:
    - ''
  params: [ ]
snipeset_PermissionAction_2:
  desc: Enables or disables sniping of deleted messages. Default is disabled.
  args:
    - value
  params:
    - *o571
snipe_noparams_2:
  desc: Snipes the last deleted message in the channel.
  args:
    - ''
  params: [ ]
snipelist_=_2:
  desc: Gets the last x amount of deleted messages in a channel.
  args:
    - 5
  params:
    - *o561
snipelist_IUser_=_3:
  desc: Gets the last x amount of deleted messages by a user in a channel.
  args:
    - '@user 5'
    - '@user'
    - '@user number'
  params:
    - *o563
    - *o561
snipelist_ITextChannel_=_3:
  desc: Gets the last x amount of deleted messages in a channel.
  args:
    - channel 5
    - channel
  params:
    - *o562
    - *o561
snipelist_ITextChannel_IUser_=_3:
  desc: Gets the last x amount of deleted messages by a user in a specified channel.
  args:
    - channel @user 5
    - channel @user
    - '@user number'
  params:
    - *o562
    - *o563
    - *o561
editsnipelist_=_2:
  desc: Gets the last x amount of edited messages in the current channel.
  args:
    - 5
  params:
    - *o561
editsnipelist_IUser_=_3:
  desc: Gets the last x amount of edited messages in a channel by a user.
  args:
    - '@user 5'
    - '@user'
    - '@user number'
  params:
    - *o563
    - *o561
editsnipelist_ITextChannel_=_3:
  desc: Gets the last x amount of edited messages in a channel.
  args:
    - channel 5
    - channel
  params:
    - *o562
    - *o561
editsnipelist_ITextChannel_IUser_=_3:
  desc: Gets the last x amount of edited messages by a user in a specified channel.
  args:
    - channel @user 5
    - channel @user
    - '@user number'
  params:
    - *o562
    - *o563
    - *o561
snipe_IUser_3:
  desc: Snipes the last deleted message by a user in the current channel.
  args:
    - '@user'
  params:
    - *o565
vcheck_=_2:
  desc: Checks a url for viruses using the virustotal api.
  args:
    - null
  params:
    - *o3
snipe_ITextChannel_3:
  desc: Snipes the last deleted message in a specified channel.
  args:
    - chan
  params:
    - *o564
snipe_ITextChannel_IUser_3:
  desc: Snipes the last deleted message by a user in a specified channel.
  args:
    - chan @user
  params:
    - *o564
    - *o565
editsnipe_noparams_2:
  desc: Snipes the last edited message in the current channel.
  args:
    - ''
  params: [ ]
editsnipe_IUser_3:
  desc: Snipes the last edited message by a user in the current channel.
  args:
    - '@user'
  params:
    - *o565
editsnipe_ITextChannel_3:
  desc: Snipes the last edited message in a specified channel.
  args:
    - chan
  params:
    - *o564
editsnipe_ITextChannel_IUser_3:
  desc: Snipes the last edited message by a user in a specified channel.
  args:
    - chan @user
  params:
    - *o564
    - *o565
whosplaying_string_2:
  desc: Shows a list of users playing a specified game.
  args:
    - text
  params:
    - *o572
vote_noparams_6:
  desc: Shows a link to vote for mewdeko.
  args:
    - ''
  params: [ ]
inrole_IRole_2:
  desc: Shows a list of users in a specified role.
  args:
    - '@role'
  params:
    - *o573
inroles_IRole_IRole_2:
  desc: Shows a list of users in the specified roles.
  args:
    - '@role @role'
  params:
    - *o574
    - *o575
userid_=_2:
  desc: Gets the user id of a specified user.
  args:
    - null
  params:
    - *o3
roleid_IRole_2:
  desc: Gets the role id of a specified role.
  args:
    - '@role'
  params:
    - *o576
channelid_noparams_2:
  desc: Gets the channel id of the current channel.
  args:
    - ''
  params: [ ]
serverid_noparams_2:
  desc: Gets the channel id of the current channel.
  args:
    - ''
  params: [ ]
roles_=_2:
  desc: Gets a list of roles in the current server. Shows a user's roles if a user is specified.
  args:
    - null
  params:
    - *o3
channeltopic_=_2:
  desc: Gets the topic of the current channel. Shows the topic of a specified channel if one is specified.
  args:
    - null
  params:
    - *o3
say_ITextChannel_string_2:
  desc: Used to say or embed a message as the bot.
  args:
    - channel text
    - channel
  params:
    - *o577
    - *o578
say_=_3:
  desc: Used to say or embed a message as the bot.
  args:
    - null
  params:
    - *o3
stats_noparams_2:
  desc: Shows the bot's stats.
  args:
    - ''
  params: [ ]
showemojis_string_2:
  desc: Enlarges one or more specified emojis.
  args:
    - text
  params:
    - *o579
ping_noparams_2:
  desc: Shows the bot's ping.
  args:
    - ''
  params: [ ]
roll_string_3:
  desc: Rolls a dice with the specified number of sides. Dnd dice are supported.
  args:
    - text
  params:
    - *o580
owoify_string_2:
  desc: O-OwoIfy WoIfy's the specified input.
  args:
    - text
  params:
    - *o581
verboseerror:
  desc: Toggles verbose error messages for commands.
  args:
    - null
  params:
    - *o3
verboseerror_=:
  desc: Toggles verbose error messages for commands.
  args:
    - null
  params:
    - *o3
verboseerror_=_1:
  desc: Contains commands for managing verbose error messages.
  args:
    - null
  params:
    - *o3
verboseerror_=_2:
  desc: Contains commands for managing verbose error messages.
  args:
    - null
  params:
    - *o3
aichannel:
  desc: Configures AI service for a channel
  args:
    - null true
  params:
    - *o3
    - *o235
aimodel:
  desc: Sets the AI provider and model
  args:
    - provider null
    - provider
  params:
    - &o582
      name: provider
      desc: AI provider to use
      type: AiService.AiProvider
      optional: false
    - *o3
aiwebhook:
  desc: Sets the webhook for AI responses in this guild.
  args:
    - null null
  params:
    - *o3
    - *o3
aicustomembed:
  desc: Sets or displays the custom embed template for AI responses. Use %airesponse% to specify where the AI response should appear in the embed.
  args:
    - null
  params:
    - *o3
aikey:
  desc: Sets the API key for the AI service
  args:
    - ''
  params: [ ]
aiprompt:
  desc: Sets the system prompt for the AI
  args:
    - text
  params:
    - &o583
      name: prompt
      desc: System prompt to use
      type: string
      optional: false
aiconfig:
  desc: Shows current AI configuration
  args:
    - ''
  params: [ ]
aichannel_=_=:
  desc: Configures AI service for a channel
  args:
    - null true
  params:
    - *o3
    - *o235
aimodel_AiService_AiProvider_=:
  desc: Sets the AI provider and model
  args:
    - provider null
    - provider
  params:
    - *o582
    - *o3
aiwebhook_=_=:
  desc: Sets the webhook for AI responses in this guild.
  args:
    - null null
  params:
    - *o3
    - *o3
aicustomembed_=:
  desc: Sets or displays the custom embed template for AI responses. Use %airesponse% to specify where the AI response should appear in the embed.
  args:
    - null
  params:
    - *o3
aikey_noparams:
  desc: Sets the API key for the AI service
  args:
    - ''
  params: [ ]
aiprompt_string:
  desc: Sets the system prompt for the AI
  args:
    - text
  params:
    - *o583
aiconfig_noparams:
  desc: Shows current AI configuration
  args:
    - ''
  params: [ ]
aichannel_=_=_1:
  desc: Configures AI service for a channel
  args:
    - null true
  params:
    - *o3
    - *o235
aimodel_AiService_AiProvider_=_1:
  desc: Sets the AI provider and model
  args:
    - provider null
    - provider
  params:
    - *o582
    - *o3
aiwebhook_=_=_1:
  desc: Sets the webhook for AI responses in this guild.
  args:
    - null null
  params:
    - *o3
    - *o3
aicustomembed_=_1:
  desc: Sets or displays the custom embed template for AI responses. Use %airesponse% to specify where the AI response should appear in the embed.
  args:
    - null
  params:
    - *o3
aikey_noparams_1:
  desc: Sets the API key for the AI service
  args:
    - ''
  params: [ ]
aiprompt_string_1:
  desc: Sets the system prompt for the AI
  args:
    - text
  params:
    - *o583
aiconfig_noparams_1:
  desc: Shows current AI configuration
  args:
    - ''
  params: [ ]
aichannel_=_=_2:
  desc: Configures AI service for a channel
  args:
    - null true
  params:
    - *o3
    - *o235
aimodel_AiService_AiProvider_=_2:
  desc: Sets the AI provider and model
  args:
    - provider null
    - provider
  params:
    - *o582
    - *o3
aiwebhook_=_=_2:
  desc: Sets the webhook for AI responses in this guild.
  args:
    - null null
  params:
    - *o3
    - *o3
aicustomembed_=_2:
  desc: Sets or displays the custom embed template for AI responses. Use %airesponse% to specify where the AI response should appear in the embed.
  args:
    - null
  params:
    - *o3
aikey_noparams_2:
  desc: Sets the API key for the AI service
  args:
    - ''
  params: [ ]
aiprompt_string_2:
  desc: Sets the system prompt for the AI
  args:
    - text
  params:
    - *o583
aiconfig_noparams_2:
  desc: Shows current AI configuration
  args:
    - ''
  params: [ ]
addautopublish:
  desc: Enables auto-publishing for a specified news channel within the guild.
  args:
    - channel
  params:
    - &o584
      name: channel
      desc: The channel for which to apply the blacklist.
      type: ITextChannel
      optional: false
addpublishblacklist:
  desc: Adds a user to the auto-publish blacklist for a specified channel.
  args:
    - '@user channel'
  params:
    - &o586
      name: user
      desc: The user to blacklist.
      type: IUser
      optional: false
    - *o584
addpublishblacklist_ITextChannel_string:
  desc: Adds a word to the auto-publish blacklist for a specified channel.
  args:
    - channel text
  params:
    - *o584
    - &o587
      name: word
      desc: The word to blacklist.
      type: string
      optional: false
removepublishblacklist:
  desc: Removes a user from the auto-publish blacklist for a specified channel.
  args:
    - '@user channel'
  params:
    - &o588
      name: user
      desc: The user to unblacklist.
      type: IUser
      optional: false
    - &o585
      name: channel
      desc: The channel for which to remove the blacklist.
      type: ITextChannel
      optional: false
removepublishblacklist_ITextChannel_string:
  desc: Removes a word from the auto-publish blacklist for a specified channel.
  args:
    - channel text
  params:
    - *o585
    - &o589
      name: word
      desc: The word to unblacklist.
      type: string
      optional: false
removeautopublish:
  desc: Disables auto-publishing for a specified news channel within the guild.
  args:
    - channel
  params:
    - &o590
      name: channel
      desc: The news channel to disable auto-publishing for.
      type: ITextChannel
      optional: false
getautopublishes:
  desc: Displays a list of channels with auto-publish enabled and their associated blacklists.
  args:
    - ''
  params: [ ]
addautopublish_ITextChannel:
  desc: Enables auto-publishing for a specified news channel within the guild.
  args:
    - channel
  params:
    - *o584
addpublishblacklist_IUser_ITextChannel:
  desc: Adds a user to the auto-publish blacklist for a specified channel.
  args:
    - '@user channel'
  params:
    - *o586
    - *o584
addpublishblacklist_ITextChannel_string_1:
  desc: Adds a word to the auto-publish blacklist for a specified channel.
  args:
    - channel text
  params:
    - *o584
    - *o587
removepublishblacklist_IUser_ITextChannel:
  desc: Removes a user from the auto-publish blacklist for a specified channel.
  args:
    - '@user channel'
  params:
    - *o588
    - *o585
removepublishblacklist_ITextChannel_string_1:
  desc: Removes a word from the auto-publish blacklist for a specified channel.
  args:
    - channel text
  params:
    - *o585
    - *o589
removeautopublish_ITextChannel:
  desc: Disables auto-publishing for a specified news channel within the guild.
  args:
    - channel
  params:
    - *o590
getautopublishes_noparams:
  desc: Displays a list of channels with auto-publish enabled and their associated blacklists.
  args:
    - ''
  params: [ ]
addautopublish_ITextChannel_1:
  desc: Commands for managing auto-publishing of messages in announcement channels.
  args:
    - channel
  params:
    - *o584
addpublishblacklist_IUser_ITextChannel_1:
  desc: Adds a user to the auto-publish blacklist for a specified channel.
  args:
    - '@user channel'
  params:
    - *o586
    - *o584
addpublishblacklist_ITextChannel_string_2:
  desc: Adds a word to the auto-publish blacklist for a specified channel.
  args:
    - channel text
  params:
    - *o584
    - *o587
removepublishblacklist_IUser_ITextChannel_1:
  desc: Removes a user from the auto-publish blacklist for a specified channel.
  args:
    - '@user channel'
  params:
    - *o588
    - *o585
removepublishblacklist_ITextChannel_string_2:
  desc: Removes a word from the auto-publish blacklist for a specified channel.
  args:
    - channel text
  params:
    - *o585
    - *o589
removeautopublish_ITextChannel_1:
  desc: Disables auto-publishing for a specified news channel within the guild.
  args:
    - channel
  params:
    - *o590
getautopublishes_noparams_1:
  desc: Displays a list of channels with auto-publish enabled and their associated blacklists.
  args:
    - ''
  params: [ ]
addautopublish_ITextChannel_2:
  desc: Enables auto-publishing for a specified news channel within the guild.
  args:
    - channel
  params:
    - *o584
addpublishblacklist_IUser_ITextChannel_2:
  desc: Adds a user to the auto-publish blacklist for a specified channel.
  args:
    - '@user channel'
  params:
    - *o586
    - *o584
addpublishblacklist_ITextChannel_string_3:
  desc: Adds a word to the auto-publish blacklist for a specified channel.
  args:
    - channel text
  params:
    - *o584
    - *o587
removepublishblacklist_IUser_ITextChannel_2:
  desc: Removes a user from the auto-publish blacklist for a specified channel.
  args:
    - '@user channel'
  params:
    - *o588
    - *o585
removepublishblacklist_ITextChannel_string_3:
  desc: Removes a word from the auto-publish blacklist for a specified channel.
  args:
    - channel text
  params:
    - *o585
    - *o589
removeautopublish_ITextChannel_2:
  desc: Disables auto-publishing for a specified news channel within the guild.
  args:
    - channel
  params:
    - *o590
getautopublishes_noparams_2:
  desc: Displays a list of channels with auto-publish enabled and their associated blacklists.
  args:
    - ''
  params: [ ]
calculate:
  desc: Evaluates a mathematical expression and returns the result.
  args:
    - text
  params:
    - &o591
      name: expression
      desc: The expression to evaluate.
      type: string
      optional: false
graph:
  desc: Graphs a mathematical function.
  args:
    - text -10 10
    - text
  params:
    - &o592
      name: function
      desc: The function to graph.
      type: string
      optional: false
    - &o593
      name: -10
      desc: ''
      type: =
      optional: false
    - *o139
symbolic:
  desc: Performs symbolic mathematics operations.
  args:
    - text
  params:
    - &o594
      name: expression
      desc: The symbolic expression to evaluate or manipulate.
      type: string
      optional: false
calcops:
  desc: Lists available mathematical operations that can be used in expressions.
  args:
    - ''
  params: [ ]
calculate_string:
  desc: Evaluates a mathematical expression and returns the result.
  args:
    - text
  params:
    - *o591
graph_string_=_=:
  desc: Graphs a mathematical function.
  args:
    - text -10 10
    - text
  params:
    - *o592
    - *o593
    - *o139
symbolic_string:
  desc: Performs symbolic mathematics operations.
  args:
    - text
  params:
    - *o594
calcops_noparams:
  desc: Lists available mathematical operations that can be used in expressions.
  args:
    - ''
  params: [ ]
calculate_string_1:
  desc: Provides calculator functionality including expression evaluation, graphing, and symbolic math.
  args:
    - text
  params:
    - *o591
graph_string_=_=_1:
  desc: Graphs a mathematical function.
  args:
    - text -10 10
    - text
  params:
    - *o592
    - *o593
    - *o139
symbolic_string_1:
  desc: Performs symbolic mathematics operations.
  args:
    - text
  params:
    - *o594
calcops_noparams_1:
  desc: Lists available mathematical operations that can be used in expressions.
  args:
    - ''
  params: [ ]
calculate_string_2:
  desc: Evaluates a mathematical expression and returns the result.
  args:
    - text
  params:
    - *o591
graph_string_=_=_2:
  desc: Graphs a mathematical function.
  args:
    - text -10 10
    - text
  params:
    - *o592
    - *o593
    - *o139
symbolic_string_2:
  desc: Performs symbolic mathematics operations.
  args:
    - text
  params:
    - *o594
calcops_noparams_2:
  desc: Lists available mathematical operations that can be used in expressions.
  args:
    - ''
  params: [ ]
invites:
  desc: Initializes a new instance of the InviteCommands class.
  args:
    - null
  params:
    - *o3
invitesettings:
  desc: Displays the current invite settings for the guild.
  args:
    - ''
  params: [ ]
toggleinvitetracking:
  desc: Toggles invite tracking for the guild.
  args:
    - ''
  params: [ ]
toggleremoveinviteonleave:
  desc: Toggles whether invites should be removed when a user leaves the guild.
  args:
    - ''
  params: [ ]
setminaccountage:
  desc: Sets the minimum account age required for an invite to be counted.
  args:
    - number
  params:
    - &o595
      name: days
      desc: The minimum age in days.
      type: int
      optional: false
inviteleaderboard:
  desc: Displays a leaderboard of users with the most invites.
  args:
    - ''
  params: [ ]
whoinvited:
  desc: Displays who invited a specific user to the guild.
  args:
    - null
  params:
    - *o3
invitedusers:
  desc: Displays a list of users invited by a specific user.
  args:
    - null
  params:
    - *o3
invites_=:
  desc: Displays the number of invites for a user.
  args:
    - null
  params:
    - *o3
invitesettings_noparams:
  desc: Displays the current invite settings for the guild.
  args:
    - ''
  params: [ ]
toggleinvitetracking_noparams:
  desc: Toggles invite tracking for the guild.
  args:
    - ''
  params: [ ]
toggleremoveinviteonleave_noparams:
  desc: Toggles whether invites should be removed when a user leaves the guild.
  args:
    - ''
  params: [ ]
setminaccountage_int:
  desc: Sets the minimum account age required for an invite to be counted.
  args:
    - number
  params:
    - *o595
inviteleaderboard_noparams:
  desc: Displays a leaderboard of users with the most invites.
  args:
    - ''
  params: [ ]
whoinvited_=:
  desc: Displays who invited a specific user to the guild.
  args:
    - null
  params:
    - *o3
invitedusers_=:
  desc: Displays a list of users invited by a specific user.
  args:
    - null
  params:
    - *o3
invites_=_1:
  desc: Provides commands for managing and viewing invite-related information.
  args:
    - null
  params:
    - *o3
invitesettings_noparams_1:
  desc: Displays the current invite settings for the guild.
  args:
    - ''
  params: [ ]
toggleinvitetracking_noparams_1:
  desc: Toggles invite tracking for the guild.
  args:
    - ''
  params: [ ]
toggleremoveinviteonleave_noparams_1:
  desc: Toggles whether invites should be removed when a user leaves the guild.
  args:
    - ''
  params: [ ]
setminaccountage_int_1:
  desc: Sets the minimum account age required for an invite to be counted.
  args:
    - number
  params:
    - *o595
inviteleaderboard_noparams_1:
  desc: Displays a leaderboard of users with the most invites.
  args:
    - ''
  params: [ ]
whoinvited_=_1:
  desc: Displays who invited a specific user to the guild.
  args:
    - null
  params:
    - *o3
invitedusers_=_1:
  desc: Displays a list of users invited by a specific user.
  args:
    - null
  params:
    - *o3
invites_=_2:
  desc: Displays the number of invites for a user.
  args:
    - null
  params:
    - *o3
invitesettings_noparams_2:
  desc: Displays the current invite settings for the guild.
  args:
    - ''
  params: [ ]
toggleinvitetracking_noparams_2:
  desc: Toggles invite tracking for the guild.
  args:
    - ''
  params: [ ]
toggleremoveinviteonleave_noparams_2:
  desc: Toggles whether invites should be removed when a user leaves the guild.
  args:
    - ''
  params: [ ]
setminaccountage_int_2:
  desc: Sets the minimum account age required for an invite to be counted.
  args:
    - number
  params:
    - *o595
inviteleaderboard_noparams_2:
  desc: Displays a leaderboard of users with the most invites.
  args:
    - ''
  params: [ ]
whoinvited_=_2:
  desc: Displays who invited a specific user to the guild.
  args:
    - null
  params:
    - *o3
invitedusers_=_2:
  desc: Displays a list of users invited by a specific user.
  args:
    - null
  params:
    - *o3
joinstats:
  desc: Generates and sends a graph displaying the join statistics of the server.
  args:
    - ''
  params: [ ]
leavestats:
  desc: Generates and sends a graph displaying the leave statistics of the server.
  args:
    - ''
  params: [ ]
joinstatscolor:
  desc: Sets the color for the join statistics graph.
  args:
    - number number number
  params:
    - &o596
      name: r
      desc: Red component of the color.
      type: int
      optional: false
    - &o597
      name: g
      desc: Green component of the color.
      type: int
      optional: false
    - &o598
      name: b
      desc: Blue component of the color.
      type: int
      optional: false
joinstatscolor_noparams:
  desc: Sets the default color for the join statistics graph to gold. This method is a convenience command that applies a predefined color without the need for RGB input.
  args:
    - ''
  params: [ ]
leavestatscolor:
  desc: Sets the default color for the leave statistics graph using specific RGB values. Allows for precise control over the graph's appearance.
  args:
    - number number number
  params:
    - &o599
      name: r
      desc: Red component of the color, between 0 and 255.
      type: int
      optional: false
    - &o600
      name: g
      desc: Green component of the color, between 0 and 255.
      type: int
      optional: false
    - &o601
      name: b
      desc: Blue component of the color, between 0 and 255.
      type: int
      optional: false
leavestatscolor_noparams:
  desc: Sets the default color for the leave statistics graph to gold. This method is a convenience command that applies a predefined color without the need for RGB input.
  args:
    - ''
  params: [ ]
joinstats_noparams:
  desc: Generates and sends a graph displaying the join statistics of the server.
  args:
    - ''
  params: [ ]
leavestats_noparams:
  desc: Generates and sends a graph displaying the leave statistics of the server.
  args:
    - ''
  params: [ ]
joinstatscolor_int_int_int:
  desc: Sets the color for the join statistics graph.
  args:
    - number number number
  params:
    - *o596
    - *o597
    - *o598
joinstatscolor_noparams_1:
  desc: Sets the default color for the join statistics graph to gold. This method is a convenience command that applies a predefined color without the need for RGB input.
  args:
    - ''
  params: [ ]
leavestatscolor_int_int_int:
  desc: Execute the LeaveStatsColor command
  args:
    - number number number
  params:
    - *o599
    - *o600
    - *o601
leavestatscolor_noparams_1:
  desc: Execute the LeaveStatsColor command
  args:
    - ''
  params: [ ]
joinstats_noparams_1:
  desc: Commands for managing join and leave statistics.
  args:
    - ''
  params: [ ]
leavestats_noparams_1:
  desc: Generates and sends a graph displaying the leave statistics of the server.
  args:
    - ''
  params: [ ]
joinstatscolor_int_int_int_1:
  desc: Sets the color for the join statistics graph.
  args:
    - number number number
  params:
    - *o596
    - *o597
    - *o598
joinstatscolor_noparams_2:
  desc: Sets the default color for the join statistics graph to gold. This method is a convenience command that applies a predefined color without the need for RGB input.
  args:
    - ''
  params: [ ]
leavestatscolor_int_int_int_1:
  desc: Sets the default color for the leave statistics graph using specific RGB values. Allows for precise control over the graph's appearance.
  args:
    - number number number
  params:
    - *o599
    - *o600
    - *o601
leavestatscolor_noparams_2:
  desc: Sets the default color for the leave statistics graph to gold. This method is a convenience command that applies a predefined color without the need for RGB input.
  args:
    - ''
  params: [ ]
joinstats_noparams_2:
  desc: Commands for managing join and leave statistics.
  args:
    - ''
  params: [ ]
leavestats_noparams_2:
  desc: Generates and sends a graph displaying the leave statistics of the server.
  args:
    - ''
  params: [ ]
joinstatscolor_int_int_int_2:
  desc: Sets the color for the join statistics graph.
  args:
    - number number number
  params:
    - *o596
    - *o597
    - *o598
joinstatscolor_noparams_3:
  desc: Sets the default color for the join statistics graph to gold. This method is a convenience command that applies a predefined color without the need for RGB input.
  args:
    - ''
  params: [ ]
leavestatscolor_int_int_int_2:
  desc: Execute the LeaveStatsColor command
  args:
    - number number number
  params:
    - *o599
    - *o600
    - *o601
leavestatscolor_noparams_3:
  desc: Execute the LeaveStatsColor command
  args:
    - ''
  params: [ ]
previewlinks:
  desc: Toggles link previews on or off for the server.
  args:
    - text
  params:
    - &o602
      name: yesnt
      desc: '"yes" to enable link previews, literally anything else to disable.'
      type: string
      optional: false
previewlinks_string:
  desc: Toggles link previews on or off for the server.
  args:
    - text
  params:
    - *o602
previewlinks_string_1:
  desc: Commands for managing link previews.
  args:
    - text
  params:
    - *o602
previewlinks_string_2:
  desc: Commands for managing link previews.
  args:
    - text
  params:
    - *o602
usermessages:
  desc: Execute the UserMessages command
  args:
    - null
  params:
    - *o3
channelmessages:
  desc: Retrieves message statistics for a specific channel.
  args:
    - null
  params:
    - *o3
servermessages:
  desc: Retrieves message statistics for the entire server.
  args:
    - ''
  params: [ ]
topusers:
  desc: Displays a leaderboard of the top 10 users by message count.
  args:
    - ''
  params: [ ]
minmessagecountlength:
  desc: Sets the minimum length for a message to count
  args:
    - 0
  params:
    - *o131
activitygraph:
  desc: Displays a graph of the busiest hours and days in the server.
  args:
    - graphtype.days
  params:
    - &o603
      name: GraphType.Days
      desc: ''
      type: =
      optional: false
togglemessagecount:
  desc: Toggles message counting in the server
  args:
    - ''
  params: [ ]
resetmessagecounts:
  desc: Resets message counts for a user, channel, or both, with confirmation.
  args:
    - null null
  params:
    - *o3
    - *o3
resetmessagecounts_ITextChannel:
  desc: Overload for ITextChannel?)
  args:
    - channel
  params:
    - &o604
      name: channel
      desc: 'Optional: The channel to reset message counts in.'
      type: ITextChannel
      optional: true
usermessages_=:
  desc: Execute the UserMessages command
  args:
    - null
  params:
    - *o3
channelmessages_=:
  desc: Retrieves message statistics for a specific channel.
  args:
    - null
  params:
    - *o3
servermessages_noparams:
  desc: Retrieves message statistics for the entire server.
  args:
    - ''
  params: [ ]
topusers_noparams:
  desc: Displays a leaderboard of the top 10 users by message count.
  args:
    - ''
  params: [ ]
minmessagecountlength_=:
  desc: Sets the minimum length for a message to count
  args:
    - 0
  params:
    - *o131
activitygraph_=:
  desc: Displays a graph of the busiest hours and days in the server.
  args:
    - graphtype.days
  params:
    - *o603
togglemessagecount_noparams:
  desc: Toggles message counting in the server
  args:
    - ''
  params: [ ]
resetmessagecounts_=_=:
  desc: Resets message counts for a user, channel, or both, with confirmation.
  args:
    - null null
  params:
    - *o3
    - *o3
resetmessagecounts_ITextChannel_1:
  desc: Overload for ITextChannel?)
  args:
    - channel
  params:
    - *o604
usermessages_=_1:
  desc: Commands for message counts
  args:
    - null
  params:
    - *o3
channelmessages_=_1:
  desc: Retrieves message statistics for a specific channel.
  args:
    - null
  params:
    - *o3
servermessages_noparams_1:
  desc: Retrieves message statistics for the entire server.
  args:
    - ''
  params: [ ]
topusers_noparams_1:
  desc: Displays a leaderboard of the top 10 users by message count.
  args:
    - ''
  params: [ ]
minmessagecountlength_=_1:
  desc: Sets the minimum length for a message to count
  args:
    - 0
  params:
    - *o131
activitygraph_=_1:
  desc: Displays a graph of the busiest hours and days in the server.
  args:
    - graphtype.days
  params:
    - *o603
togglemessagecount_noparams_1:
  desc: Toggles message counting in the server
  args:
    - ''
  params: [ ]
resetmessagecounts_=_=_1:
  desc: Resets message counts for a user, channel, or both, with confirmation.
  args:
    - null null
  params:
    - *o3
    - *o3
resetmessagecounts_ITextChannel_2:
  desc: Overload for ITextChannel?)
  args:
    - channel
  params:
    - *o604
usermessages_=_2:
  desc: Execute the UserMessages command
  args:
    - null
  params:
    - *o3
channelmessages_=_2:
  desc: Retrieves message statistics for a specific channel.
  args:
    - null
  params:
    - *o3
servermessages_noparams_2:
  desc: Retrieves message statistics for the entire server.
  args:
    - ''
  params: [ ]
topusers_noparams_2:
  desc: Displays a leaderboard of the top 10 users by message count.
  args:
    - ''
  params: [ ]
minmessagecountlength_=_2:
  desc: Sets the minimum length for a message to count
  args:
    - 0
  params:
    - *o131
activitygraph_=_2:
  desc: Displays a graph of the busiest hours and days in the server.
  args:
    - graphtype.days
  params:
    - *o603
togglemessagecount_noparams_2:
  desc: Toggles message counting in the server
  args:
    - ''
  params: [ ]
resetmessagecounts_=_=_2:
  desc: Resets message counts for a user, channel, or both, with confirmation.
  args:
    - null null
  params:
    - *o3
    - *o3
resetmessagecounts_ITextChannel_3:
  desc: Overload for ITextChannel?)
  args:
    - channel
  params:
    - *o604
pingip:
  desc: Pings an IP address. Maximum of 10 pings.
  args:
    - text 1
    - text
  params:
    - &o605
      name: ip
      desc: The IP address to ping.
      type: string
      optional: false
    - *o153
pingip_string_=:
  desc: Pings an IP address. Maximum of 10 pings.
  args:
    - text 1
    - text
  params:
    - *o605
    - *o153
traceroute:
  desc: Executes a traceroute operation to the specified hostname, displaying the route that packets take to reach an IP address or domain.
  args:
    - text
  params:
    - &o606
      name: hostname
      desc: The target hostname or IP address for the traceroute operation.
      type: string
      optional: false
pingip_string_=_1:
  desc: Generates the sequence of IP addresses representing the path taken to the specified hostname using ICMP echo requests.
  args:
    - text 1
    - text
  params:
    - name: ip
      desc: ''
      type: string
      optional: false
    - *o153
traceroute_string:
  desc: Execute the Traceroute command
  args:
    - text
  params:
    - *o606
pingip_string_=_2:
  desc: Pings an IP address. Maximum of 10 pings.
  args:
    - text 1
    - text
  params:
    - *o605
    - *o153
aliasesclear:
  desc: Clears all command aliases for the guild.
  args:
    - ''
  params: [ ]
alias:
  desc: Adds a new alias for a command, or removes an existing alias if no mapping is provided.
  args:
    - text null
    - text
  params:
    - &o607
      name: trigger
      desc: The trigger word for the alias.
      type: string
      optional: false
    - *o3
aliaslist:
  desc: Lists all command aliases currently set for the guild.
  args:
    - ''
  params: [ ]
aliasesclear_noparams:
  desc: Clears all command aliases for the guild.
  args:
    - ''
  params: [ ]
alias_string_=:
  desc: Adds a new alias for a command, or removes an existing alias if no mapping is provided.
  args:
    - text null
    - text
  params:
    - *o607
    - *o3
aliaslist_noparams:
  desc: Lists all command aliases currently set for the guild.
  args:
    - ''
  params: [ ]
aliasesclear_noparams_1:
  desc: Commands for managing command aliases.
  args:
    - ''
  params: [ ]
alias_string_=_1:
  desc: Adds a new alias for a command, or removes an existing alias if no mapping is provided.
  args:
    - text null
    - text
  params:
    - *o607
    - *o3
aliaslist_noparams_1:
  desc: Lists all command aliases currently set for the guild.
  args:
    - ''
  params: [ ]
aliasesclear_noparams_2:
  desc: Clears all command aliases for the guild.
  args:
    - ''
  params: [ ]
alias_string_=_2:
  desc: Adds a new alias for a command, or removes an existing alias if no mapping is provided.
  args:
    - text null
    - text
  params:
    - *o607
    - *o3
aliaslist_noparams_2:
  desc: Lists all command aliases currently set for the guild.
  args:
    - ''
  params: [ ]
rinfo:
  desc: Displays information about a specified role within the guild.
  args:
    - '@role'
  params:
    - &o608
      name: role
      desc: The role to gather information about.
      type: IRole
      optional: false
vinfo:
  desc: Displays information about a specified voice channel or the user's current voice channel.
  args:
    - null
  params:
    - *o3
fetch:
  desc: Fetches and displays information about a user by their Discord ID.
  args:
    - id
  params:
    - &o609
      name: id
      desc: The Discord ID of the user.
      type: ulong
      optional: false
serverinfo:
  desc: Displays detailed information about the server.
  args:
    - null
  params:
    - *o3
channelinfo:
  desc: Displays information about a specified text channel or the current channel.
  args:
    - null
  params:
    - *o3
userinfo:
  desc: Displays detailed information about a specified user or the command invoker.
  args:
    - null
  params:
    - *o3
avatar:
  desc: Displays the avatar of a specified user or the command invoker. Has a button to view the guild avatar if available.
  args:
    - null
  params:
    - *o3
rinfo_IRole:
  desc: Displays information about a specified role within the guild.
  args:
    - '@role'
  params:
    - *o608
vinfo_=:
  desc: Displays information about a specified voice channel or the user's current voice channel.
  args:
    - null
  params:
    - *o3
fetch_ulong:
  desc: Fetches and displays information about a user by their Discord ID.
  args:
    - id
  params:
    - *o609
serverinfo_=:
  desc: Displays detailed information about the server.
  args:
    - null
  params:
    - *o3
channelinfo_=:
  desc: Displays information about a specified text channel or the current channel.
  args:
    - null
  params:
    - *o3
userinfo_=:
  desc: Displays detailed information about a specified user or the command invoker.
  args:
    - null
  params:
    - *o3
avatar_=:
  desc: Displays the avatar of a specified user or the command invoker. Has a button to view the guild avatar if available.
  args:
    - null
  params:
    - *o3
banner:
  desc: Displays the banner of a specified user or the command invoker.
  args:
    - null
  params:
    - *o3
rinfo_IRole_1:
  desc: Commands for displaying information about various entities within the guild.
  args:
    - '@role'
  params:
    - *o608
vinfo_=_1:
  desc: Displays information about a specified voice channel or the user's current voice channel.
  args:
    - null
  params:
    - *o3
fetch_ulong_1:
  desc: Fetches and displays information about a user by their Discord ID.
  args:
    - id
  params:
    - *o609
serverinfo_=_1:
  desc: Displays detailed information about the server.
  args:
    - null
  params:
    - *o3
channelinfo_=_1:
  desc: Displays information about a specified text channel or the current channel.
  args:
    - null
  params:
    - *o3
userinfo_=_1:
  desc: Displays detailed information about a specified user or the command invoker.
  args:
    - null
  params:
    - *o3
avatar_=_1:
  desc: Displays the avatar of a specified user or the command invoker. Has a button to view the guild avatar if available.
  args:
    - null
  params:
    - *o3
banner_=:
  desc: Displays the banner of a specified user or the command invoker.
  args:
    - null
  params:
    - *o3
rinfo_IRole_2:
  desc: Displays information about a specified role within the guild.
  args:
    - '@role'
  params:
    - *o608
vinfo_=_2:
  desc: Displays information about a specified voice channel or the user's current voice channel.
  args:
    - null
  params:
    - *o3
fetch_ulong_2:
  desc: Fetches and displays information about a user by their Discord ID.
  args:
    - id
  params:
    - *o609
serverinfo_=_2:
  desc: Displays detailed information about the server.
  args:
    - null
  params:
    - *o3
channelinfo_=_2:
  desc: Displays information about a specified text channel or the current channel.
  args:
    - null
  params:
    - *o3
userinfo_=_2:
  desc: Displays detailed information about a specified user or the command invoker.
  args:
    - null
  params:
    - *o3
avatar_=_2:
  desc: Displays the avatar of a specified user or the command invoker. Has a button to view the guild avatar if available.
  args:
    - null
  params:
    - *o3
remind:
  desc: Determines whether the reminder should be sent to the user directly or to the channel.
  args:
    - me|here text
    - me
    - here
  params:
    - &o611
      name: meorhere
      desc: 'Specifies whether to send the reminder to the user or the channel. Possible values: Me, Here'
      type: MeOrHere
      optional: false
    - &o610
      name: remindString
      desc: The reminder message and timing information.
      type: string
      optional: false
remind_ITextChannel_string:
  desc: Creates a reminder for a specific text channel.
  args:
    - channel text
  params:
    - &o612
      name: channel
      desc: The text channel to send the reminder to.
      type: ITextChannel
      optional: false
    - *o610
remindlist:
  desc: Lists all reminders for the current user.
  args:
    - ''
  params: [ ]
reminddelete:
  desc: Deletes a specific reminder.
  args:
    - number
  params:
    - &o613
      name: index
      desc: The index of the reminder to delete.
      type: int
      optional: false
remind_MeOrHere_string:
  desc: Creates a reminder for the user or the current channel.
  args:
    - me|here text
    - me
    - here
  params:
    - *o611
    - *o610
remind_ITextChannel_string_1:
  desc: Creates a reminder for a specific text channel.
  args:
    - channel text
  params:
    - *o612
    - *o610
remindlist_noparams:
  desc: Lists all reminders for the current user.
  args:
    - ''
  params: [ ]
reminddelete_int:
  desc: Deletes a specific reminder.
  args:
    - number
  params:
    - *o613
remind_MeOrHere_string_1:
  desc: Provides commands for managing reminders.
  args:
    - me|here text
    - me
    - here
  params:
    - *o611
    - *o610
remind_ITextChannel_string_2:
  desc: Creates a reminder for a specific text channel.
  args:
    - channel text
  params:
    - *o612
    - *o610
remindlist_noparams_1:
  desc: Lists all reminders for the current user.
  args:
    - ''
  params: [ ]
reminddelete_int_1:
  desc: Deletes a specific reminder.
  args:
    - number
  params:
    - *o613
remind_MeOrHere_string_2:
  desc: Creates a reminder for the user or the current channel.
  args:
    - me|here text
    - me
    - here
  params:
    - *o611
    - *o610
remind_ITextChannel_string_3:
  desc: Creates a reminder for a specific text channel.
  args:
    - channel text
  params:
    - *o612
    - *o610
remindlist_noparams_2:
  desc: Lists all reminders for the current user.
  args:
    - ''
  params: [ ]
reminddelete_int_2:
  desc: Deletes a specific reminder.
  args:
    - number
  params:
    - *o613
repeatinvoke:
  desc: Immediately triggers a repeater by its index number.
  args:
    - number
  params:
    - &o614
      name: index
      desc: The one-based index of the repeater to modify.
      type: int
      optional: false
repeatremove:
  desc: Removes a repeater by its index number.
  args:
    - number
  params:
    - *o614
repeatredundant:
  desc: Toggles the redundancy check for a repeater.
  args:
    - number
  params:
    - *o614
repeat:
  desc: Creates a repeater with the specified message.
  args:
    - text
  params:
    - &o615
      name: message
      desc: The message to repeat.
      type: string
      optional: true
repeat_StoopidTime_string:
  desc: Creates a repeater with specified interval and message.
  args:
    - interval text
    - interval
  params:
    - &o616
      name: interval
      desc: The time interval between repeats.
      type: StoopidTime
      optional: false
    - *o615
repeat_GuildDateTime_string:
  desc: Creates a repeater that runs at a specific time each day.
  args:
    - dt text
    - dt
  params:
    - &o617
      name: dt
      desc: Optional time of day to start the repeater.
      type: GuildDateTime
      optional: false
    - *o615
repeat_GuildDateTime_StoopidTime_string:
  desc: Creates a repeater with optional start time and interval.
  args:
    - dt interval text
  params:
    - &o618
      name: dt
      desc: Optional time of day to start the repeater.
      type: GuildDateTime
      optional: true
    - &o619
      name: interval
      desc: Optional interval between repeats.
      type: StoopidTime
      optional: true
    - *o615
repeatlist:
  desc: Lists all active repeaters in the guild.
  args:
    - ''
  params: [ ]
repeatmessage:
  desc: Updates the message of an existing repeater.
  args:
    - number text
    - number
  params:
    - &o620
      name: index
      desc: The one-based index of the repeater to update.
      type: int
      optional: false
    - &o621
      name: message
      desc: The new message for the repeater.
      type: string
      optional: true
repeatchannel:
  desc: Changes the channel where a repeater sends its messages.
  args:
    - number null
    - number
  params:
    - *o614
    - *o3
repeatinvoke_int:
  desc: Immediately triggers a repeater by its index number.
  args:
    - number
  params:
    - *o614
repeatremove_int:
  desc: Removes a repeater by its index number.
  args:
    - number
  params:
    - *o614
repeatredundant_int:
  desc: Toggles the redundancy check for a repeater.
  args:
    - number
  params:
    - *o614
repeat_string:
  desc: Creates a repeater with the specified message.
  args:
    - text
  params:
    - *o615
repeat_StoopidTime_string_1:
  desc: Creates a repeater with specified interval and message.
  args:
    - interval text
    - interval
  params:
    - *o616
    - *o615
repeat_GuildDateTime_string_1:
  desc: Creates a repeater that runs at a specific time each day.
  args:
    - dt text
    - dt
  params:
    - *o617
    - *o615
repeat_GuildDateTime_StoopidTime_string_1:
  desc: Execute the Repeat command
  args:
    - dt interval text
  params:
    - *o618
    - *o619
    - *o615
repeatlist_noparams:
  desc: Lists all active repeaters in the guild.
  args:
    - ''
  params: [ ]
repeatmessage_int_string:
  desc: Updates the message of an existing repeater.
  args:
    - number text
    - number
  params:
    - *o620
    - *o621
repeatchannel_int_=:
  desc: Execute the RepeatChannel command
  args:
    - number null
    - number
  params:
    - *o614
    - *o3
repeatinvoke_int_1:
  desc: Provides commands for managing message repeaters within the guild. Allows for creating, modifying, and removing automated repeating messages.
  args:
    - number
  params:
    - &o622
      name: index
      desc: The one-based index of the repeater to remove.
      type: int
      optional: false
repeatremove_int_1:
  desc: Removes a repeater by its index number.
  args:
    - number
  params:
    - *o622
repeatredundant_int_1:
  desc: Toggles the redundancy check for a repeater.
  args:
    - number
  params:
    - *o614
repeat_string_1:
  desc: Creates a repeater with the specified message.
  args:
    - text
  params:
    - *o615
repeat_StoopidTime_string_2:
  desc: Creates a repeater with specified interval and message.
  args:
    - interval text
    - interval
  params:
    - *o616
    - *o615
repeat_GuildDateTime_string_2:
  desc: Creates a repeater that runs at a specific time each day.
  args:
    - dt text
    - dt
  params:
    - *o617
    - *o615
repeat_GuildDateTime_StoopidTime_string_2:
  desc: Creates a repeater with optional start time and interval.
  args:
    - dt interval text
  params:
    - *o618
    - *o619
    - *o615
repeatlist_noparams_1:
  desc: Lists all active repeaters in the guild.
  args:
    - ''
  params: [ ]
repeatmessage_int_string_1:
  desc: Updates the message of an existing repeater.
  args:
    - number text
    - number
  params:
    - *o620
    - *o621
repeatchannel_int_=_1:
  desc: Changes the channel where a repeater sends its messages.
  args:
    - number null
    - number
  params:
    - *o614
    - *o3
repeatinvoke_int_2:
  desc: Immediately triggers a repeater by its index number.
  args:
    - number
  params:
    - *o622
repeatremove_int_2:
  desc: Removes a repeater by its index number.
  args:
    - number
  params:
    - *o622
repeatredundant_int_2:
  desc: Toggles the redundancy check for a repeater.
  args:
    - number
  params:
    - *o614
repeat_string_2:
  desc: Creates a repeater with the specified message.
  args:
    - text
  params:
    - *o615
repeat_StoopidTime_string_3:
  desc: Creates a repeater with specified interval and message.
  args:
    - interval text
    - interval
  params:
    - *o616
    - *o615
repeat_GuildDateTime_string_3:
  desc: Creates a repeater that runs at a specific time each day.
  args:
    - dt text
    - dt
  params:
    - *o617
    - *o615
repeat_GuildDateTime_StoopidTime_string_3:
  desc: Execute the Repeat command
  args:
    - dt interval text
  params:
    - *o618
    - *o619
    - *o615
repeatlist_noparams_2:
  desc: Lists all active repeaters in the guild.
  args:
    - ''
  params: [ ]
repeatmessage_int_string_2:
  desc: Updates the message of an existing repeater.
  args:
    - number text
    - number
  params:
    - *o620
    - *o621
repeatchannel_int_=_2:
  desc: Execute the RepeatChannel command
  args:
    - number null
    - number
  params:
    - *o614
    - *o3
votechannel:
  desc: Sets the specified text channel as the vote channel where all vote confirmations will be sent.
  args:
    - channel
  params:
    - &o623
      name: channel
      desc: The text channel to set as the vote channel.
      type: ITextChannel
      optional: false
votemessage:
  desc: Sets a custom message to be sent when a user votes or previews the current vote message.
  args:
    - null
  params:
    - *o3
voteroleadd:
  desc: Adds a role to be granted to users when they vote, with an optional duration for the role to be automatically removed.
  args:
    - '@role null'
    - '@role'
  params:
    - &o624
      name: role
      desc: The role to add as a vote reward.
      type: IRole
      optional: false
    - *o3
voteroleremove:
  desc: Removes a role from the list of roles to be granted to users when they vote.
  args:
    - '@role'
  params:
    - &o625
      name: role
      desc: The role to remove from vote rewards.
      type: IRole
      optional: false
voteroleslist:
  desc: Lists all roles that are granted to users when they vote.
  args:
    - ''
  params: [ ]
voterolesclear:
  desc: Clears all roles that are granted to users when they vote.
  args:
    - ''
  params: [ ]
voteroleedit:
  desc: Edits the duration for which a vote role is granted to users.
  args:
    - '@role time'
  params:
    - &o626
      name: role
      desc: The role to edit.
      type: IRole
      optional: false
    - &o627
      name: time
      desc: The new duration for the role to be granted.
      type: StoopidTime
      optional: false
votepassword:
  desc: Initiates a confirmation process for setting a new vote password, cautioning the user about its security.
  args:
    - ''
  params: [ ]
votes:
  desc: Displays the total number of votes cast by a specific user or the command invoker.
  args:
    - null
  params:
    - *o3
votesleaderboard:
  desc: Displays a leaderboard of users based on their vote counts, optionally filtering for votes within the current month.
  args:
    - false
  params:
    - *o187
votechannel_ITextChannel:
  desc: Sets the specified text channel as the vote channel where all vote confirmations will be sent.
  args:
    - channel
  params:
    - *o623
votemessage_=:
  desc: Sets a custom message to be sent when a user votes or previews the current vote message.
  args:
    - null
  params:
    - *o3
voteroleadd_IRole_=:
  desc: Adds a role to be granted to users when they vote, with an optional duration for the role to be automatically removed.
  args:
    - '@role null'
    - '@role'
  params:
    - *o624
    - *o3
voteroleremove_IRole:
  desc: Removes a role from the list of roles to be granted to users when they vote.
  args:
    - '@role'
  params:
    - *o625
voteroleslist_noparams:
  desc: Lists all roles that are granted to users when they vote.
  args:
    - ''
  params: [ ]
voterolesclear_noparams:
  desc: Clears all roles that are granted to users when they vote.
  args:
    - ''
  params: [ ]
voteroleedit_IRole_StoopidTime:
  desc: Edits the duration for which a vote role is granted to users.
  args:
    - '@role time'
  params:
    - *o626
    - *o627
votepassword_noparams:
  desc: Initiates a confirmation process for setting a new vote password, cautioning the user about its security.
  args:
    - ''
  params: [ ]
votes_=:
  desc: Displays the total number of votes cast by a specific user or the command invoker.
  args:
    - null
  params:
    - *o3
votesleaderboard_=:
  desc: Displays a leaderboard of users based on their vote counts, optionally filtering for votes within the current month.
  args:
    - false
  params:
    - *o187
votechannel_ITextChannel_1:
  desc: Contains commands related to managing and interacting with voting features in the server.
  args:
    - channel
  params:
    - *o623
votemessage_=_1:
  desc: Sets a custom message to be sent when a user votes or previews the current vote message.
  args:
    - null
  params:
    - *o3
voteroleadd_IRole_=_1:
  desc: Adds a role to be granted to users when they vote, with an optional duration for the role to be automatically removed.
  args:
    - '@role null'
    - '@role'
  params:
    - *o624
    - *o3
voteroleremove_IRole_1:
  desc: Removes a role from the list of roles to be granted to users when they vote.
  args:
    - '@role'
  params:
    - *o625
voteroleslist_noparams_1:
  desc: Lists all roles that are granted to users when they vote.
  args:
    - ''
  params: [ ]
voterolesclear_noparams_1:
  desc: Clears all roles that are granted to users when they vote.
  args:
    - ''
  params: [ ]
voteroleedit_IRole_StoopidTime_1:
  desc: Edits the duration for which a vote role is granted to users.
  args:
    - '@role time'
  params:
    - *o626
    - *o627
votepassword_noparams_1:
  desc: Initiates a confirmation process for setting a new vote password, cautioning the user about its security.
  args:
    - ''
  params: [ ]
votes_=_1:
  desc: Displays the total number of votes cast by a specific user or the command invoker.
  args:
    - null
  params:
    - *o3
votesleaderboard_=_1:
  desc: Displays a leaderboard of users based on their vote counts, optionally filtering for votes within the current month.
  args:
    - false
  params:
    - *o187
votechannel_ITextChannel_2:
  desc: Sets the specified text channel as the vote channel where all vote confirmations will be sent.
  args:
    - channel
  params:
    - *o623
votemessage_=_2:
  desc: Sets a custom message to be sent when a user votes or previews the current vote message.
  args:
    - null
  params:
    - *o3
voteroleadd_IRole_=_2:
  desc: Adds a role to be granted to users when they vote, with an optional duration for the role to be automatically removed.
  args:
    - '@role null'
    - '@role'
  params:
    - *o624
    - *o3
voteroleremove_IRole_2:
  desc: Removes a role from the list of roles to be granted to users when they vote.
  args:
    - '@role'
  params:
    - *o625
voteroleslist_noparams_2:
  desc: Lists all roles that are granted to users when they vote.
  args:
    - ''
  params: [ ]
voterolesclear_noparams_2:
  desc: Clears all roles that are granted to users when they vote.
  args:
    - ''
  params: [ ]
voteroleedit_IRole_StoopidTime_2:
  desc: Edits the duration for which a vote role is granted to users.
  args:
    - '@role time'
  params:
    - *o626
    - *o627
votepassword_noparams_2:
  desc: Initiates a confirmation process for setting a new vote password, cautioning the user about its security.
  args:
    - ''
  params: [ ]
votes_=_2:
  desc: Displays the total number of votes cast by a specific user or the command invoker.
  args:
    - null
  params:
    - *o3
votesleaderboard_=_2:
  desc: Displays a leaderboard of users based on their vote counts, optionally filtering for votes within the current month.
  args:
    - false
  params:
    - *o187
rank:
  desc: Shows a user's XP card with their rank, level, and progress.
  args:
    - null
  params:
    - *o3
textrank:
  desc: Shows a user's XP information in a text format that's accessible for screen readers.
  args:
    - null
  params:
    - *o3
leaderboard_=:
  desc: Shows the XP leaderboard for the server.
  args:
    - 1
  params:
    - *o153
addxp:
  desc: Adds XP to a user.
  args:
    - '@user number'
  params:
    - &o663
      name: user
      desc: The user to add XP to.
      type: IGuildUser
      optional: false
    - &o664
      name: amount
      desc: The amount of XP to add.
      type: int
      optional: false
setxp:
  desc: Sets a user's XP to a specific amount.
  args:
    - '@user number'
  params:
    - &o631
      name: user
      desc: The user to set XP for.
      type: IGuildUser
      optional: false
    - &o633
      name: amount
      desc: The amount of XP to set.
      type: long
      optional: false
resetxp:
  desc: Resets a user's XP to zero.
  args:
    - '@user false'
    - '@user'
  params:
    - &o632
      name: user
      desc: The user to reset XP for.
      type: IGuildUser
      optional: false
    - *o187
resetxp_noparams:
  desc: Resets a user's XP to zero.
  args:
    - ''
  params: [ ]
levelnotif:
  desc: Sets how users are notified when they level up.
  args:
    - type
  params:
    - &o634
      name: type
      desc: 'The notification type: None, Channel, or DM.'
      type: XpNotificationType
      optional: false
xpsettings:
  desc: Shows the server's XP leaderboard settings.
  args:
    - ''
  params: [ ]
setmessagexp:
  desc: Sets the amount of XP gained per message.
  args:
    - number
  params:
    - &o635
      name: amount
      desc: The amount of XP to award per message.
      type: int
      optional: false
setxpcooldown:
  desc: Sets the cooldown between message XP gains.
  args:
    - number
  params:
    - &o636
      name: seconds
      desc: The cooldown in seconds.
      type: int
      optional: false
setvoicexp:
  desc: Sets the amount of XP gained per minute in voice channels.
  args:
    - number
  params:
    - &o637
      name: amount
      desc: The amount of XP to award per minute in voice.
      type: int
      optional: false
setvoicetimeout:
  desc: Sets the voice XP timeout (how long a user must be in voice to gain XP).
  args:
    - number
  params:
    - &o638
      name: minutes
      desc: The timeout in minutes.
      type: int
      optional: false
setxpmultiplier:
  desc: Sets the server-wide XP multiplier.
  args:
    - number
  params:
    - &o639
      name: multiplier
      desc: The XP multiplier value.
      type: double
      optional: false
setxpcurve:
  desc: Sets the XP curve type used for level calculations.
  args:
    - type
  params:
    - &o640
      name: type
      desc: 'The XP curve type: Default, Flat, or Steep.'
      type: XpCurveType
      optional: false
setchannelxp:
  desc: Sets an XP multiplier for a channel.
  args:
    - channel number
  params:
    - &o641
      name: channel
      desc: The channel to set the multiplier for.
      type: ITextChannel
      optional: false
    - &o628
      name: multiplier
      desc: The multiplier value.
      type: double
      optional: false
setrolexp:
  desc: Sets an XP multiplier for a role.
  args:
    - '@role number'
  params:
    - &o642
      name: role
      desc: The role to set the multiplier for.
      type: IRole
      optional: false
    - *o628
xpboost:
  desc: Creates a temporary XP boost event.
  args:
    - time number text
  params:
    - &o644
      name: time
      desc: How long the boost should last.
      type: StoopidTime
      optional: false
    - &o643
      name: multiplier
      desc: The XP multiplier for the boost.
      type: double
      optional: false
    - &o645
      name: name
      desc: The name of the boost event.
      type: string
      optional: false
xpboosts:
  desc: Lists active XP boost events.
  args:
    - ''
  params: [ ]
cancelboost:
  desc: Cancels an XP boost event.
  args:
    - number
  params:
    - &o646
      name: eventId
      desc: ID of the event to cancel.
      type: int
      optional: false
xpexclude:
  desc: Excludes a user from gaining XP.
  args:
    - '@user'
  params:
    - &o647
      name: user
      desc: The user to exclude.
      type: IGuildUser
      optional: false
xpexclude_IRole:
  desc: Excludes a role from gaining XP.
  args:
    - '@role'
  params:
    - &o648
      name: role
      desc: The role to exclude.
      type: IRole
      optional: false
xpexclude_ITextChannel:
  desc: Excludes a channel from gaining XP.
  args:
    - channel
  params:
    - &o649
      name: channel
      desc: The channel to exclude.
      type: ITextChannel
      optional: false
xpinclude:
  desc: Includes a previously excluded user for XP gain.
  args:
    - '@user'
  params:
    - &o650
      name: user
      desc: The user to include.
      type: IGuildUser
      optional: false
xpinclude_IRole:
  desc: Includes a previously excluded role for XP gain.
  args:
    - '@role'
  params:
    - &o651
      name: role
      desc: The role to include.
      type: IRole
      optional: false
xpinclude_ITextChannel:
  desc: Includes a previously excluded channel for XP gain.
  args:
    - channel
  params:
    - &o652
      name: channel
      desc: The channel to include.
      type: ITextChannel
      optional: false
xpexcludelist:
  desc: Lists excluded users, roles, or channels.
  args:
    - null
  params:
    - *o3
rolereward:
  desc: Sets a role reward for a specific level.
  args:
    - number @role
  params:
    - &o629
      name: level
      desc: The level that triggers the reward.
      type: int
      optional: false
    - &o653
      name: role
      desc: The role to award.
      type: IRole
      optional: false
removerolereward:
  desc: Removes a role reward for a specific level.
  args:
    - number
  params:
    - &o630
      name: level
      desc: The level to remove the reward from.
      type: int
      optional: false
rolerewards:
  desc: Lists all role rewards.
  args:
    - ''
  params: [ ]
currencyreward:
  desc: Sets a currency reward for a specific level.
  args:
    - number number
  params:
    - *o629
    - &o654
      name: amount
      desc: The amount of currency to award.
      type: long
      optional: false
removecurrencyreward:
  desc: Removes a currency reward for a specific level.
  args:
    - number
  params:
    - *o630
currencyrewards:
  desc: Lists all currency rewards.
  args:
    - ''
  params: [ ]
xpcompetition:
  desc: Creates a new XP competition.
  args:
    - time type 0 null
    - time type
  params:
    - &o655
      name: time
      desc: How long the competition should last.
      type: StoopidTime
      optional: false
    - &o656
      name: type
      desc: 'The competition type: MostGained, ReachLevel, or HighestTotal.'
      type: XpCompetitionType
      optional: false
    - *o131
    - *o3
addcompetitionreward:
  desc: Adds a reward for a competition placement.
  args:
    - number number text text
  params:
    - &o657
      name: competitionId
      desc: The ID of the competition.
      type: int
      optional: false
    - &o658
      name: position
      desc: The position to reward (1 for first place, etc.).
      type: int
      optional: false
    - &o659
      name: type
      desc: 'The type of reward: Role, XP, or Currency.'
      type: string
      optional: false
    - &o660
      name: reward
      desc: ''
      type: string
      optional: false
xpcompetitions:
  desc: Lists active XP competitions.
  args:
    - ''
  params: [ ]
competitionleaderboard:
  desc: Shows the leaderboard for an active competition.
  args:
    - number
  params:
    - &o661
      name: competitionId
      desc: ID of the competition.
      type: int
      optional: false
endcompetition:
  desc: Ends a competition early and distributes rewards.
  args:
    - number
  params:
    - &o662
      name: competitionId
      desc: ID of the competition to end.
      type: int
      optional: false
rank_=:
  desc: Shows a user's XP card with their rank, level, and progress.
  args:
    - null
  params:
    - *o3
textrank_=:
  desc: Shows a user's XP information in a text format that's accessible for screen readers.
  args:
    - null
  params:
    - *o3
leaderboard_=_1:
  desc: Shows the XP leaderboard for the server.
  args:
    - 1
  params:
    - *o153
addxp_IGuildUser_int:
  desc: Adds XP to a user.
  args:
    - '@user number'
  params:
    - *o631
    - &o665
      name: amount
      desc: The amount of XP to set.
      type: int
      optional: false
setxp_IGuildUser_long:
  desc: Sets a user's XP to a specific amount.
  args:
    - '@user number'
  params:
    - *o632
    - *o633
resetxp_IGuildUser_=:
  desc: Resets a user's XP to zero.
  args:
    - '@user false'
    - '@user'
  params:
    - *o632
    - *o187
resetxp_noparams_1:
  desc: Resets a user's XP to zero.
  args:
    - ''
  params: [ ]
levelnotif_XpNotificationType:
  desc: Sets how users are notified when they level up.
  args:
    - type
  params:
    - *o634
xpsettings_noparams:
  desc: Shows the server's XP leaderboard settings.
  args:
    - ''
  params: [ ]
setmessagexp_int:
  desc: Sets the amount of XP gained per message.
  args:
    - number
  params:
    - *o635
setxpcooldown_int:
  desc: Sets the cooldown between message XP gains.
  args:
    - number
  params:
    - *o636
setvoicexp_int:
  desc: Sets the amount of XP gained per minute in voice channels.
  args:
    - number
  params:
    - *o637
setvoicetimeout_int:
  desc: Sets the voice XP timeout (how long a user must be in voice to gain XP).
  args:
    - number
  params:
    - *o638
setxpmultiplier_double:
  desc: Sets the server-wide XP multiplier.
  args:
    - number
  params:
    - *o639
setxpcurve_XpCurveType:
  desc: Sets the XP curve type used for level calculations.
  args:
    - type
  params:
    - *o640
setchannelxp_ITextChannel_double:
  desc: Sets an XP multiplier for a channel.
  args:
    - channel number
  params:
    - *o641
    - *o628
setrolexp_IRole_double:
  desc: Sets an XP multiplier for a role.
  args:
    - '@role number'
  params:
    - *o642
    - *o643
xpboost_StoopidTime_double_string:
  desc: Creates a temporary XP boost event.
  args:
    - time number text
  params:
    - *o644
    - *o643
    - *o645
xpboosts_noparams:
  desc: Lists active XP boost events.
  args:
    - ''
  params: [ ]
cancelboost_int:
  desc: Cancels an XP boost event.
  args:
    - number
  params:
    - *o646
xpexclude_IGuildUser:
  desc: Excludes a user from gaining XP.
  args:
    - '@user'
  params:
    - *o647
xpexclude_IRole_1:
  desc: Excludes a role from gaining XP.
  args:
    - '@role'
  params:
    - *o648
xpexclude_ITextChannel_1:
  desc: Excludes a channel from gaining XP.
  args:
    - channel
  params:
    - *o649
xpinclude_IGuildUser:
  desc: Includes a previously excluded user for XP gain.
  args:
    - '@user'
  params:
    - *o650
xpinclude_IRole_1:
  desc: Includes a previously excluded role for XP gain.
  args:
    - '@role'
  params:
    - *o651
xpinclude_ITextChannel_1:
  desc: Includes a previously excluded channel for XP gain.
  args:
    - channel
  params:
    - *o652
xpexcludelist_=:
  desc: Lists excluded users, roles, or channels.
  args:
    - null
  params:
    - *o3
rolereward_int_IRole:
  desc: Sets a role reward for a specific level.
  args:
    - number @role
  params:
    - *o630
    - *o653
removerolereward_int:
  desc: Removes a role reward for a specific level.
  args:
    - number
  params:
    - *o630
rolerewards_noparams:
  desc: Lists all role rewards.
  args:
    - ''
  params: [ ]
currencyreward_int_long:
  desc: Sets a currency reward for a specific level.
  args:
    - number number
  params:
    - *o630
    - *o654
removecurrencyreward_int:
  desc: Removes a currency reward for a specific level.
  args:
    - number
  params:
    - *o630
currencyrewards_noparams:
  desc: Lists all currency rewards.
  args:
    - ''
  params: [ ]
xpcompetition_StoopidTime_XpCompetitionType_=_=:
  desc: Execute the XpCompetition command
  args:
    - time type 0 null
    - time type
  params:
    - *o655
    - *o656
    - *o131
    - *o3
addcompetitionreward_int_int_string_string:
  desc: Execute the AddCompetitionReward command
  args:
    - number number text text
  params:
    - *o657
    - *o658
    - *o659
    - *o660
xpcompetitions_noparams:
  desc: Lists active XP competitions.
  args:
    - ''
  params: [ ]
competitionleaderboard_int:
  desc: Shows the leaderboard for an active competition.
  args:
    - number
  params:
    - *o661
endcompetition_int:
  desc: Ends a competition early and distributes rewards.
  args:
    - number
  params:
    - *o662
rank_=_1:
  desc: Module for managing XP system functionality.
  args:
    - null
  params:
    - *o3
textrank_=_1:
  desc: Shows a user's XP information in a text format that's accessible for screen readers.
  args:
    - null
  params:
    - *o3
leaderboard_=_2:
  desc: Shows the XP leaderboard for the server.
  args:
    - 1
  params:
    - *o153
addxp_IGuildUser_int_1:
  desc: Adds XP to a user.
  args:
    - '@user number'
  params:
    - *o663
    - *o664
setxp_IGuildUser_long_1:
  desc: Sets a user's XP to a specific amount.
  args:
    - '@user number'
  params:
    - *o631
    - *o633
resetxp_IGuildUser_=_1:
  desc: Resets a user's XP to zero.
  args:
    - '@user false'
    - '@user'
  params:
    - *o632
    - *o187
resetxp_noparams_2:
  desc: Resets a user's XP to zero.
  args:
    - ''
  params: [ ]
levelnotif_XpNotificationType_1:
  desc: Sets how users are notified when they level up.
  args:
    - type
  params:
    - *o634
xpsettings_noparams_1:
  desc: Shows the server's XP leaderboard settings.
  args:
    - ''
  params: [ ]
setmessagexp_int_1:
  desc: Sets the amount of XP gained per message.
  args:
    - number
  params:
    - *o635
setxpcooldown_int_1:
  desc: Sets the cooldown between message XP gains.
  args:
    - number
  params:
    - *o636
setvoicexp_int_1:
  desc: Sets the amount of XP gained per minute in voice channels.
  args:
    - number
  params:
    - *o637
setvoicetimeout_int_1:
  desc: Sets the voice XP timeout (how long a user must be in voice to gain XP).
  args:
    - number
  params:
    - *o638
setxpmultiplier_double_1:
  desc: Sets the server-wide XP multiplier.
  args:
    - number
  params:
    - *o639
setxpcurve_XpCurveType_1:
  desc: Sets the XP curve type used for level calculations.
  args:
    - type
  params:
    - *o640
setchannelxp_ITextChannel_double_1:
  desc: Sets an XP multiplier for a channel.
  args:
    - channel number
  params:
    - *o641
    - *o628
setrolexp_IRole_double_1:
  desc: Sets an XP multiplier for a role.
  args:
    - '@role number'
  params:
    - *o642
    - *o628
xpboost_StoopidTime_double_string_1:
  desc: Creates a temporary XP boost event.
  args:
    - time number text
  params:
    - *o644
    - *o643
    - *o645
xpboosts_noparams_1:
  desc: Lists active XP boost events.
  args:
    - ''
  params: [ ]
cancelboost_int_1:
  desc: Cancels an XP boost event.
  args:
    - number
  params:
    - *o646
xpexclude_IGuildUser_1:
  desc: Excludes a user from gaining XP.
  args:
    - '@user'
  params:
    - *o647
xpexclude_IRole_2:
  desc: Excludes a role from gaining XP.
  args:
    - '@role'
  params:
    - *o648
xpexclude_ITextChannel_2:
  desc: Excludes a channel from gaining XP.
  args:
    - channel
  params:
    - *o649
xpinclude_IGuildUser_1:
  desc: Includes a previously excluded user for XP gain.
  args:
    - '@user'
  params:
    - *o650
xpinclude_IRole_2:
  desc: Includes a previously excluded role for XP gain.
  args:
    - '@role'
  params:
    - *o651
xpinclude_ITextChannel_2:
  desc: Includes a previously excluded channel for XP gain.
  args:
    - channel
  params:
    - *o652
xpexcludelist_=_1:
  desc: Lists excluded users, roles, or channels.
  args:
    - null
  params:
    - *o3
rolereward_int_IRole_1:
  desc: Sets a role reward for a specific level.
  args:
    - number @role
  params:
    - *o629
    - *o653
removerolereward_int_1:
  desc: Removes a role reward for a specific level.
  args:
    - number
  params:
    - *o630
rolerewards_noparams_1:
  desc: Lists all role rewards.
  args:
    - ''
  params: [ ]
currencyreward_int_long_1:
  desc: Sets a currency reward for a specific level.
  args:
    - number number
  params:
    - *o629
    - *o654
removecurrencyreward_int_1:
  desc: Removes a currency reward for a specific level.
  args:
    - number
  params:
    - *o630
currencyrewards_noparams_1:
  desc: Lists all currency rewards.
  args:
    - ''
  params: [ ]
xpcompetition_StoopidTime_XpCompetitionType_=_=_1:
  desc: Creates a new XP competition.
  args:
    - time type 0 null
    - time type
  params:
    - *o655
    - *o656
    - *o131
    - *o3
addcompetitionreward_int_int_string_string_1:
  desc: Adds a reward for a competition placement.
  args:
    - number number text text
  params:
    - *o657
    - *o658
    - *o659
    - *o660
xpcompetitions_noparams_1:
  desc: Lists active XP competitions.
  args:
    - ''
  params: [ ]
competitionleaderboard_int_1:
  desc: Shows the leaderboard for an active competition.
  args:
    - number
  params:
    - *o661
endcompetition_int_1:
  desc: Ends a competition early and distributes rewards.
  args:
    - number
  params:
    - *o662
rank_=_2:
  desc: Module for managing XP system functionality.
  args:
    - null
  params:
    - *o3
textrank_=_2:
  desc: Shows a user's XP information in a text format that's accessible for screen readers.
  args:
    - null
  params:
    - *o3
leaderboard_=_3:
  desc: Shows the XP leaderboard for the server.
  args:
    - 1
  params:
    - *o153
addxp_IGuildUser_int_2:
  desc: Adds XP to a user.
  args:
    - '@user number'
  params:
    - *o631
    - *o665
setxp_IGuildUser_long_2:
  desc: Sets a user's XP to a specific amount.
  args:
    - '@user number'
  params:
    - *o632
    - *o633
resetxp_IGuildUser_=_2:
  desc: Resets a user's XP to zero.
  args:
    - '@user false'
    - '@user'
  params:
    - *o632
    - *o187
resetxp_noparams_3:
  desc: Resets a user's XP to zero.
  args:
    - ''
  params: [ ]
levelnotif_XpNotificationType_2:
  desc: Sets how users are notified when they level up.
  args:
    - type
  params:
    - *o634
xpsettings_noparams_2:
  desc: Shows the server's XP leaderboard settings.
  args:
    - ''
  params: [ ]
setmessagexp_int_2:
  desc: Sets the amount of XP gained per message.
  args:
    - number
  params:
    - *o635
setxpcooldown_int_2:
  desc: Sets the cooldown between message XP gains.
  args:
    - number
  params:
    - *o636
setvoicexp_int_2:
  desc: Sets the amount of XP gained per minute in voice channels.
  args:
    - number
  params:
    - *o637
setvoicetimeout_int_2:
  desc: Sets the voice XP timeout (how long a user must be in voice to gain XP).
  args:
    - number
  params:
    - *o638
setxpmultiplier_double_2:
  desc: Sets the server-wide XP multiplier.
  args:
    - number
  params:
    - *o639
setxpcurve_XpCurveType_2:
  desc: Sets the XP curve type used for level calculations.
  args:
    - type
  params:
    - *o640
setchannelxp_ITextChannel_double_2:
  desc: Sets an XP multiplier for a channel.
  args:
    - channel number
  params:
    - *o641
    - *o628
setrolexp_IRole_double_2:
  desc: Sets an XP multiplier for a role.
  args:
    - '@role number'
  params:
    - *o642
    - *o643
xpboost_StoopidTime_double_string_2:
  desc: Creates a temporary XP boost event.
  args:
    - time number text
  params:
    - *o644
    - *o643
    - *o645
xpboosts_noparams_2:
  desc: Lists active XP boost events.
  args:
    - ''
  params: [ ]
cancelboost_int_2:
  desc: Cancels an XP boost event.
  args:
    - number
  params:
    - *o646
xpexclude_IGuildUser_2:
  desc: Excludes a user from gaining XP.
  args:
    - '@user'
  params:
    - *o647
xpexclude_IRole_3:
  desc: Excludes a role from gaining XP.
  args:
    - '@role'
  params:
    - *o648
xpexclude_ITextChannel_3:
  desc: Excludes a channel from gaining XP.
  args:
    - channel
  params:
    - *o649
xpinclude_IGuildUser_2:
  desc: Includes a previously excluded user for XP gain.
  args:
    - '@user'
  params:
    - *o650
xpinclude_IRole_3:
  desc: Includes a previously excluded role for XP gain.
  args:
    - '@role'
  params:
    - *o651
xpinclude_ITextChannel_3:
  desc: Includes a previously excluded channel for XP gain.
  args:
    - channel
  params:
    - *o652
xpexcludelist_=_2:
  desc: Lists excluded users, roles, or channels.
  args:
    - null
  params:
    - *o3
rolereward_int_IRole_2:
  desc: Sets a role reward for a specific level.
  args:
    - number @role
  params:
    - *o630
    - *o653
removerolereward_int_2:
  desc: Removes a role reward for a specific level.
  args:
    - number
  params:
    - *o630
rolerewards_noparams_2:
  desc: Lists all role rewards.
  args:
    - ''
  params: [ ]
currencyreward_int_long_2:
  desc: Sets a currency reward for a specific level.
  args:
    - number number
  params:
    - *o630
    - *o654
removecurrencyreward_int_2:
  desc: Removes a currency reward for a specific level.
  args:
    - number
  params:
    - *o630
currencyrewards_noparams_2:
  desc: Lists all currency rewards.
  args:
    - ''
  params: [ ]
xpcompetition_StoopidTime_XpCompetitionType_=_=_2:
  desc: Execute the XpCompetition command
  args:
    - time type 0 null
    - time type
  params:
    - *o655
    - *o656
    - *o131
    - *o3
addcompetitionreward_int_int_string_string_2:
  desc: Execute the AddCompetitionReward command
  args:
    - number number text text
  params:
    - *o657
    - *o658
    - *o659
    - *o660
xpcompetitions_noparams_2:
  desc: Lists active XP competitions.
  args:
    - ''
  params: [ ]
competitionleaderboard_int_2:
  desc: Shows the leaderboard for an active competition.
  args:
    - number
  params:
    - *o661
endcompetition_int_2:
  desc: Ends a competition early and distributes rewards.
  args:
    - number
  params:
    - *o662
voicecontrols:
  desc: Shows interactive controls for managing your custom voice channel.
  args:
    - ''
  params: [ ]
setupvoicehub:
  desc: Sets up a voice channel as a hub for creating custom voice channels.
  args:
    - ''
  params: [ ]
setvoicehub:
  desc: Sets a specific voice channel as the hub for creating custom voice channels.
  args:
    - channel null
    - channel
  params:
    - &o667
      name: channel
      desc: ''
      type: IVoiceChannel
      optional: false
    - *o3
voiceconfig:
  desc: Configures the custom voice settings.
  args:
    - null null
  params:
    - *o3
    - *o3
voicechannels:
  desc: Lists active custom voice channels.
  args:
    - ''
  params: [ ]
voicerename:
  desc: Renames your custom voice channel.
  args:
    - text
  params:
    - *o43
voicelimit:
  desc: Sets the user limit for your custom voice channel.
  args:
    - number
  params:
    - &o668
      name: limit
      desc: ''
      type: int
      optional: false
voicebitrate:
  desc: Sets the bitrate for your custom voice channel.
  args:
    - number
  params:
    - &o669
      name: bitrate
      desc: ''
      type: int
      optional: false
voicelock:
  desc: Locks or unlocks your custom voice channel.
  args:
    - true
  params:
    - *o235
voiceunlock:
  desc: Unlocks your custom voice channel.
  args:
    - ''
  params: [ ]
voiceallow:
  desc: Allows a specific user to join your locked voice channel.
  args:
    - '@user'
  params:
    - &o666
      name: target
      desc: ''
      type: IGuildUser
      optional: false
voicedeny:
  desc: Denies a specific user from joining your voice channel.
  args:
    - '@user'
  params:
    - *o666
voiceclaim:
  desc: Claims ownership of a custom voice channel if the owner is not present.
  args:
    - ''
  params: [ ]
voicetransfer:
  desc: Transfers ownership of your custom voice channel to another user.
  args:
    - '@user'
  params:
    - *o666
voicekeepalive:
  desc: Sets the channel to be kept alive even when empty.
  args:
    - true
  params:
    - *o235
voicepreferences:
  desc: Sets your voice channel preferences.
  args:
    - ''
  params: [ ]
voiceprefsname:
  desc: Sets your preferred name format for custom voice channels.
  args:
    - null
  params:
    - *o3
voiceprefslimit:
  desc: Sets your preferred user limit for custom voice channels.
  args:
    - null
  params:
    - *o3
voiceprefsbitrate:
  desc: Sets your preferred bitrate for custom voice channels.
  args:
    - null
  params:
    - *o3
voiceprefslock:
  desc: Sets your preferred lock status for custom voice channels.
  args:
    - null
  params:
    - *o3
voiceprefskeepalive:
  desc: Sets your preferred keep-alive status for custom voice channels.
  args:
    - null
  params:
    - *o3
voiceprefsreset:
  desc: Resets all your voice channel preferences.
  args:
    - ''
  params: [ ]
voicecontrols_noparams:
  desc: Shows interactive controls for managing your custom voice channel.
  args:
    - ''
  params: [ ]
setupvoicehub_noparams:
  desc: Sets up a voice channel as a hub for creating custom voice channels.
  args:
    - ''
  params: [ ]
setvoicehub_IVoiceChannel_=:
  desc: Sets a specific voice channel as the hub for creating custom voice channels.
  args:
    - channel null
    - channel
  params:
    - *o667
    - *o3
voiceconfig_=_=:
  desc: Configures the custom voice settings.
  args:
    - null null
  params:
    - *o3
    - *o3
voicechannels_noparams:
  desc: Lists active custom voice channels.
  args:
    - ''
  params: [ ]
voicerename_string:
  desc: Renames your custom voice channel.
  args:
    - text
  params:
    - *o43
voicelimit_int:
  desc: Sets the user limit for your custom voice channel.
  args:
    - number
  params:
    - *o668
voicebitrate_int:
  desc: Sets the bitrate for your custom voice channel.
  args:
    - number
  params:
    - *o669
voicelock_=:
  desc: Locks or unlocks your custom voice channel.
  args:
    - true
  params:
    - *o235
voiceunlock_noparams:
  desc: Unlocks your custom voice channel.
  args:
    - ''
  params: [ ]
voiceallow_IGuildUser:
  desc: Unlocks your custom voice channel.
  args:
    - '@user'
  params:
    - *o666
voicedeny_IGuildUser:
  desc: Denies a specific user from joining your voice channel.
  args:
    - '@user'
  params:
    - *o666
voiceclaim_noparams:
  desc: Claims ownership of a custom voice channel if the owner is not present.
  args:
    - ''
  params: [ ]
voicetransfer_IGuildUser:
  desc: Transfers ownership of your custom voice channel to another user.
  args:
    - '@user'
  params:
    - *o666
voicekeepalive_=:
  desc: Sets the channel to be kept alive even when empty.
  args:
    - true
  params:
    - *o235
voicepreferences_noparams:
  desc: Sets your voice channel preferences.
  args:
    - ''
  params: [ ]
voiceprefsname_=:
  desc: Sets your preferred name format for custom voice channels.
  args:
    - null
  params:
    - *o3
voiceprefslimit_=:
  desc: Sets your preferred user limit for custom voice channels.
  args:
    - null
  params:
    - *o3
voiceprefsbitrate_=:
  desc: Sets your preferred bitrate for custom voice channels.
  args:
    - null
  params:
    - *o3
voiceprefslock_=:
  desc: Sets your preferred lock status for custom voice channels.
  args:
    - null
  params:
    - *o3
voiceprefskeepalive_=:
  desc: Sets your preferred keep-alive status for custom voice channels.
  args:
    - null
  params:
    - *o3
voiceprefsreset_noparams:
  desc: Resets all your voice channel preferences.
  args:
    - ''
  params: [ ]
voicecontrols_noparams_1:
  desc: Commands for managing custom voice channels.
  args:
    - ''
  params: [ ]
setupvoicehub_noparams_1:
  desc: Sets up a voice channel as a hub for creating custom voice channels.
  args:
    - ''
  params: [ ]
setvoicehub_IVoiceChannel_=_1:
  desc: Sets a specific voice channel as the hub for creating custom voice channels.
  args:
    - channel null
    - channel
  params:
    - *o667
    - *o3
voiceconfig_=_=_1:
  desc: Configures the custom voice settings.
  args:
    - null null
  params:
    - *o3
    - *o3
voicechannels_noparams_1:
  desc: Lists active custom voice channels.
  args:
    - ''
  params: [ ]
voicerename_string_1:
  desc: Renames your custom voice channel.
  args:
    - text
  params:
    - *o43
voicelimit_int_1:
  desc: Sets the user limit for your custom voice channel.
  args:
    - number
  params:
    - *o668
voicebitrate_int_1:
  desc: Sets the bitrate for your custom voice channel.
  args:
    - number
  params:
    - *o669
voicelock_=_1:
  desc: Locks or unlocks your custom voice channel.
  args:
    - true
  params:
    - *o235
voiceunlock_noparams_1:
  desc: Unlocks your custom voice channel.
  args:
    - ''
  params: [ ]
voiceallow_IGuildUser_1:
  desc: Allows a specific user to join your locked voice channel.
  args:
    - '@user'
  params:
    - *o666
voicedeny_IGuildUser_1:
  desc: Denies a specific user from joining your voice channel.
  args:
    - '@user'
  params:
    - *o666
voiceclaim_noparams_1:
  desc: Claims ownership of a custom voice channel if the owner is not present.
  args:
    - ''
  params: [ ]
voicetransfer_IGuildUser_1:
  desc: Transfers ownership of your custom voice channel to another user.
  args:
    - '@user'
  params:
    - *o666
voicekeepalive_=_1:
  desc: Sets the channel to be kept alive even when empty.
  args:
    - true
  params:
    - *o235
voicepreferences_noparams_1:
  desc: Sets your voice channel preferences.
  args:
    - ''
  params: [ ]
voiceprefsname_=_1:
  desc: Sets your preferred name format for custom voice channels.
  args:
    - null
  params:
    - *o3
voiceprefslimit_=_1:
  desc: Sets your preferred user limit for custom voice channels.
  args:
    - null
  params:
    - *o3
voiceprefsbitrate_=_1:
  desc: Sets your preferred bitrate for custom voice channels.
  args:
    - null
  params:
    - *o3
voiceprefslock_=_1:
  desc: Sets your preferred lock status for custom voice channels.
  args:
    - null
  params:
    - *o3
voiceprefskeepalive_=_1:
  desc: Sets your preferred keep-alive status for custom voice channels.
  args:
    - null
  params:
    - *o3
voiceprefsreset_noparams_1:
  desc: Resets all your voice channel preferences.
  args:
    - ''
  params: [ ]
voicecontrols_noparams_2:
  desc: Commands for managing custom voice channels.
  args:
    - ''
  params: [ ]
setupvoicehub_noparams_2:
  desc: Sets up a voice channel as a hub for creating custom voice channels.
  args:
    - ''
  params: [ ]
setvoicehub_IVoiceChannel_=_2:
  desc: Sets a specific voice channel as the hub for creating custom voice channels.
  args:
    - channel null
    - channel
  params:
    - *o667
    - *o3
voiceconfig_=_=_2:
  desc: Configures the custom voice settings.
  args:
    - null null
  params:
    - *o3
    - *o3
voicechannels_noparams_2:
  desc: Lists active custom voice channels.
  args:
    - ''
  params: [ ]
voicerename_string_2:
  desc: Renames your custom voice channel.
  args:
    - text
  params:
    - *o43
voicelimit_int_2:
  desc: Sets the user limit for your custom voice channel.
  args:
    - number
  params:
    - *o668
voicebitrate_int_2:
  desc: Sets the bitrate for your custom voice channel.
  args:
    - number
  params:
    - *o669
voicelock_=_2:
  desc: Locks or unlocks your custom voice channel.
  args:
    - true
  params:
    - *o235
voiceunlock_noparams_2:
  desc: Unlocks your custom voice channel.
  args:
    - ''
  params: [ ]
voiceallow_IGuildUser_2:
  desc: Unlocks your custom voice channel.
  args:
    - '@user'
  params:
    - *o666
voicedeny_IGuildUser_2:
  desc: Denies a specific user from joining your voice channel.
  args:
    - '@user'
  params:
    - *o666
voiceclaim_noparams_2:
  desc: Claims ownership of a custom voice channel if the owner is not present.
  args:
    - ''
  params: [ ]
voicetransfer_IGuildUser_2:
  desc: Transfers ownership of your custom voice channel to another user.
  args:
    - '@user'
  params:
    - *o666
voicekeepalive_=_2:
  desc: Sets the channel to be kept alive even when empty.
  args:
    - true
  params:
    - *o235
voicepreferences_noparams_2:
  desc: Sets your voice channel preferences.
  args:
    - ''
  params: [ ]
voiceprefsname_=_2:
  desc: Sets your preferred name format for custom voice channels.
  args:
    - null
  params:
    - *o3
voiceprefslimit_=_2:
  desc: Sets your preferred user limit for custom voice channels.
  args:
    - null
  params:
    - *o3
voiceprefsbitrate_=_2:
  desc: Sets your preferred bitrate for custom voice channels.
  args:
    - null
  params:
    - *o3
voiceprefslock_=_2:
  desc: Sets your preferred lock status for custom voice channels.
  args:
    - null
  params:
    - *o3
voiceprefskeepalive_=_2:
  desc: Sets your preferred keep-alive status for custom voice channels.
  args:
    - null
  params:
    - *o3
voiceprefsreset_noparams_2:
  desc: Resets all your voice channel preferences.
  args:
    - ''
  params: [ ]
config:
  desc: Changes yml based config for the bot.
  args:
    - ''
  params: [ ]
config_string:
  desc: Changes yml based config for the bot.
  args:
    - name
  params:
    - name: name
      desc: The name of the config to change.
      type: string
      optional: true
config_string_string:
  desc: Changes yml based config for the bot.
  args:
    - name prop
  params:
    - name: name
      desc: The name of the config to change.
      type: string
      optional: true
    - name: prop
      desc: The property of the config to change.
      type: string
      optional: true
config_string_string_string:
  desc: Changes yml based config for the bot.
  args:
    - name prop value
  params:
    - name: name
      desc: The name of the config to change.
      type: string
      optional: true
    - name: prop
      desc: The property of the config to change.
      type: string
      optional: true
    - name: value
      desc: The new value to set for the property.
      type: string
      optional: true
steal:
  desc: Steals emotes from other servers.
  args:
    - emotes
  params:
    - name: e
      desc: Space-separated list of emote URLs or emote names.
      type: string
      optional: false
sfr:
  desc: Steals emotes for a specific role.
  args:
    - role emotes
  params:
    - name: role
      desc: The role to steal emotes for.
      type: IRole
      optional: false
    - name: e
      desc: Space-separated list of emote URLs or emote names.
      type: string
      optional: false
viewrolestates:
  desc: Views all user role states in the server.
  args:
    - ''
  params: [ ]
rolestatesremoveadduser:
  desc: Removes or denies a user from role states.
  args:
    - user
  params:
    - name: user
      desc: The user to remove/deny from role states.
      type: IUser
      optional: false
langsetdefault:
  desc: Sets the default language for the server.
  args:
    - language
  params:
    - name: language
      desc: The language code to set as default.
      type: string
      optional: false
scadd:
  desc: Adds a command to run at startup.
  args:
    - command
  params:
    - name: command
      desc: The command to add to startup.
      type: string
      optional: false
acadd:
  desc: Adds an automatic command.
  args:
    - command
  params:
    - name: command
      desc: The command to add as automatic.
      type: string
      optional: false
sclist:
  desc: Lists all startup commands.
  args:
    - ''
  params: [ ]
aclist:
  desc: Lists all automatic commands.
  args:
    - ''
  params: [ ]
acrm:
  desc: Removes an automatic command.
  args:
    - index
  params:
    - name: index
      desc: The index of the command to remove.
      type: int
      optional: false
scrm:
  desc: Removes a startup command.
  args:
    - index
  params:
    - name: index
      desc: The index of the command to remove.
      type: int
      optional: false
scclear:
  desc: Clears all startup commands.
  args:
    - ''
  params: [ ]
nsfwtagbl:
  desc: Manages NSFW tag blacklist.
  args:
    - action tag
  params:
    - name: action
      desc: The action to perform (add/remove).
      type: string
      optional: false
    - name: tag
      desc: The tag to blacklist.
      type: string
      optional: false
highlights:
  desc: Manages user highlights.
  args:
    - action word
  params:
    - name: action
      desc: The action to perform with highlights.
      type: string
      optional: false
    - name: word
      desc: The word to highlight.
      type: string
      optional: true
help:
  desc: Shows help information for commands.
  args:
    - command
  params:
    - name: command
      desc: The command to get help for.
      type: string
      optional: true
confesschannel:
  desc: Sets the confession channel.
  args:
    - channel
  params:
    - name: channel
      desc: The channel to set for confessions.
      type: ITextChannel
      optional: true
confesslogchannel:
  desc: Sets the confession log channel.
  args:
    - channel
  params:
    - name: channel
      desc: The channel to log confessions to.
      type: ITextChannel
      optional: true
confessblacklist:
  desc: Adds a user to the confession blacklist.
  args:
    - user
  params:
    - name: user
      desc: The user to blacklist from confessions.
      type: IUser
      optional: false
confessunblacklist:
  desc: Removes a user from the confession blacklist.
  args:
    - user
  params:
    - name: user
      desc: The user to unblacklist from confessions.
      type: IUser
      optional: false
chattriggerscrosspostwebhook:
  desc: Sets webhook for chat trigger cross-posting.
  args:
    - webhook
  params:
    - name: webhook
      desc: The webhook URL for cross-posting.
      type: string
      optional: false
chattriggerscrosspostchannel:
  desc: Sets channel for chat trigger cross-posting.
  args:
    - channel
  params:
    - name: channel
      desc: The channel for cross-posting.
      type: ITextChannel
      optional: false
afk:
  desc: Sets your AFK status.
  args:
    - message
  params:
    - name: message
      desc: The AFK message to display.
      type: string
      optional: true
afkrm:
  desc: Removes your AFK status.
  args:
    - ''
  params: [ ]
plot:
  desc: Creates a graph plot.
  args:
    - expression
  params:
    - name: expression
      desc: The mathematical expression to plot.
      type: string
      optional: false
sym:
  desc: Performs symbolic calculations.
  args:
    - expression
  params:
    - name: expression
      desc: The expression to calculate symbolically.
      type: string
      optional: false
minmsglength:
  desc: Sets minimum message count length.
  args:
    - length
  params:
    - name: length
      desc: The minimum message length.
      type: int
      optional: false
togglemsgcount:
  desc: Toggles message count tracking.
  args:
    - ''
  params: [ ]
repeatredun:
  desc: Manages repeat redundancy.
  args:
    - action
  params:
    - name: action
      desc: The action to perform.
      type: string
      optional: false
ccatc:
  desc: Creates category and text channels.
  args:
    - name count
  params:
    - name: name
      desc: The category name.
      type: string
      optional: false
    - name: count
      desc: Number of text channels to create.
      type: int
      optional: false
ccavc:
  desc: Creates category and voice channels.
  args:
    - name count
  params:
    - name: name
      desc: The category name.
      type: string
      optional: false
    - name: count
      desc: Number of voice channels to create.
      type: int
      optional: false
ccvc:
  desc: Creates category voice channels.
  args:
    - category count
  params:
    - name: category
      desc: The category to add channels to.
      type: ICategoryChannel
      optional: false
    - name: count
      desc: Number of voice channels to create.
      type: int
      optional: false
cctc:
  desc: Creates category text channels.
  args:
    - category count
  params:
    - name: category
      desc: The category to add channels to.
      type: ICategoryChannel
      optional: false
    - name: count
      desc: Number of text channels to create.
      type: int
      optional: false
sj:
  desc: Stops a running job.
  args:
    - job
  params:
    - name: job
      desc: The job to stop.
      type: string
      optional: false
rj:
  desc: Manages role jobs.
  args:
    - action
  params:
    - name: action
      desc: The action to perform on role jobs.
      type: string
      optional: false
atuo:
  desc: Adds role to users over a threshold.
  args:
    - role threshold
  params:
    - name: role
      desc: The role to add.
      type: IRole
      optional: false
    - name: threshold
      desc: The threshold value.
      type: int
      optional: false
atuu:
  desc: Adds role to users under a threshold.
  args:
    - role threshold
  params:
    - name: role
      desc: The role to add.
      type: IRole
      optional: false
    - name: threshold
      desc: The threshold value.
      type: int
      optional: false
banmsgtest:
  desc: Tests ban message functionality.
  args:
    - user
  params:
    - name: user
      desc: The user to test ban message with.
      type: IUser
      optional: false
dpo:
  desc: Overrides Discord permissions.
  args:
    - permission action
  params:
    - name: permission
      desc: The permission to override.
      type: string
      optional: false
    - name: action
      desc: The action to take.
      type: string
      optional: false
dpor:
  desc: Resets Discord permission overrides.
  args:
    - ''
  params: [ ]
dpol:
  desc: Lists Discord permission overrides.
  args:
    - ''
  params: [ ]
prefix:
  desc: Manages command prefixes.
  args:
    - prefix
  params:
    - name: prefix
      desc: The prefix to set.
      type: string
      optional: true
syncallxproles:
  desc: Synchronizes XP roles for all users in the server.
  args:
    - ''
  params: [ ]
syncmyxproles:
  desc: Synchronizes your XP roles.
  args:
    - ''
  params: [ ]
syncuserxproles:
  desc: Synchronizes XP roles for a specific user.
  args:
    - '@user'
  params:
    - name: user
      desc: The user to synchronize XP roles for.
      type: IGuildUser
      optional: false
ticketautoarchive:
  desc: Sets auto-archive behavior for a button
  args:
    - number boolean
  params:
    - &t1
      name: buttonId
      desc: The button ID to configure auto-archive for
      type: int
      optional: false
    - &t2
      name: enabled
      desc: Whether to enable auto-archive on close
      type: bool
      optional: true
ticketclosebehavior:
  desc: Sets multiple close behaviors for a button at once
  args:
    - number bool bool bool bool number
  params:
    - &t3
      name: buttonId
      desc: The button ID to configure close behavior for
      type: int
      optional: false
    - &t4
      name: autoArchive
      desc: Whether to auto-archive on close
      type: bool?
      optional: true
    - &t5
      name: deleteOnClose
      desc: Whether to delete ticket on close
      type: bool?
      optional: true
    - &t6
      name: lockOnClose
      desc: Whether to lock ticket on close
      type: bool?
      optional: true
    - &t7
      name: renameOnClose
      desc: Whether to rename ticket on close
      type: bool?
      optional: true
    - &t8
      name: deleteDelayMinutes
      desc: Delay in minutes before deletion
      type: int?
      optional: true
recreatepanel:
  desc: Recreates a deleted ticket panel in its original channel.
  args:
    - number
  params:
    - &t9
      name: panelId
      desc: The message ID of the panel to recreate
      type: ulong
      optional: false
checkpanels:
  desc: Checks all panels in the guild for missing messages.
  args:
    - ''
  params: [ ]
recreateallpanels:
  desc: Recreates all panels with missing messages.
  args:
    - ''
  params: [ ]
patreonch:
  desc: Sets or shows the Patreon announcement channel.
  args:
    - '#channel'
  params:
    - &p1
      name: channel
      desc: The channel to set for Patreon announcements. If null, shows current channel.
      type: ITextChannel?
      optional: true
patreondisable:
  desc: Disables Patreon announcements for this server.
  args:
    - ''
  params: [ ]
patreonmsg:
  desc: Sets a custom message for Patreon announcements.
  args:
    - text
  params:
    - &p2
      name: message
      desc: The custom message. Use placeholders like %server.name%, %month%, etc. Use "-" to reset to default.
      type: string?
      optional: true
patreonday:
  desc: Sets the day of the month for Patreon announcements.
  args:
    - number
  params:
    - &p3
      name: day
      desc: The day of the month (1-28) for announcements. If null, shows current day.
      type: int?
      optional: true
patreontoggle:
  desc: Toggle Patreon announcements on or off.
  args:
    - ''
  params: [ ]
patreonconfig:
  desc: Show current Patreon configuration.
  args:
    - ''
  params: [ ]
patreonannounce:
  desc: Manually trigger a Patreon announcement.
  args:
    - ''
  params: [ ]
patreonhelp:
  desc: Shows Patreon command help.
  args:
    - ''
  params: [ ]
patreonsync:
  desc: Synchronizes Patreon supporters.
  args:
    - ''
  params: [ ]
patreonsupporters:
  desc: Lists Patreon supporters.
  args:
    - ''
  params: [ ]
patreonlink:
  desc: Link a Discord user to a Patreon supporter.
  args:
    - '@user text'
  params:
    - &p10
      name: user
      desc: The Discord user to link.
      type: IGuildUser
      optional: false
    - &p11
      name: patreonUserId
      desc: The Patreon user ID to link to.
      type: string
      optional: false
patreonrolesync:
  desc: Toggle automatic role synchronization.
  args:
    - ''
  params: [ ]
patreontiermap:
  desc: Map a Patreon tier to a Discord role.
  args:
    - text @role
  params:
    - &p12
      name: tierId
      desc: The Patreon tier ID.
      type: string
      optional: false
    - &p13
      name: role
      desc: The Discord role to map to the tier.
      type: IRole
      optional: false
patreonsyncall:
  desc: Sync roles for all linked supporters.
  args:
    - ''
  params: [ ]
patreonstats:
  desc: Show Patreon supporter statistics.
  args:
    - ''
  params: [ ]
patreongoals:
  desc: Show current Patreon goals.
  args:
    - ''
  params: [ ]
patreontop:
  desc: Show top Patreon supporters.
  args:
    - number
  params:
    - &p14
      name: count
      desc: Number of top supporters to show (1-20).
      type: int
      optional: true
patreonroles:
  desc: List Patreon tier-role mappings.
  args:
    - ''
  params: [ ]
patreonanalytics:
  desc: Show detailed Patreon analytics.
  args:
    - ''
  params: [ ]
patreonrecognize:
  desc: Send recognition messages for new supporters.
  args:
    - '#channel'
  params:
    - &p15
      name: channel
      desc: The channel to send recognition messages to.
      type: ITextChannel?
      optional: true
transactions:
  desc: Display recent currency transactions for a user.
  args:
    - '@user'
  params:
    - &c1
      name: user
      desc: The user whose transactions are to be displayed. Defaults to the current user.
      type: IUser?
      optional: true
war:
  desc: Play a card game of War against the bot.
  args:
    - number
  params:
    - &c2
      name: betAmount
      desc: The amount to bet.
      type: long
      optional: false
craps:
  desc: Play a game of Craps with customizable bet types.
  args:
    - number text
  params:
    - &c3
      name: betAmount
      desc: The amount to bet.
      type: long
      optional: false
    - &c4
      name: betType
      desc: The type of bet (pass, dontpass, field, any).
      type: string
      optional: true
scratchcard:
  desc: Buy and play a scratch card lottery game.
  args:
    - text
  params:
    - &c5
      name: cardType
      desc: The type of card to buy (bronze, silver, gold, diamond).
      type: string
      optional: true
russianroulette:
  desc: Play Russian Roulette with customizable bullet count.
  args:
    - number number
  params:
    - &c6
      name: betAmount
      desc: The amount to bet.
      type: long
      optional: false
    - &c7
      name: bullets
      desc: Number of bullets (1-5).
      type: int
      optional: true
baccarat:
  desc: Play Baccarat with player, banker, or tie bets.
  args:
    - number text
  params:
    - &c8
      name: betAmount
      desc: The amount to bet.
      type: long
      optional: false
    - &c9
      name: betType
      desc: The type of bet (player, banker, tie).
      type: string
      optional: true
minesweeper:
  desc: Play a Minesweeper-style gambling game.
  args:
    - number text
  params:
    - &c10
      name: betAmount
      desc: The amount to bet.
      type: long
      optional: false
    - &c11
      name: size
      desc: Grid size (small, medium, large).
      type: string
      optional: true
lottery:
  desc: Buy lottery tickets for a chance to win big.
  args:
    - number
  params:
    - &c12
      name: ticketCount
      desc: Number of tickets to buy (1-10).
      type: int
      optional: true
crash:
  desc: Play Crash - bet on when the multiplier will crash.
  args:
    - number number
  params:
    - &c13
      name: betAmount
      desc: The amount to bet.
      type: long
      optional: false
    - &c14
      name: targetMultiplier
      desc: The multiplier to cash out at (1.1x - 10.0x).
      type: double
      optional: true
keno:
  desc: Play Keno - pick numbers and hope they match.
  args:
    - number text
  params:
    - &c15
      name: betAmount
      desc: The amount to bet.
      type: long
      optional: false
    - &c16
      name: numbers
      desc: Up to 10 numbers between 1-80, separated by spaces.
      type: string
      optional: false
plinko:
  desc: Play Plinko - drop a ball down pegs for prizes.
  args:
    - number number
  params:
    - &c17
      name: betAmount
      desc: The amount to bet.
      type: long
      optional: false
    - &c18
      name: rows
      desc: Number of peg rows (5-10).
      type: int
      optional: true
wheelfortune:
  desc: Spin the Wheel of Fortune for prizes.
  args:
    - number text
  params:
    - &c19
      name: betAmount
      desc: The amount to bet.
      type: long
      optional: false
    - &c20
      name: wheelType
      desc: The type of wheel (classic, risky, balanced).
      type: string
      optional: true
duckrace:
  desc: Bet on a duck race and watch them compete.
  args:
    - number
  params:
    - &c21
      name: betAmount
      desc: The amount to bet on the duck race.
      type: long
      optional: false
bingo:
  desc: Play Bingo with customizable card sizes.
  args:
    - number text
  params:
    - &c22
      name: betAmount
      desc: The amount to bet.
      type: long
      optional: false
    - &c23
      name: cardType
      desc: The type of bingo card (small, large).
      type: string
      optional: true
diceduel:
  desc: Challenge another player to a dice duel.
  args:
    - '@user number'
  params:
    - &c24
      name: opponent
      desc: The user to challenge.
      type: IUser
      optional: false
    - &c25
      name: betAmount
      desc: The amount each player bets.
      type: long
      optional: false
memory:
  desc: Play a memory game for currency rewards.
  args:
    - number text
  params:
    - &c26
      name: betAmount
      desc: The amount to bet.
      type: long
      optional: false
    - &c27
      name: difficulty
      desc: The difficulty level (easy, medium, hard).
      type: string
      optional: true
dailychallenge:
  desc: Check your current daily challenge.
  args:
    - ''
  params: [ ]
claimchallenge:
  desc: Claim your completed daily challenge reward.
  args:
    - ''
  params: [ ]
challengeleaderboard:
  desc: View the daily challenge leaderboard.
  args:
    - ''
  params: [ ]
triviachain:
  desc: Play Trivia Chain - answer questions to build winnings.
  args:
    - number text
  params:
    - &t10
      name: betAmount
      desc: The amount to bet.
      type: long
      optional: false
    - &t11
      name: category
      desc: The trivia category.
      type: string
      optional: true
addreactiontrigger:
  desc: Add an automatic reaction trigger when someone reacts.
  args:
    - text text
  params:
    - &r1
      name: reaction
      desc: The reaction emoji to trigger on.
      type: string
      optional: false
    - &r2
      name: message
      desc: The message to send when triggered.
      type: string?
      optional: true
deleteselectmenu:
  desc: Delete a ticket select menu by ID.
  args:
    - number
  params:
    - &sm1
      name: menuId
      desc: The ID of the select menu to delete.
      type: int
      optional: false
deleteselectoption:
  desc: Delete a ticket select menu option by ID.
  args:
    - number
  params:
    - &sm2
      name: optionId
      desc: The ID of the select menu option to delete.
      type: int
      optional: false
