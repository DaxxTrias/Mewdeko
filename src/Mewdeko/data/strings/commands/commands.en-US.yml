acadd:
  args:
    - command
  desc: Adds an automatic command.
  params:
    - desc: The command to add as automatic.
      name: command
      optional: false
      type: string
accept:
  args:
    - sid null
    - sid
  desc: Accepts a suggestion, marking it as approved.
  params:
    - &ref_0
      desc: The unique number (ID) of the suggestion to mark as implemented.
      name: sid
      optional: false
      type: ulong
    - &ref_1
      desc: ''
      name: null
      optional: true
      type: '='
accept_ulong_=:
  args:
    - sid null
    - sid
  desc: Accepts a suggestion, marking it as approved.
  params:
    - *ref_0
    - *ref_1
accept_ulong_=_1:
  args:
    - sid null
    - sid
  desc: Accepts a suggestion, marking it as approved.
  params:
    - *ref_0
    - *ref_1
accept_ulong_=_2:
  args:
    - sid null
    - sid
  desc: Accepts a suggestion, marking it as approved.
  params:
    - *ref_0
    - *ref_1
acceptchannel:
  args:
    - null
  desc: Sets the channel where accepted suggestions are posted.
  params:
    - *ref_1
acceptchannel_=:
  args:
    - null
  desc: Sets the channel where accepted suggestions are posted.
  params:
    - *ref_1
acceptchannel_=_1:
  args:
    - null
  desc: Sets the channel where accepted suggestions are posted.
  params:
    - *ref_1
acceptchannel_=_2:
  args:
    - null
  desc: Sets the channel where accepted suggestions are posted.
  params:
    - *ref_1
acceptmessage:
  args:
    - text
  desc: Sets or updates the accept message for suggestions.
  params:
    - &ref_2
      desc: The message or embed code. Use "-" to reset to the default message.
      name: embed
      optional: false
      type: string
acceptmessage_string:
  args:
    - text
  desc: Sets or updates the accept message for suggestions.
  params:
    - *ref_2
acceptmessage_string_1:
  args:
    - text
  desc: Sets or updates the accept message for suggestions.
  params:
    - *ref_2
acceptmessage_string_2:
  args:
    - text
  desc: Sets or updates the accept message for suggestions.
  params:
    - *ref_2
aclist:
  args:
    - ''
  desc: Lists all automatic commands.
  params: [ ]
acrm:
  args:
    - index
  desc: Removes an automatic command.
  params:
    - desc: The index of the command to remove.
      name: index
      optional: false
      type: int
acrophobia:
  args:
    - text
  desc: Command for starting an Acrophobia game.
  params:
    - &ref_3
      desc: Arguments passed to the command.
      name: args
      optional: false
      type: string[]
acrophobia_string[]:
  args:
    - text
  desc: Command for starting an Acrophobia game.
  params:
    - *ref_3
acrophobia_string[]_1:
  args:
    - text
  desc: A module containing various games.
  params:
    - *ref_3
acrophobia_string[]_2:
  args:
    - text
  desc: A module containing Acrophobia commands.
  params:
    - *ref_3
activefilters:
  args:
    - ''
  desc: Displays all currently active audio filters.
  params: [ ]
activefilters_noparams:
  args:
    - ''
  desc: Execute the ActiveFilters command
  params: [ ]
activefilters_noparams_1:
  args:
    - ''
  desc: Displays all currently active audio filters.
  params: [ ]
activefilters_noparams_2:
  args:
    - ''
  desc: Execute the ActiveFilters command
  params: [ ]
activitygraph:
  args:
    - graphtype.days
  desc: Displays a graph of the busiest hours and days in the server.
  params:
    - &ref_4
      desc: ''
      name: GraphType.Days
      optional: false
      type: '='
activitygraph_=:
  args:
    - graphtype.days
  desc: Displays a graph of the busiest hours and days in the server.
  params:
    - *ref_4
activitygraph_=_1:
  args:
    - graphtype.days
  desc: Displays a graph of the busiest hours and days in the server.
  params:
    - *ref_4
activitygraph_=_2:
  args:
    - graphtype.days
  desc: Displays a graph of the busiest hours and days in the server.
  params:
    - *ref_4
addautopublish:
  args:
    - channel
  desc: Enables auto-publishing for a specified news channel within the guild.
  params:
    - &ref_5
      desc: The channel for which to apply the blacklist.
      name: channel
      optional: false
      type: ITextChannel
addautopublish_ITextChannel:
  args:
    - channel
  desc: Enables auto-publishing for a specified news channel within the guild.
  params:
    - *ref_5
addautopublish_ITextChannel_1:
  args:
    - channel
  desc: Commands for managing auto-publishing of messages in announcement channels.
  params:
    - *ref_5
addautopublish_ITextChannel_2:
  args:
    - channel
  desc: Enables auto-publishing for a specified news channel within the guild.
  params:
    - *ref_5
addblacklistedpermission:
  args:
    - permission null
    - permission
  desc: Adds a permission to the blacklist.
  params:
    - &ref_6
      desc: The permission to blacklist.
      name: permission
      optional: false
      type: GuildPermission
    - *ref_1
addblacklistedpermission_GuildPermission_=:
  args:
    - permission null
    - permission
  desc: Adds a permission to the blacklist.
  params:
    - &ref_7
      desc: The permission to remove from the blacklist.
      name: permission
      optional: false
      type: GuildPermission
    - *ref_1
addblacklistedpermission_GuildPermission_=_1:
  args:
    - permission null
    - permission
  desc: Adds a permission to the blacklist.
  params:
    - *ref_6
    - *ref_1
addblacklistedpermission_GuildPermission_=_2:
  args:
    - permission null
    - permission
  desc: Adds a permission to the blacklist.
  params:
    - *ref_7
    - *ref_1
addblacklistedrole:
  args:
    - '@role null'
    - '@role'
  desc: Adds a role to the blacklist.
  params:
    - &ref_8
      desc: The role to remove from the blacklist.
      name: role
      optional: false
      type: IRole
    - *ref_1
addblacklistedrole_IRole_=:
  args:
    - '@role null'
    - '@role'
  desc: Adds a role to the blacklist.
  params:
    - *ref_8
    - *ref_1
addblacklistedrole_IRole_=_1:
  args:
    - '@role null'
    - '@role'
  desc: Adds a role to the blacklist.
  params:
    - *ref_8
    - *ref_1
addblacklistedrole_IRole_=_2:
  args:
    - '@role null'
    - '@role'
  desc: Adds a role to the blacklist.
  params:
    - *ref_8
    - *ref_1
addchattrigger:
  args:
    - text text
    - text
  desc: Adds a new chat trigger.
  params:
    - &ref_9
      desc: The key for the chat trigger.
      name: key
      optional: false
      type: string
    - &ref_10
      desc: The message associated with the chat trigger.
      name: message
      optional: true
      type: string
addchattrigger_string_string:
  args:
    - text text
    - text
  desc: Adds a new chat trigger.
  params:
    - *ref_9
    - *ref_10
addchattrigger_string_string_1:
  args:
    - text text
    - text
  desc: Adds a new chat trigger.
  params:
    - *ref_9
    - *ref_10
addchattrigger_string_string_2:
  args:
    - text text
    - text
  desc: Adds a new chat trigger.
  params:
    - *ref_9
    - *ref_10
addchattriggerregex:
  args:
    - text text
    - text
  desc: Adds a new chat trigger with regex support.
  params:
    - *ref_9
    - *ref_10
addchattriggerregex_string_string:
  args:
    - text text
    - text
  desc: Adds a new chat trigger with regex support.
  params:
    - *ref_9
    - &ref_11
      desc: The new message for the chat trigger.
      name: message
      optional: true
      type: string
addchattriggerregex_string_string_1:
  args:
    - text text
    - text
  desc: Adds a new chat trigger with regex support.
  params:
    - *ref_9
    - *ref_10
addchattriggerregex_string_string_2:
  args:
    - text text
    - text
  desc: Adds a new chat trigger with regex support.
  params:
    - *ref_9
    - *ref_11
addcompetitionreward:
  args:
    - number number text text
  desc: Adds a reward for a competition placement.
  params:
    - &ref_12
      desc: The ID of the competition.
      name: competitionId
      optional: false
      type: int
    - &ref_13
      desc: The position to reward (1 for first place, etc.).
      name: position
      optional: false
      type: int
    - &ref_14
      desc: 'The type of reward: Role, XP, or Currency.'
      name: type
      optional: false
      type: string
    - &ref_15
      desc: ''
      name: reward
      optional: false
      type: string
addcompetitionreward_int_int_string_string:
  args:
    - number number text text
  desc: Execute the AddCompetitionReward command
  params:
    - *ref_12
    - *ref_13
    - *ref_14
    - *ref_15
addcompetitionreward_int_int_string_string_1:
  args:
    - number number text text
  desc: Adds a reward for a competition placement.
  params:
    - *ref_12
    - *ref_13
    - *ref_14
    - *ref_15
addcompetitionreward_int_int_string_string_2:
  args:
    - number number text text
  desc: Execute the AddCompetitionReward command
  params:
    - *ref_12
    - *ref_13
    - *ref_14
    - *ref_15
addemote:
  args:
    - text null
    - text
  desc: Adds a new emote to the server.
  params:
    - &ref_16
      desc: The name of the emote.
      name: name
      optional: false
      type: string
    - *ref_1
addemote_string_=:
  args:
    - text null
    - text
  desc: Adds a new emote to the server.
  params:
    - *ref_16
    - *ref_1
addinstance:
  args:
    - number
  desc: Adds a bot instance to be managed from the dashboard.
  params:
    - &ref_400
      desc: The port number of the instance to remove
      name: instancePort
      optional: false
      type: int
addinstance_int:
  args:
    - number
  desc: >-
    Commands for managing bot instances that can be controlled via the
    dashboard. These commands are only available to the bot owner.
  params:
    - desc: The port number the instance is running on
      name: instancePort
      optional: false
      type: int
addlevelupmessage:
  args:
    - message
  desc: Adds a custom level-up message template with placeholder support.
  params:
    - desc: >-
        The message template with placeholders like %xp.user.mention%,
        %xp.level.new%, etc.
      name: message
      optional: false
      type: string
addmodalfield:
  args:
    - number text null
    - number text
  desc: Adds a field to the ticket creation modal
  params:
    - &ref_17
      desc: The ID of the button to configure
      name: buttonId
      optional: false
      type: int
    - &ref_18
      desc: The label for the field
      name: label
      optional: false
      type: string
    - *ref_1
addmodalfield_int_string_=:
  args:
    - number text null
    - number text
  desc: Execute the AddModalField command
  params:
    - *ref_17
    - *ref_18
    - *ref_1
addmodalfield_int_string_=_1:
  args:
    - number text null
    - number text
  desc: Adds a field to the ticket creation modal
  params:
    - *ref_17
    - *ref_18
    - *ref_1
addmodalfield_int_string_=_2:
  args:
    - number text null
    - number text
  desc: Execute the AddModalField command
  params:
    - *ref_17
    - *ref_18
    - *ref_1
addmodalfield_int_string_=_3:
  args:
    - number text null
    - number text
  desc: Adds a field to the ticket creation modal
  params:
    - *ref_17
    - *ref_18
    - *ref_1
addmodalfield_int_string_=_4:
  args:
    - number text null
    - number text
  desc: Execute the AddModalField command
  params:
    - *ref_17
    - *ref_18
    - *ref_1
addoption:
  args:
    - text text null null
    - text text
  desc: Adds an option to an existing select menu
  params:
    - &ref_19
      desc: The ID of the menu to add the option to
      name: menuId
      optional: false
      type: string
    - &ref_20
      desc: The label shown to users
      name: label
      optional: false
      type: string
    - *ref_1
    - *ref_1
addoption_string_string_=_=:
  args:
    - text text null null
    - text text
  desc: Adds an option to an existing select menu
  params:
    - *ref_19
    - *ref_20
    - *ref_1
    - *ref_1
addoption_string_string_=_=_1:
  args:
    - text text null null
    - text text
  desc: Adds an option to an existing select menu
  params:
    - *ref_19
    - *ref_20
    - *ref_1
    - *ref_1
addoption_string_string_=_=_2:
  args:
    - text text null null
    - text text
  desc: Adds an option to an existing select menu
  params:
    - *ref_19
    - *ref_20
    - *ref_1
    - *ref_1
addoption_string_string_=_=_3:
  args:
    - text text null null
    - text text
  desc: Adds an option to an existing select menu
  params:
    - *ref_19
    - *ref_20
    - *ref_1
    - *ref_1
addoption_string_string_=_=_4:
  args:
    - text text null null
    - text text
  desc: Adds an option to an existing select menu
  params:
    - *ref_19
    - *ref_20
    - *ref_1
    - *ref_1
addplaying:
  args:
    - t text
  desc: Adds a new status to the rotation of playing statuses for the bot.
  params:
    - &ref_21
      desc: The type of activity (e.g., Playing, Streaming).
      name: t
      optional: false
      type: ActivityType
    - &ref_22
      desc: The text of the status to add.
      name: status
      optional: false
      type: string
addplaying_ActivityType_string:
  args:
    - t text
  desc: Adds a new status to the rotation of playing statuses for the bot.
  params:
    - *ref_21
    - *ref_22
addplaying_ActivityType_string_1:
  args:
    - t text
  desc: Adds a new status to the rotation of playing statuses for the bot.
  params:
    - *ref_21
    - *ref_22
addplaying_ActivityType_string_2:
  args:
    - t text
  desc: Adds a new status to the rotation of playing statuses for the bot.
  params:
    - *ref_21
    - *ref_22
addpublishblacklist:
  args:
    - '@user channel'
  desc: Adds a user to the auto-publish blacklist for a specified channel.
  params:
    - &ref_24
      desc: The user to blacklist.
      name: user
      optional: false
      type: IUser
    - *ref_5
addpublishblacklist_ITextChannel_string:
  args:
    - channel text
  desc: Adds a word to the auto-publish blacklist for a specified channel.
  params:
    - *ref_5
    - &ref_23
      desc: The word to blacklist.
      name: word
      optional: false
      type: string
addpublishblacklist_ITextChannel_string_1:
  args:
    - channel text
  desc: Adds a word to the auto-publish blacklist for a specified channel.
  params:
    - *ref_5
    - *ref_23
addpublishblacklist_ITextChannel_string_2:
  args:
    - channel text
  desc: Adds a word to the auto-publish blacklist for a specified channel.
  params:
    - *ref_5
    - *ref_23
addpublishblacklist_ITextChannel_string_3:
  args:
    - channel text
  desc: Adds a word to the auto-publish blacklist for a specified channel.
  params:
    - *ref_5
    - *ref_23
addpublishblacklist_IUser_ITextChannel:
  args:
    - '@user channel'
  desc: Adds a user to the auto-publish blacklist for a specified channel.
  params:
    - *ref_24
    - *ref_5
addpublishblacklist_IUser_ITextChannel_1:
  args:
    - '@user channel'
  desc: Adds a user to the auto-publish blacklist for a specified channel.
  params:
    - *ref_24
    - *ref_5
addpublishblacklist_IUser_ITextChannel_2:
  args:
    - '@user channel'
  desc: Adds a user to the auto-publish blacklist for a specified channel.
  params:
    - *ref_24
    - *ref_5
addreactiontrigger:
  args:
    - text text
  desc: Add an automatic reaction trigger when someone reacts.
  params:
    - desc: The reaction emoji to trigger on.
      name: reaction
      optional: false
      type: string
    - desc: The message to send when triggered.
      name: message
      optional: true
      type: string?
addrolestorolestate:
  args:
    - '@user @role'
  desc: Adds roles to a user's role state.
  params:
    - &ref_26
      desc: The user whose role state should be modified.
      name: user
      optional: false
      type: IUser
    - &ref_25
      desc: The roles to be added to the user's role state.
      name: roles
      optional: false
      type: IRole[]
addrolestorolestate_IUser_IRole[]:
  args:
    - '@user @role'
  desc: Adds roles to a user's role state.
  params:
    - &ref_27
      desc: The user whose role state should be deleted.
      name: user
      optional: false
      type: IUser
    - *ref_25
addrolestorolestate_IUser_IRole[]_1:
  args:
    - '@user @role'
  desc: Adds roles to a user's role state.
  params:
    - *ref_26
    - *ref_25
addrolestorolestate_IUser_IRole[]_2:
  args:
    - '@user @role'
  desc: Adds roles to a user's role state.
  params:
    - *ref_27
    - *ref_25
addroletolist:
  args:
    - '@role'
  desc: Adds a specified role to a list of users defined in an attached file.
  params:
    - &ref_28
      desc: The role to be added to the users listed in the attached file.
      name: role
      optional: false
      type: IRole
addroletolist_IRole:
  args:
    - '@role'
  desc: Adds a specified role to a list of users defined in an attached file.
  params:
    - *ref_28
addroletolist_IRole_1:
  args:
    - '@role'
  desc: Adds a specified role to a list of users defined in an attached file.
  params:
    - *ref_28
addroletolist_IRole_2:
  args:
    - '@role'
  desc: Adds a specified role to a list of users defined in an attached file.
  params:
    - *ref_28
addroletorole:
  args:
    - '@role @role'
  desc: >-
    Adds a specified role to all users who currently have another specified
    role.
  params:
    - &ref_29
      desc: The role to add.
      name: role
      optional: false
      type: IRole
    - &ref_30
      desc: The role whose members will receive the new role.
      name: role2
      optional: false
      type: IRole
addroletorole_IRole_IRole:
  args:
    - '@role @role'
  desc: Execute the AddRoleToRole command
  params:
    - *ref_29
    - *ref_30
addroletorole_IRole_IRole_1:
  args:
    - '@role @role'
  desc: >-
    Adds a specified role to all users who currently have another specified
    role.
  params:
    - *ref_29
    - *ref_30
addroletorole_IRole_IRole_2:
  args:
    - '@role @role'
  desc: Execute the AddRoleToRole command
  params:
    - *ref_29
    - *ref_30
addselectmenu:
  args:
    - panelid
  desc: Adds a select menu to a ticket panel.
  params:
    - &ref_31
      desc: The ID of the panel to add the menu to
      name: panelId
      optional: false
      type: ulong
addselectmenu_ulong:
  args:
    - panelid
  desc: Adds a select menu to a ticket panel.
  params:
    - *ref_31
addselectmenu_ulong_1:
  args:
    - panelid
  desc: Adds a select menu to a ticket panel.
  params:
    - *ref_31
addselectmenu_ulong_2:
  args:
    - panelid
  desc: Adds a select menu to a ticket panel.
  params:
    - *ref_31
addselectmenu_ulong_3:
  args:
    - panelid
  desc: Adds a select menu to a ticket panel.
  params:
    - *ref_31
addselectmenu_ulong_4:
  args:
    - panelid
  desc: Adds a select menu to a ticket panel.
  params:
    - *ref_31
addstarboardemote:
  args:
    - number emote
  desc: Adds an emote to an existing starboard configuration.
  params:
    - &ref_415
      desc: The ID of the starboard configuration.
      name: starboardId
      optional: false
      type: int
    - &ref_516
      desc: The emote to add.
      name: emote
      optional: false
      type: IEmote
addstatusrole:
  args:
    - text
  desc: Adds a status role configuration.
  params:
    - &ref_32
      desc: The status to add.
      name: status
      optional: false
      type: string
addstatusrole_string:
  args:
    - text
  desc: Adds a status role configuration.
  params:
    - *ref_32
addstatusrole_string_1:
  args:
    - text
  desc: Module for managing roles that are assigned based on user status.
  params:
    - *ref_32
addstatusrole_string_2:
  args:
    - text
  desc: Module for managing roles that are assigned based on user status.
  params:
    - *ref_32
addthenremove:
  args:
    - '@role @role'
  desc: >-
    Adds a role to users and then removes a different role from them in one
    operation.
  params:
    - &ref_33
      desc: The role to add to the users.
      name: role
      optional: false
      type: IRole
    - &ref_34
      desc: The role to remove from the same users.
      name: role2
      optional: false
      type: IRole
addthenremove_IRole_IRole:
  args:
    - '@role @role'
  desc: Execute the AddThenRemove command
  params:
    - *ref_33
    - *ref_34
addthenremove_IRole_IRole_1:
  args:
    - '@role @role'
  desc: >-
    Adds a role to users and then removes a different role from them in one
    operation.
  params:
    - *ref_33
    - *ref_34
addthenremove_IRole_IRole_2:
  args:
    - '@role @role'
  desc: Execute the AddThenRemove command
  params:
    - *ref_33
    - *ref_34
addtoall:
  args:
    - '@role'
  desc: Adds a specified role to all server members.
  params:
    - &ref_35
      desc: The role to be added to all server members.
      name: role
      optional: false
      type: IRole
addtoall_IRole:
  args:
    - '@role'
  desc: Adds a specified role to all server members.
  params:
    - *ref_35
addtoall_IRole_1:
  args:
    - '@role'
  desc: Adds a specified role to all server members.
  params:
    - *ref_35
addtoall_IRole_2:
  args:
    - '@role'
  desc: Adds a specified role to all server members.
  params:
    - *ref_35
addtoallbots:
  args:
    - '@role'
  desc: Adds a specified role to all bots in the server.
  params:
    - &ref_36
      desc: The role to be added to all bots.
      name: role
      optional: false
      type: IRole
addtoallbots_IRole:
  args:
    - '@role'
  desc: Adds a specified role to all bots in the server.
  params:
    - *ref_36
addtoallbots_IRole_1:
  args:
    - '@role'
  desc: Adds a specified role to all bots in the server.
  params:
    - *ref_36
addtoallbots_IRole_2:
  args:
    - '@role'
  desc: Adds a specified role to all bots in the server.
  params:
    - *ref_36
addtoallusers:
  args:
    - '@role'
  desc: Adds a specified role to all human users in the server, excluding bots.
  params:
    - &ref_37
      desc: The role to be added to all human users.
      name: role
      optional: false
      type: IRole
addtoallusers_IRole:
  args:
    - '@role'
  desc: Adds a specified role to all human users in the server, excluding bots.
  params:
    - *ref_37
addtoallusers_IRole_1:
  args:
    - '@role'
  desc: Adds a specified role to all human users in the server, excluding bots.
  params:
    - *ref_37
addtoallusers_IRole_2:
  args:
    - '@role'
  desc: Adds a specified role to all human users in the server, excluding bots.
  params:
    - *ref_37
addtousersover:
  args:
    - time @role
  desc: >-
    Adds a specified role to all users who have been a server member for longer
    than a specified duration.
  params:
    - &ref_38
      desc: >-
        The minimum duration a user must have been a member of the server to
        receive the role.
      name: time
      optional: false
      type: StoopidTime
    - &ref_39
      desc: The role to be added to qualifying users.
      name: role
      optional: false
      type: IRole
addtousersover_StoopidTime_IRole:
  args:
    - time @role
  desc: Execute the AddToUsersOver command
  params:
    - *ref_38
    - *ref_39
addtousersover_StoopidTime_IRole_1:
  args:
    - time @role
  desc: >-
    Adds a specified role to all users who have been a server member for longer
    than a specified duration.
  params:
    - *ref_38
    - *ref_39
addtousersover_StoopidTime_IRole_2:
  args:
    - time @role
  desc: Execute the AddToUsersOver command
  params:
    - *ref_38
    - *ref_39
addtousersunder:
  args:
    - time @role
  desc: >-
    Adds a specified role to all users who have been a server member for shorter
    than a specified duration.
  params:
    - &ref_40
      desc: >-
        The maximum duration a user can have been a member of the server to
        receive the role.
      name: time
      optional: false
      type: StoopidTime
    - *ref_39
addtousersunder_StoopidTime_IRole:
  args:
    - time @role
  desc: Execute the AddToUsersUnder command
  params:
    - *ref_40
    - *ref_39
addtousersunder_StoopidTime_IRole_1:
  args:
    - time @role
  desc: >-
    Adds a specified role to all users who have been a server member for shorter
    than a specified duration.
  params:
    - *ref_40
    - *ref_39
addtousersunder_StoopidTime_IRole_2:
  args:
    - time @role
  desc: Execute the AddToUsersUnder command
  params:
    - *ref_40
    - *ref_39
adduserstorole:
  args:
    - '@role @user'
    - '@user @role'
  desc: >-
    Assigns a specific role to a list of users, adding the role if they don't
    already have it.
  params:
    - &ref_41
      desc: The role to be added to the users.
      name: role
      optional: false
      type: IRole
    - &ref_42
      desc: The users to whom the role will be added.
      name: users
      optional: false
      type: IUser[]
adduserstorole_IRole_IUser[]:
  args:
    - '@role @user'
    - '@user @role'
  desc: >-
    Assigns a specific role to a list of users, adding the role if they don't
    already have it.
  params:
    - *ref_41
    - *ref_42
adduserstorole_IRole_IUser[]_1:
  args:
    - '@role @user'
    - '@user @role'
  desc: >-
    Assigns a specific role to a list of users, adding the role if they don't
    already have it.
  params:
    - *ref_41
    - *ref_42
adduserstorole_IRole_IUser[]_2:
  args:
    - '@role @user'
    - '@user @role'
  desc: >-
    Assigns a specific role to a list of users, adding the role if they don't
    already have it.
  params:
    - *ref_41
    - *ref_42
addwhitelistedrole:
  args:
    - '@role'
  desc: Adds a role to the whitelist.
  params:
    - &ref_43
      desc: The role to remove from the whitelist.
      name: role
      optional: false
      type: IRole
addwhitelistedrole_IRole:
  args:
    - '@role'
  desc: Adds a role to the whitelist.
  params:
    - *ref_43
addwhitelistedrole_IRole_1:
  args:
    - '@role'
  desc: Adds a role to the whitelist.
  params:
    - *ref_43
addwhitelistedrole_IRole_2:
  args:
    - '@role'
  desc: Adds a role to the whitelist.
  params:
    - *ref_43
addwhitelisteduser:
  args:
    - '@user'
  desc: Adds a user to the whitelist.
  params:
    - &ref_44
      desc: The user to remove from the whitelist.
      name: user
      optional: false
      type: IGuildUser
addwhitelisteduser_IGuildUser:
  args:
    - '@user'
  desc: Adds a user to the whitelist.
  params:
    - *ref_44
addwhitelisteduser_IGuildUser_1:
  args:
    - '@user'
  desc: Adds a user to the whitelist.
  params:
    - *ref_44
addwhitelisteduser_IGuildUser_2:
  args:
    - '@user'
  desc: Adds a user to the whitelist.
  params:
    - *ref_44
addxp:
  args:
    - '@user number'
  desc: Adds XP to a user.
  params:
    - &ref_45
      desc: The user to add XP to.
      name: user
      optional: false
      type: IGuildUser
    - &ref_46
      desc: The amount of XP to add.
      name: amount
      optional: false
      type: int
addxp_IGuildUser_int:
  args:
    - '@user number'
  desc: Adds XP to a user.
  params:
    - &ref_47
      desc: The user to set XP for.
      name: user
      optional: false
      type: IGuildUser
    - &ref_48
      desc: The amount of XP to set.
      name: amount
      optional: false
      type: int
addxp_IGuildUser_int_1:
  args:
    - '@user number'
  desc: Adds XP to a user.
  params:
    - *ref_45
    - *ref_46
addxp_IGuildUser_int_2:
  args:
    - '@user number'
  desc: Adds XP to a user.
  params:
    - *ref_47
    - *ref_48
adsarm:
  args:
    - ''
  desc: Toggles the auto delete of server advertisement messages.
  params: [ ]
adsarm_noparams:
  args:
    - ''
  desc: Toggles the auto delete of server advertisement messages.
  params: [ ]
adsarm_noparams_1:
  args:
    - ''
  desc: Module for managing self-assigned roles.
  params: [ ]
adsarm_noparams_2:
  args:
    - ''
  desc: Toggles the auto delete of server advertisement messages.
  params: [ ]
afk:
  args:
    - message
  desc: Sets your AFK status.
  params:
    - desc: The AFK message to display.
      name: message
      optional: true
      type: string
afkdel:
  args:
    - ''
  desc: Displays the current auto-deletion duration for AFK messages.
  params: [ ]
afkdel_int:
  args:
    - number
  desc: Sets the auto-deletion duration for AFK messages.
  params:
    - &ref_49
      desc: The duration in seconds. Set to 0 to disable auto-deletion.
      name: num
      optional: false
      type: int
afkdel_int_1:
  args:
    - number
  desc: Sets the auto-deletion duration for AFK messages.
  params:
    - *ref_49
afkdel_int_2:
  args:
    - number
  desc: Sets the auto-deletion duration for AFK messages.
  params:
    - *ref_49
afkdel_int_3:
  args:
    - number
  desc: Sets the auto-deletion duration for AFK messages.
  params:
    - *ref_49
afkdel_noparams:
  args:
    - ''
  desc: Displays the current auto-deletion duration for AFK messages.
  params: [ ]
afkdel_noparams_1:
  args:
    - ''
  desc: Displays the current auto-deletion duration for AFK messages.
  params: [ ]
afkdel_noparams_2:
  args:
    - ''
  desc: Displays the current auto-deletion duration for AFK messages.
  params: [ ]
afkdisable:
  args:
    - chan
  desc: Sets the channels where the AFK message will not display.
  params:
    - &ref_50
      desc: Channels you want to add to the afk message blacklist.
      name: chan
      optional: false
      type: ITextChannel[]
afkdisable_ITextChannel[]:
  args:
    - chan
  desc: Sets the channels where the AFK message will not display.
  params:
    - *ref_50
afkdisable_ITextChannel[]_1:
  args:
    - chan
  desc: Sets the channels where the AFK message will not display.
  params:
    - *ref_50
afkdisable_ITextChannel[]_2:
  args:
    - chan
  desc: Sets the channels where the AFK message will not display.
  params:
    - *ref_50
afkdisabledlist:
  args:
    - ''
  desc: Lists the text channels where the AFK message doesnt display.
  params: [ ]
afkdisabledlist_noparams:
  args:
    - ''
  desc: Lists the text channels where the AFK message doesnt display.
  params: [ ]
afkdisabledlist_noparams_1:
  args:
    - ''
  desc: Lists the text channels where the AFK message doesnt display.
  params: [ ]
afkdisabledlist_noparams_2:
  args:
    - ''
  desc: Lists the text channels where the AFK message doesnt display.
  params: [ ]
afklength:
  args:
    - number
  desc: Sets the maximum length of all AFK messages.
  params:
    - &ref_51
      desc: The maximum length you want to set.
      name: num
      optional: false
      type: int
afklength_int:
  args:
    - number
  desc: Sets the maximum length of all AFK messages.
  params:
    - *ref_51
afklength_int_1:
  args:
    - number
  desc: Sets the maximum length of all AFK messages.
  params:
    - *ref_51
afklength_int_2:
  args:
    - number
  desc: Sets the maximum length of all AFK messages.
  params:
    - *ref_51
afkremove:
  args:
    - '@user'
  desc: Removes the AFK status for one or more users.
  params:
    - &ref_52
      desc: The user(s) you want to remove afk from.
      name: user
      optional: false
      type: IGuildUser[]
afkremove_IGuildUser[]:
  args:
    - '@user'
  desc: Removes the AFK status for one or more users.
  params:
    - *ref_52
afkremove_IGuildUser[]_1:
  args:
    - '@user'
  desc: Removes the AFK status for one or more users.
  params:
    - *ref_52
afkremove_IGuildUser[]_2:
  args:
    - '@user'
  desc: Removes the AFK status for one or more users.
  params:
    - *ref_52
afkrm:
  args:
    - ''
  desc: Removes your AFK status.
  params: [ ]
afktimeout:
  args:
    - time
  desc: >-
    Sets the timeout duration before a user is no longer considered afk.
    Triggers when a user sends a message or types in a channel.
  params:
    - &ref_53
      desc: The timeout duration for the AFK status.
      name: time
      optional: false
      type: StoopidTime
afktimeout_StoopidTime:
  args:
    - time
  desc: >-
    Sets the timeout duration before a user is no longer considered afk.
    Triggers when a user sends a message or types in a channel.
  params:
    - *ref_53
afktimeout_StoopidTime_1:
  args:
    - time
  desc: >-
    Sets the timeout duration before a user is no longer considered afk.
    Triggers when a user sends a message or types in a channel.
  params:
    - *ref_53
afktimeout_StoopidTime_2:
  args:
    - time
  desc: >-
    Sets the timeout duration before a user is no longer considered afk.
    Triggers when a user sends a message or types in a channel.
  params:
    - *ref_53
afktype:
  args:
    - selfdisable|onmessage|ontype
    - selfdisable
    - onmessage
    - ontype
  desc: Sets the type of AFK behavior for the guild.
  params:
    - &ref_54
      desc: >-
        The type of AFK behavior to set.  Possible values: SelfDisable,
        OnMessage, OnType, Either
      name: afkTypeEnum
      optional: false
      type: AfkTypeEnum
afktype_AfkTypeEnum:
  args:
    - selfdisable|onmessage|ontype
    - selfdisable
    - onmessage
    - ontype
  desc: Sets the type of AFK behavior for the guild.
  params:
    - *ref_54
afktype_AfkTypeEnum_1:
  args:
    - selfdisable|onmessage|ontype
    - selfdisable
    - onmessage
    - ontype
  desc: Sets the type of AFK behavior for the guild.
  params:
    - *ref_54
afktype_AfkTypeEnum_2:
  args:
    - selfdisable|onmessage|ontype
    - selfdisable
    - onmessage
    - ontype
  desc: Sets the type of AFK behavior for the guild.
  params:
    - *ref_54
afkundisable:
  args:
    - chan
  desc: Removes the specified channels from the afk message blacklist.
  params:
    - &ref_55
      desc: The text channels for which to remove from the afk message blacklist.
      name: chan
      optional: false
      type: ITextChannel[]
afkundisable_ITextChannel[]:
  args:
    - chan
  desc: Removes the specified channels from the afk message blacklist.
  params:
    - *ref_55
afkundisable_ITextChannel[]_1:
  args:
    - chan
  desc: Removes the specified channels from the afk message blacklist.
  params:
    - *ref_55
afkundisable_ITextChannel[]_2:
  args:
    - chan
  desc: Removes the specified channels from the afk message blacklist.
  params:
    - *ref_55
afkview:
  args:
    - '@user'
  desc: Displays the AFK status of a specific user.
  params:
    - &ref_56
      desc: The user to check the AFK status for.
      name: user
      optional: true
      type: IGuildUser
afkview_IGuildUser:
  args:
    - '@user'
  desc: Displays the AFK status of a specific user.
  params:
    - *ref_56
afkview_IGuildUser_1:
  args:
    - '@user'
  desc: Displays the AFK status of a specific user.
  params:
    - *ref_56
afkview_IGuildUser_2:
  args:
    - '@user'
  desc: Displays the AFK status of a specific user.
  params:
    - *ref_56
aichannel:
  args:
    - null true
  desc: Configures AI service for a channel
  params:
    - *ref_1
    - &ref_57
      desc: ''
      name: true
      optional: false
      type: '='
aichannel_=_=:
  args:
    - null true
  desc: Configures AI service for a channel
  params:
    - *ref_1
    - *ref_57
aichannel_=_=_1:
  args:
    - null true
  desc: Configures AI service for a channel
  params:
    - *ref_1
    - *ref_57
aichannel_=_=_2:
  args:
    - null true
  desc: Configures AI service for a channel
  params:
    - *ref_1
    - *ref_57
aiconfig:
  args:
    - ''
  desc: Shows current AI configuration
  params: [ ]
aiconfig_noparams:
  args:
    - ''
  desc: Shows current AI configuration
  params: [ ]
aiconfig_noparams_1:
  args:
    - ''
  desc: Shows current AI configuration
  params: [ ]
aiconfig_noparams_2:
  args:
    - ''
  desc: Shows current AI configuration
  params: [ ]
aicustomembed:
  args:
    - null
  desc: >-
    Sets or displays the custom embed template for AI responses. Use
    %airesponse% to specify where the AI response should appear in the embed.
  params:
    - *ref_1
aicustomembed_=:
  args:
    - null
  desc: >-
    Sets or displays the custom embed template for AI responses. Use
    %airesponse% to specify where the AI response should appear in the embed.
  params:
    - *ref_1
aicustomembed_=_1:
  args:
    - null
  desc: >-
    Sets or displays the custom embed template for AI responses. Use
    %airesponse% to specify where the AI response should appear in the embed.
  params:
    - *ref_1
aicustomembed_=_2:
  args:
    - null
  desc: >-
    Sets or displays the custom embed template for AI responses. Use
    %airesponse% to specify where the AI response should appear in the embed.
  params:
    - *ref_1
aikey:
  args:
    - ''
  desc: Sets the API key for the AI service
  params: [ ]
aikey_noparams:
  args:
    - ''
  desc: Sets the API key for the AI service
  params: [ ]
aikey_noparams_1:
  args:
    - ''
  desc: Sets the API key for the AI service
  params: [ ]
aikey_noparams_2:
  args:
    - ''
  desc: Sets the API key for the AI service
  params: [ ]
aimodel:
  args:
    - provider null
    - provider
  desc: Sets the AI provider and model
  params:
    - &ref_58
      desc: AI provider to use
      name: provider
      optional: false
      type: AiService.AiProvider
    - *ref_1
aimodel_AiService_AiProvider_=:
  args:
    - provider null
    - provider
  desc: Sets the AI provider and model
  params:
    - *ref_58
    - *ref_1
aimodel_AiService_AiProvider_=_1:
  args:
    - provider null
    - provider
  desc: Sets the AI provider and model
  params:
    - *ref_58
    - *ref_1
aimodel_AiService_AiProvider_=_2:
  args:
    - provider null
    - provider
  desc: Sets the AI provider and model
  params:
    - *ref_58
    - *ref_1
aiprompt:
  args:
    - text
  desc: Sets the system prompt for the AI
  params:
    - &ref_59
      desc: System prompt to use
      name: prompt
      optional: false
      type: string
aiprompt_string:
  args:
    - text
  desc: Sets the system prompt for the AI
  params:
    - *ref_59
aiprompt_string_1:
  args:
    - text
  desc: Sets the system prompt for the AI
  params:
    - *ref_59
aiprompt_string_2:
  args:
    - text
  desc: Sets the system prompt for the AI
  params:
    - *ref_59
aiwebhook:
  args:
    - null null
  desc: Sets the webhook for AI responses in this guild.
  params:
    - *ref_1
    - *ref_1
aiwebhook_=_=:
  args:
    - null null
  desc: Sets the webhook for AI responses in this guild.
  params:
    - *ref_1
    - *ref_1
aiwebhook_=_=_1:
  args:
    - null null
  desc: Sets the webhook for AI responses in this guild.
  params:
    - *ref_1
    - *ref_1
aiwebhook_=_=_2:
  args:
    - null null
  desc: Sets the webhook for AI responses in this guild.
  params:
    - *ref_1
    - *ref_1
aiwebsearch:
  args:
    - 'true'
    - 'false'
  desc: Enables or disables web search for AI (Claude only)
  params:
    - desc: Whether to enable or disable web search
      name: enabled
      optional: false
      type: bool
alias:
  args:
    - text null
    - text
  desc: >-
    Adds a new alias for a command, or removes an existing alias if no mapping
    is provided.
  params:
    - &ref_60
      desc: The trigger word for the alias.
      name: trigger
      optional: false
      type: string
    - *ref_1
alias_string_=:
  args:
    - text null
    - text
  desc: >-
    Adds a new alias for a command, or removes an existing alias if no mapping
    is provided.
  params:
    - *ref_60
    - *ref_1
alias_string_=_1:
  args:
    - text null
    - text
  desc: >-
    Adds a new alias for a command, or removes an existing alias if no mapping
    is provided.
  params:
    - *ref_60
    - *ref_1
alias_string_=_2:
  args:
    - text null
    - text
  desc: >-
    Adds a new alias for a command, or removes an existing alias if no mapping
    is provided.
  params:
    - *ref_60
    - *ref_1
aliasesclear:
  args:
    - ''
  desc: Clears all command aliases for the guild.
  params: [ ]
aliasesclear_noparams:
  args:
    - ''
  desc: Clears all command aliases for the guild.
  params: [ ]
aliasesclear_noparams_1:
  args:
    - ''
  desc: Commands for managing command aliases.
  params: [ ]
aliasesclear_noparams_2:
  args:
    - ''
  desc: Clears all command aliases for the guild.
  params: [ ]
aliaslist:
  args:
    - ''
  desc: Lists all command aliases currently set for the guild.
  params: [ ]
aliaslist_noparams:
  args:
    - ''
  desc: Lists all command aliases currently set for the guild.
  params: [ ]
aliaslist_noparams_1:
  args:
    - ''
  desc: Lists all command aliases currently set for the guild.
  params: [ ]
aliaslist_noparams_2:
  args:
    - ''
  desc: Lists all command aliases currently set for the guild.
  params: [ ]
allcatmdls:
  args:
    - action chnl
  desc: Adds or removes permissions for all modules in a specific category.
  params:
    - &ref_61
      desc: The action to perform (enable/disable).
      name: action
      optional: false
      type: PermissionAction
    - &ref_62
      desc: The category to set permissions for.
      name: chnl
      optional: false
      type: ICategoryChannel
allcatmdls_PermissionAction_ICategoryChannel:
  args:
    - action chnl
  desc: Adds or removes permissions for all modules in a specific category.
  params:
    - *ref_61
    - *ref_62
allcatmdls_PermissionAction_ICategoryChannel_1:
  args:
    - action chnl
  desc: Adds or removes permissions for all modules in a specific category.
  params:
    - *ref_61
    - *ref_62
allcatmdls_PermissionAction_ICategoryChannel_2:
  args:
    - action chnl
  desc: Adds or removes permissions for all modules in a specific category.
  params:
    - *ref_61
    - *ref_62
allchnlmdls:
  args:
    - action chnl
  desc: Adds or removes permissions for all modules in a specific channel.
  params:
    - *ref_61
    - &ref_63
      desc: The channel to set permissions for.
      name: chnl
      optional: false
      type: ITextChannel
allchnlmdls_PermissionAction_ITextChannel:
  args:
    - action chnl
  desc: Adds or removes permissions for all modules in a specific channel.
  params:
    - *ref_61
    - *ref_63
allchnlmdls_PermissionAction_ITextChannel_1:
  args:
    - action chnl
  desc: Adds or removes permissions for all modules in a specific channel.
  params:
    - *ref_61
    - *ref_63
allchnlmdls_PermissionAction_ITextChannel_2:
  args:
    - action chnl
  desc: Adds or removes permissions for all modules in a specific channel.
  params:
    - *ref_61
    - *ref_63
allcmdcooldowns:
  args:
    - ''
  desc: Displays all commands with active cooldowns in the guild.
  params: [ ]
allcmdcooldowns_noparams:
  args:
    - ''
  desc: Execute the AllCmdCooldowns command
  params: [ ]
allcmdcooldowns_noparams_1:
  args:
    - ''
  desc: Displays all commands with active cooldowns in the guild.
  params: [ ]
allcmdcooldowns_noparams_2:
  args:
    - ''
  desc: Execute the AllCmdCooldowns command
  params: [ ]
allrolemdls:
  args:
    - action @role
  desc: Adds or removes permissions for all modules for a specific role.
  params:
    - *ref_61
    - &ref_64
      desc: The role to set permissions for.
      name: role
      optional: false
      type: IRole
allrolemdls_PermissionAction_IRole:
  args:
    - action @role
  desc: Adds or removes permissions for all modules for a specific role.
  params:
    - *ref_61
    - *ref_64
allrolemdls_PermissionAction_IRole_1:
  args:
    - action @role
  desc: Adds or removes permissions for all modules for a specific role.
  params:
    - *ref_61
    - *ref_64
allrolemdls_PermissionAction_IRole_2:
  args:
    - action @role
  desc: Adds or removes permissions for all modules for a specific role.
  params:
    - *ref_61
    - *ref_64
allsrvrmdls:
  args:
    - action
  desc: Adds or removes permissions for all modules for the entire server.
  params:
    - *ref_61
allsrvrmdls_PermissionAction:
  args:
    - action
  desc: Adds or removes permissions for all modules for the entire server.
  params:
    - *ref_61
allsrvrmdls_PermissionAction_1:
  args:
    - action
  desc: Adds or removes permissions for all modules for the entire server.
  params:
    - *ref_61
allsrvrmdls_PermissionAction_2:
  args:
    - action
  desc: Adds or removes permissions for all modules for the entire server.
  params:
    - *ref_61
allusrmdls:
  args:
    - action @user
  desc: Adds or removes permissions for all modules for a specific user.
  params:
    - *ref_61
    - &ref_65
      desc: The user to set permissions for.
      name: user
      optional: false
      type: IUser
allusrmdls_PermissionAction_IUser:
  args:
    - action @user
  desc: Adds or removes permissions for all modules for a specific user.
  params:
    - *ref_61
    - *ref_65
allusrmdls_PermissionAction_IUser_1:
  args:
    - action @user
  desc: Adds or removes permissions for all modules for a specific user.
  params:
    - *ref_61
    - *ref_65
allusrmdls_PermissionAction_IUser_2:
  args:
    - action @user
  desc: Adds or removes permissions for all modules for a specific user.
  params:
    - *ref_61
    - *ref_65
anal:
  args:
    - ''
  desc: Command to fetch and display NSFW content from the "anal" subreddit.
  params: [ ]
anal_noparams:
  args:
    - ''
  desc: Command to fetch and display NSFW content from the "anal" subreddit.
  params: [ ]
anal_noparams_1:
  args:
    - ''
  desc: Command to fetch and display NSFW content from the "anal" subreddit.
  params: [ ]
anal_noparams_2:
  args:
    - ''
  desc: Command to fetch and display NSFW content from the "anal" subreddit.
  params: [ ]
anime:
  args:
    - text
  desc: Searches for anime and displays information about the search results.
  params:
    - &ref_66
      desc: The query to search for.
      name: query
      optional: false
      type: string
anime_string:
  args:
    - text
  desc: Execute the Anime command
  params:
    - *ref_66
anime_string_1:
  args:
    - text
  desc: Searches for anime and displays information about the search results.
  params:
    - *ref_66
anime_string_2:
  args:
    - text
  desc: Execute the Anime command
  params:
    - *ref_66
anonrep:
  args:
    - '@user reptype text'
  desc: Gives anonymous reputation to a specified user.
  params:
    - &ref_228
      desc: The user to give reputation to.
      name: target
      optional: true
      type: IGuildUser
    - &ref_229
      desc: The type of reputation to give.
      name: repType
      optional: true
      type: string
    - &ref_230
      desc: Optional reason or comment for giving reputation.
      name: reason
      optional: true
      type: string
antialt:
  args:
    - ''
  desc: Disables the Anti-Alt protection for the guild.
  params: [ ]
antialt_StoopidTime_PunishmentAction_=:
  args:
    - minage action null
    - minage action
  desc: >-
    Configures the Anti-Alt protection for the guild, setting the minimum
    account age and punishment action.
  params:
    - &ref_67
      desc: The minimum age (in minutes) for accounts to be considered as alts.
      name: minAge
      optional: false
      type: StoopidTime
    - &ref_68
      desc: 'The punishment action to be taken against detected alts. '
      name: action
      optional: false
      type: PunishmentAction
    - *ref_1
antialt_StoopidTime_PunishmentAction_=_1:
  args:
    - minage action null
    - minage action
  desc: Execute the AntiAlt command
  params:
    - *ref_67
    - *ref_68
    - *ref_1
antialt_StoopidTime_PunishmentAction_=_2:
  args:
    - minage action null
    - minage action
  desc: >-
    Configures the Anti-Alt protection for the guild, setting the minimum
    account age and punishment action.
  params:
    - *ref_67
    - *ref_68
    - *ref_1
antialt_StoopidTime_PunishmentAction_=_3:
  args:
    - minage action null
    - minage action
  desc: Execute the AntiAlt command
  params:
    - *ref_67
    - *ref_68
    - *ref_1
antialt_StoopidTime_PunishmentAction_IRole:
  args:
    - minage action @role
  desc: >-
    Configures the Anti-Alt protection for the guild, setting the minimum
    account age and punishment action with a role-based punishment.
  params:
    - *ref_67
    - *ref_68
    - &ref_69
      desc: The role to be assigned to detected alts as punishment.
      name: role
      optional: false
      type: IRole
antialt_StoopidTime_PunishmentAction_IRole_1:
  args:
    - minage action @role
  desc: Execute the AntiAlt command
  params:
    - *ref_67
    - *ref_68
    - *ref_69
antialt_StoopidTime_PunishmentAction_IRole_2:
  args:
    - minage action @role
  desc: >-
    Configures the Anti-Alt protection for the guild, setting the minimum
    account age and punishment action with a role-based punishment.
  params:
    - *ref_67
    - *ref_68
    - *ref_69
antialt_StoopidTime_PunishmentAction_IRole_3:
  args:
    - minage action @role
  desc: Execute the AntiAlt command
  params:
    - *ref_67
    - *ref_68
    - *ref_69
antialt_noparams:
  args:
    - ''
  desc: Disables the Anti-Alt protection for the guild.
  params: [ ]
antialt_noparams_1:
  args:
    - ''
  desc: >-
    Commands for managing the Anti-Alt, Anti-Raid, and Anti-Spam protection
    settings.
  params: [ ]
antialt_noparams_2:
  args:
    - ''
  desc: >-
    Commands for managing the Anti-Alt, Anti-Raid, and Anti-Spam protection
    settings.
  params: [ ]
antimassmention:
  args:
    - ''
  desc: >-
    Configures the Anti-Spam protection for the guild, setting the message count
    threshold, punishment action, and optional punishment duration.
  params: [ ]
antimassmention_int_int_int_bool_PunishmentAction_=:
  args:
    - number number number true|false action null
    - number number number true|false action
  desc: >-
    Configures the Anti-Mass-Mention protection for the guild, setting the
    mention threshold for a single message, the time window for mention
    tracking, the maximum allowed mentions in the time window, and the
    punishment action.
  params:
    - &ref_70
      desc: >-
        The number of mentions allowed in a single message before triggering
        protection.
      name: mentionThreshold
      optional: false
      type: int
    - &ref_71
      desc: The time window (in seconds) to observe mentions.
      name: timeWindowSeconds
      optional: false
      type: int
    - &ref_72
      desc: The maximum allowed mentions in the specified time window.
      name: maxMentionsInTimeWindow
      optional: false
      type: int
    - &ref_73
      desc: ''
      name: ignoreBots
      optional: false
      type: bool
    - &ref_74
      desc: >-
        /// The punishment action to be taken against users who exceed the
        mention limits. ///  ///
      name: action
      optional: false
      type: PunishmentAction
    - *ref_1
antimassmention_int_int_int_bool_PunishmentAction_=_1:
  args:
    - number number number true|false action null
    - number number number true|false action
  desc: Execute the AntiMassMention command
  params:
    - *ref_70
    - *ref_71
    - *ref_72
    - *ref_73
    - *ref_74
    - *ref_1
antimassmention_int_int_int_bool_PunishmentAction_=_2:
  args:
    - number number number true|false action null
    - number number number true|false action
  desc: >-
    Configures the Anti-Mass-Mention protection for the guild, setting the
    mention threshold for a single message, the time window for mention
    tracking, the maximum allowed mentions in the time window, and the
    punishment action.
  params:
    - *ref_70
    - *ref_71
    - *ref_72
    - *ref_73
    - *ref_74
    - *ref_1
antimassmention_int_int_int_bool_PunishmentAction_=_3:
  args:
    - number number number true|false action null
    - number number number true|false action
  desc: Execute the AntiMassMention command
  params:
    - *ref_70
    - *ref_71
    - *ref_72
    - *ref_73
    - *ref_74
    - *ref_1
antimassmention_int_int_int_bool_PunishmentAction_IRole:
  args:
    - number number number true|false action @role
  desc: >-
    Configures the Anti-Mass-Mention protection for the guild, setting the
    mention threshold for a single message, the time window for mention
    tracking, the maximum allowed mentions in the time window, and the
    punishment action with a role-based punishment.
  params:
    - *ref_70
    - *ref_71
    - *ref_72
    - *ref_73
    - *ref_74
    - &ref_75
      desc: The role to be assigned to punished users as punishment.
      name: role
      optional: false
      type: IRole
antimassmention_int_int_int_bool_PunishmentAction_IRole_1:
  args:
    - number number number true|false action @role
  desc: Execute the AntiMassMention command
  params:
    - *ref_70
    - *ref_71
    - *ref_72
    - *ref_73
    - *ref_74
    - *ref_75
antimassmention_int_int_int_bool_PunishmentAction_IRole_2:
  args:
    - number number number true|false action @role
  desc: >-
    Configures the Anti-Mass-Mention protection for the guild, setting the
    mention threshold for a single message, the time window for mention
    tracking, the maximum allowed mentions in the time window, and the
    punishment action with a role-based punishment.
  params:
    - *ref_70
    - *ref_71
    - *ref_72
    - *ref_73
    - *ref_74
    - *ref_75
antimassmention_int_int_int_bool_PunishmentAction_IRole_3:
  args:
    - number number number true|false action @role
  desc: Execute the AntiMassMention command
  params:
    - *ref_70
    - *ref_71
    - *ref_72
    - *ref_73
    - *ref_74
    - *ref_75
antimassmention_noparams:
  args:
    - ''
  desc: Disables the Anti-Mass-Mention protection for the guild.
  params: [ ]
antimassmention_noparams_1:
  args:
    - ''
  desc: >-
    Configures the Anti-Spam protection for the guild, setting the message count
    threshold, punishment action, and optional punishment duration.
  params: [ ]
antimassmention_noparams_2:
  args:
    - ''
  desc: Disables the Anti-Mass-Mention protection for the guild.
  params: [ ]
antiraid:
  args:
    - ''
  desc: Disables the Anti-Raid protection for the guild.
  params: [ ]
antiraid_int_int_PunishmentAction:
  args:
    - number number action
  desc: >-
    Configures the Anti-Raid protection for the guild, setting the user
    threshold, detection time window, and punishment action.
  params:
    - &ref_76
      desc: The threshold of users that triggers the detection of a raid.
      name: userThreshold
      optional: false
      type: int
    - &ref_77
      desc: The time window (in seconds) to observe user joins.
      name: seconds
      optional: false
      type: int
    - &ref_78
      desc: 'The punishment action to be taken against detected raids. '
      name: action
      optional: false
      type: PunishmentAction
antiraid_int_int_PunishmentAction_1:
  args:
    - number number action
  desc: Execute the AntiRaid command
  params:
    - *ref_76
    - *ref_77
    - *ref_78
antiraid_int_int_PunishmentAction_2:
  args:
    - number number action
  desc: >-
    Configures the Anti-Raid protection for the guild, setting the user
    threshold, detection time window, and punishment action.
  params:
    - *ref_76
    - *ref_77
    - *ref_78
antiraid_int_int_PunishmentAction_3:
  args:
    - number number action
  desc: Execute the AntiRaid command
  params:
    - *ref_76
    - *ref_77
    - *ref_78
antiraid_int_int_PunishmentAction_StoopidTime:
  args:
    - number number action time
  desc: >-
    Configures the Anti-Raid protection for the guild, setting the user
    threshold, detection time window, punishment action, and optional punishment
    duration.
  params:
    - *ref_76
    - *ref_77
    - *ref_78
    - &ref_79
      desc: The duration of punishment for the raiders (optional).
      name: punishTime
      optional: false
      type: StoopidTime
antiraid_int_int_PunishmentAction_StoopidTime_1:
  args:
    - number number action time
  desc: Execute the AntiRaid command
  params:
    - *ref_76
    - *ref_77
    - *ref_78
    - *ref_79
antiraid_int_int_PunishmentAction_StoopidTime_2:
  args:
    - number number action time
  desc: >-
    Configures the Anti-Raid protection for the guild, setting the user
    threshold, detection time window, punishment action, and optional punishment
    duration.
  params:
    - *ref_76
    - *ref_77
    - *ref_78
    - *ref_79
antiraid_int_int_PunishmentAction_StoopidTime_3:
  args:
    - number number action time
  desc: Execute the AntiRaid command
  params:
    - *ref_76
    - *ref_77
    - *ref_78
    - *ref_79
antiraid_noparams:
  args:
    - ''
  desc: Disables the Anti-Raid protection for the guild.
  params: [ ]
antiraid_noparams_1:
  args:
    - ''
  desc: Disables the Anti-Raid protection for the guild.
  params: [ ]
antiraid_noparams_2:
  args:
    - ''
  desc: Disables the Anti-Raid protection for the guild.
  params: [ ]
antispam:
  args:
    - ''
  desc: Disables the Anti-Spam protection for the guild.
  params: [ ]
antispam_int_PunishmentAction:
  args:
    - number action
  desc: >-
    Configures the Anti-Spam protection for the guild, setting the message count
    threshold and punishment action.
  params:
    - &ref_80
      desc: The threshold of messages that triggers the detection of spam.
      name: messageCount
      optional: false
      type: int
    - &ref_81
      desc: /// The punishment action to be taken against detected spammers.  ///
      name: action
      optional: false
      type: PunishmentAction
antispam_int_PunishmentAction_1:
  args:
    - number action
  desc: Execute the AntiSpam command
  params:
    - *ref_80
    - &ref_82
      desc: The punishment action to be taken against detected spammers.
      name: action
      optional: false
      type: PunishmentAction
antispam_int_PunishmentAction_2:
  args:
    - number action
  desc: >-
    Configures the Anti-Spam protection for the guild, setting the message count
    threshold and punishment action.
  params:
    - *ref_80
    - *ref_81
antispam_int_PunishmentAction_3:
  args:
    - number action
  desc: Execute the AntiSpam command
  params:
    - *ref_80
    - *ref_82
antispam_int_PunishmentAction_IRole:
  args:
    - number action @role
  desc: >-
    Configures the Anti-Spam protection for the guild, setting the message count
    threshold, punishment action, and the role to add to spammers.
  params:
    - *ref_80
    - *ref_81
    - &ref_83
      desc: The role to add to the spammers.
      name: role
      optional: false
      type: IRole
antispam_int_PunishmentAction_IRole_1:
  args:
    - number action @role
  desc: Execute the AntiSpam command
  params:
    - *ref_80
    - *ref_81
    - *ref_83
antispam_int_PunishmentAction_IRole_2:
  args:
    - number action @role
  desc: >-
    Configures the Anti-Spam protection for the guild, setting the message count
    threshold, punishment action, and the role to add to spammers.
  params:
    - *ref_80
    - *ref_81
    - *ref_83
antispam_int_PunishmentAction_IRole_3:
  args:
    - number action @role
  desc: Execute the AntiSpam command
  params:
    - *ref_80
    - *ref_81
    - *ref_83
antispam_int_PunishmentAction_StoopidTime:
  args:
    - number action time
  desc: >-
    Configures the Anti-Spam protection for the guild, setting the message count
    threshold, punishment action, and optional punishment duration.
  params:
    - *ref_80
    - *ref_81
    - &ref_84
      desc: The duration of punishment for the spammers (optional).
      name: punishTime
      optional: false
      type: StoopidTime
antispam_int_PunishmentAction_StoopidTime_1:
  args:
    - number action time
  desc: Execute the AntiSpam command
  params:
    - *ref_80
    - *ref_81
    - *ref_84
antispam_int_PunishmentAction_StoopidTime_2:
  args:
    - number action time
  desc: >-
    Configures the Anti-Spam protection for the guild, setting the message count
    threshold, punishment action, and optional punishment duration.
  params:
    - *ref_80
    - *ref_81
    - *ref_84
antispam_int_PunishmentAction_StoopidTime_3:
  args:
    - number action time
  desc: Execute the AntiSpam command
  params:
    - *ref_80
    - *ref_81
    - *ref_84
antispam_noparams:
  args:
    - ''
  desc: Disables the Anti-Spam protection for the guild.
  params: [ ]
antispam_noparams_1:
  args:
    - ''
  desc: Disables the Anti-Spam protection for the guild.
  params: [ ]
antispam_noparams_2:
  args:
    - ''
  desc: Disables the Anti-Spam protection for the guild.
  params: [ ]
archiveonaccept:
  args:
    - ''
  desc: Toggles the archive setting for suggestions upon acceptance.
  params: [ ]
archiveonaccept_noparams:
  args:
    - ''
  desc: Toggles the archive setting for suggestions upon acceptance.
  params: [ ]
archiveonaccept_noparams_1:
  args:
    - ''
  desc: Toggles the archive setting for suggestions upon acceptance.
  params: [ ]
archiveonaccept_noparams_2:
  args:
    - ''
  desc: Toggles the archive setting for suggestions upon acceptance.
  params: [ ]
archiveonconsider:
  args:
    - ''
  desc: Toggles the archive setting for suggestions upon consideration.
  params: [ ]
archiveonconsider_noparams:
  args:
    - ''
  desc: Toggles the archive setting for suggestions upon consideration.
  params: [ ]
archiveonconsider_noparams_1:
  args:
    - ''
  desc: Toggles the archive setting for suggestions upon consideration.
  params: [ ]
archiveonconsider_noparams_2:
  args:
    - ''
  desc: Toggles the archive setting for suggestions upon consideration.
  params: [ ]
archiveondeny:
  args:
    - ''
  desc: Toggles the archive setting for suggestions upon denial.
  params: [ ]
archiveondeny_noparams:
  args:
    - ''
  desc: Toggles the archive setting for suggestions upon denial.
  params: [ ]
archiveondeny_noparams_1:
  args:
    - ''
  desc: Toggles the archive setting for suggestions upon denial.
  params: [ ]
archiveondeny_noparams_2:
  args:
    - ''
  desc: Toggles the archive setting for suggestions upon denial.
  params: [ ]
archiveonimplement:
  args:
    - ''
  desc: Toggles the archive setting for suggestions upon implementation.
  params: [ ]
archiveonimplement_noparams:
  args:
    - ''
  desc: Toggles the archive setting for suggestions upon implementation.
  params: [ ]
archiveonimplement_noparams_1:
  args:
    - ''
  desc: Toggles the archive setting for suggestions upon implementation.
  params: [ ]
archiveonimplement_noparams_2:
  args:
    - ''
  desc: Toggles the archive setting for suggestions upon implementation.
  params: [ ]
asar:
  args:
    - '@role'
  desc: Adds the specified role to the auto-self-assignable role list.
  params:
    - &ref_85
      desc: The role to add to the auto-self-assignable role list.
      name: role
      optional: false
      type: IRole
asar_IRole:
  args:
    - '@role'
  desc: Execute the Asar command
  params:
    - *ref_85
asar_IRole_1:
  args:
    - '@role'
  desc: Adds the specified role to the auto-self-assignable role list.
  params:
    - *ref_85
asar_IRole_2:
  args:
    - '@role'
  desc: Execute the Asar command
  params:
    - *ref_85
asar_int_IRole:
  args:
    - number @role
  desc: >-
    Adds the specified role to the auto-self-assignable role list within the
    specified group.
  params:
    - &ref_86
      desc: The group number for organization.
      name: group
      optional: false
      type: int
    - *ref_85
asar_int_IRole_1:
  args:
    - number @role
  desc: Execute the Asar command
  params:
    - *ref_86
    - *ref_85
asar_int_IRole_2:
  args:
    - number @role
  desc: >-
    Adds the specified role to the auto-self-assignable role list within the
    specified group.
  params:
    - *ref_86
    - *ref_85
asar_int_IRole_3:
  args:
    - number @role
  desc: Execute the Asar command
  params:
    - *ref_86
    - *ref_85
atuo:
  args:
    - role threshold
  desc: Adds role to users over a threshold.
  params:
    - desc: The role to add.
      name: role
      optional: false
      type: IRole
    - desc: The threshold value.
      name: threshold
      optional: false
      type: int
atuu:
  args:
    - role threshold
  desc: Adds role to users under a threshold.
  params:
    - desc: The role to add.
      name: role
      optional: false
      type: IRole
    - desc: The threshold value.
      name: threshold
      optional: false
      type: int
autoassignbotrole:
  args:
    - '@role'
  desc: >-
    Enables or disables auto-assigning the specified role to bots when they join
    the guild.
  params:
    - &ref_87
      desc: The role to enable or disable auto-assigning
      name: role
      optional: false
      type: IRole
autoassignbotrole_IRole:
  args:
    - '@role'
  desc: >-
    Enables or disables auto-assigning the specified role to bots when they join
    the guild.
  params:
    - *ref_87
autoassignbotrole_IRole_1:
  args:
    - '@role'
  desc: >-
    Enables or disables auto-assigning the specified role to bots when they join
    the guild.
  params:
    - *ref_87
autoassignbotrole_IRole_2:
  args:
    - '@role'
  desc: >-
    Enables or disables auto-assigning the specified role to bots when they join
    the guild.
  params:
    - *ref_87
autoassignbotrole_noparams:
  args:
    - ''
  desc: >-
    Displays the list of roles eligible for auto-assigning to bots when they
    join the guild.
  params: [ ]
autoassignbotrole_noparams_1:
  args:
    - ''
  desc: >-
    Displays the list of roles eligible for auto-assigning to bots when they
    join the guild.
  params: [ ]
autoassignbotrole_noparams_2:
  args:
    - ''
  desc: >-
    Displays the list of roles eligible for auto-assigning to bots when they
    join the guild.
  params: [ ]
autoassignbotrole_noparams_3:
  args:
    - ''
  desc: >-
    Displays the list of roles eligible for auto-assigning to bots when they
    join the guild.
  params: [ ]
autoassignrole:
  args:
    - '@role'
  desc: >-
    Enables or disables auto-assigning the specified role to users when they
    join the guild.
  params:
    - *ref_87
autoassignrole_IRole:
  args:
    - '@role'
  desc: >-
    Enables or disables auto-assigning the specified role to users when they
    join the guild.
  params:
    - *ref_87
autoassignrole_IRole_1:
  args:
    - '@role'
  desc: Commands for managing auto-assign roles.
  params:
    - *ref_87
autoassignrole_IRole_2:
  args:
    - '@role'
  desc: >-
    Enables or disables auto-assigning the specified role to users when they
    join the guild.
  params:
    - *ref_87
autoassignrole_noparams:
  args:
    - ''
  desc: >-
    Displays the list of roles eligible for auto-assigning when users join the
    guild.
  params: [ ]
autoassignrole_noparams_1:
  args:
    - ''
  desc: >-
    Displays the list of roles eligible for auto-assigning when users join the
    guild.
  params: [ ]
autoassignrole_noparams_2:
  args:
    - ''
  desc: >-
    Displays the list of roles eligible for auto-assigning when users join the
    guild.
  params: [ ]
autoassignrole_noparams_3:
  args:
    - ''
  desc: >-
    Displays the list of roles eligible for auto-assigning when users join the
    guild.
  params: [ ]
autobanroleadd:
  args:
    - '@role'
  desc: Adds a role to the list of AutoBanRoles.
  params:
    - &ref_88
      desc: The role to remove
      name: role
      optional: false
      type: IRole
autobanroleadd_IRole:
  args:
    - '@role'
  desc: Adds a role to the list of AutoBanRoles.
  params:
    - *ref_88
autobanroleadd_IRole_1:
  args:
    - '@role'
  desc: Command group for managing the AutoBanRole feature.
  params:
    - *ref_88
autobanroleadd_IRole_2:
  args:
    - '@role'
  desc: Command group for managing the AutoBanRole feature.
  params:
    - *ref_88
autobanrolelist:
  args:
    - ''
  desc: Lists all roles that are currently set to auto-ban users.
  params: [ ]
autobanroleremove:
  args:
    - '@role'
  desc: Removes a role from the list of AutoBanRoles.
  params:
    - *ref_88
autobanroleremove_IRole:
  args:
    - '@role'
  desc: Removes a role from the list of AutoBanRoles.
  params:
    - *ref_88
autobanroleremove_IRole_1:
  args:
    - '@role'
  desc: Removes a role from the list of AutoBanRoles.
  params:
    - *ref_88
autobanroleremove_IRole_2:
  args:
    - '@role'
  desc: Removes a role from the list of AutoBanRoles.
  params:
    - *ref_88
autobanword:
  args:
    - text
  desc: Toggles a word on or off the automatic ban list for the current guild.
  params:
    - &ref_89
      desc: The word to toggle on the auto ban list.
      name: word
      optional: false
      type: string
autobanword_string:
  args:
    - text
  desc: Execute the AutoBanWord command
  params:
    - *ref_89
autobanword_string_1:
  args:
    - text
  desc: >-
    Provides commands for managing word filters and automatic bans within
    guilds.
  params:
    - *ref_89
autobanword_string_2:
  args:
    - text
  desc: Execute the AutoBanWord command
  params:
    - *ref_89
autobanwordlist:
  args:
    - ''
  desc: >-
    Displays a paginated list of all words on the automatic ban list for the
    current guild.
  params: [ ]
autobanwordlist_noparams:
  args:
    - ''
  desc: Execute the AutoBanWordList command
  params: [ ]
autobanwordlist_noparams_1:
  args:
    - ''
  desc: >-
    Displays a paginated list of all words on the automatic ban list for the
    current guild.
  params: [ ]
autobanwordlist_noparams_2:
  args:
    - ''
  desc: Execute the AutoBanWordList command
  params: [ ]
autoboobs:
  args:
    - 0
  desc: >-
    Command to start or stop automatic posting of NSFW content from the "boobs"
    subreddit at specified intervals in the current guild channel.
  params:
    - &ref_90
      desc: ''
      name: 0
      optional: false
      type: '='
autoboobs_=:
  args:
    - 0
  desc: >-
    Command to start or stop automatic posting of NSFW content from the "boobs"
    subreddit at specified intervals in the current guild channel.
  params:
    - *ref_90
autoboobs_=_1:
  args:
    - 0
  desc: >-
    Command to start or stop automatic posting of NSFW content from the "boobs"
    subreddit at specified intervals in the current guild channel.
  params:
    - *ref_90
autoboobs_=_2:
  args:
    - 0
  desc: >-
    Command to start or stop automatic posting of NSFW content from the "boobs"
    subreddit at specified intervals in the current guild channel.
  params:
    - *ref_90
autobutts:
  args:
    - 0
  desc: >-
    Command to start or stop automatic posting of NSFW content from the "butts"
    subreddit at specified intervals in the current guild channel or direct
    messages.
  params:
    - *ref_90
autobutts_=:
  args:
    - 0
  desc: >-
    Command to start or stop automatic posting of NSFW content from the "butts"
    subreddit at specified intervals in the current guild channel or direct
    messages.
  params:
    - *ref_90
autobutts_=_1:
  args:
    - 0
  desc: >-
    Command to start or stop automatic posting of NSFW content from the "butts"
    subreddit at specified intervals in the current guild channel or direct
    messages.
  params:
    - *ref_90
autobutts_=_2:
  args:
    - 0
  desc: >-
    Command to start or stop automatic posting of NSFW content from the "butts"
    subreddit at specified intervals in the current guild channel or direct
    messages.
  params:
    - *ref_90
autocommandadd:
  args:
    - number text
  desc: Adds an auto command to be executed periodically in the specified guild.
  params:
    - &ref_91
      desc: >-
        The interval in seconds at which the command should be executed. Must be
        5 seconds or more.
      name: interval
      optional: false
      type: int
    - &ref_92
      desc: The command text to be executed automatically.
      name: cmdText
      optional: false
      type: string
autocommandadd_int_string:
  args:
    - number text
  desc: Execute the AutoCommandAdd command
  params:
    - *ref_91
    - *ref_92
autocommandadd_int_string_1:
  args:
    - number text
  desc: Adds an auto command to be executed periodically in the specified guild.
  params:
    - *ref_91
    - *ref_92
autocommandadd_int_string_2:
  args:
    - number text
  desc: Execute the AutoCommandAdd command
  params:
    - *ref_91
    - *ref_92
autocommandremove:
  args:
    - number
  desc: Removes an auto command based on its index.
  params:
    - &ref_93
      desc: The one-based index of the auto command to remove.
      name: index
      optional: false
      type: int
autocommandremove_int:
  args:
    - number
  desc: Removes an auto command based on its index.
  params:
    - &ref_94
      desc: The one-based index of the startup command to remove.
      name: index
      optional: false
      type: int
autocommandremove_int_1:
  args:
    - number
  desc: Removes an auto command based on its index.
  params:
    - *ref_93
autocommandremove_int_2:
  args:
    - number
  desc: Removes an auto command based on its index.
  params:
    - *ref_94
autocommandslist:
  args:
    - 1
  desc: Lists the auto commands configured for the guild.
  params:
    - &ref_95
      desc: ''
      name: 1
      optional: false
      type: '='
autocommandslist_=:
  args:
    - 1
  desc: Execute the AutoCommandsList command
  params:
    - *ref_95
autocommandslist_=_1:
  args:
    - 1
  desc: Lists the auto commands configured for the guild.
  params:
    - *ref_95
autocommandslist_=_2:
  args:
    - 1
  desc: Execute the AutoCommandsList command
  params:
    - *ref_95
autohentai:
  args:
    - 0 null
  desc: >-
    Command to start or stop automatic posting of NSFW content at specified
    intervals in the current guild channel.
  params:
    - *ref_90
    - *ref_1
autohentai_=_=:
  args:
    - 0 null
  desc: Execute the AutoHentai command
  params:
    - *ref_90
    - *ref_1
autohentai_=_=_1:
  args:
    - 0 null
  desc: >-
    Command to start or stop automatic posting of NSFW content at specified
    intervals in the current guild channel.
  params:
    - *ref_90
    - *ref_1
autohentai_=_=_2:
  args:
    - 0 null
  desc: Execute the AutoHentai command
  params:
    - *ref_90
    - *ref_1
autoplay:
  args:
    - number
  desc: >-
    Sets the autoplay amount in the guild. Uses spotify api so client secret and
    id must be valid.
  params:
    - &ref_96
      desc: The amount of tracks to autoplay. Max of 5
      name: amount
      optional: false
      type: int
autoplay_int:
  args:
    - number
  desc: >-
    Sets the autoplay amount in the guild. Uses spotify api so client secret and
    id must be valid.
  params:
    - *ref_96
autotranslang:
  args:
    - null
  desc: >-
    Sets or removes the preferred language pair for auto-translation for the
    user in the current channel.
  params:
    - *ref_1
autotranslang_=:
  args:
    - null
  desc: Execute the AutoTransLang command
  params:
    - *ref_1
autotranslang_=_1:
  args:
    - null
  desc: >-
    Sets or removes the preferred language pair for auto-translation for the
    user in the current channel.
  params:
    - *ref_1
autotranslang_=_2:
  args:
    - null
  desc: Execute the AutoTransLang command
  params:
    - *ref_1
autotranslate:
  args:
    - autodeleteautotranslate.nodel
  desc: >-
    Toggles auto-translation for the current channel, optionally enabling
    auto-deletion of the original message.
  params:
    - &ref_97
      desc: ''
      name: AutoDeleteAutoTranslate.Nodel
      optional: false
      type: '='
autotranslate_=:
  args:
    - autodeleteautotranslate.nodel
  desc: Execute the AutoTranslate command
  params:
    - *ref_97
autotranslate_=_1:
  args:
    - autodeleteautotranslate.nodel
  desc: >-
    Toggles auto-translation for the current channel, optionally enabling
    auto-deletion of the original message.
  params:
    - *ref_97
autotranslate_=_2:
  args:
    - autodeleteautotranslate.nodel
  desc: Execute the AutoTranslate command
  params:
    - *ref_97
avatar:
  args:
    - null
  desc: >-
    Displays the avatar of a specified user or the command invoker. Has a button
    to view the guild avatar if available.
  params:
    - *ref_1
avatar_=:
  args:
    - null
  desc: >-
    Displays the avatar of a specified user or the command invoker. Has a button
    to view the guild avatar if available.
  params:
    - *ref_1
avatar_=_1:
  args:
    - null
  desc: >-
    Displays the avatar of a specified user or the command invoker. Has a button
    to view the guild avatar if available.
  params:
    - *ref_1
avatar_=_2:
  args:
    - null
  desc: >-
    Displays the avatar of a specified user or the command invoker. Has a button
    to view the guild avatar if available.
  params:
    - *ref_1
baccarat:
  args:
    - number text
  desc: Play Baccarat with player, banker, or tie bets.
  params:
    - desc: The amount to bet.
      name: betAmount
      optional: false
      type: long
    - desc: The type of bet (player, banker, tie).
      name: betType
      optional: true
      type: string
baka:
  args:
    - text
  desc: Calls someone a baka.
  params:
    - &ref_98
      desc: The person to bite.
      name: toShow
      optional: false
      type: string
baka_string:
  args:
    - text
  desc: Calls someone a baka.
  params:
    - &ref_99
      desc: Additional text (optional).
      name: toShow
      optional: false
      type: string
baka_string_1:
  args:
    - text
  desc: Calls someone a baka.
  params:
    - *ref_98
baka_string_2:
  args:
    - text
  desc: Calls someone a baka.
  params:
    - *ref_99
ban:
  args:
    - time time @user null
    - time time
  desc: Bans a user for a specified amount of time.
  params:
    - &ref_104
      desc: The amount of time to prune messages
      name: pruneTime
      optional: false
      type: StoopidTime
    - &ref_105
      desc: The amount of time to ban the user
      name: time
      optional: false
      type: StoopidTime
    - &ref_100
      desc: The user to ban
      name: user
      optional: true
      type: IGuildUser
    - *ref_1
ban_IGuildUser_=:
  args:
    - '@user null'
  desc: Bans a user.
  params:
    - *ref_100
    - *ref_1
ban_IGuildUser_=_1:
  args:
    - '@user null'
  desc: Bans a user.
  params:
    - *ref_100
    - *ref_1
ban_IGuildUser_=_2:
  args:
    - '@user null'
  desc: Bans a user.
  params:
    - *ref_100
    - *ref_1
ban_IGuildUser_=_3:
  args:
    - '@user null'
  desc: Bans a user.
  params:
    - *ref_100
    - *ref_1
ban_IUser_=:
  args:
    - '@user null'
  desc: Bans a user.
  params:
    - &ref_101
      desc: The user to ban
      name: user
      optional: true
      type: IUser
    - *ref_1
ban_IUser_=_1:
  args:
    - '@user null'
  desc: Bans a user.
  params:
    - *ref_101
    - *ref_1
ban_IUser_=_2:
  args:
    - '@user null'
  desc: Bans a user.
  params:
    - *ref_101
    - *ref_1
ban_IUser_=_3:
  args:
    - '@user null'
  desc: Bans a user.
  params:
    - *ref_101
    - *ref_1
ban_StoopidTime_IGuildUser_=:
  args:
    - time @user null
    - time
  desc: Bans a user with the specified reason and amount of days to purge messages.
  params:
    - &ref_102
      desc: The amount of time to prune messages
      name: time
      optional: false
      type: StoopidTime
    - *ref_100
    - *ref_1
ban_StoopidTime_IGuildUser_=_1:
  args:
    - time @user null
    - time
  desc: Bans a user with the specified reason and amount of days to purge messages.
  params:
    - *ref_102
    - *ref_100
    - *ref_1
ban_StoopidTime_IGuildUser_=_2:
  args:
    - time @user null
    - time
  desc: Bans a user with the specified reason and amount of days to purge messages.
  params:
    - *ref_102
    - *ref_100
    - *ref_1
ban_StoopidTime_IGuildUser_=_3:
  args:
    - time @user null
    - time
  desc: Bans a user with the specified reason and amount of days to purge messages.
  params:
    - *ref_102
    - *ref_100
    - *ref_1
ban_StoopidTime_IUser_=:
  args:
    - time @user null
    - time @user
  desc: Bans a user for a specified amount of time.
  params:
    - *ref_102
    - &ref_103
      desc: The ID of the user to ban
      name: userId
      optional: false
      type: IUser
    - *ref_1
ban_StoopidTime_IUser_=_1:
  args:
    - time @user null
    - time @user
  desc: Bans a user for a specified amount of time.
  params:
    - *ref_102
    - *ref_103
    - *ref_1
ban_StoopidTime_IUser_=_2:
  args:
    - time @user null
    - time @user
  desc: Bans a user for a specified amount of time.
  params:
    - *ref_102
    - *ref_103
    - *ref_1
ban_StoopidTime_IUser_=_3:
  args:
    - time @user null
    - time @user
  desc: Bans a user for a specified amount of time.
  params:
    - *ref_102
    - *ref_103
    - *ref_1
ban_StoopidTime_StoopidTime_IGuildUser_=:
  args:
    - time time @user null
    - time time
  desc: Bans a user for a specified amount of time.
  params:
    - *ref_104
    - *ref_105
    - *ref_100
    - *ref_1
ban_StoopidTime_StoopidTime_IGuildUser_=_1:
  args:
    - time time @user null
    - time time
  desc: Bans a user for a specified amount of time.
  params:
    - *ref_104
    - *ref_105
    - *ref_100
    - *ref_1
ban_StoopidTime_StoopidTime_IGuildUser_=_2:
  args:
    - time time @user null
    - time time
  desc: Bans a user for a specified amount of time.
  params:
    - *ref_104
    - *ref_105
    - *ref_100
    - *ref_1
banbyhash:
  args:
    - text
  desc: Enumerates different variations of the term "channel".
  params:
    - &ref_106
      desc: The avatar hash to search for
      name: avatarHash
      optional: false
      type: string
banbyhash_string:
  args:
    - text
  desc: Represents the state of being disabled.
  params:
    - *ref_106
banbyhash_string_1:
  args:
    - text
  desc: Class for the Administration Module.
  params:
    - *ref_106
banbyhash_string_2:
  args:
    - text
  desc: Represents the state of being disabled.
  params:
    - *ref_106
baninrole:
  args:
    - '@role null'
    - '@role'
  desc: Allows you to ban users with a specific role.
  params:
    - &ref_107
      desc: The role to ban users in
      name: role
      optional: false
      type: IRole
    - *ref_1
baninrole_IRole_=:
  args:
    - '@role null'
    - '@role'
  desc: Allows you to ban users with a specific role.
  params:
    - *ref_107
    - *ref_1
baninrole_IRole_=_1:
  args:
    - '@role null'
    - '@role'
  desc: Allows you to ban users with a specific role.
  params:
    - *ref_107
    - *ref_1
baninrole_IRole_=_2:
  args:
    - '@role null'
    - '@role'
  desc: Allows you to ban users with a specific role.
  params:
    - *ref_107
    - *ref_1
banmessage:
  args:
    - null
  desc: Sets the message that users get dmed with when they are banned.
  params:
    - *ref_1
banmessage_=:
  args:
    - null
  desc: Sets the message that users get dmed with when they are banned.
  params:
    - *ref_1
banmessage_=_1:
  args:
    - null
  desc: Sets the message that users get dmed with when they are banned.
  params:
    - *ref_1
banmessage_=_2:
  args:
    - null
  desc: Sets the message that users get dmed with when they are banned.
  params:
    - *ref_1
banmessagetest:
  args:
    - null
  desc: Tests the ban message. Use it as a prank!
  params:
    - *ref_1
banmessagetest_=:
  args:
    - null
  desc: Tests the ban message. Use it as a prank!
  params:
    - *ref_1
banmessagetest_=_1:
  args:
    - null
  desc: Tests the ban message. Use it as a prank!
  params:
    - *ref_1
banmessagetest_=_2:
  args:
    - null
  desc: Tests the ban message. Use it as a prank!
  params:
    - *ref_1
banmessagetest_StoopidTime_=:
  args:
    - duration null
    - duration
  desc: Tests the ban message. Use it as a prank!
  params:
    - &ref_108
      desc: The duration of the ban
      name: duration
      optional: false
      type: StoopidTime
    - *ref_1
banmessagetest_StoopidTime_=_1:
  args:
    - duration null
    - duration
  desc: Tests the ban message. Use it as a prank!
  params:
    - *ref_108
    - *ref_1
banmessagetest_StoopidTime_=_2:
  args:
    - duration null
    - duration
  desc: Tests the ban message. Use it as a prank!
  params:
    - *ref_108
    - *ref_1
banmessagetest_StoopidTime_=_3:
  args:
    - duration null
    - duration
  desc: Tests the ban message. Use it as a prank!
  params:
    - *ref_108
    - *ref_1
banmsgreset:
  args:
    - ''
  desc: Resets the ban message to the default message.
  params: [ ]
banmsgreset_noparams:
  args:
    - ''
  desc: Resets the ban message to the default message.
  params: [ ]
banmsgreset_noparams_1:
  args:
    - ''
  desc: Resets the ban message to the default message.
  params: [ ]
banmsgreset_noparams_2:
  args:
    - ''
  desc: Resets the ban message to the default message.
  params: [ ]
banmsgtest:
  args:
    - user
  desc: Tests ban message functionality.
  params:
    - desc: The user to test ban message with.
      name: user
      optional: false
      type: IUser
banner:
  args:
    - null
  desc: Displays the banner of a specified user or the command invoker.
  params:
    - *ref_1
banner_=:
  args:
    - null
  desc: Displays the banner of a specified user or the command invoker.
  params:
    - *ref_1
banunder:
  args:
    - time null null
    - time
  desc: >-
    Allows you to ban users that have been in the server for a certain amount of
    time.
  params:
    - &ref_109
      desc: The amount of time. Formatted as {0}mo{1}d{2}h{3}m{4}s
      name: time
      optional: false
      type: StoopidTime
    - *ref_1
    - *ref_1
banunder_StoopidTime_=_=:
  args:
    - time null null
    - time
  desc: Execute the BanUnder command
  params:
    - *ref_109
    - *ref_1
    - *ref_1
banunder_StoopidTime_=_=_1:
  args:
    - time null null
    - time
  desc: >-
    Allows you to ban users that have been in the server for a certain amount of
    time.
  params:
    - *ref_109
    - *ref_1
    - *ref_1
banunder_StoopidTime_=_=_2:
  args:
    - time null null
    - time
  desc: Execute the BanUnder command
  params:
    - *ref_109
    - *ref_1
    - *ref_1
bash:
  args:
    - text
  desc: >-
    Executes a bash command. Depending on the platform, the command is executed
    in either bash or PowerShell.
  params:
    - &ref_110
      desc: The command to execute.
      name: message
      optional: false
      type: string
bash_string:
  args:
    - text
  desc: Execute the Bash command
  params:
    - *ref_110
bash_string_1:
  args:
    - text
  desc: >-
    Executes a bash command. Depending on the platform, the command is executed
    in either bash or PowerShell.
  params:
    - *ref_110
bash_string_2:
  args:
    - text
  desc: Execute the Bash command
  params:
    - *ref_110
bass:
  args:
    - 0
  desc: Sets the bass boost level for the current track.
  params:
    - *ref_90
bass_=:
  args:
    - 0
  desc: Sets the bass boost level for the current track.
  params:
    - *ref_90
bass_=_1:
  args:
    - 0
  desc: Sets various audio effects for the player
  params:
    - *ref_90
bass_=_2:
  args:
    - 0
  desc: Sets the bass boost level for the current track.
  params:
    - *ref_90
bible:
  args:
    - text text
  desc: >-
    Searches for and displays Bible verses based on the book, chapter, and verse
    provided.
  params:
    - &ref_111
      desc: The book of the Bible.
      name: book
      optional: false
      type: string
    - &ref_112
      desc: The chapter and verse in the format "Chapter:Verse".
      name: chapterAndVerse
      optional: false
      type: string
bible_string_string:
  args:
    - text text
  desc: Execute the Bible command
  params:
    - *ref_111
    - *ref_112
bible_string_string_1:
  args:
    - text text
  desc: >-
    Searches for and displays Bible verses based on the book, chapter, and verse
    provided.
  params:
    - *ref_111
    - *ref_112
bible_string_string_2:
  args:
    - text text
  desc: Execute the Bible command
  params:
    - *ref_111
    - *ref_112
bingo:
  args:
    - number text
  desc: Play Bingo with customizable card sizes.
  params:
    - desc: The amount to bet.
      name: betAmount
      optional: false
      type: long
    - desc: The type of bingo card (small, large).
      name: cardType
      optional: true
      type: string
birthdayannouncements:
  args:
    - ''
  desc: Toggles birthday announcements for yourself.
  params: [ ]
birthdaychannel:
  args:
    - '#channel'
  desc: Sets the channel for birthday announcements.
  params:
    - desc: >-
        The text channel to use for announcements. Defaults to the current
        channel if not specified.
      name: channel
      optional: true
      type: ITextChannel
birthdayconfig:
  args:
    - ''
  desc: Displays the current birthday configuration for the server.
  params: [ ]
birthdaylist:
  args:
    - days
  desc: Shows upcoming birthdays in the server.
  params:
    - desc: How many days to look ahead. Default is 7, max is 30.
      name: days
      optional: true
      type: int
birthdaymessage:
  args:
    - message
  desc: Sets the custom message for birthday announcements.
  params:
    - desc: >-
        The message template. Use {user} to mention the user. Shows the current
        message if left empty.
      name: message
      optional: true
      type: string
birthdaypingrole:
  args:
    - '@role'
  desc: Sets a role to be pinged during birthday announcements.
  params:
    - desc: The role to ping. Provide no role to disable it.
      name: role
      optional: true
      type: IRole
birthdayrole:
  args:
    - '@role'
  desc: Sets the role to be given to users on their birthday.
  params:
    - desc: The role to assign on a user's birthday. Provide no role to disable it.
      name: role
      optional: true
      type: IRole
birthdaytimezone:
  args:
    - timezone
  desc: Sets your personal timezone for birthday calculations.
  params:
    - desc: The timezone to set (e.g., "America/New_York").
      name: timezone
      optional: false
      type: string
birthdaytoday:
  args:
    - ''
  desc: Shows today's birthdays in the server.
  params: [ ]
bite:
  args:
    - text
  desc: Bites someone.
  params:
    - *ref_99
bite_string:
  args:
    - text
  desc: Bites someone.
  params:
    - *ref_99
bite_string_1:
  args:
    - text
  desc: Bites someone.
  params:
    - *ref_99
bite_string_2:
  args:
    - text
  desc: Bites someone.
  params:
    - *ref_99
blackjack:
  args:
    - number
  desc: Starts a new game of Blackjack or joins an existing one.
  params:
    - &ref_113
      desc: The bet amount for the player.
      name: amount
      optional: false
      type: long
blackjack_long:
  args:
    - number
  desc: Starts a new game of Blackjack or joins an existing one.
  params:
    - *ref_113
blackjack_long_1:
  args:
    - number
  desc: Starts a new game of Blackjack or joins an existing one.
  params:
    - *ref_113
blackjack_long_2:
  args:
    - number
  desc: Starts a new game of Blackjack or joins an existing one.
  params:
    - *ref_113
blush:
  args:
    - null
  desc: Blushes.
  params:
    - *ref_1
blush_=:
  args:
    - null
  desc: Blushes.
  params:
    - *ref_1
blush_=_1:
  args:
    - null
  desc: Blushes.
  params:
    - *ref_1
blush_=_2:
  args:
    - null
  desc: Blushes.
  params:
    - *ref_1
bondage:
  args:
    - ''
  desc: Command to fetch and display NSFW content from the "bondage" subreddit.
  params: [ ]
bondage_noparams:
  args:
    - ''
  desc: Command to fetch and display NSFW content from the "bondage" subreddit.
  params: [ ]
bondage_noparams_1:
  args:
    - ''
  desc: Command to fetch and display NSFW content from the "bondage" subreddit.
  params: [ ]
bondage_noparams_2:
  args:
    - ''
  desc: Command to fetch and display NSFW content from the "bondage" subreddit.
  params: [ ]
boobs:
  args:
    - ''
  desc: >-
    Command to fetch and display NSFW content from the "boobs" subreddit in the
    current guild channel or direct messages.
  params: [ ]
boobs_noparams:
  args:
    - ''
  desc: >-
    Command to fetch and display NSFW content from the "boobs" subreddit in the
    current guild channel or direct messages.
  params: [ ]
boobs_noparams_1:
  args:
    - ''
  desc: >-
    Command to fetch and display NSFW content from the "boobs" subreddit in the
    current guild channel or direct messages.
  params: [ ]
boobs_noparams_2:
  args:
    - ''
  desc: >-
    Command to fetch and display NSFW content from the "boobs" subreddit in the
    current guild channel or direct messages.
  params: [ ]
boost:
  args:
    - ''
  desc: Enables or disables boost messages.
  params: [ ]
boost_noparams:
  args:
    - ''
  desc: Enables or disables boost messages.
  params: [ ]
boost_noparams_1:
  args:
    - ''
  desc: Enables or disables boost messages.
  params: [ ]
boost_noparams_2:
  args:
    - ''
  desc: Enables or disables boost messages.
  params: [ ]
boostdel:
  args:
    - 30
  desc: Sets the timer for deleting boost messages.
  params:
    - &ref_114
      desc: ''
      name: 30
      optional: false
      type: '='
boostdel_=:
  args:
    - 30
  desc: Sets the timer for deleting boost messages.
  params:
    - *ref_114
boostdel_=_1:
  args:
    - 30
  desc: Sets the timer for deleting boost messages.
  params:
    - *ref_114
boostdel_=_2:
  args:
    - 30
  desc: Sets the timer for deleting boost messages.
  params:
    - *ref_114
boostmsg:
  args:
    - ''
  desc: Displays the current boost message.
  params: [ ]
boostmsg_noparams:
  args:
    - ''
  desc: Displays the current boost message.
  params: [ ]
boostmsg_noparams_1:
  args:
    - ''
  desc: >-
    Handles the greet and bye messages as well as boost settings bfor the
    server.
  params: [ ]
boostmsg_noparams_2:
  args:
    - ''
  desc: Displays the current boost message.
  params: [ ]
boostmsg_string:
  args:
    - text
  desc: Sets the boost message for the server.
  params:
    - &ref_115
      desc: The new boost message.
      name: text
      optional: true
      type: string
boostmsg_string_1:
  args:
    - text
  desc: Sets the boost message for the server.
  params:
    - *ref_115
boostmsg_string_2:
  args:
    - text
  desc: Sets the boost message for the server.
  params:
    - *ref_115
boostmsg_string_3:
  args:
    - text
  desc: Sets the boost message for the server.
  params:
    - *ref_115
boosttest:
  args:
    - null
  desc: Sends a test message for boosting.
  params:
    - *ref_1
boosttest_=:
  args:
    - null
  desc: Sends a test message for boosting.
  params:
    - *ref_1
boosttest_=_1:
  args:
    - null
  desc: Sends a test message for boosting.
  params:
    - *ref_1
boosttest_=_2:
  args:
    - null
  desc: Sends a test message for boosting.
  params:
    - *ref_1
bored:
  args:
    - null
  desc: Indicates boredom.
  params:
    - *ref_1
bored_=:
  args:
    - null
  desc: Indicates boredom.
  params:
    - *ref_1
bored_=_1:
  args:
    - null
  desc: Indicates boredom.
  params:
    - *ref_1
bored_=_2:
  args:
    - null
  desc: Indicates boredom.
  params:
    - *ref_1
buttoninfo:
  args:
    - number
  desc: Displays detailed information about a button.
  params:
    - &ref_116
      desc: The ID of the button to view.
      name: buttonId
      optional: false
      type: int
buttoninfo_int:
  args:
    - number
  desc: Displays detailed information about a button.
  params:
    - *ref_116
buttoninfo_int_1:
  args:
    - number
  desc: Displays detailed information about a button.
  params:
    - *ref_116
buttoninfo_int_2:
  args:
    - number
  desc: Displays detailed information about a button.
  params:
    - *ref_116
buttoninfo_int_3:
  args:
    - number
  desc: Displays detailed information about a button.
  params:
    - *ref_116
buttoninfo_int_4:
  args:
    - number
  desc: Displays detailed information about a button.
  params:
    - *ref_116
butts:
  args:
    - ''
  desc: >-
    Command to fetch and display NSFW content from the "ass" subreddit in the
    current guild channel or direct messages.
  params: [ ]
butts_noparams:
  args:
    - ''
  desc: >-
    Command to fetch and display NSFW content from the "ass" subreddit in the
    current guild channel or direct messages.
  params: [ ]
butts_noparams_1:
  args:
    - ''
  desc: >-
    Command to fetch and display NSFW content from the "ass" subreddit in the
    current guild channel or direct messages.
  params: [ ]
butts_noparams_2:
  args:
    - ''
  desc: >-
    Command to fetch and display NSFW content from the "ass" subreddit in the
    current guild channel or direct messages.
  params: [ ]
bye:
  args:
    - ''
  desc: Toggles the sending of a bye message.
  params: [ ]
bye_noparams:
  args:
    - ''
  desc: Toggles the sending of a bye message.
  params: [ ]
bye_noparams_1:
  args:
    - ''
  desc: Toggles the sending of a bye message.
  params: [ ]
bye_noparams_2:
  args:
    - ''
  desc: Toggles the sending of a bye message.
  params: [ ]
byedel:
  args:
    - 30
  desc: Sets the timer for deleting bye messages.
  params:
    - *ref_114
byedel_=:
  args:
    - 30
  desc: Sets the timer for deleting bye messages.
  params:
    - *ref_114
byedel_=_1:
  args:
    - 30
  desc: Sets the timer for deleting bye messages.
  params:
    - *ref_114
byedel_=_2:
  args:
    - 30
  desc: Sets the timer for deleting bye messages.
  params:
    - *ref_114
byemsg:
  args:
    - ''
  desc: Displays the current bye message.
  params: [ ]
byemsg_noparams:
  args:
    - ''
  desc: Displays the current bye message.
  params: [ ]
byemsg_noparams_1:
  args:
    - ''
  desc: Displays the current bye message.
  params: [ ]
byemsg_noparams_2:
  args:
    - ''
  desc: Displays the current bye message.
  params: [ ]
byemsg_string:
  args:
    - text
  desc: Sets the bye message to the specified text.
  params:
    - &ref_117
      desc: The text to set as the bye message.
      name: text
      optional: true
      type: string
byemsg_string_1:
  args:
    - text
  desc: Sets the bye message to the specified text.
  params:
    - *ref_117
byemsg_string_2:
  args:
    - text
  desc: Sets the bye message to the specified text.
  params:
    - *ref_117
byemsg_string_3:
  args:
    - text
  desc: Sets the bye message to the specified text.
  params:
    - *ref_117
byetest:
  args:
    - null
  desc: Sends a test bye message.
  params:
    - *ref_1
byetest_=:
  args:
    - null
  desc: Sends a test bye message.
  params:
    - *ref_1
byetest_=_1:
  args:
    - null
  desc: Sends a test bye message.
  params:
    - *ref_1
byetest_=_2:
  args:
    - null
  desc: Sends a test bye message.
  params:
    - *ref_1
calcops:
  args:
    - ''
  desc: Lists available mathematical operations that can be used in expressions.
  params: [ ]
calcops_noparams:
  args:
    - ''
  desc: Lists available mathematical operations that can be used in expressions.
  params: [ ]
calcops_noparams_1:
  args:
    - ''
  desc: Lists available mathematical operations that can be used in expressions.
  params: [ ]
calcops_noparams_2:
  args:
    - ''
  desc: Lists available mathematical operations that can be used in expressions.
  params: [ ]
calculate:
  args:
    - text
  desc: Evaluates a mathematical expression and returns the result.
  params:
    - &ref_118
      desc: The expression to evaluate.
      name: expression
      optional: false
      type: string
calculate_string:
  args:
    - text
  desc: Evaluates a mathematical expression and returns the result.
  params:
    - *ref_118
calculate_string_1:
  args:
    - text
  desc: >-
    Provides calculator functionality including expression evaluation, graphing,
    and symbolic math.
  params:
    - *ref_118
calculate_string_2:
  args:
    - text
  desc: Evaluates a mathematical expression and returns the result.
  params:
    - *ref_118
cancelboost:
  args:
    - number
  desc: Cancels an XP boost event.
  params:
    - &ref_119
      desc: ID of the event to cancel.
      name: eventId
      optional: false
      type: int
cancelboost_int:
  args:
    - number
  desc: Cancels an XP boost event.
  params:
    - *ref_119
cancelboost_int_1:
  args:
    - number
  desc: Cancels an XP boost event.
  params:
    - *ref_119
cancelboost_int_2:
  args:
    - number
  desc: Cancels an XP boost event.
  params:
    - *ref_119
cash:
  args:
    - ''
  desc: Checks the current balance of the user.
  params: [ ]
cash_noparams:
  args:
    - ''
  desc: Checks the current balance of the user.
  params: [ ]
cash_noparams_1:
  args:
    - ''
  desc: Module for managing currency.
  params: [ ]
cash_noparams_2:
  args:
    - ''
  desc: Module for managing currency.
  params: [ ]
catcmd:
  args:
    - command action chnl
  desc: Adds or removes command-specific permissions for a specific category.
  params:
    - &ref_120
      desc: The command to set permissions for.
      name: command
      optional: false
      type: CommandOrCrInfo
    - *ref_61
    - *ref_62
catcmd_CommandOrCrInfo_PermissionAction_ICategoryChannel:
  args:
    - command action chnl
  desc: Adds or removes command-specific permissions for a specific category.
  params:
    - *ref_120
    - *ref_61
    - *ref_62
catcmd_CommandOrCrInfo_PermissionAction_ICategoryChannel_1:
  args:
    - command action chnl
  desc: Adds or removes command-specific permissions for a specific category.
  params:
    - *ref_120
    - *ref_61
    - *ref_62
catcmd_CommandOrCrInfo_PermissionAction_ICategoryChannel_2:
  args:
    - command action chnl
  desc: Adds or removes command-specific permissions for a specific category.
  params:
    - *ref_120
    - *ref_61
    - *ref_62
catfact:
  args:
    - ''
  desc: Fetches and shares a random cat fact.
  params: [ ]
catfact_noparams:
  args:
    - ''
  desc: Fetches and shares a random cat fact.
  params: [ ]
catfact_noparams_1:
  args:
    - ''
  desc: Fetches and shares a random cat fact.
  params: [ ]
catfact_noparams_2:
  args:
    - ''
  desc: Fetches and shares a random cat fact.
  params: [ ]
catmdl:
  args:
    - module action chnl
  desc: Adds or removes module-specific permissions for a specific category.
  params:
    - &ref_121
      desc: The module to set permissions for.
      name: module
      optional: false
      type: ModuleOrCrInfo
    - *ref_61
    - *ref_62
catmdl_ModuleOrCrInfo_PermissionAction_ICategoryChannel:
  args:
    - module action chnl
  desc: Adds or removes module-specific permissions for a specific category.
  params:
    - *ref_121
    - *ref_61
    - *ref_62
catmdl_ModuleOrCrInfo_PermissionAction_ICategoryChannel_1:
  args:
    - module action chnl
  desc: Adds or removes module-specific permissions for a specific category.
  params:
    - *ref_121
    - *ref_61
    - *ref_62
catmdl_ModuleOrCrInfo_PermissionAction_ICategoryChannel_2:
  args:
    - module action chnl
  desc: Adds or removes module-specific permissions for a specific category.
  params:
    - *ref_121
    - *ref_61
    - *ref_62
ccatc:
  args:
    - name count
  desc: Creates category and text channels.
  params:
    - desc: The category name.
      name: name
      optional: false
      type: string
    - desc: Number of text channels to create.
      name: count
      optional: false
      type: int
ccavc:
  args:
    - name count
  desc: Creates category and voice channels.
  params:
    - desc: The category name.
      name: name
      optional: false
      type: string
    - desc: Number of voice channels to create.
      name: count
      optional: false
      type: int
cctc:
  args:
    - category count
  desc: Creates category text channels.
  params:
    - desc: The category to add channels to.
      name: category
      optional: false
      type: ICategoryChannel
    - desc: Number of text channels to create.
      name: count
      optional: false
      type: int
ccvc:
  args:
    - category count
  desc: Creates category voice channels.
  params:
    - desc: The category to add channels to.
      name: category
      optional: false
      type: ICategoryChannel
    - desc: Number of voice channels to create.
      name: count
      optional: false
      type: int
challengeleaderboard:
  args:
    - ''
  desc: View the daily challenge leaderboard.
  params: [ ]
channelblacklist:
  args:
    - action id text
    - action id
  desc: Blacklists or unblacklists a channel by its ID, with an optional reason.
  params:
    - &ref_122
      desc: Specifies whether to add or remove from the blacklist.
      name: action
      optional: false
      type: AddRemove
    - &ref_123
      desc: The server's ID.
      name: id
      optional: false
      type: ulong
    - &ref_124
      desc: The reason for the blacklist operation.
      name: reason
      optional: true
      type: string
channelblacklist_AddRemove_ulong_string:
  args:
    - action id text
    - action id
  desc: Execute the ChannelBlacklist command
  params:
    - *ref_122
    - *ref_123
    - *ref_124
channelblacklist_AddRemove_ulong_string_1:
  args:
    - action id text
    - action id
  desc: Blacklists or unblacklists a channel by its ID, with an optional reason.
  params:
    - *ref_122
    - &ref_638
      desc: The channel's ID.
      name: id
      optional: false
      type: ulong
    - *ref_124
channelblacklist_AddRemove_ulong_string_2:
  args:
    - action id text
    - action id
  desc: Execute the ChannelBlacklist command
  params:
    - *ref_122
    - *ref_123
    - *ref_124
channelid:
  args:
    - ''
  desc: Gets the channel id of the current channel.
  params: [ ]
channelid_noparams:
  args:
    - ''
  desc: Gets the channel id of the current channel.
  params: [ ]
channelid_noparams_1:
  args:
    - ''
  desc: Gets the channel id of the current channel.
  params: [ ]
channelid_noparams_2:
  args:
    - ''
  desc: Gets the channel id of the current channel.
  params: [ ]
channelinfo:
  args:
    - null
  desc: Displays information about a specified text channel or the current channel.
  params:
    - *ref_1
channelinfo_=:
  args:
    - null
  desc: Displays information about a specified text channel or the current channel.
  params:
    - *ref_1
channelinfo_=_1:
  args:
    - null
  desc: Displays information about a specified text channel or the current channel.
  params:
    - *ref_1
channelinfo_=_2:
  args:
    - null
  desc: Displays information about a specified text channel or the current channel.
  params:
    - *ref_1
channelmessages:
  args:
    - null
  desc: Retrieves message statistics for a specific channel.
  params:
    - *ref_1
channelmessages_=:
  args:
    - null
  desc: Retrieves message statistics for a specific channel.
  params:
    - *ref_1
channelmessages_=_1:
  args:
    - null
  desc: Retrieves message statistics for a specific channel.
  params:
    - *ref_1
channelmessages_=_2:
  args:
    - null
  desc: Retrieves message statistics for a specific channel.
  params:
    - *ref_1
channeltopic:
  args:
    - null
  desc: >-
    Gets the topic of the current channel. Shows the topic of a specified
    channel if one is specified.
  params:
    - *ref_1
channeltopic_=:
  args:
    - null
  desc: >-
    Gets the topic of the current channel. Shows the topic of a specified
    channel if one is specified.
  params:
    - *ref_1
channeltopic_=_1:
  args:
    - null
  desc: >-
    Gets the topic of the current channel. Shows the topic of a specified
    channel if one is specified.
  params:
    - *ref_1
channeltopic_=_2:
  args:
    - null
  desc: >-
    Gets the topic of the current channel. Shows the topic of a specified
    channel if one is specified.
  params:
    - *ref_1
charinfo:
  args:
    - text
  desc: Retrieves and displays information about a character.
  params:
    - &ref_125
      desc: The name of the character to search for.
      name: chara
      optional: false
      type: string
charinfo_string:
  args:
    - text
  desc: Execute the CharInfo command
  params:
    - *ref_125
charinfo_string_1:
  args:
    - text
  desc: Retrieves and displays information about a character.
  params:
    - *ref_125
charinfo_string_2:
  args:
    - text
  desc: Execute the CharInfo command
  params:
    - *ref_125
chatmute:
  args:
    - '@user ""'
  desc: Mutes a user in chat and not voice.
  params:
    - &ref_127
      desc: The user to mute
      name: user
      optional: true
      type: IGuildUser
    - &ref_126
      desc: ''
      name: '""'
      optional: false
      type: '='
chatmute_IGuildUser_=:
  args:
    - '@user ""'
  desc: Mutes a user in chat and not voice.
  params:
    - &ref_128
      desc: The user to unmute
      name: user
      optional: true
      type: IGuildUser
    - *ref_126
chatmute_IGuildUser_=_1:
  args:
    - '@user ""'
  desc: Mutes a user in chat and not voice.
  params:
    - *ref_127
    - *ref_126
chatmute_IGuildUser_=_2:
  args:
    - '@user ""'
  desc: Mutes a user in chat and not voice.
  params:
    - *ref_128
    - *ref_126
chatmute_StoopidTime_IGuildUser_=:
  args:
    - time @user ""
    - time
  desc: Mutes a user in chat and not voice for a specified amount of time.
  params:
    - &ref_129
      desc: The amount of time to mute the user for
      name: time
      optional: false
      type: StoopidTime
    - *ref_127
    - *ref_126
chatmute_StoopidTime_IGuildUser_=_1:
  args:
    - time @user ""
    - time
  desc: Mutes a user in chat and not voice for a specified amount of time.
  params:
    - *ref_129
    - *ref_127
    - *ref_126
chatmute_StoopidTime_IGuildUser_=_2:
  args:
    - time @user ""
    - time
  desc: Mutes a user in chat and not voice for a specified amount of time.
  params:
    - *ref_129
    - *ref_127
    - *ref_126
chatmute_StoopidTime_IGuildUser_=_3:
  args:
    - time @user ""
    - time
  desc: Mutes a user in chat and not voice for a specified amount of time.
  params:
    - *ref_129
    - *ref_127
    - *ref_126
chattriggerrolegranttype:
  args:
    - number type
  desc: Sets the role grant type for a chat trigger.
  params:
    - &ref_130
      desc: The ID of the chat trigger.
      name: id
      optional: false
      type: int
    - &ref_131
      desc: 'The role grant type to set. '
      name: type
      optional: false
      type: CtRoleGrantType
chattriggerrolegranttype_int_CtRoleGrantType:
  args:
    - number type
  desc: Sets the role grant type for a chat trigger.
  params:
    - *ref_130
    - *ref_131
chattriggerrolegranttype_int_CtRoleGrantType_1:
  args:
    - number type
  desc: Sets the role grant type for a chat trigger.
  params:
    - *ref_130
    - *ref_131
chattriggerrolegranttype_int_CtRoleGrantType_2:
  args:
    - number type
  desc: Sets the role grant type for a chat trigger.
  params:
    - *ref_130
    - *ref_131
chattriggerscrosspostchannel:
  args:
    - channel
  desc: Sets channel for chat trigger cross-posting.
  params:
    - desc: The channel for cross-posting.
      name: channel
      optional: false
      type: ITextChannel
chattriggerscrosspostwebhook:
  args:
    - webhook
  desc: Sets webhook for chat trigger cross-posting.
  params:
    - desc: The webhook URL for cross-posting.
      name: webhook
      optional: false
      type: string
chattriggervalidtype:
  args:
    - number type true|false
  desc: Sets whether a chat trigger is valid for a specific trigger type.
  params:
    - *ref_130
    - &ref_132
      desc: 'The trigger type to set validity for. '
      name: type
      optional: false
      type: ChatTriggerType
    - &ref_133
      desc: Whether the trigger type should be enabled or disabled.
      name: enabled
      optional: false
      type: bool
chattriggervalidtype_int_ChatTriggerType_bool:
  args:
    - number type true|false
  desc: Sets whether a chat trigger is valid for a specific trigger type.
  params:
    - *ref_130
    - *ref_132
    - *ref_133
chattriggervalidtype_int_ChatTriggerType_bool_1:
  args:
    - number type true|false
  desc: Sets whether a chat trigger is valid for a specific trigger type.
  params:
    - *ref_130
    - *ref_132
    - *ref_133
chattriggervalidtype_int_ChatTriggerType_bool_2:
  args:
    - number type true|false
  desc: Sets whether a chat trigger is valid for a specific trigger type.
  params:
    - *ref_130
    - *ref_132
    - *ref_133
chatunmute:
  args:
    - '@user ""'
  desc: Unmutes a user in chat.
  params:
    - *ref_128
    - *ref_126
chatunmute_IGuildUser_=:
  args:
    - '@user ""'
  desc: Unmutes a user in chat.
  params:
    - *ref_128
    - *ref_126
chatunmute_IGuildUser_=_1:
  args:
    - '@user ""'
  desc: Unmutes a user in chat.
  params:
    - *ref_128
    - *ref_126
chatunmute_IGuildUser_=_2:
  args:
    - '@user ""'
  desc: Unmutes a user in chat.
  params:
    - *ref_128
    - *ref_126
checkpanels:
  args:
    - ''
  desc: Checks all panels in the guild for missing messages.
  params: [ ]
checkrep:
  args:
    - '@user'
  desc: Checks the reputation of a user.
  params:
    - &ref_425
      desc: >-
        The user to check reputation for. If null, checks the command invoker's
        reputation.
      name: target
      optional: true
      type: IGuildUser
chnlcmd:
  args:
    - command action chnl
  desc: Adds or removes channel-specific permissions for a specific command.
  params:
    - *ref_120
    - *ref_61
    - *ref_63
chnlcmd_CommandOrCrInfo_PermissionAction_ITextChannel:
  args:
    - command action chnl
  desc: Adds or removes channel-specific permissions for a specific command.
  params:
    - *ref_120
    - *ref_61
    - *ref_63
chnlcmd_CommandOrCrInfo_PermissionAction_ITextChannel_1:
  args:
    - command action chnl
  desc: Adds or removes channel-specific permissions for a specific command.
  params:
    - *ref_120
    - *ref_61
    - *ref_63
chnlcmd_CommandOrCrInfo_PermissionAction_ITextChannel_2:
  args:
    - command action chnl
  desc: Adds or removes channel-specific permissions for a specific command.
  params:
    - *ref_120
    - *ref_61
    - *ref_63
chnlfilterinv:
  args:
    - ''
  desc: Toggles the invite link filter for a specific channel on or off.
  params: [ ]
chnlfilterinv_noparams:
  args:
    - ''
  desc: Execute the ChnlFilterInv command
  params: [ ]
chnlfilterinv_noparams_1:
  args:
    - ''
  desc: Toggles the invite link filter for a specific channel on or off.
  params: [ ]
chnlfilterinv_noparams_2:
  args:
    - ''
  desc: Execute the ChnlFilterInv command
  params: [ ]
chnlfilterlin:
  args:
    - ''
  desc: Toggles the link filter for a specific channel on or off.
  params: [ ]
chnlfilterlin_noparams:
  args:
    - ''
  desc: Execute the ChnlFilterLin command
  params: [ ]
chnlfilterlin_noparams_1:
  args:
    - ''
  desc: Toggles the link filter for a specific channel on or off.
  params: [ ]
chnlfilterlin_noparams_2:
  args:
    - ''
  desc: Execute the ChnlFilterLin command
  params: [ ]
chnlfilterwords:
  args:
    - ''
  desc: Toggles the word filter for a specific channel on or off.
  params: [ ]
chnlfilterwords_noparams:
  args:
    - ''
  desc: Execute the ChnlFilterWords command
  params: [ ]
chnlfilterwords_noparams_1:
  args:
    - ''
  desc: Toggles the word filter for a specific channel on or off.
  params: [ ]
chnlfilterwords_noparams_2:
  args:
    - ''
  desc: Execute the ChnlFilterWords command
  params: [ ]
chnlmdl:
  args:
    - module action chnl
  desc: Adds or removes channel-specific permissions for a specific module.
  params:
    - *ref_121
    - *ref_61
    - *ref_63
chnlmdl_ModuleOrCrInfo_PermissionAction_ITextChannel:
  args:
    - module action chnl
  desc: Adds or removes channel-specific permissions for a specific module.
  params:
    - *ref_121
    - *ref_61
    - *ref_63
chnlmdl_ModuleOrCrInfo_PermissionAction_ITextChannel_1:
  args:
    - module action chnl
  desc: Adds or removes channel-specific permissions for a specific module.
  params:
    - *ref_121
    - *ref_61
    - *ref_63
chnlmdl_ModuleOrCrInfo_PermissionAction_ITextChannel_2:
  args:
    - module action chnl
  desc: Adds or removes channel-specific permissions for a specific module.
  params:
    - *ref_121
    - *ref_61
    - *ref_63
choose:
  args:
    - null
  desc: Initializes a new instance of the Games class.
  params:
    - *ref_1
choose_=:
  args:
    - null
  desc: Command to choose randomly from a list of options.
  params:
    - *ref_1
choose_=_1:
  args:
    - null
  desc: Initializes a new instance of the Games class.
  params:
    - *ref_1
choose_=_2:
  args:
    - null
  desc: Command to choose randomly from a list of options.
  params:
    - *ref_1
chucknorris:
  args:
    - ''
  desc: Retrieves a Chuck Norris joke.
  params: [ ]
chucknorris_noparams:
  args:
    - ''
  desc: Retrieves a Chuck Norris joke.
  params: [ ]
chucknorris_noparams_1:
  args:
    - ''
  desc: Retrieves a Chuck Norris joke.
  params: [ ]
chucknorris_noparams_2:
  args:
    - ''
  desc: Retrieves a Chuck Norris joke.
  params: [ ]
claimchallenge:
  args:
    - ''
  desc: Claim your completed daily challenge reward.
  params: [ ]
clearqueue:
  args:
    - ''
  desc: Clears the music queue.
  params: [ ]
clearqueue_noparams:
  args:
    - ''
  desc: Clears the music queue.
  params: [ ]
cmdcooldown:
  args:
    - command null
    - command
  desc: Sets or clears the cooldown for a specified command in the guild.
  params:
    - &ref_134
      desc: The command to set the cooldown for.
      name: command
      optional: false
      type: CommandOrCrInfo
    - *ref_1
cmdcooldown_CommandOrCrInfo_=:
  args:
    - command null
    - command
  desc: Execute the CmdCooldown command
  params:
    - *ref_134
    - *ref_1
cmdcooldown_CommandOrCrInfo_=_1:
  args:
    - command null
    - command
  desc: Represents commands for managing command cooldowns.
  params:
    - *ref_134
    - *ref_1
cmdcooldown_CommandOrCrInfo_=_2:
  args:
    - command null
    - command
  desc: Execute the CmdCooldown command
  params:
    - *ref_134
    - *ref_1
coinflip:
  args:
    - number text
  desc: Allows the user to flip a coin with a specified bet amount and guess.
  params:
    - &ref_135
      desc: The amount to bet.
      name: betAmount
      optional: false
      type: long
    - &ref_136
      desc: The user's guess ("heads" or "tails").
      name: guess
      optional: false
      type: string
coinflip_long_string:
  args:
    - number text
  desc: Allows the user to flip a coin with a specified bet amount and guess.
  params:
    - *ref_135
    - *ref_136
coinflip_long_string_1:
  args:
    - number text
  desc: Allows the user to flip a coin with a specified bet amount and guess.
  params:
    - *ref_135
    - *ref_136
coinflip_long_string_2:
  args:
    - number text
  desc: Allows the user to flip a coin with a specified bet amount and guess.
  params:
    - *ref_135
    - *ref_136
color:
  args:
    - colors
  desc: Displays a color swatch based on the provided hexadecimal color codes.
  params:
    - &ref_137
      desc: An array of SKColor objects representing the colors to display.
      name: colors
      optional: false
      type: SKColor[]
color_SKColor[]:
  args:
    - colors
  desc: Execute the Color command
  params:
    - *ref_137
color_SKColor[]_1:
  args:
    - colors
  desc: Displays a color swatch based on the provided hexadecimal color codes.
  params:
    - *ref_137
color_SKColor[]_2:
  args:
    - colors
  desc: Execute the Color command
  params:
    - *ref_137
commandlogchannel:
  args:
    - null
  desc: Sets a channel to log commands to
  params:
    - *ref_1
commandlogchannel_=:
  args:
    - null
  desc: Sets a channel to log commands to
  params:
    - *ref_1
commandlogchannel_=_1:
  args:
    - null
  desc: Sets a channel to log commands to
  params:
    - *ref_1
commandlogchannel_=_2:
  args:
    - null
  desc: Sets a channel to log commands to
  params:
    - *ref_1
commands:
  args:
    - null
  desc: >-
    Shows commands for a specific module. If null, is an alias for modules which
    is an alias for help.
  params:
    - *ref_1
commands_=:
  args:
    - null
  desc: SHows how to support the bot.
  params:
    - *ref_1
commands_=_1:
  args:
    - null
  desc: >-
    Shows commands for a specific module. If null, is an alias for modules which
    is an alias for help.
  params:
    - *ref_1
commands_=_2:
  args:
    - null
  desc: SHows how to support the bot.
  params:
    - *ref_1
commandstats:
  args:
    - ''
  desc: >-
    Retrieves and displays statistics on the most used command, module, guild,
    and user.
  params: [ ]
commandstats_noparams:
  args:
    - ''
  desc: Execute the CommandStats command
  params: [ ]
commandstats_noparams_1:
  args:
    - ''
  desc: >-
    Retrieves and displays statistics on the most used command, module, guild,
    and user.
  params: [ ]
commandstats_noparams_2:
  args:
    - ''
  desc: Execute the CommandStats command
  params: [ ]
competitionleaderboard:
  args:
    - number
  desc: Shows the leaderboard for an active competition.
  params:
    - &ref_138
      desc: ID of the competition.
      name: competitionId
      optional: false
      type: int
competitionleaderboard_int:
  args:
    - number
  desc: Shows the leaderboard for an active competition.
  params:
    - *ref_138
competitionleaderboard_int_1:
  args:
    - number
  desc: Shows the leaderboard for an active competition.
  params:
    - *ref_138
competitionleaderboard_int_2:
  args:
    - number
  desc: Shows the leaderboard for an active competition.
  params:
    - *ref_138
confess:
  args:
    - serverid text
  desc: Allows users to confess anonymously.
  params:
    - &ref_139
      desc: The ID of the server.
      name: serverId
      optional: false
      type: ulong
    - &ref_140
      desc: The confession message
      name: confession
      optional: false
      type: string
confess_ulong_string:
  args:
    - serverid text
  desc: Allows users to confess anonymously.
  params:
    - *ref_139
    - *ref_140
confess_ulong_string_1:
  args:
    - serverid text
  desc: Module for managing confessions.
  params:
    - *ref_139
    - *ref_140
confess_ulong_string_2:
  args:
    - serverid text
  desc: Allows users to confess anonymously.
  params:
    - *ref_139
    - *ref_140
confessblacklist:
  args:
    - user
  desc: Adds a user to the confession blacklist.
  params:
    - desc: The user to blacklist from confessions.
      name: user
      optional: false
      type: IUser
confesschannel:
  args:
    - channel
  desc: Sets the confession channel.
  params:
    - desc: The channel to set for confessions.
      name: channel
      optional: true
      type: ITextChannel
confessionblacklist:
  args:
    - '@user'
  desc: Adds or removes a user from the confession blacklist.
  params:
    - &ref_141
      desc: The user to add or remove from the blacklist.
      name: user
      optional: false
      type: IUser
confessionblacklist_IUser:
  args:
    - '@user'
  desc: Adds or removes a user from the confession blacklist.
  params:
    - &ref_142
      desc: The user to remove from the blacklist.
      name: user
      optional: false
      type: IUser
confessionblacklist_IUser_1:
  args:
    - '@user'
  desc: Adds or removes a user from the confession blacklist.
  params:
    - *ref_141
confessionblacklist_IUser_2:
  args:
    - '@user'
  desc: Adds or removes a user from the confession blacklist.
  params:
    - *ref_142
confessionchannel:
  args:
    - null
  desc: Sets the confession channel for anonymous confessions.
  params:
    - *ref_1
confessionchannel_=:
  args:
    - null
  desc: Sets the confession channel for anonymous confessions.
  params:
    - *ref_1
confessionchannel_=_1:
  args:
    - null
  desc: Sets the confession channel for anonymous confessions.
  params:
    - *ref_1
confessionchannel_=_2:
  args:
    - null
  desc: Sets the confession channel for anonymous confessions.
  params:
    - *ref_1
confessionlogchannel:
  args:
    - null
  desc: >-
    Sets the confession log channel for logging confessions. Misuse of this
    feature will end up in me being 2m away from your house.
  params:
    - *ref_1
confessionlogchannel_=:
  args:
    - null
  desc: >-
    Sets the confession log channel for logging confessions. Misuse of this
    feature will end up in me being 2m away from your house.
  params:
    - *ref_1
confessionlogchannel_=_1:
  args:
    - null
  desc: >-
    Sets the confession log channel for logging confessions. Misuse of this
    feature will end up in me being 2m away from your house.
  params:
    - *ref_1
confessionlogchannel_=_2:
  args:
    - null
  desc: >-
    Sets the confession log channel for logging confessions. Misuse of this
    feature will end up in me being 2m away from your house.
  params:
    - *ref_1
confessionunblacklist:
  args:
    - '@user'
  desc: Removes a user from the confession blacklist.
  params:
    - *ref_142
confessionunblacklist_IUser:
  args:
    - '@user'
  desc: Removes a user from the confession blacklist.
  params:
    - *ref_142
confessionunblacklist_IUser_1:
  args:
    - '@user'
  desc: Removes a user from the confession blacklist.
  params:
    - *ref_142
confessionunblacklist_IUser_2:
  args:
    - '@user'
  desc: Removes a user from the confession blacklist.
  params:
    - *ref_142
confesslogchannel:
  args:
    - channel
  desc: Sets the confession log channel.
  params:
    - desc: The channel to log confessions to.
      name: channel
      optional: true
      type: ITextChannel
confessunblacklist:
  args:
    - user
  desc: Removes a user from the confession blacklist.
  params:
    - desc: The user to unblacklist from confessions.
      name: user
      optional: false
      type: IUser
config:
  args:
    - ''
  desc: Changes yml based config for the bot.
  params: [ ]
config_string:
  args:
    - name
  desc: Changes yml based config for the bot.
  params:
    - desc: The name of the config to change.
      name: name
      optional: true
      type: string
config_string_string:
  args:
    - name prop
  desc: Changes yml based config for the bot.
  params:
    - desc: The name of the config to change.
      name: name
      optional: true
      type: string
    - desc: The property of the config to change.
      name: prop
      optional: true
      type: string
config_string_string_string:
  args:
    - name prop value
  desc: Changes yml based config for the bot.
  params:
    - desc: The name of the config to change.
      name: name
      optional: true
      type: string
    - desc: The property of the config to change.
      name: prop
      optional: true
      type: string
    - desc: The new value to set for the property.
      name: value
      optional: true
      type: string
consider:
  args:
    - sid null
    - sid
  desc: Marks a suggestion as being considered.
  params:
    - &ref_143
      desc: The unique number (ID) of the suggestion to mark as considered.
      name: sid
      optional: false
      type: ulong
    - *ref_1
consider_ulong_=:
  args:
    - sid null
    - sid
  desc: Marks a suggestion as being considered.
  params:
    - *ref_143
    - *ref_1
consider_ulong_=_1:
  args:
    - sid null
    - sid
  desc: Marks a suggestion as being considered.
  params:
    - *ref_143
    - *ref_1
consider_ulong_=_2:
  args:
    - sid null
    - sid
  desc: Marks a suggestion as being considered.
  params:
    - *ref_143
    - *ref_1
considerchannel:
  args:
    - null
  desc: Sets the channel where considered suggestions are posted.
  params:
    - *ref_1
considerchannel_=:
  args:
    - null
  desc: Execute the ConsiderChannel command
  params:
    - *ref_1
considerchannel_=_1:
  args:
    - null
  desc: Sets the channel where considered suggestions are posted.
  params:
    - *ref_1
considerchannel_=_2:
  args:
    - null
  desc: Execute the ConsiderChannel command
  params:
    - *ref_1
considermessage:
  args:
    - text
  desc: Sets or updates the consider message for suggestions.
  params:
    - *ref_2
considermessage_string:
  args:
    - text
  desc: Sets or updates the consider message for suggestions.
  params:
    - *ref_2
considermessage_string_1:
  args:
    - text
  desc: Sets or updates the consider message for suggestions.
  params:
    - *ref_2
considermessage_string_2:
  args:
    - text
  desc: Sets or updates the consider message for suggestions.
  params:
    - *ref_2
convert:
  args:
    - text
  desc: Converts media files to different formats. Usage with attached file.
  params:
    - &ref_144
      desc: The format to convert to (e.g., gif, mp4, mp3, jpg, png)
      name: targetFormat
      optional: false
      type: string
convert_string:
  args:
    - text
  desc: Converts media files to different formats. Usage with attached file.
  params:
    - *ref_144
convert_string_1:
  args:
    - text
  desc: Converts media files to different formats. Usage with attached file.
  params:
    - *ref_144
convert_string_2:
  args:
    - text
  desc: Converts media files to different formats. Usage with attached file.
  params:
    - *ref_144
convertlist:
  args:
    - ''
  desc: Lists all available units that can be converted.
  params: [ ]
convertlist_noparams:
  args:
    - ''
  desc: Lists all available units that can be converted.
  params: [ ]
convertlist_noparams_1:
  args:
    - ''
  desc: Contains commands for converting units from one system to another.
  params: [ ]
convertlist_noparams_2:
  args:
    - ''
  desc: Contains commands for converting units from one system to another.
  params: [ ]
convertunits:
  args:
    - text text number
  desc: Converts a specified value from one unit to another.
  params:
    - &ref_145
      desc: The original unit of the value.
      name: origin
      optional: false
      type: string
    - &ref_146
      desc: The target unit to convert to.
      name: target
      optional: false
      type: string
    - &ref_147
      desc: The value to be converted.
      name: value
      optional: false
      type: decimal
convertunits_string_string_decimal:
  args:
    - text text number
  desc: Converts a specified value from one unit to another.
  params:
    - *ref_145
    - *ref_146
    - *ref_147
convertunits_string_string_decimal_1:
  args:
    - text text number
  desc: Converts a specified value from one unit to another.
  params:
    - *ref_145
    - *ref_146
    - *ref_147
convertunits_string_string_decimal_2:
  args:
    - text text number
  desc: Converts a specified value from one unit to another.
  params:
    - *ref_145
    - *ref_146
    - *ref_147
countingban:
  args:
    - user channel duration reason
  desc: Bans a user from counting in a specific channel.
  params:
    - desc: The user to ban from counting.
      name: user
      optional: false
      type: guild user
    - desc: The counting channel. Defaults to current channel.
      name: channel
      optional: true
      type: text channel
    - desc: Duration of the ban (e.g., 1h, 1d). Leave empty for permanent.
      name: duration
      optional: true
      type: stoopid time
    - desc: The reason for the ban.
      name: reason
      optional: true
      type: string
countingconfig:
  args:
    - channel
  desc: Shows configuration settings for a counting channel.
  params:
    - desc: The channel to show config for. Defaults to current channel.
      name: channel
      optional: true
      type: text channel
countingcooldown:
  args:
    - channel seconds
  desc: Sets the cooldown between user counts.
  params:
    - desc: The counting channel. Defaults to current channel.
      name: channel
      optional: true
      type: text channel
    - desc: Cooldown in seconds (0-300).
      name: seconds
      optional: true
      type: int
countingdisable:
  args:
    - channel purgeData reason
  desc: Disables counting in a channel and optionally purges all data.
  params:
    - desc: The channel to disable counting in. Defaults to current channel.
      name: channel
      optional: true
      type: text channel
    - desc: Whether to delete all counting data for this channel. Defaults to false.
      name: purgeData
      optional: true
      type: bool
    - desc: The reason for disabling counting.
      name: reason
      optional: true
      type: string
countingfailurechannel:
  args:
    - countingChannel failureChannel
  desc: Sets the channel where counting failures are logged.
  params:
    - desc: The counting channel.
      name: countingChannel
      optional: true
      type: text channel
    - desc: The channel for failure logs. Use null to disable.
      name: failureChannel
      optional: true
      type: text channel
countingfailuremessage:
  args:
    - channel embed
  desc: Sets a custom message for failed counts.
  params:
    - desc: The counting channel. Defaults to current channel.
      name: channel
      optional: true
      type: text channel
    - desc: The message template. Use "-" to reset to default.
      name: embed
      optional: true
      type: string
countingfailurethreshold:
  args:
    - channel threshold
  desc: Sets the failure threshold before consequences.
  params:
    - desc: The counting channel. Defaults to current channel.
      name: channel
      optional: true
      type: text channel
    - desc: Number of failures before action (1-10).
      name: threshold
      optional: true
      type: int
countingleaderboard:
  args:
    - type channel
  desc: Shows the leaderboard for a counting channel.
  params:
    - desc: The type of leaderboard (contributions, streak, accuracy, totalnumbers).
      name: type
      optional: true
      type: string
    - desc: The channel to show leaderboard for. Defaults to current channel.
      name: channel
      optional: true
      type: text channel
countinglist:
  args:
    - ''
  desc: Lists all counting channels in the server.
  params: [ ]
countingmilestonechannel:
  args:
    - countingChannel milestoneChannel
  desc: Sets the channel where milestone achievements are announced.
  params:
    - desc: The counting channel.
      name: countingChannel
      optional: true
      type: text channel
    - desc: The channel for milestone announcements. Use null to disable.
      name: milestoneChannel
      optional: true
      type: text channel
countingmilestonemessage:
  args:
    - channel embed
  desc: Sets a custom message for milestone achievements.
  params:
    - desc: The counting channel. Defaults to current channel.
      name: channel
      optional: true
      type: text channel
    - desc: The message template. Use "-" to reset to default.
      name: embed
      optional: true
      type: string
countingmilestones:
  args:
    - channel milestones
  desc: Sets custom milestone numbers.
  params:
    - desc: The counting channel. Defaults to current channel.
      name: channel
      optional: true
      type: text channel
    - desc: Comma-separated milestone numbers (e.g., 50,100,250,500,1000).
      name: milestones
      optional: true
      type: string
countingreset:
  args:
    - channel newNumber reason
  desc: Resets the counting in a channel to a specific number.
  params:
    - desc: The channel to reset. Defaults to current channel.
      name: channel
      optional: true
      type: text channel
    - desc: The number to reset to. Default is 0.
      name: newNumber
      optional: true
      type: long
    - desc: The reason for the reset.
      name: reason
      optional: true
      type: string
countingrestore:
  args:
    - saveId channel
  desc: Restores counting from a previous save point.
  params:
    - desc: The ID of the save point to restore from.
      name: saveId
      optional: false
      type: int
    - desc: The channel to restore. Defaults to current channel.
      name: channel
      optional: true
      type: text channel
countingsave:
  args:
    - channel reason
  desc: Creates a save point for the current counting progress.
  params:
    - desc: The channel to save. Defaults to current channel.
      name: channel
      optional: true
      type: text channel
    - desc: The reason for creating the save point.
      name: reason
      optional: true
      type: string
countingsetup:
  args:
    - channel startNumber increment
  desc: Sets up counting in the current channel or specified channel.
  params:
    - desc: The channel to set up counting in. Defaults to current channel.
      name: channel
      optional: true
      type: text channel
    - desc: The number to start counting from. Default is 1.
      name: startNumber
      optional: true
      type: long
    - desc: The increment for each count. Default is 1.
      name: increment
      optional: true
      type: int
countingstats:
  args:
    - user channel
  desc: Shows counting statistics for a user in a channel.
  params:
    - desc: The user to show stats for. Defaults to you.
      name: user
      optional: true
      type: user
    - desc: The channel to check stats in. Defaults to current channel.
      name: channel
      optional: true
      type: text channel
countingstatus:
  args:
    - channel
  desc: Shows the current status of counting in a channel.
  params:
    - desc: The channel to check. Defaults to current channel.
      name: channel
      optional: true
      type: text channel
countingsuccessmessage:
  args:
    - channel embed
  desc: Sets a custom message for successful counts.
  params:
    - desc: The counting channel. Defaults to current channel.
      name: channel
      optional: true
      type: text channel
    - desc: The message template. Use "-" to reset to default.
      name: embed
      optional: true
      type: string
countingtimeout:
  args:
    - user duration channel reason
  desc: Temporarily timeouts a user from counting.
  params:
    - desc: The user to timeout from counting.
      name: user
      optional: false
      type: guild user
    - desc: Duration of the timeout (e.g., 30m, 2h).
      name: duration
      optional: false
      type: stoopid time
    - desc: The counting channel. Defaults to current channel.
      name: channel
      optional: true
      type: text channel
    - desc: The reason for the timeout.
      name: reason
      optional: true
      type: string
countingunban:
  args:
    - user channel reason
  desc: Unbans a user from counting in a specific channel.
  params:
    - desc: The user to unban from counting.
      name: user
      optional: false
      type: guild user
    - desc: The counting channel. Defaults to current channel.
      name: channel
      optional: true
      type: text channel
    - desc: The reason for the unban.
      name: reason
      optional: true
      type: string
countmodbanned:
  args:
    - channel roles...
  desc: Sets roles banned from counting.
  params:
    - desc: The counting channel. Defaults to current channel.
      name: channel
      optional: true
      type: text channel
    - desc: Roles banned from counting.
      name: roles
      optional: true
      type: role
countmodclear:
  args:
    - user channel
  desc: Clears wrong counts for a specific user in a counting channel.
  params:
    - desc: The user to clear wrong counts for.
      name: user
      optional: false
      type: user
    - desc: The counting channel. Defaults to current channel.
      name: channel
      optional: true
      type: text channel
countmodclearall:
  args:
    - channel
  desc: Clears wrong counts for all users in a counting channel.
  params:
    - desc: The counting channel. Defaults to current channel.
      name: channel
      optional: true
      type: text channel
countmoddefaults:
  args:
    - enabled threshold windowHours punishment durationMinutes punishmentRole
  desc: Sets guild-wide default moderation settings for counting channels.
  params:
    - desc: Whether moderation is enabled by default.
      name: enabled
      optional: false
      type: bool
    - desc: Default wrong count threshold before punishment.
      name: threshold
      optional: true
      type: int
    - desc: Default time window in hours for tracking wrong counts.
      name: windowHours
      optional: true
      type: int
    - desc: Default punishment action to apply.
      name: punishment
      optional: true
      type: punishment action
    - desc: Default duration for timed punishments in minutes.
      name: durationMinutes
      optional: true
      type: int
    - desc: Default role for AddRole punishment type.
      name: punishmentRole
      optional: true
      type: role
countmodedits:
  args:
    - punish delete channel
  desc: Configures message edit protection for a counting channel.
  params:
    - desc: Whether to punish message edits as violations.
      name: punish
      optional: false
      type: bool
    - desc: Whether to delete edited messages.
      name: delete
      optional: true
      type: bool
    - desc: The counting channel. Defaults to current channel.
      name: channel
      optional: true
      type: text channel
countmodenable:
  args:
    - enabled channel
  desc: Enables or disables moderation for a specific counting channel.
  params:
    - desc: Whether to enable or disable moderation.
      name: enabled
      optional: false
      type: bool
    - desc: The counting channel. Defaults to current channel.
      name: channel
      optional: true
      type: text channel
countmodignore:
  args:
    - deleteMessages channel roles...
  desc: Sets roles to ignore from counting.
  params:
    - desc: Whether to delete messages from ignored roles.
      name: deleteMessages
      optional: false
      type: bool
    - desc: The counting channel. Defaults to current channel.
      name: channel
      optional: true
      type: text channel
    - desc: Roles to ignore from counting.
      name: roles
      optional: true
      type: role
countmodnonnumbers:
  args:
    - punish delete channel
  desc: Configures non-number message handling for a counting channel.
  params:
    - desc: Whether to punish non-number messages as violations.
      name: punish
      optional: false
      type: bool
    - desc: Whether to delete non-number messages.
      name: delete
      optional: true
      type: bool
    - desc: The counting channel. Defaults to current channel.
      name: channel
      optional: true
      type: text channel
countmodpunish:
  args:
    - count punishment durationMinutes role channel
  desc: Sets a tiered punishment for a specific wrong count number.
  params:
    - desc: The wrong count number that triggers this punishment.
      name: count
      optional: false
      type: int
    - desc: The punishment action to apply.
      name: punishment
      optional: false
      type: punishment action
    - desc: Duration for timed punishments in minutes.
      name: durationMinutes
      optional: true
      type: int
    - desc: Role for AddRole punishment type.
      name: role
      optional: true
      type: role
    - desc: The counting channel (NULL for guild defaults).
      name: channel
      optional: true
      type: text channel
countmodpunishlist:
  args:
    - channel
  desc: Lists all tiered punishments for the guild or specific channel.
  params:
    - desc: The counting channel (NULL for guild defaults).
      name: channel
      optional: true
      type: text channel
countmodpunishment:
  args:
    - punishment durationMinutes role channel
  desc: Sets the punishment for wrong counts.
  params:
    - desc: The punishment action to apply.
      name: punishment
      optional: false
      type: punishment action
    - desc: Duration for timed punishments in minutes.
      name: durationMinutes
      optional: true
      type: int
    - desc: Role for AddRole punishment type.
      name: role
      optional: true
      type: role
    - desc: The counting channel. Defaults to current channel.
      name: channel
      optional: true
      type: text channel
countmodrequired:
  args:
    - channel roles...
  desc: Sets roles required for counting.
  params:
    - desc: The counting channel. Defaults to current channel.
      name: channel
      optional: true
      type: text channel
    - desc: Roles required to count.
      name: roles
      optional: true
      type: role
countmodreset:
  args:
    - channel
  desc: Resets a channel to use guild defaults.
  params:
    - desc: The counting channel. Defaults to current channel.
      name: channel
      optional: true
      type: text channel
countmodshow:
  args:
    - channel
  desc: Shows the current moderation configuration for a counting channel.
  params:
    - desc: The counting channel. Defaults to current channel.
      name: channel
      optional: true
      type: text channel
countmodthreshold:
  args:
    - threshold channel
  desc: Sets the wrong count threshold for a counting channel.
  params:
    - desc: Number of wrong counts before punishment (1-100).
      name: threshold
      optional: false
      type: int
    - desc: The counting channel. Defaults to current channel.
      name: channel
      optional: true
      type: text channel
countmodunpunish:
  args:
    - count channel
  desc: Removes a tiered punishment for a specific wrong count number.
  params:
    - desc: The wrong count number to remove punishment for.
      name: count
      optional: false
      type: int
    - desc: The counting channel (NULL for guild defaults).
      name: channel
      optional: true
      type: text channel
countmodwindow:
  args:
    - hours channel
  desc: Sets the time window for tracking wrong counts.
  params:
    - desc: Time window in hours (1-168).
      name: hours
      optional: false
      type: int
    - desc: The counting channel. Defaults to current channel.
      name: channel
      optional: true
      type: text channel
craps:
  args:
    - number text
  desc: Play a game of Craps with customizable bet types.
  params:
    - desc: The amount to bet.
      name: betAmount
      optional: false
      type: long
    - desc: The type of bet (pass, dontpass, field, any).
      name: betType
      optional: true
      type: string
crash:
  args:
    - number number
  desc: Play Crash - bet on when the multiplier will crash.
  params:
    - desc: The amount to bet.
      name: betAmount
      optional: false
      type: long
    - desc: The multiplier to cash out at (1.1x - 10.0x).
      name: targetMultiplier
      optional: true
      type: double
createcatandtxtchannels:
  args:
    - text text
  desc: Creates a category and the specified channels in a server.
  params:
    - &ref_148
      desc: The name of the category to create
      name: catName
      optional: false
      type: string
    - &ref_149
      desc: The names of the channels to create
      name: channels
      optional: false
      type: string[]
createcatandtxtchannels_string_string[]:
  args:
    - text text
  desc: Creates a category and the specified channels in a server.
  params:
    - *ref_148
    - *ref_149
createcatandtxtchannels_string_string[]_1:
  args:
    - text text
  desc: Creates a category and the specified channels in a server.
  params:
    - *ref_148
    - *ref_149
createcatandtxtchannels_string_string[]_2:
  args:
    - text text
  desc: Creates a category and the specified channels in a server.
  params:
    - *ref_148
    - *ref_149
createcatandvcchannels:
  args:
    - text text
  desc: Creates a category with multiple voice channels in it.
  params:
    - &ref_150
      desc: The name of the category to be created.
      name: catName
      optional: false
      type: string
    - &ref_151
      desc: The names of the voice channels to be created within the category.
      name: channels
      optional: false
      type: string[]
createcatandvcchannels_string_string[]:
  args:
    - text text
  desc: Creates a category with multiple voice channels in it.
  params:
    - *ref_150
    - *ref_151
createcatandvcchannels_string_string[]_1:
  args:
    - text text
  desc: Creates a category with multiple voice channels in it.
  params:
    - *ref_150
    - *ref_151
createcatandvcchannels_string_string[]_2:
  args:
    - text text
  desc: Creates a category with multiple voice channels in it.
  params:
    - *ref_150
    - *ref_151
createcattxtchans:
  args:
    - chan text
  desc: Adds multiple text channels to an existing category.
  params:
    - &ref_152
      desc: The target category channel.
      name: chan
      optional: false
      type: ICategoryChannel
    - &ref_153
      desc: The names of the text channels to be added.
      name: channels
      optional: false
      type: string[]
createcattxtchans_ICategoryChannel_string[]:
  args:
    - chan text
  desc: Adds multiple text channels to an existing category.
  params:
    - *ref_152
    - *ref_153
createcattxtchans_ICategoryChannel_string[]_1:
  args:
    - chan text
  desc: Adds multiple text channels to an existing category.
  params:
    - *ref_152
    - *ref_153
createcattxtchans_ICategoryChannel_string[]_2:
  args:
    - chan text
  desc: Adds multiple text channels to an existing category.
  params:
    - *ref_152
    - *ref_153
createcatvcchans:
  args:
    - chan text
  desc: Adds multiple voice channels to an existing category.
  params:
    - *ref_152
    - &ref_154
      desc: The names of the voice channels to be added.
      name: channels
      optional: false
      type: string[]
createcatvcchans_ICategoryChannel_string[]:
  args:
    - chan text
  desc: Adds multiple voice channels to an existing category.
  params:
    - *ref_152
    - *ref_154
createcatvcchans_ICategoryChannel_string[]_1:
  args:
    - chan text
  desc: Adds multiple voice channels to an existing category.
  params:
    - *ref_152
    - *ref_154
createcatvcchans_ICategoryChannel_string[]_2:
  args:
    - chan text
  desc: Adds multiple voice channels to an existing category.
  params:
    - *ref_152
    - *ref_154
createrole:
  args:
    - null
  desc: Creates a new role with the specified name.
  params:
    - *ref_1
createrole_=:
  args:
    - null
  desc: Creates a new role with the specified name.
  params:
    - *ref_1
createrole_=_1:
  args:
    - null
  desc: Creates a new role with the specified name.
  params:
    - *ref_1
createrole_=_2:
  args:
    - null
  desc: Creates a new role with the specified name.
  params:
    - *ref_1
createroles:
  args:
    - text
  desc: >-
    Creates multiple roles within the guild based on a provided list of role
    names.
  params:
    - &ref_155
      desc: A space-separated list of role names to create.
      name: roles
      optional: false
      type: string
createroles_string:
  args:
    - text
  desc: >-
    Creates multiple roles within the guild based on a provided list of role
    names.
  params:
    - *ref_155
createroles_string_1:
  args:
    - text
  desc: >-
    Provides commands for managing roles within a guild, including creation,
    deletion, synchronization, and user assignment.
  params:
    - *ref_155
createroles_string_2:
  args:
    - text
  desc: >-
    Creates multiple roles within the guild based on a provided list of role
    names.
  params:
    - *ref_155
createstarboard:
  args:
    - channel emote 1
    - channel emote
  desc: >-
    Enum representing the mode for whitelisting or blacklisting channels for
    starboard.
  params:
    - &ref_156
      desc: The channel where starred messages will be posted.
      name: channel
      optional: false
      type: ITextChannel
    - &ref_157
      desc: The emote to use for starring messages.
      name: emote
      optional: false
      type: IEmote
    - *ref_95
createstarboard_ITextChannel_IEmote_=:
  args:
    - channel emote 1
    - channel emote
  desc: Alias for Blacklist mode.
  params:
    - *ref_156
    - *ref_157
    - *ref_95
createstarboard_ITextChannel_IEmote_=_1:
  args:
    - channel emote 1
    - channel emote
  desc: Module for managing multiple starboard configurations in a guild.
  params:
    - *ref_156
    - *ref_157
    - *ref_95
createstarboard_ITextChannel_IEmote_=_2:
  args:
    - channel emote 1
    - channel emote
  desc: Alias for Blacklist mode.
  params:
    - *ref_156
    - *ref_157
    - *ref_95
createwebhook:
  args:
    - channel text null
    - channel text
  desc: Creates a webhook in a text channel with an optional custom avatar.
  params:
    - &ref_158
      desc: ''
      name: channel
      optional: false
      type: ITextChannel
    - &ref_159
      desc: ''
      name: name
      optional: false
      type: string
    - *ref_1
createwebhook_ITextChannel_string_=:
  args:
    - channel text null
    - channel text
  desc: Creates a webhook in a text channel with an optional custom avatar.
  params:
    - *ref_158
    - *ref_159
    - *ref_1
createwebhook_ITextChannel_string_=_1:
  args:
    - channel text null
    - channel text
  desc: Creates a webhook in a text channel with an optional custom avatar.
  params:
    - *ref_158
    - *ref_159
    - *ref_1
createwebhook_ITextChannel_string_=_2:
  args:
    - channel text null
    - channel text
  desc: Creates a webhook in a text channel with an optional custom avatar.
  params:
    - *ref_158
    - *ref_159
    - *ref_1
creatvoichanl:
  args:
    - text
  desc: Creates a new voice channel with the specified name.
  params:
    - &ref_160
      desc: The name of the voice channel to create
      name: channelName
      optional: false
      type: string
creatvoichanl_string:
  args:
    - text
  desc: Creates a new voice channel with the specified name.
  params:
    - *ref_160
creatvoichanl_string_1:
  args:
    - text
  desc: Creates a new voice channel with the specified name.
  params:
    - *ref_160
creatvoichanl_string_2:
  args:
    - text
  desc: Creates a new voice channel with the specified name.
  params:
    - *ref_160
creatxtchanl:
  args:
    - text
  desc: Creates a new text channel with the specified name.
  params:
    - &ref_161
      desc: The name of the text channel to create
      name: channelName
      optional: false
      type: string
creatxtchanl_string:
  args:
    - text
  desc: Creates a new text channel with the specified name.
  params:
    - *ref_161
creatxtchanl_string_1:
  args:
    - text
  desc: Creates a new text channel with the specified name.
  params:
    - *ref_161
creatxtchanl_string_2:
  args:
    - text
  desc: Creates a new text channel with the specified name.
  params:
    - *ref_161
cry:
  args:
    - null
  desc: Cries.
  params:
    - *ref_1
cry_=:
  args:
    - null
  desc: Cries.
  params:
    - *ref_1
cry_=_1:
  args:
    - null
  desc: Cries.
  params:
    - *ref_1
cry_=_2:
  args:
    - null
  desc: Cries.
  params:
    - *ref_1
ctad:
  args:
    - number
  desc: Sets a chat trigger to auto-delete after triggering.
  params:
    - &ref_162
      desc: The ID of the chat trigger to edit.
      name: id
      optional: false
      type: int
ctad_int:
  args:
    - number
  desc: Sets a chat trigger to auto-delete after triggering.
  params:
    - *ref_162
ctad_int_1:
  args:
    - number
  desc: Sets a chat trigger to auto-delete after triggering.
  params:
    - *ref_162
ctad_int_2:
  args:
    - number
  desc: Sets a chat trigger to auto-delete after triggering.
  params:
    - *ref_162
ctat:
  args:
    - number
  desc: Sets a chat trigger to allow targeting.
  params:
    - *ref_130
ctat_int:
  args:
    - number
  desc: Sets a chat trigger to allow targeting.
  params:
    - *ref_130
ctat_int_1:
  args:
    - number
  desc: Sets a chat trigger to allow targeting.
  params:
    - *ref_130
ctat_int_2:
  args:
    - number
  desc: Sets a chat trigger to allow targeting.
  params:
    - *ref_130
ctca:
  args:
    - number
  desc: Sets a chat trigger to contain anywhere in the message.
  params:
    - *ref_162
ctca_int:
  args:
    - number
  desc: Sets a chat trigger to contain anywhere in the message.
  params:
    - *ref_162
ctca_int_1:
  args:
    - number
  desc: Sets a chat trigger to contain anywhere in the message.
  params:
    - *ref_162
ctca_int_2:
  args:
    - number
  desc: Sets a chat trigger to contain anywhere in the message.
  params:
    - *ref_162
ctcpsetchannel:
  args:
    - number channel
  desc: Sets the crossposting channel for a chat trigger.
  params:
    - *ref_130
    - &ref_163
      desc: The channel to set for crossposting.
      name: channel
      optional: false
      type: ITextChannel
ctcpsetchannel_int_ITextChannel:
  args:
    - number channel
  desc: Sets the crossposting channel for a chat trigger.
  params:
    - *ref_130
    - *ref_163
ctcpsetchannel_int_ITextChannel_1:
  args:
    - number channel
  desc: Sets the crossposting channel for a chat trigger.
  params:
    - *ref_130
    - *ref_163
ctcpsetchannel_int_ITextChannel_2:
  args:
    - number channel
  desc: Sets the crossposting channel for a chat trigger.
  params:
    - *ref_130
    - *ref_163
ctcpsetwebhook:
  args:
    - number text
  desc: Sets the webhook URL for crossposting a chat trigger.
  params:
    - *ref_130
    - &ref_164
      desc: The webhook URL to set.
      name: webhookUrl
      optional: false
      type: string
ctcpsetwebhook_int_string:
  args:
    - number text
  desc: Sets the webhook URL for crossposting a chat trigger.
  params:
    - *ref_130
    - *ref_164
ctcpsetwebhook_int_string_1:
  args:
    - number text
  desc: Sets the webhook URL for crossposting a chat trigger.
  params:
    - *ref_130
    - *ref_164
ctcpsetwebhook_int_string_2:
  args:
    - number text
  desc: Sets the webhook URL for crossposting a chat trigger.
  params:
    - *ref_130
    - *ref_164
ctdm:
  args:
    - number
  desc: Sets a chat trigger to send a direct message in response.
  params:
    - *ref_162
ctdm_int:
  args:
    - number
  desc: Sets a chat trigger to send a direct message in response.
  params:
    - *ref_162
ctdm_int_1:
  args:
    - number
  desc: Sets a chat trigger to send a direct message in response.
  params:
    - *ref_162
ctdm_int_2:
  args:
    - number
  desc: Sets a chat trigger to send a direct message in response.
  params:
    - *ref_162
ctinterephemeral:
  args:
    - number true|false
  desc: >-
    Sets whether the interaction response should be ephemeral for a chat
    trigger. To not show others my suffering with docs!
  params:
    - *ref_130
    - &ref_165
      desc: True if the response should be ephemeral, false otherwise.
      name: ephemeral
      optional: false
      type: bool
ctinterephemeral_int_bool:
  args:
    - number true|false
  desc: >-
    Sets whether the interaction response should be ephemeral for a chat
    trigger. To not show others my suffering with docs!
  params:
    - *ref_130
    - *ref_165
ctinterephemeral_int_bool_1:
  args:
    - number true|false
  desc: >-
    Sets whether the interaction response should be ephemeral for a chat
    trigger. To not show others my suffering with docs!
  params:
    - *ref_130
    - *ref_165
ctinterephemeral_int_bool_2:
  args:
    - number true|false
  desc: >-
    Sets whether the interaction response should be ephemeral for a chat
    trigger. To not show others my suffering with docs!
  params:
    - *ref_130
    - *ref_165
ctintererrors:
  args:
    - ''
  desc: Displays the interaction errors for chat triggers.
  params: [ ]
ctintererrors_noparams:
  args:
    - ''
  desc: Displays the interaction errors for chat triggers.
  params: [ ]
ctintererrors_noparams_1:
  args:
    - ''
  desc: Displays the interaction errors for chat triggers.
  params: [ ]
ctintererrors_noparams_2:
  args:
    - ''
  desc: Displays the interaction errors for chat triggers.
  params: [ ]
ctnr:
  args:
    - number
  desc: Sets a chat trigger to not respond.
  params:
    - *ref_130
ctnr_int:
  args:
    - number
  desc: Sets a chat trigger to not respond.
  params:
    - *ref_130
ctnr_int_1:
  args:
    - number
  desc: Sets a chat trigger to not respond.
  params:
    - *ref_130
ctnr_int_2:
  args:
    - number
  desc: Sets a chat trigger to not respond.
  params:
    - *ref_130
ctprefix:
  args:
    - number text
  desc: Sets the prefix for a chat trigger.
  params:
    - *ref_130
    - &ref_166
      desc: The new prefix to set.
      name: prefix
      optional: false
      type: string
ctprefix_int_string:
  args:
    - number text
  desc: Sets the prefix for a chat trigger.
  params:
    - *ref_130
    - *ref_166
ctprefix_int_string_1:
  args:
    - number text
  desc: Sets the prefix for a chat trigger.
  params:
    - *ref_130
    - *ref_166
ctprefix_int_string_2:
  args:
    - number text
  desc: Sets the prefix for a chat trigger.
  params:
    - *ref_130
    - *ref_166
ctprefixtype:
  args:
    - number type
  desc: Sets the prefix type for a chat trigger.
  params:
    - *ref_130
    - &ref_167
      desc: 'The type of prefix to set. '
      name: type
      optional: false
      type: RequirePrefixType
ctprefixtype_int_RequirePrefixType:
  args:
    - number type
  desc: Sets the prefix type for a chat trigger.
  params:
    - *ref_130
    - *ref_167
ctprefixtype_int_RequirePrefixType_1:
  args:
    - number type
  desc: Sets the prefix type for a chat trigger.
  params:
    - *ref_130
    - *ref_167
ctprefixtype_int_RequirePrefixType_2:
  args:
    - number type
  desc: Sets the prefix type for a chat trigger.
  params:
    - *ref_130
    - *ref_167
ctreact:
  args:
    - number text
  desc: Sets reactions for a chat trigger.
  params:
    - *ref_130
    - &ref_168
      desc: The emoji strings to set as reactions.
      name: emojiStrs
      optional: false
      type: string[]
ctreact_int_string[]:
  args:
    - number text
  desc: Sets reactions for a chat trigger.
  params:
    - *ref_130
    - *ref_168
ctreact_int_string[]_1:
  args:
    - number text
  desc: Sets reactions for a chat trigger.
  params:
    - *ref_130
    - *ref_168
ctreact_int_string[]_2:
  args:
    - number text
  desc: Sets reactions for a chat trigger.
  params:
    - *ref_130
    - *ref_168
ctrgranttoggle:
  args:
    - number @role
  desc: Toggles role grant for a chat trigger.
  params:
    - *ref_130
    - &ref_169
      desc: The role to toggle.
      name: role
      optional: false
      type: IRole
ctrgranttoggle_int_IRole:
  args:
    - number @role
  desc: Toggles role grant for a chat trigger.
  params:
    - *ref_130
    - *ref_169
ctrgranttoggle_int_IRole_1:
  args:
    - number @role
  desc: Toggles role grant for a chat trigger.
  params:
    - *ref_130
    - *ref_169
ctrgranttoggle_int_IRole_2:
  args:
    - number @role
  desc: Toggles role grant for a chat trigger.
  params:
    - *ref_130
    - *ref_169
ctrremovetoggle:
  args:
    - number @role
  desc: Toggles role removal for a chat trigger.
  params:
    - *ref_130
    - *ref_169
ctrremovetoggle_int_IRole:
  args:
    - number @role
  desc: Toggles role removal for a chat trigger.
  params:
    - *ref_130
    - *ref_169
ctrremovetoggle_int_IRole_1:
  args:
    - number @role
  desc: Toggles role removal for a chat trigger.
  params:
    - *ref_130
    - *ref_169
ctrremovetoggle_int_IRole_2:
  args:
    - number @role
  desc: Toggles role removal for a chat trigger.
  params:
    - *ref_130
    - *ref_169
ctsclear:
  args:
    - ''
  desc: Toggles a chat trigger option.
  params: [ ]
ctsclear_noparams:
  args:
    - ''
  desc: Clears all chat triggers.
  params: [ ]
ctsclear_noparams_1:
  args:
    - ''
  desc: Toggles a chat trigger option.
  params: [ ]
ctsclear_noparams_2:
  args:
    - ''
  desc: Clears all chat triggers.
  params: [ ]
ctsexport:
  args:
    - ''
  desc: Exports chat trigger settings for the current guild.
  params: [ ]
ctsexport_noparams:
  args:
    - ''
  desc: Exports chat trigger settings for the current guild.
  params: [ ]
ctsexport_noparams_1:
  args:
    - ''
  desc: Module for chat triggers.
  params: [ ]
ctsexport_noparams_2:
  args:
    - ''
  desc: Module for chat triggers.
  params: [ ]
ctsimport:
  args:
    - null
  desc: Imports chat trigger settings for the current guild.
  params:
    - *ref_1
ctsimport_=:
  args:
    - null
  desc: Imports chat trigger settings for the current guild.
  params:
    - *ref_1
ctsimport_=_1:
  args:
    - null
  desc: Imports chat trigger settings for the current guild.
  params:
    - *ref_1
ctsimport_=_2:
  args:
    - null
  desc: Imports chat trigger settings for the current guild.
  params:
    - *ref_1
ctsreload:
  args:
    - ''
  desc: Reloads chat triggers.
  params: [ ]
ctsreload_noparams:
  args:
    - ''
  desc: Reloads chat triggers.
  params: [ ]
ctsreload_noparams_1:
  args:
    - ''
  desc: Reloads chat triggers.
  params: [ ]
ctsreload_noparams_2:
  args:
    - ''
  desc: Reloads chat triggers.
  params: [ ]
cuddle:
  args:
    - text
  desc: Cuddles with someone.
  params:
    - &ref_170
      desc: The person to poke.
      name: toShow
      optional: false
      type: string
cuddle_string:
  args:
    - text
  desc: Cuddles with someone.
  params:
    - &ref_171
      desc: The person to feed.
      name: toShow
      optional: false
      type: string
cuddle_string_1:
  args:
    - text
  desc: Cuddles with someone.
  params:
    - *ref_170
cuddle_string_2:
  args:
    - text
  desc: Cuddles with someone.
  params:
    - *ref_171
currencyreward:
  args:
    - number number
  desc: Sets a currency reward for a specific level.
  params:
    - &ref_173
      desc: The level that triggers the reward.
      name: level
      optional: false
      type: int
    - &ref_172
      desc: The amount of currency to award.
      name: amount
      optional: false
      type: long
currencyreward_int_long:
  args:
    - number number
  desc: Sets a currency reward for a specific level.
  params:
    - &ref_174
      desc: The level to remove the reward from.
      name: level
      optional: false
      type: int
    - *ref_172
currencyreward_int_long_1:
  args:
    - number number
  desc: Sets a currency reward for a specific level.
  params:
    - *ref_173
    - *ref_172
currencyreward_int_long_2:
  args:
    - number number
  desc: Sets a currency reward for a specific level.
  params:
    - *ref_174
    - *ref_172
currencyrewards:
  args:
    - ''
  desc: Lists all currency rewards.
  params: [ ]
currencyrewards_noparams:
  args:
    - ''
  desc: Lists all currency rewards.
  params: [ ]
currencyrewards_noparams_1:
  args:
    - ''
  desc: Lists all currency rewards.
  params: [ ]
currencyrewards_noparams_2:
  args:
    - ''
  desc: Lists all currency rewards.
  params: [ ]
customafkmessage:
  args:
    - text
  desc: >-
    Sets a custom AFK embed that will be displayed when a user is AFK. Use "-"
    to reset to the default embed. Check https://eb.mewdeko.tech for the embed
    builder and http://mewdeko.tech/placeholders for placeholders.
  params:
    - &ref_175
      desc: The custom message to set. Use "-" to reset to the default message.
      name: embedCode
      optional: false
      type: string
customafkmessage_string:
  args:
    - text
  desc: >-
    Sets a custom AFK embed that will be displayed when a user is AFK. Use "-"
    to reset to the default embed. Check https://eb.mewdeko.tech for the embed
    builder and http://mewdeko.tech/placeholders for placeholders.
  params:
    - *ref_175
customafkmessage_string_1:
  args:
    - text
  desc: >-
    Sets a custom AFK embed that will be displayed when a user is AFK. Use "-"
    to reset to the default embed. Check https://eb.mewdeko.tech for the embed
    builder and http://mewdeko.tech/placeholders for placeholders.
  params:
    - *ref_175
customafkmessage_string_2:
  args:
    - text
  desc: >-
    Sets a custom AFK embed that will be displayed when a user is AFK. Use "-"
    to reset to the default embed. Check https://eb.mewdeko.tech for the embed
    builder and http://mewdeko.tech/placeholders for placeholders.
  params:
    - *ref_175
dailychallenge:
  args:
    - ''
  desc: Check your current daily challenge.
  params: [ ]
dailyreward:
  args:
    - ''
  desc: Allows the user to claim their daily reward.
  params: [ ]
dailyreward_noparams:
  args:
    - ''
  desc: Allows the user to claim their daily reward.
  params: [ ]
dailyreward_noparams_1:
  args:
    - ''
  desc: Allows the user to claim their daily reward.
  params: [ ]
dailyreward_noparams_2:
  args:
    - ''
  desc: Allows the user to claim their daily reward.
  params: [ ]
danbooru:
  args:
    - text
  desc: >-
    Command to fetch and display NSFW content from the Danbooru image board with
    optional tags in the current guild channel or direct messages.
  params:
    - &ref_176
      desc: Optional tags to filter the NSFW content from the Gelbooru image board.
      name: tags
      optional: false
      type: string[]
danbooru_string[]:
  args:
    - text
  desc: >-
    Command to fetch and display NSFW content from the Danbooru image board with
    optional tags in the current guild channel or direct messages.
  params:
    - *ref_176
danbooru_string[]_1:
  args:
    - text
  desc: >-
    Command to fetch and display NSFW content from the Danbooru image board with
    optional tags in the current guild channel or direct messages.
  params:
    - *ref_176
danbooru_string[]_2:
  args:
    - text
  desc: >-
    Command to fetch and display NSFW content from the Danbooru image board with
    optional tags in the current guild channel or direct messages.
  params:
    - *ref_176
dance:
  args:
    - null
  desc: Dances.
  params:
    - *ref_1
dance_=:
  args:
    - null
  desc: Dances.
  params:
    - *ref_1
dance_=_1:
  args:
    - null
  desc: Dances.
  params:
    - *ref_1
dance_=_2:
  args:
    - null
  desc: Dances.
  params:
    - *ref_1
deafen:
  args:
    - '@user'
  desc: Deafens specified users in the guild.
  params:
    - &ref_177
      desc: The users to undeafen
      name: users
      optional: false
      type: IGuildUser[]
deafen_IGuildUser[]:
  args:
    - '@user'
  desc: Deafens specified users in the guild.
  params:
    - *ref_177
deafen_IGuildUser[]_1:
  args:
    - '@user'
  desc: Deafens specified users in the guild.
  params:
    - *ref_177
deafen_IGuildUser[]_2:
  args:
    - '@user'
  desc: Deafens specified users in the guild.
  params:
    - *ref_177
debugembed:
  args:
    - text
  desc: Parses the type of permission search.
  params:
    - &ref_178
      desc: The text to parse as an embed.
      name: embedText
      optional: false
      type: string
debugembed_string:
  args:
    - text
  desc: Searches for roles that have any of the specified permissions.
  params:
    - *ref_178
debugembed_string_1:
  args:
    - text
  desc: >-
    Contains various utility commands like sniping deleted messages, getting a
    list of roles with specific permissions, etc.
  params:
    - *ref_178
debugembed_string_2:
  args:
    - text
  desc: Searches for roles that have any of the specified permissions.
  params:
    - *ref_178
define:
  args:
    - text
  desc: Retrieves and displays a definition from the Pearson dictionary.
  params:
    - &ref_179
      desc: The word to define.
      name: word
      optional: false
      type: string
define_string:
  args:
    - text
  desc: Execute the Define command
  params:
    - *ref_179
define_string_1:
  args:
    - text
  desc: Retrieves and displays a definition from the Pearson dictionary.
  params:
    - *ref_179
define_string_2:
  args:
    - text
  desc: Execute the Define command
  params:
    - *ref_179
defprefix:
  args:
    - null
  desc: Sets or displays the default command prefix.
  params:
    - *ref_1
defprefix_=:
  args:
    - null
  desc: Sets or displays the default command prefix.
  params:
    - *ref_1
defprefix_=_1:
  args:
    - null
  desc: Sets or displays the default command prefix.
  params:
    - *ref_1
defprefix_=_2:
  args:
    - null
  desc: Sets or displays the default command prefix.
  params:
    - *ref_1
dehoist:
  args:
    - '@user'
  desc: Dehoists a user by replacing special characters in their username.
  params:
    - &ref_180
      desc: The user to dehoist
      name: user
      optional: false
      type: IGuildUser
dehoist_IGuildUser:
  args:
    - '@user'
  desc: Dehoists a user by replacing special characters in their username.
  params:
    - *ref_180
dehoist_IGuildUser_1:
  args:
    - '@user'
  desc: Dehoists a user by replacing special characters in their username.
  params:
    - *ref_180
dehoist_IGuildUser_2:
  args:
    - '@user'
  desc: Dehoists a user by replacing special characters in their username.
  params:
    - *ref_180
dehoistall:
  args:
    - false
  desc: >-
    Dehoists all users in the guild by replacing special characters in their
    nicknames.
  params:
    - &ref_181
      desc: ''
      name: false
      optional: false
      type: '='
dehoistall_=:
  args:
    - false
  desc: >-
    Dehoists all users in the guild by replacing special characters in their
    nicknames.
  params:
    - *ref_181
dehoistall_=_1:
  args:
    - false
  desc: >-
    Dehoists all users in the guild by replacing special characters in their
    nicknames.
  params:
    - *ref_181
dehoistall_=_2:
  args:
    - false
  desc: >-
    Dehoists all users in the guild by replacing special characters in their
    nicknames.
  params:
    - *ref_181
delallquotes:
  args:
    - text
  desc: Deletes all quotes associated with the specified keyword.
  params:
    - &ref_182
      desc: The keyword whose associated quotes will be deleted.
      name: keyword
      optional: false
      type: string
delallquotes_string:
  args:
    - text
  desc: Deletes all quotes associated with the specified keyword.
  params:
    - *ref_182
delallquotes_string_1:
  args:
    - text
  desc: Deletes all quotes associated with the specified keyword.
  params:
    - *ref_182
delallquotes_string_2:
  args:
    - text
  desc: Deletes all quotes associated with the specified keyword.
  params:
    - *ref_182
delete:
  args:
    - messageid null
    - messageid
  desc: Deletes a message by its ID in the current text channel.
  params:
    - &ref_183
      desc: The ID of the message to delete
      name: messageId
      optional: false
      type: ulong
    - *ref_1
delete_ITextChannel_ulong_=:
  args:
    - channel messageid null
    - channel messageid
  desc: Deletes a message by its ID in the specified text channel.
  params:
    - &ref_184
      desc: The target channel
      name: channel
      optional: false
      type: ITextChannel
    - *ref_183
    - *ref_1
delete_ITextChannel_ulong_=_1:
  args:
    - channel messageid null
    - channel messageid
  desc: Execute the Delete command
  params:
    - *ref_184
    - &ref_185
      desc: The target message ID
      name: messageId
      optional: false
      type: ulong
    - *ref_1
delete_ITextChannel_ulong_=_2:
  args:
    - channel messageid null
    - channel messageid
  desc: Deletes a message by its ID in the specified text channel.
  params:
    - *ref_184
    - *ref_183
    - *ref_1
delete_ITextChannel_ulong_=_3:
  args:
    - channel messageid null
    - channel messageid
  desc: Execute the Delete command
  params:
    - *ref_184
    - *ref_185
    - *ref_1
delete_ulong_=:
  args:
    - messageid null
    - messageid
  desc: Execute the Delete command
  params:
    - *ref_183
    - *ref_1
delete_ulong_=_1:
  args:
    - messageid null
    - messageid
  desc: Deletes a message by its ID in the current text channel.
  params:
    - *ref_183
    - *ref_1
delete_ulong_=_2:
  args:
    - messageid null
    - messageid
  desc: Execute the Delete command
  params:
    - *ref_183
    - *ref_1
deletebutton:
  args:
    - number
  desc: Deletes a button from a panel.
  params:
    - &ref_186
      desc: The ID of the button to delete.
      name: buttonId
      optional: false
      type: int
deletebutton_int:
  args:
    - number
  desc: Deletes a button from a panel.
  params:
    - *ref_186
deletebutton_int_1:
  args:
    - number
  desc: Deletes a button from a panel.
  params:
    - *ref_186
deletebutton_int_2:
  args:
    - number
  desc: Deletes a button from a panel.
  params:
    - *ref_186
deletebutton_int_3:
  args:
    - number
  desc: Deletes a button from a panel.
  params:
    - *ref_186
deletebutton_int_4:
  args:
    - number
  desc: Deletes a button from a panel.
  params:
    - *ref_186
deletechattrigger:
  args:
    - number
  desc: Deletes a chat trigger by its ID.
  params:
    - *ref_130
deletechattrigger_int:
  args:
    - number
  desc: Deletes a chat trigger by its ID.
  params:
    - *ref_130
deletechattrigger_int_1:
  args:
    - number
  desc: Deletes a chat trigger by its ID.
  params:
    - *ref_130
deletechattrigger_int_2:
  args:
    - number
  desc: Deletes a chat trigger by its ID.
  params:
    - *ref_130
deleteguildstatsdata:
  args:
    - ''
  desc: Allows you to delete all stats data for the guild.
  params: [ ]
deleteguildstatsdata_noparams:
  args:
    - ''
  desc: Allows you to delete all stats data for the guild.
  params: [ ]
deleteguildstatsdata_noparams_1:
  args:
    - ''
  desc: Allows you to delete all stats data for the guild.
  params: [ ]
deleteguildstatsdata_noparams_2:
  args:
    - ''
  desc: Allows you to delete all stats data for the guild.
  params: [ ]
deleteplaylist:
  args:
    - text
  desc: Removes a saved playlist.
  params:
    - &ref_187
      desc: The name of the playlist to remove.
      name: name
      optional: false
      type: string
deleteplaylist_string:
  args:
    - text
  desc: Removes a saved playlist.
  params:
    - *ref_187
deleterole:
  args:
    - '@role'
  desc: Deletes the specified role.
  params:
    - &ref_188
      desc: The role to delete.
      name: role
      optional: false
      type: IRole
deleterole_IRole:
  args:
    - '@role'
  desc: Deletes the specified role.
  params:
    - *ref_188
deleterole_IRole_1:
  args:
    - '@role'
  desc: Deletes the specified role.
  params:
    - *ref_188
deleterole_IRole_2:
  args:
    - '@role'
  desc: Deletes the specified role.
  params:
    - *ref_188
deleteroles:
  args:
    - '@role'
  desc: Deletes a list of roles from the guild.
  params:
    - &ref_189
      desc: An array of roles to delete.
      name: roles
      optional: false
      type: IRole[]
deleteroles_IRole[]:
  args:
    - '@role'
  desc: Deletes a list of roles from the guild.
  params:
    - *ref_189
deleteroles_IRole[]_1:
  args:
    - '@role'
  desc: Deletes a list of roles from the guild.
  params:
    - *ref_189
deleteroles_IRole[]_2:
  args:
    - '@role'
  desc: Deletes a list of roles from the guild.
  params:
    - *ref_189
deleteselectmenu:
  args:
    - number
  desc: Delete a ticket select menu by ID.
  params:
    - desc: The ID of the select menu to delete.
      name: menuId
      optional: false
      type: int
deleteselectoption:
  args:
    - number
  desc: Delete a ticket select menu option by ID.
  params:
    - desc: The ID of the select menu option to delete.
      name: optionId
      optional: false
      type: int
deletestarboard:
  args:
    - number
  desc: Removes a starboard configuration from the guild.
  params:
    - &ref_190
      desc: The ID of the starboard to remove.
      name: starboardId
      optional: false
      type: int
deletestarboard_int:
  args:
    - number
  desc: Removes a starboard configuration from the guild.
  params:
    - *ref_190
deletestarboard_int_1:
  args:
    - number
  desc: Removes a starboard configuration from the guild.
  params:
    - *ref_190
deletestarboard_int_2:
  args:
    - number
  desc: Removes a starboard configuration from the guild.
  params:
    - *ref_190
deleteuserrolestate:
  args:
    - '@user'
  desc: Deletes the role state for a specific user.
  params:
    - &ref_191
      desc: The user whose role state should be deleted.
      name: user
      optional: false
      type: IGuildUser
deleteuserrolestate_IGuildUser:
  args:
    - '@user'
  desc: Deletes the role state for a specific user.
  params:
    - *ref_191
deleteuserrolestate_IGuildUser_1:
  args:
    - '@user'
  desc: Deletes the role state for a specific user.
  params:
    - *ref_191
deleteuserrolestate_IGuildUser_2:
  args:
    - '@user'
  desc: Deletes the role state for a specific user.
  params:
    - *ref_191
deleteuserrolestate_IUser:
  args:
    - '@user'
  desc: Deletes the role state for a specific user.
  params:
    - *ref_27
deleteuserrolestate_IUser_1:
  args:
    - '@user'
  desc: Deletes the role state for a specific user.
  params:
    - *ref_27
deleteuserrolestate_IUser_2:
  args:
    - '@user'
  desc: Deletes the role state for a specific user.
  params:
    - *ref_27
deleteuserrolestate_IUser_3:
  args:
    - '@user'
  desc: Deletes the role state for a specific user.
  params:
    - *ref_27
deleteuserstatsdata:
  args:
    - ''
  desc: Deletes the user's command statistics data.
  params: [ ]
deleteuserstatsdata_noparams:
  args:
    - ''
  desc: Deletes the user's command statistics data.
  params: [ ]
deleteuserstatsdata_noparams_1:
  args:
    - ''
  desc: Deletes the user's command statistics data.
  params: [ ]
deleteuserstatsdata_noparams_2:
  args:
    - ''
  desc: Deletes the user's command statistics data.
  params: [ ]
delmsgoncmd:
  args:
    - list|ls
    - list
    - ls
  desc: Displays the status of deleting messages on command execution.
  params:
    - &ref_196
      desc: 'Possible values: List, Ls'
      name: _
      optional: false
      type: List
delmsgoncmd_=:
  args:
    - server.server
  desc: Toggles the deletion of messages on command execution for the server.
  params:
    - &ref_192
      desc: ''
      name: Server.Server
      optional: false
      type: '='
delmsgoncmd_=_1:
  args:
    - server.server
  desc: Toggles the deletion of messages on command execution for the server.
  params:
    - *ref_192
delmsgoncmd_=_2:
  args:
    - server.server
  desc: Toggles the deletion of messages on command execution for the server.
  params:
    - *ref_192
delmsgoncmd_=_3:
  args:
    - server.server
  desc: Toggles the deletion of messages on command execution for the server.
  params:
    - *ref_192
delmsgoncmd_Channel_State_=:
  args:
    - channel|ch|chnl enable|disable|inherit null
    - channel|ch|chnl enable|disable|inherit
    - channel
    - ch
    - chnl
    - enable
    - disable
    - inherit
  desc: >-
    Sets the state of deleting messages on command execution for a specific
    channel.
  params:
    - &ref_193
      desc: 'Unused parameter Possible values: Channel, Ch, Chnl, Chan'
      name: _
      optional: false
      type: Channel
    - &ref_194
      desc: >-
        The state to set for deleting messages on command execution Possible
        values: Enable, Disable, Inherit
      name: s
      optional: false
      type: State
    - *ref_1
delmsgoncmd_Channel_State_=_1:
  args:
    - channel|ch|chnl enable|disable|inherit null
    - channel|ch|chnl enable|disable|inherit
    - channel
    - ch
    - chnl
    - enable
    - disable
    - inherit
  desc: Execute the Delmsgoncmd command
  params:
    - *ref_193
    - *ref_194
    - *ref_1
delmsgoncmd_Channel_State_=_2:
  args:
    - channel|ch|chnl enable|disable|inherit null
    - channel|ch|chnl enable|disable|inherit
    - channel
    - ch
    - chnl
    - enable
    - disable
    - inherit
  desc: >-
    Sets the state of deleting messages on command execution for a specific
    channel.
  params:
    - *ref_193
    - *ref_194
    - *ref_1
delmsgoncmd_Channel_State_=_3:
  args:
    - channel|ch|chnl enable|disable|inherit null
    - channel|ch|chnl enable|disable|inherit
    - channel
    - ch
    - chnl
    - enable
    - disable
    - inherit
  desc: Execute the Delmsgoncmd command
  params:
    - *ref_193
    - *ref_194
    - *ref_1
delmsgoncmd_Channel_State_ITextChannel:
  args:
    - channel|ch|chnl enable|disable|inherit ch
    - channel
    - ch
    - chnl
    - enable
    - disable
    - inherit
  desc: >-
    Sets the state of deleting messages on command execution for a specific
    channel.
  params:
    - *ref_193
    - *ref_194
    - &ref_195
      desc: The channel where the state should be applied
      name: ch
      optional: false
      type: ITextChannel
delmsgoncmd_Channel_State_ITextChannel_1:
  args:
    - channel|ch|chnl enable|disable|inherit ch
    - channel
    - ch
    - chnl
    - enable
    - disable
    - inherit
  desc: Execute the Delmsgoncmd command
  params:
    - *ref_193
    - *ref_194
    - *ref_195
delmsgoncmd_Channel_State_ITextChannel_2:
  args:
    - channel|ch|chnl enable|disable|inherit ch
    - channel
    - ch
    - chnl
    - enable
    - disable
    - inherit
  desc: >-
    Sets the state of deleting messages on command execution for a specific
    channel.
  params:
    - *ref_193
    - *ref_194
    - *ref_195
delmsgoncmd_Channel_State_ITextChannel_3:
  args:
    - channel|ch|chnl enable|disable|inherit ch
    - channel
    - ch
    - chnl
    - enable
    - disable
    - inherit
  desc: Execute the Delmsgoncmd command
  params:
    - *ref_193
    - *ref_194
    - *ref_195
delmsgoncmd_List:
  args:
    - list|ls
    - list
    - ls
  desc: Displays the status of deleting messages on command execution.
  params:
    - *ref_196
delmsgoncmd_List_1:
  args:
    - list|ls
    - list
    - ls
  desc: Displays the status of deleting messages on command execution.
  params:
    - *ref_196
delmsgoncmd_List_2:
  args:
    - list|ls
    - list
    - ls
  desc: Displays the status of deleting messages on command execution.
  params:
    - *ref_196
deltxtchanl:
  args:
    - todelete
  desc: Deletes the specified text channel.
  params:
    - &ref_197
      desc: The text channel to delete
      name: toDelete
      optional: false
      type: ITextChannel
deltxtchanl_ITextChannel:
  args:
    - todelete
  desc: Deletes the specified text channel.
  params:
    - *ref_197
deltxtchanl_ITextChannel_1:
  args:
    - todelete
  desc: Deletes the specified text channel.
  params:
    - *ref_197
deltxtchanl_ITextChannel_2:
  args:
    - todelete
  desc: Deletes the specified text channel.
  params:
    - *ref_197
delvoichanl:
  args:
    - voicechannel
  desc: Deletes the specified voice channel.
  params:
    - &ref_198
      desc: The voice channel to delete
      name: voiceChannel
      optional: false
      type: IVoiceChannel
delvoichanl_IVoiceChannel:
  args:
    - voicechannel
  desc: Deletes the specified voice channel.
  params:
    - *ref_198
delvoichanl_IVoiceChannel_1:
  args:
    - voicechannel
  desc: Deletes the specified voice channel.
  params:
    - *ref_198
delvoichanl_IVoiceChannel_2:
  args:
    - voicechannel
  desc: Deletes the specified voice channel.
  params:
    - *ref_198
deny:
  args:
    - sid null
    - sid
  desc: Denies a suggestion, marking it as rejected.
  params:
    - &ref_199
      desc: The unique number (ID) of the suggestion to accept.
      name: sid
      optional: false
      type: ulong
    - *ref_1
deny_ulong_=:
  args:
    - sid null
    - sid
  desc: Denies a suggestion, marking it as rejected.
  params:
    - *ref_199
    - *ref_1
deny_ulong_=_1:
  args:
    - sid null
    - sid
  desc: Denies a suggestion, marking it as rejected.
  params:
    - *ref_199
    - *ref_1
deny_ulong_=_2:
  args:
    - sid null
    - sid
  desc: Denies a suggestion, marking it as rejected.
  params:
    - *ref_199
    - *ref_1
denychannel:
  args:
    - null
  desc: Sets the channel where denied suggestions are posted.
  params:
    - *ref_1
denychannel_=:
  args:
    - null
  desc: Sets the channel where denied suggestions are posted.
  params:
    - *ref_1
denychannel_=_1:
  args:
    - null
  desc: Sets the channel where denied suggestions are posted.
  params:
    - *ref_1
denychannel_=_2:
  args:
    - null
  desc: Sets the channel where denied suggestions are posted.
  params:
    - *ref_1
denymessage:
  args:
    - text
  desc: Sets or updates the deny message for suggestions.
  params:
    - *ref_2
denymessage_string:
  args:
    - text
  desc: Sets or updates the deny message for suggestions.
  params:
    - *ref_2
denymessage_string_1:
  args:
    - text
  desc: Sets or updates the deny message for suggestions.
  params:
    - *ref_2
denymessage_string_2:
  args:
    - text
  desc: Sets or updates the deny message for suggestions.
  params:
    - *ref_2
derpibooru:
  args:
    - text
  desc: >-
    Command to fetch and display NSFW content from the Derpibooru image board
    with optional tags in the current guild channel or direct messages.
  params:
    - &ref_200
      desc: Optional tags to filter the NSFW content from the Safebooru image board.
      name: tags
      optional: false
      type: string[]
derpibooru_string[]:
  args:
    - text
  desc: >-
    Command to fetch and display NSFW content from the Derpibooru image board
    with optional tags in the current guild channel or direct messages.
  params:
    - *ref_200
derpibooru_string[]_1:
  args:
    - text
  desc: >-
    Command to fetch and display NSFW content from the Derpibooru image board
    with optional tags in the current guild channel or direct messages.
  params:
    - *ref_200
derpibooru_string[]_2:
  args:
    - text
  desc: >-
    Command to fetch and display NSFW content from the Derpibooru image board
    with optional tags in the current guild channel or direct messages.
  params:
    - *ref_200
diceduel:
  args:
    - '@user number'
  desc: Challenge another player to a dice duel.
  params:
    - desc: The user to challenge.
      name: opponent
      optional: false
      type: IUser
    - desc: The amount each player bets.
      name: betAmount
      optional: false
      type: long
die:
  args:
    - ''
  desc: Initiates a shutdown of the bot.
  params: [ ]
die_noparams:
  args:
    - ''
  desc: Initiates a shutdown of the bot.
  params: [ ]
die_noparams_1:
  args:
    - ''
  desc: Initiates a shutdown of the bot.
  params: [ ]
die_noparams_2:
  args:
    - ''
  desc: Initiates a shutdown of the bot.
  params: [ ]
discordpermoverride:
  args:
    - cmd perms
    - cmd
  desc: >-
    Overrides the required permissions for a specific command in the current
    guild.
  params:
    - &ref_201
      desc: The command for which the permissions will be overridden
      name: cmd
      optional: false
      type: CommandOrCrInfo
    - &ref_202
      desc: The permissions required to execute the command
      name: perms
      optional: true
      type: GuildPermission[]
discordpermoverride_CommandOrCrInfo_GuildPermission[]:
  args:
    - cmd perms
    - cmd
  desc: Execute the DiscordPermOverride command
  params:
    - *ref_201
    - *ref_202
discordpermoverride_CommandOrCrInfo_GuildPermission[]_1:
  args:
    - cmd perms
    - cmd
  desc: >-
    Module for managing Discord permission overrides. This module allows
    administrators to override the required permissions for a command.
  params:
    - *ref_201
    - *ref_202
discordpermoverride_CommandOrCrInfo_GuildPermission[]_2:
  args:
    - cmd perms
    - cmd
  desc: Execute the DiscordPermOverride command
  params:
    - *ref_201
    - *ref_202
discordpermoverridelist:
  args:
    - ''
  desc: Lists all command permission overrides in the current guild.
  params: [ ]
discordpermoverridelist_noparams:
  args:
    - ''
  desc: Lists all command permission overrides in the current guild.
  params: [ ]
discordpermoverridelist_noparams_1:
  args:
    - ''
  desc: Lists all command permission overrides in the current guild.
  params: [ ]
discordpermoverridelist_noparams_2:
  args:
    - ''
  desc: Lists all command permission overrides in the current guild.
  params: [ ]
discordpermoverridereset:
  args:
    - ''
  desc: Resets all command permission overrides in the current guild.
  params: [ ]
discordpermoverridereset_noparams:
  args:
    - ''
  desc: Resets all command permission overrides in the current guild.
  params: [ ]
discordpermoverridereset_noparams_1:
  args:
    - ''
  desc: Resets all command permission overrides in the current guild.
  params: [ ]
discordpermoverridereset_noparams_2:
  args:
    - ''
  desc: Resets all command permission overrides in the current guild.
  params: [ ]
distortion:
  args:
    - true
  desc: Applies a distortion effect to the audio.
  params:
    - *ref_57
distortion_=:
  args:
    - true
  desc: Applies a distortion effect to the audio.
  params:
    - *ref_57
distortion_=_1:
  args:
    - true
  desc: Applies a distortion effect to the audio.
  params:
    - *ref_57
distortion_=_2:
  args:
    - true
  desc: Applies a distortion effect to the audio.
  params:
    - *ref_57
donate:
  args:
    - ''
  desc: SHows how to support the bot.
  params: [ ]
donate_noparams:
  args:
    - ''
  desc: SHows how to support the bot.
  params: [ ]
donate_noparams_1:
  args:
    - ''
  desc: SHows how to support the bot.
  params: [ ]
donate_noparams_2:
  args:
    - ''
  desc: SHows how to support the bot.
  params: [ ]
dpo:
  args:
    - permission action
  desc: Overrides Discord permissions.
  params:
    - desc: The permission to override.
      name: permission
      optional: false
      type: string
    - desc: The action to take.
      name: action
      optional: false
      type: string
dpol:
  args:
    - ''
  desc: Lists Discord permission overrides.
  params: [ ]
dpor:
  args:
    - ''
  desc: Resets Discord permission overrides.
  params: [ ]
dragon:
  args:
    - ''
  desc: Command to toggle the user's dragon status. Usually used for beta commands.
  params: [ ]
dragon_noparams:
  args:
    - ''
  desc: Command to toggle the user's dragon status. Usually used for beta commands.
  params: [ ]
dragon_noparams_1:
  args:
    - ''
  desc: Command to toggle the user's dragon status. Usually used for beta commands.
  params: [ ]
dragon_noparams_2:
  args:
    - ''
  desc: Command to toggle the user's dragon status. Usually used for beta commands.
  params: [ ]
duckrace:
  args:
    - number
  desc: Bet on a duck race and watch them compete.
  params:
    - desc: The amount to bet on the duck race.
      name: betAmount
      optional: false
      type: long
e621:
  args:
    - text
  desc: >-
    Command to fetch and display NSFW content from the E621 image board with
    optional tags in the current guild channel or direct messages.
  params:
    - &ref_203
      desc: Optional tags to filter the NSFW content from the Rule34 image board.
      name: tags
      optional: false
      type: string[]
e621_string[]:
  args:
    - text
  desc: >-
    Command to fetch and display NSFW content from the E621 image board with
    optional tags in the current guild channel or direct messages.
  params:
    - *ref_203
e621_string[]_1:
  args:
    - text
  desc: >-
    Command to fetch and display NSFW content from the E621 image board with
    optional tags in the current guild channel or direct messages.
  params:
    - *ref_203
e621_string[]_2:
  args:
    - text
  desc: >-
    Command to fetch and display NSFW content from the E621 image board with
    optional tags in the current guild channel or direct messages.
  params:
    - *ref_203
edit:
  args:
    - channel messageid text
    - channel messageid
  desc: Edits a message in the specified text channel.
  params:
    - &ref_204
      desc: The text channel where the message is located
      name: channel
      optional: false
      type: ITextChannel
    - &ref_205
      desc: The ID of the message to edit
      name: messageId
      optional: false
      type: ulong
    - &ref_206
      desc: The new text for the message
      name: text
      optional: true
      type: string
edit_ITextChannel_ulong_string:
  args:
    - channel messageid text
    - channel messageid
  desc: Execute the Edit command
  params:
    - *ref_204
    - *ref_205
    - *ref_206
edit_ITextChannel_ulong_string_1:
  args:
    - channel messageid text
    - channel messageid
  desc: Edits a message in the specified text channel.
  params:
    - *ref_204
    - *ref_205
    - *ref_206
edit_ITextChannel_ulong_string_2:
  args:
    - channel messageid text
    - channel messageid
  desc: Execute the Edit command
  params:
    - *ref_204
    - *ref_205
    - *ref_206
editchattrigger:
  args:
    - number text
    - number
  desc: Edits an existing chat trigger.
  params:
    - *ref_162
    - *ref_11
editchattrigger_int_string:
  args:
    - number text
    - number
  desc: Edits an existing chat trigger.
  params:
    - *ref_162
    - *ref_11
editchattrigger_int_string_1:
  args:
    - number text
    - number
  desc: Edits an existing chat trigger.
  params:
    - *ref_162
    - *ref_11
editchattrigger_int_string_2:
  args:
    - number text
    - number
  desc: Edits an existing chat trigger.
  params:
    - *ref_162
    - *ref_11
editsnipe:
  args:
    - ''
  desc: Snipes the last edited message in the current channel.
  params: [ ]
editsnipe_ITextChannel:
  args:
    - chan
  desc: Snipes the last edited message in a specified channel.
  params:
    - &ref_207
      desc: The channel to get the message of.
      name: chan
      optional: false
      type: ITextChannel
editsnipe_ITextChannel_1:
  args:
    - chan
  desc: Snipes the last edited message in a specified channel.
  params:
    - *ref_207
editsnipe_ITextChannel_2:
  args:
    - chan
  desc: Snipes the last edited message in a specified channel.
  params:
    - *ref_207
editsnipe_ITextChannel_3:
  args:
    - chan
  desc: Snipes the last edited message in a specified channel.
  params:
    - *ref_207
editsnipe_ITextChannel_IUser:
  args:
    - chan @user
  desc: Snipes the last edited message by a user in a specified channel.
  params:
    - *ref_207
    - &ref_208
      desc: The user to get the message of.
      name: user1
      optional: false
      type: IUser
editsnipe_ITextChannel_IUser_1:
  args:
    - chan @user
  desc: Snipes the last edited message by a user in a specified channel.
  params:
    - *ref_207
    - *ref_208
editsnipe_ITextChannel_IUser_2:
  args:
    - chan @user
  desc: Snipes the last edited message by a user in a specified channel.
  params:
    - *ref_207
    - *ref_208
editsnipe_ITextChannel_IUser_3:
  args:
    - chan @user
  desc: Snipes the last edited message by a user in a specified channel.
  params:
    - *ref_207
    - *ref_208
editsnipe_IUser:
  args:
    - '@user'
  desc: Snipes the last edited message by a user in the current channel.
  params:
    - *ref_208
editsnipe_IUser_1:
  args:
    - '@user'
  desc: Snipes the last edited message by a user in the current channel.
  params:
    - *ref_208
editsnipe_IUser_2:
  args:
    - '@user'
  desc: Snipes the last edited message by a user in the current channel.
  params:
    - *ref_208
editsnipe_IUser_3:
  args:
    - '@user'
  desc: Snipes the last edited message by a user in the current channel.
  params:
    - *ref_208
editsnipe_noparams:
  args:
    - ''
  desc: Snipes the last edited message in the current channel.
  params: [ ]
editsnipe_noparams_1:
  args:
    - ''
  desc: Snipes the last edited message in the current channel.
  params: [ ]
editsnipe_noparams_2:
  args:
    - ''
  desc: Snipes the last edited message in the current channel.
  params: [ ]
editsnipelist:
  args:
    - 5
  desc: Gets the last x amount of edited messages in the current channel.
  params:
    - &ref_209
      desc: ''
      name: 5
      optional: false
      type: '='
editsnipelist_=:
  args:
    - 5
  desc: Gets the last x amount of edited messages in the current channel.
  params:
    - *ref_209
editsnipelist_=_1:
  args:
    - 5
  desc: Gets the last x amount of edited messages in the current channel.
  params:
    - *ref_209
editsnipelist_=_2:
  args:
    - 5
  desc: Gets the last x amount of edited messages in the current channel.
  params:
    - *ref_209
editsnipelist_ITextChannel_=:
  args:
    - channel 5
    - channel
  desc: Gets the last x amount of edited messages in a channel.
  params:
    - &ref_210
      desc: The channel to get the messages of.
      name: channel
      optional: false
      type: ITextChannel
    - *ref_209
editsnipelist_ITextChannel_=_1:
  args:
    - channel 5
    - channel
  desc: Gets the last x amount of edited messages in a channel.
  params:
    - *ref_210
    - *ref_209
editsnipelist_ITextChannel_=_2:
  args:
    - channel 5
    - channel
  desc: Gets the last x amount of edited messages in a channel.
  params:
    - *ref_210
    - *ref_209
editsnipelist_ITextChannel_=_3:
  args:
    - channel 5
    - channel
  desc: Gets the last x amount of edited messages in a channel.
  params:
    - *ref_210
    - *ref_209
editsnipelist_ITextChannel_IUser_=:
  args:
    - channel @user 5
    - channel @user
    - '@user number'
  desc: Gets the last x amount of edited messages by a user in a specified channel.
  params:
    - *ref_210
    - &ref_211
      desc: The user to get the messages of.
      name: user
      optional: false
      type: IUser
    - *ref_209
editsnipelist_ITextChannel_IUser_=_1:
  args:
    - channel @user 5
    - channel @user
    - '@user number'
  desc: Gets the last x amount of edited messages by a user in a specified channel.
  params:
    - *ref_210
    - *ref_211
    - *ref_209
editsnipelist_ITextChannel_IUser_=_2:
  args:
    - channel @user 5
    - channel @user
    - '@user number'
  desc: Gets the last x amount of edited messages by a user in a specified channel.
  params:
    - *ref_210
    - *ref_211
    - *ref_209
editsnipelist_ITextChannel_IUser_=_3:
  args:
    - channel @user 5
    - channel @user
    - '@user number'
  desc: Gets the last x amount of edited messages by a user in a specified channel.
  params:
    - *ref_210
    - *ref_211
    - *ref_209
editsnipelist_IUser_=:
  args:
    - '@user 5'
    - '@user'
    - '@user number'
  desc: Gets the last x amount of edited messages in a channel by a user.
  params:
    - *ref_211
    - *ref_209
editsnipelist_IUser_=_1:
  args:
    - '@user 5'
    - '@user'
    - '@user number'
  desc: Gets the last x amount of edited messages in a channel by a user.
  params:
    - *ref_211
    - *ref_209
editsnipelist_IUser_=_2:
  args:
    - '@user 5'
    - '@user'
    - '@user number'
  desc: Gets the last x amount of edited messages in a channel by a user.
  params:
    - *ref_211
    - *ref_209
editsnipelist_IUser_=_3:
  args:
    - '@user 5'
    - '@user'
    - '@user number'
  desc: Gets the last x amount of edited messages in a channel by a user.
  params:
    - *ref_211
    - *ref_209
eightball:
  args:
    - null
  desc: Command to consult the magic 8-ball for an answer.
  params:
    - *ref_1
eightball_=:
  args:
    - null
  desc: Command to consult the magic 8-ball for an answer.
  params:
    - *ref_1
eightball_=_1:
  args:
    - null
  desc: Command to consult the magic 8-ball for an answer.
  params:
    - *ref_1
eightball_=_2:
  args:
    - null
  desc: Command to consult the magic 8-ball for an answer.
  params:
    - *ref_1
eightd:
  args:
    - true
  desc: Applies an 8D audio effect that rotates the audio around the listener.
  params:
    - *ref_57
eightd_=:
  args:
    - true
  desc: Execute the EightD command
  params:
    - *ref_57
eightd_=_1:
  args:
    - true
  desc: Applies an 8D audio effect that rotates the audio around the listener.
  params:
    - *ref_57
eightd_=_2:
  args:
    - true
  desc: Execute the EightD command
  params:
    - *ref_57
embeddelete:
  args:
    - name
  desc: Deletes a personal embed template.
  params:
    - desc: The name of the embed template to delete.
      name: name
      optional: false
      type: string
embedlist:
  args:
    - ''
  desc: Lists all personal embed templates.
  params: [ ]
embedpreview:
  args:
    - name
  desc: Previews an embed template.
  params:
    - desc: The name of the embed template to preview.
      name: name
      optional: false
      type: string
embedsave:
  args:
    - name
    - embedJson
  desc: Saves an embed template for personal use.
  params:
    - desc: The name of the embed template.
      name: name
      optional: false
      type: string
    - desc: The JSON representation of the embed.
      name: embedJson
      optional: false
      type: string
emotelist:
  args:
    - null
  desc: >-
    Gets the emotes in a guild. If an emote type is specified, only the emotes
    of that type will be listed.
  params:
    - *ref_1
emotelist_=:
  args:
    - null
  desc: >-
    Gets the emotes in a guild. If an emote type is specified, only the emotes
    of that type will be listed.
  params:
    - *ref_1
emotelist_=_1:
  args:
    - null
  desc: >-
    Gets the emotes in a guild. If an emote type is specified, only the emotes
    of that type will be listed.
  params:
    - *ref_1
emotelist_=_2:
  args:
    - null
  desc: >-
    Gets the emotes in a guild. If an emote type is specified, only the emotes
    of that type will be listed.
  params:
    - *ref_1
endcompetition:
  args:
    - number
  desc: Ends a competition early and distributes rewards.
  params:
    - &ref_212
      desc: ID of the competition to end.
      name: competitionId
      optional: false
      type: int
endcompetition_int:
  args:
    - number
  desc: Ends a competition early and distributes rewards.
  params:
    - *ref_212
endcompetition_int_1:
  args:
    - number
  desc: Ends a competition early and distributes rewards.
  params:
    - *ref_212
endcompetition_int_2:
  args:
    - number
  desc: Ends a competition early and distributes rewards.
  params:
    - *ref_212
evaluate:
  args:
    - null
  desc: Evaluates a C# code snippet.
  params:
    - *ref_1
evaluate_=:
  args:
    - null
  desc: Evaluates a C# code snippet.
  params:
    - *ref_1
evaluate_=_1:
  args:
    - null
  desc: Evaluates a C# code snippet.
  params:
    - *ref_1
evaluate_=_2:
  args:
    - null
  desc: Evaluates a C# code snippet.
  params:
    - *ref_1
exportcommandsjson:
  args:
    - ''
  desc: >-
    Exports all commands to a json file. Used mainly for
    https://mewdeko.tech/commands
  params: [ ]
exportcommandsjson_noparams:
  args:
    - ''
  desc: >-
    Exports all commands to a json file. Used mainly for
    https://mewdeko.tech/commands
  params: [ ]
exportcommandsjson_noparams_1:
  args:
    - ''
  desc: A module containing commands for getting help.
  params: [ ]
exportcommandsjson_noparams_2:
  args:
    - ''
  desc: >-
    Exports all commands to a json file. Used mainly for
    https://mewdeko.tech/commands
  params: [ ]
exportrolelist:
  args:
    - ''
  desc: >-
    Exports a list of roles and their associated users to a text file, allowing
    for easy backup and transfer.
  params: [ ]
exportrolelist_noparams:
  args:
    - ''
  desc: >-
    Exports a list of roles and their associated users to a text file, allowing
    for easy backup and transfer.
  params: [ ]
exportrolelist_noparams_1:
  args:
    - ''
  desc: >-
    Exports a list of roles and their associated users to a text file, allowing
    for easy backup and transfer.
  params: [ ]
exportrolelist_noparams_2:
  args:
    - ''
  desc: >-
    Exports a list of roles and their associated users to a text file, allowing
    for easy backup and transfer.
  params: [ ]
facepalm:
  args:
    - null
  desc: Facepalms.
  params:
    - *ref_1
facepalm_=:
  args:
    - null
  desc: Facepalms.
  params:
    - *ref_1
facepalm_=_1:
  args:
    - null
  desc: Facepalms.
  params:
    - *ref_1
facepalm_=_2:
  args:
    - null
  desc: Facepalms.
  params:
    - *ref_1
feed:
  args:
    - text
  desc: Feeds someone.
  params:
    - &ref_213
      desc: The person to call baka.
      name: toShow
      optional: false
      type: string
feed_string:
  args:
    - text
  desc: Feeds someone.
  params:
    - *ref_98
feed_string_1:
  args:
    - text
  desc: Feeds someone.
  params:
    - *ref_213
feed_string_2:
  args:
    - text
  desc: Feeds someone.
  params:
    - *ref_98
feedadd:
  args:
    - text null
    - text
  desc: Adds a new RSS feed to the guild's feed list.
  params:
    - &ref_214
      desc: The URL of the RSS feed.
      name: url
      optional: false
      type: string
    - *ref_1
feedadd_string_=:
  args:
    - text null
    - text
  desc: Execute the FeedAdd command
  params:
    - *ref_214
    - *ref_1
feedadd_string_=_1:
  args:
    - text null
    - text
  desc: Module for managing RSS feeds in the guild.
  params:
    - *ref_214
    - *ref_1
feedadd_string_=_2:
  args:
    - text null
    - text
  desc: Execute the FeedAdd command
  params:
    - *ref_214
    - *ref_1
feedlist:
  args:
    - ''
  desc: Lists all RSS feeds added to the guild.
  params: [ ]
feedlist_noparams:
  args:
    - ''
  desc: Lists all RSS feeds added to the guild.
  params: [ ]
feedlist_noparams_1:
  args:
    - ''
  desc: Lists all RSS feeds added to the guild.
  params: [ ]
feedlist_noparams_2:
  args:
    - ''
  desc: Lists all RSS feeds added to the guild.
  params: [ ]
feedmessage:
  args:
    - number text
  desc: Sets a custom message format for feed updates in a specific channel.
  params:
    - &ref_215
      desc: The index of the feed in the list.
      name: index
      optional: false
      type: int
    - &ref_216
      desc: The custom message format.
      name: message
      optional: false
      type: string
feedmessage_int_string:
  args:
    - number text
  desc: Execute the FeedMessage command
  params:
    - *ref_215
    - *ref_216
feedmessage_int_string_1:
  args:
    - number text
  desc: Sets a custom message format for feed updates in a specific channel.
  params:
    - *ref_215
    - *ref_216
feedmessage_int_string_2:
  args:
    - number text
  desc: Execute the FeedMessage command
  params:
    - *ref_215
    - *ref_216
feedremove:
  args:
    - number
  desc: Removes an RSS feed from the guild's feed list.
  params:
    - *ref_215
feedremove_int:
  args:
    - number
  desc: Removes an RSS feed from the guild's feed list.
  params:
    - *ref_215
feedremove_int_1:
  args:
    - number
  desc: Removes an RSS feed from the guild's feed list.
  params:
    - *ref_215
feedremove_int_2:
  args:
    - number
  desc: Removes an RSS feed from the guild's feed list.
  params:
    - *ref_215
fetch:
  args:
    - id
  desc: Fetches and displays information about a user by their Discord ID.
  params:
    - &ref_217
      desc: The Discord ID of the user.
      name: id
      optional: false
      type: ulong
fetch_ulong:
  args:
    - id
  desc: Fetches and displays information about a user by their Discord ID.
  params:
    - *ref_217
fetch_ulong_1:
  args:
    - id
  desc: Fetches and displays information about a user by their Discord ID.
  params:
    - *ref_217
fetch_ulong_2:
  args:
    - id
  desc: Fetches and displays information about a user by their Discord ID.
  params:
    - *ref_217
filterword:
  args:
    - text
  desc: Adds or removes a word from the filtered words list in the current guild.
  params:
    - &ref_218
      desc: The word to toggle on the filtered words list.
      name: word
      optional: true
      type: string
filterword_string:
  args:
    - text
  desc: Execute the FilterWord command
  params:
    - *ref_218
filterword_string_1:
  args:
    - text
  desc: Adds or removes a word from the filtered words list in the current guild.
  params:
    - *ref_218
filterword_string_2:
  args:
    - text
  desc: Execute the FilterWord command
  params:
    - *ref_218
findanime:
  args:
    - null
  desc: Finds anime information based on an image.
  params:
    - *ref_1
findanime_=:
  args:
    - null
  desc: Finds anime information based on an image.
  params:
    - *ref_1
findanime_=_1:
  args:
    - null
  desc: Finds anime information based on an image.
  params:
    - *ref_1
findanime_=_2:
  args:
    - null
  desc: Finds anime information based on an image.
  params:
    - *ref_1
forwardmessages:
  args:
    - ''
  desc: Toggles the forwarding of direct messages to the bot's owner(s).
  params: [ ]
forwardmessages_noparams:
  args:
    - ''
  desc: Toggles the forwarding of direct messages to the bot's owner(s).
  params: [ ]
forwardmessages_noparams_1:
  args:
    - ''
  desc: Toggles the forwarding of direct messages to the bot's owner(s).
  params: [ ]
forwardmessages_noparams_2:
  args:
    - ''
  desc: Toggles the forwarding of direct messages to the bot's owner(s).
  params: [ ]
forwardtoall:
  args:
    - ''
  desc: >-
    Toggles whether forwarded messages are sent to all of the bot's owners or
    just the primary owner.
  params: [ ]
forwardtoall_noparams:
  args:
    - ''
  desc: >-
    Toggles whether forwarded messages are sent to all of the bot's owners or
    just the primary owner.
  params: [ ]
forwardtoall_noparams_1:
  args:
    - ''
  desc: >-
    Toggles whether forwarded messages are sent to all of the bot's owners or
    just the primary owner.
  params: [ ]
forwardtoall_noparams_2:
  args:
    - ''
  desc: >-
    Toggles whether forwarded messages are sent to all of the bot's owners or
    just the primary owner.
  params: [ ]
fwarn:
  args:
    - text
  desc: Enables or disables warnings for filtered words in the current guild.
  params:
    - &ref_219
      desc: >-
        A string indicating whether to enable ("y") or disable ("n") the
        warning.
      name: yesnt
      optional: false
      type: string
fwarn_string:
  args:
    - text
  desc: Execute the FWarn command
  params:
    - *ref_219
fwarn_string_1:
  args:
    - text
  desc: Enables or disables warnings for filtered words in the current guild.
  params:
    - *ref_219
fwarn_string_2:
  args:
    - text
  desc: Execute the FWarn command
  params:
    - *ref_219
fwclear:
  args:
    - ''
  desc: Clears all filtered words for the current guild.
  params: [ ]
fwclear_noparams:
  args:
    - ''
  desc: Execute the FwClear command
  params: [ ]
fwclear_noparams_1:
  args:
    - ''
  desc: Clears all filtered words for the current guild.
  params: [ ]
fwclear_noparams_2:
  args:
    - ''
  desc: Execute the FwClear command
  params: [ ]
gamevoicechannel:
  args:
    - ''
  desc: Toggles the current voice channel as the game voice channel for the guild.
  params: [ ]
gamevoicechannel_noparams:
  args:
    - ''
  desc: Toggles the current voice channel as the game voice channel for the guild.
  params: [ ]
gamevoicechannel_noparams_1:
  args:
    - ''
  desc: The module for managing game voice channels.
  params: [ ]
gamevoicechannel_noparams_2:
  args:
    - ''
  desc: Toggles the current voice channel as the game voice channel for the guild.
  params: [ ]
gatari:
  args:
    - text null
    - text
  desc: Retrieves osu!Gatari user profile information.
  params:
    - &ref_220
      desc: The osu!Gatari username to retrieve information for.
      name: user
      optional: false
      type: string
    - *ref_1
gatari_string_=:
  args:
    - text null
    - text
  desc: Execute the Gatari command
  params:
    - *ref_220
    - *ref_1
gatari_string_=_1:
  args:
    - text null
    - text
  desc: Retrieves osu!Gatari user profile information.
  params:
    - *ref_220
    - *ref_1
gatari_string_=_2:
  args:
    - text null
    - text
  desc: Execute the Gatari command
  params:
    - *ref_220
    - *ref_1
gbanner:
  args:
    - text
  desc: Sets the default giveaway banner.
  params:
    - &ref_221
      desc: ''
      name: banner
      optional: false
      type: string
gbanner_string:
  args:
    - text
  desc: Sets the default giveaway banner.
  params:
    - *ref_221
gbanner_string_1:
  args:
    - text
  desc: Sets the default giveaway banner.
  params:
    - *ref_221
gbanner_string_2:
  args:
    - text
  desc: Sets the default giveaway banner.
  params:
    - *ref_221
gdm:
  args:
    - ''
  desc: Sets whether to DM the winner of a giveaway.
  params: [ ]
gdm_noparams:
  args:
    - ''
  desc: Sets whether to DM the winner of a giveaway.
  params: [ ]
gdm_noparams_1:
  args:
    - ''
  desc: Sets whether to DM the winner of a giveaway.
  params: [ ]
gdm_noparams_2:
  args:
    - ''
  desc: Sets whether to DM the winner of a giveaway.
  params: [ ]
gdmmessage:
  args:
    - null
  desc: Sets the dm message sent to users when they win a giveaway.
  params:
    - *ref_1
gdmmessage_=:
  args:
    - null
  desc: Sets the dm message sent to users when they win a giveaway.
  params:
    - *ref_1
gdmmessage_=_1:
  args:
    - null
  desc: Module containing commands for giveaways.
  params:
    - *ref_1
gdmmessage_=_2:
  args:
    - null
  desc: Sets the dm message sent to users when they win a giveaway.
  params:
    - *ref_1
gelbooru:
  args:
    - text
  desc: >-
    Command to fetch and display NSFW content from the Gelbooru image board with
    optional tags in the current guild channel or direct messages.
  params:
    - &ref_222
      desc: >-
        Optional tags to filter the NSFW content from the Derpibooru image
        board.
      name: tags
      optional: false
      type: string[]
gelbooru_string[]:
  args:
    - text
  desc: >-
    Command to fetch and display NSFW content from the Gelbooru image board with
    optional tags in the current guild channel or direct messages.
  params:
    - *ref_222
gelbooru_string[]_1:
  args:
    - text
  desc: >-
    Command to fetch and display NSFW content from the Gelbooru image board with
    optional tags in the current guild channel or direct messages.
  params:
    - *ref_222
gelbooru_string[]_2:
  args:
    - text
  desc: >-
    Command to fetch and display NSFW content from the Gelbooru image board with
    optional tags in the current guild channel or direct messages.
  params:
    - *ref_222
gembedcolor:
  args:
    - text
  desc: Sets the color of the embed for giveaways.
  params:
    - &ref_223
      desc: The color in hex.
      name: color
      optional: false
      type: string
gembedcolor_string:
  args:
    - text
  desc: Sets the color of the embed for giveaways.
  params:
    - *ref_223
gembedcolor_string_1:
  args:
    - text
  desc: Sets the color of the embed for giveaways.
  params:
    - *ref_223
gembedcolor_string_2:
  args:
    - text
  desc: Sets the color of the embed for giveaways.
  params:
    - *ref_223
gemote:
  args:
    - emote
  desc: Sets the emote used for giveaways.
  params:
    - &ref_224
      desc: The emote to set it to.
      name: emote
      optional: false
      type: IEmote
gemote_IEmote:
  args:
    - emote
  desc: Sets the emote used for giveaways.
  params:
    - *ref_224
gemote_IEmote_1:
  args:
    - emote
  desc: Sets the emote used for giveaways.
  params:
    - *ref_224
gemote_IEmote_2:
  args:
    - emote
  desc: Sets the emote used for giveaways.
  params:
    - *ref_224
gend:
  args:
    - messageid
  desc: Ends a giveaway.
  params:
    - &ref_225
      desc: The messageid of the giveaway to end
      name: messageid
      optional: false
      type: ulong
gend_ulong:
  args:
    - messageid
  desc: Ends a giveaway.
  params:
    - *ref_225
gend_ulong_1:
  args:
    - messageid
  desc: Ends a giveaway.
  params:
    - *ref_225
gend_ulong_2:
  args:
    - messageid
  desc: Ends a giveaway.
  params:
    - *ref_225
generatedocs:
  args:
    - ''
  desc: Generates command documentation YML files
  params: [ ]
generatedocs_noparams:
  args:
    - ''
  desc: Generates command documentation YML files
  params: [ ]
generatedocs_noparams_1:
  args:
    - ''
  desc: Generates command documentation YML files
  params: [ ]
generatedocs_noparams_2:
  args:
    - ''
  desc: Generates command documentation YML files
  params: [ ]
getactiveafks:
  args:
    - ''
  desc: Displays a list of active users who are currently AFK.
  params: [ ]
getactiveafks_noparams:
  args:
    - ''
  desc: Displays a list of active users who are currently AFK.
  params: [ ]
getactiveafks_noparams_1:
  args:
    - ''
  desc: Displays a list of active users who are currently AFK.
  params: [ ]
getactiveafks_noparams_2:
  args:
    - ''
  desc: Displays a list of active users who are currently AFK.
  params: [ ]
getautopublishes:
  args:
    - ''
  desc: >-
    Displays a list of channels with auto-publish enabled and their associated
    blacklists.
  params: [ ]
getautopublishes_noparams:
  args:
    - ''
  desc: >-
    Displays a list of channels with auto-publish enabled and their associated
    blacklists.
  params: [ ]
getautopublishes_noparams_1:
  args:
    - ''
  desc: >-
    Displays a list of channels with auto-publish enabled and their associated
    blacklists.
  params: [ ]
getautopublishes_noparams_2:
  args:
    - ''
  desc: >-
    Displays a list of channels with auto-publish enabled and their associated
    blacklists.
  params: [ ]
getjson:
  args:
    - id null
    - id
  desc: Gets the mewdeko specific json of a message.
  params:
    - &ref_227
      desc: The id of the message to get the json of.
      name: id
      optional: false
      type: ulong
    - *ref_1
getjson_ITextChannel_ulong:
  args:
    - channel messageid
  desc: Gets the mewdeko specific json of a message.
  params:
    - *ref_158
    - &ref_226
      desc: The id of the message to get the json of.
      name: messageId
      optional: false
      type: ulong
getjson_ITextChannel_ulong_1:
  args:
    - channel messageid
  desc: Gets the mewdeko specific json of a message.
  params:
    - *ref_158
    - *ref_226
getjson_ITextChannel_ulong_2:
  args:
    - channel messageid
  desc: Gets the mewdeko specific json of a message.
  params:
    - *ref_158
    - *ref_226
getjson_ITextChannel_ulong_3:
  args:
    - channel messageid
  desc: Gets the mewdeko specific json of a message.
  params:
    - *ref_158
    - *ref_226
getjson_ulong_=:
  args:
    - id null
    - id
  desc: Gets the mewdeko specific json of a message.
  params:
    - *ref_227
    - *ref_1
getjson_ulong_=_1:
  args:
    - id null
    - id
  desc: Gets the mewdeko specific json of a message.
  params:
    - *ref_227
    - *ref_1
getjson_ulong_=_2:
  args:
    - id null
    - id
  desc: Gets the mewdeko specific json of a message.
  params:
    - *ref_227
    - *ref_1
giverep:
  args:
    - '@user reptype text'
  desc: Gives reputation to a specified user.
  params:
    - *ref_228
    - *ref_229
    - *ref_230
glist:
  args:
    - ''
  desc: Lists all active giveaways.
  params: [ ]
glist_noparams:
  args:
    - ''
  desc: Lists all active giveaways.
  params: [ ]
glist_noparams_1:
  args:
    - ''
  desc: Lists all active giveaways.
  params: [ ]
glist_noparams_2:
  args:
    - ''
  desc: Lists all active giveaways.
  params: [ ]
globalcommand:
  args:
    - cmd
  desc: Toggles a command on or off the global block list.
  params:
    - &ref_231
      desc: The command to toggle.
      name: cmd
      optional: false
      type: CommandOrCrInfo
globalcommand_CommandOrCrInfo:
  args:
    - cmd
  desc: Toggles a command on or off the global block list.
  params:
    - *ref_231
globalcommand_CommandOrCrInfo_1:
  args:
    - cmd
  desc: Toggles a command on or off the global block list.
  params:
    - *ref_231
globalcommand_CommandOrCrInfo_2:
  args:
    - cmd
  desc: Toggles a command on or off the global block list.
  params:
    - *ref_231
globalmodule:
  args:
    - module
  desc: Toggles a module on or off the global block list.
  params:
    - &ref_232
      desc: The module to toggle.
      name: module
      optional: false
      type: ModuleOrCrInfo
globalmodule_ModuleOrCrInfo:
  args:
    - module
  desc: Toggles a module on or off the global block list.
  params:
    - *ref_232
globalmodule_ModuleOrCrInfo_1:
  args:
    - module
  desc: Toggles a module on or off the global block list.
  params:
    - *ref_232
globalmodule_ModuleOrCrInfo_2:
  args:
    - module
  desc: Toggles a module on or off the global block list.
  params:
    - *ref_232
globalpermlist:
  args:
    - ''
  desc: Lists all currently globally blocked modules and commands.
  params: [ ]
globalpermlist_noparams:
  args:
    - ''
  desc: Lists all currently globally blocked modules and commands.
  params: [ ]
globalpermlist_noparams_1:
  args:
    - ''
  desc: >-
    Provides commands for managing global permissions, allowing for the blocking
    or unblocking of specific commands and modules across all guilds.
  params: [ ]
globalpermlist_noparams_2:
  args:
    - ''
  desc: Lists all currently globally blocked modules and commands.
  params: [ ]
google:
  args:
    - null
  desc: >-
    Performs a general search using the Google or DuckDuckGo search engines and
    displays the results.
  params:
    - *ref_1
google_=:
  args:
    - null
  desc: Execute the Google command
  params:
    - *ref_1
google_=_1:
  args:
    - null
  desc: >-
    Performs a general search using the Google or DuckDuckGo search engines and
    displays the results.
  params:
    - *ref_1
google_=_2:
  args:
    - null
  desc: Execute the Google command
  params:
    - *ref_1
grab:
  args:
    - '@user'
  desc: Brings a user to the command issuer's current voice channel.
  params:
    - &ref_233
      desc: The user to grab and move.
      name: user
      optional: false
      type: IGuildUser
grab_IGuildUser:
  args:
    - '@user'
  desc: Brings a user to the command issuer's current voice channel.
  params:
    - *ref_233
grab_IGuildUser_1:
  args:
    - '@user'
  desc: Brings a user to the command issuer's current voice channel.
  params:
    - *ref_233
grab_IGuildUser_2:
  args:
    - '@user'
  desc: Brings a user to the command issuer's current voice channel.
  params:
    - *ref_233
graph:
  args:
    - text -10 10
    - text
  desc: Graphs a mathematical function.
  params:
    - &ref_234
      desc: The function to graph.
      name: function
      optional: false
      type: string
    - &ref_235
      desc: ''
      name: -10
      optional: false
      type: '='
    - &ref_236
      desc: ''
      name: 10
      optional: false
      type: '='
graph_string_=_=:
  args:
    - text -10 10
    - text
  desc: Graphs a mathematical function.
  params:
    - *ref_234
    - *ref_235
    - *ref_236
graph_string_=_=_1:
  args:
    - text -10 10
    - text
  desc: Graphs a mathematical function.
  params:
    - *ref_234
    - *ref_235
    - *ref_236
graph_string_=_=_2:
  args:
    - text -10 10
    - text
  desc: Graphs a mathematical function.
  params:
    - *ref_234
    - *ref_235
    - *ref_236
greetdm:
  args:
    - ''
  desc: Toggles the sending of greeting messages via direct message.
  params: [ ]
greetdm_noparams:
  args:
    - ''
  desc: Toggles the sending of greeting messages via direct message.
  params: [ ]
greetdm_noparams_1:
  args:
    - ''
  desc: Toggles the sending of greeting messages via direct message.
  params: [ ]
greetdm_noparams_2:
  args:
    - ''
  desc: Toggles the sending of greeting messages via direct message.
  params: [ ]
greetdmmsg:
  args:
    - ''
  desc: Displays the current direct message greeting message.
  params: [ ]
greetdmmsg_=:
  args:
    - null
  desc: Sets the direct message greeting message to the specified text.
  params:
    - *ref_1
greetdmmsg_=_1:
  args:
    - null
  desc: Sets the direct message greeting message to the specified text.
  params:
    - *ref_1
greetdmmsg_=_2:
  args:
    - null
  desc: Sets the direct message greeting message to the specified text.
  params:
    - *ref_1
greetdmmsg_=_3:
  args:
    - null
  desc: Sets the direct message greeting message to the specified text.
  params:
    - *ref_1
greetdmmsg_noparams:
  args:
    - ''
  desc: Displays the current direct message greeting message.
  params: [ ]
greetdmmsg_noparams_1:
  args:
    - ''
  desc: Displays the current direct message greeting message.
  params: [ ]
greetdmmsg_noparams_2:
  args:
    - ''
  desc: Displays the current direct message greeting message.
  params: [ ]
greetdmoptout:
  args:
    - ''
  desc: >-
    Allows a user to toggle opting out of greet dms. Only works if the server
    they are joining uses mewdeko for dm greets.
  params: [ ]
greetdmoptout_noparams:
  args:
    - ''
  desc: >-
    Allows a user to toggle opting out of greet dms. Only works if the server
    they are joining uses mewdeko for dm greets.
  params: [ ]
greetdmoptout_noparams_1:
  args:
    - ''
  desc: >-
    Allows a user to toggle opting out of greet dms. Only works if the server
    they are joining uses mewdeko for dm greets.
  params: [ ]
greetdmoptout_noparams_2:
  args:
    - ''
  desc: >-
    Allows a user to toggle opting out of greet dms. Only works if the server
    they are joining uses mewdeko for dm greets.
  params: [ ]
greetdmtest:
  args:
    - null
  desc: Sends a test direct message greet.
  params:
    - *ref_1
greetdmtest_=:
  args:
    - null
  desc: Sends a test direct message greet.
  params:
    - *ref_1
greetdmtest_=_1:
  args:
    - null
  desc: Sends a test direct message greet.
  params:
    - *ref_1
greetdmtest_=_2:
  args:
    - null
  desc: Sends a test direct message greet.
  params:
    - *ref_1
greroll:
  args:
    - messageid
  desc: Rerolls a giveaway.
  params:
    - &ref_237
      desc: The messageid of a giveaway
      name: messageid
      optional: false
      type: ulong
greroll_ulong:
  args:
    - messageid
  desc: Rerolls a giveaway.
  params:
    - *ref_237
greroll_ulong_1:
  args:
    - messageid
  desc: Rerolls a giveaway.
  params:
    - *ref_237
greroll_ulong_2:
  args:
    - messageid
  desc: Rerolls a giveaway.
  params:
    - *ref_237
gstart:
  args:
    - chan time number text
  desc: Quick start a giveaway.
  params:
    - &ref_238
      desc: The channel to start the giveaway in
      name: chan
      optional: false
      type: ITextChannel
    - &ref_239
      desc: The amount of time the giveaway should go on
      name: time
      optional: false
      type: StoopidTime
    - &ref_240
      desc: The amount of winners
      name: winners
      optional: false
      type: int
    - &ref_241
      desc: The item to be given away
      name: what
      optional: false
      type: string
gstart_ITextChannel_StoopidTime_int_string:
  args:
    - chan time number text
  desc: Quick start a giveaway.
  params:
    - *ref_238
    - *ref_239
    - *ref_240
    - *ref_241
gstart_ITextChannel_StoopidTime_int_string_1:
  args:
    - chan time number text
  desc: Quick start a giveaway.
  params:
    - *ref_238
    - *ref_239
    - *ref_240
    - *ref_241
gstart_ITextChannel_StoopidTime_int_string_2:
  args:
    - chan time number text
  desc: Quick start a giveaway.
  params:
    - *ref_238
    - *ref_239
    - *ref_240
    - *ref_241
gstart_noparams:
  args:
    - ''
  desc: More detailed giveaway starting, lets you set a banner, ping role, and more.
  params: [ ]
gstart_noparams_1:
  args:
    - ''
  desc: More detailed giveaway starting, lets you set a banner, ping role, and more.
  params: [ ]
gstart_noparams_2:
  args:
    - ''
  desc: More detailed giveaway starting, lets you set a banner, ping role, and more.
  params: [ ]
gstart_noparams_3:
  args:
    - ''
  desc: More detailed giveaway starting, lets you set a banner, ping role, and more.
  params: [ ]
gstats:
  args:
    - ''
  desc: Shows the stats for giveaways.
  params: [ ]
gstats_noparams:
  args:
    - ''
  desc: Shows the stats for giveaways.
  params: [ ]
gstats_noparams_1:
  args:
    - ''
  desc: Shows the stats for giveaways.
  params: [ ]
gstats_noparams_2:
  args:
    - ''
  desc: Shows the stats for giveaways.
  params: [ ]
guide:
  args:
    - ''
  desc: Shows the guide for the bot.
  params: [ ]
guide_noparams:
  args:
    - ''
  desc: Shows the guide for the bot.
  params: [ ]
guide_noparams_1:
  args:
    - ''
  desc: Shows the guide for the bot.
  params: [ ]
guide_noparams_2:
  args:
    - ''
  desc: Shows the guide for the bot.
  params: [ ]
guildembeddelete:
  args:
    - name
  desc: Deletes a guild embed template (requires ManageMessages permission).
  params:
    - desc: The name of the embed template to delete.
      name: name
      optional: false
      type: string
guildembedlist:
  args:
    - ''
  desc: Lists all guild embed templates.
  params: [ ]
guildembedsave:
  args:
    - name
    - embedJson
  desc: Saves an embed template for guild use (requires ManageMessages permission).
  params:
    - desc: The name of the embed template.
      name: name
      optional: false
      type: string
    - desc: The JSON representation of the embed.
      name: embedJson
      optional: false
      type: string
guildstatsoptout:
  args:
    - ''
  desc: Allows you to opt the entire guild out of stats tracking.
  params: [ ]
guildstatsoptout_noparams:
  args:
    - ''
  desc: Allows you to opt the entire guild out of stats tracking.
  params: [ ]
guildstatsoptout_noparams_1:
  args:
    - ''
  desc: Allows you to opt the entire guild out of stats tracking.
  params: [ ]
guildstatsoptout_noparams_2:
  args:
    - ''
  desc: Allows you to opt the entire guild out of stats tracking.
  params: [ ]
gwinembedcolor:
  args:
    - text
  desc: Sets the color for the winning embed.
  params:
    - *ref_223
gwinembedcolor_string:
  args:
    - text
  desc: Sets the color for the winning embed.
  params:
    - *ref_223
gwinembedcolor_string_1:
  args:
    - text
  desc: Sets the color for the winning embed.
  params:
    - *ref_223
gwinembedcolor_string_2:
  args:
    - text
  desc: Sets the color for the winning embed.
  params:
    - *ref_223
h:
  args:
    - null
  desc: Shows help for a specific command.
  params:
    - *ref_1
h_=:
  args:
    - null
  desc: Shows help for a specific command.
  params:
    - *ref_1
h_=_1:
  args:
    - null
  desc: Shows help for a specific command.
  params:
    - *ref_1
h_=_2:
  args:
    - null
  desc: Shows help for a specific command.
  params:
    - *ref_1
handhold:
  args:
    - text
  desc: Holds someone's hand.
  params:
    - &ref_242
      desc: The person to tickle.
      name: toShow
      optional: false
      type: string
handhold_string:
  args:
    - text
  desc: Holds someone's hand.
  params:
    - *ref_242
handhold_string_1:
  args:
    - text
  desc: Holds someone's hand.
  params:
    - &ref_243
      desc: The person to pat.
      name: toShow
      optional: false
      type: string
handhold_string_2:
  args:
    - text
  desc: Holds someone's hand.
  params:
    - *ref_243
hangman:
  args:
    - '"random"'
  desc: Starts a hangman game with the specified type.
  params:
    - &ref_244
      desc: ''
      name: '"random"'
      optional: false
      type: '='
hangman_=:
  args:
    - '"random"'
  desc: Starts a hangman game with the specified type.
  params:
    - *ref_244
hangman_=_1:
  args:
    - '"random"'
  desc: Starts a hangman game with the specified type.
  params:
    - *ref_244
hangman_=_2:
  args:
    - '"random"'
  desc: Starts a hangman game with the specified type.
  params:
    - *ref_244
hangmanlist:
  args:
    - ''
  desc: Lists the available hangman types in the current guild.
  params: [ ]
hangmanlist_noparams:
  args:
    - ''
  desc: Lists the available hangman types in the current guild.
  params: [ ]
hangmanlist_noparams_1:
  args:
    - ''
  desc: A module containing Hangman commands.
  params: [ ]
hangmanlist_noparams_2:
  args:
    - ''
  desc: A module containing Hangman commands.
  params: [ ]
hangmanstop:
  args:
    - ''
  desc: Handles the event when the hangman game ends.
  params: [ ]
hangmanstop_noparams:
  args:
    - ''
  desc: Stops the currently running hangman game in the current channel.
  params: [ ]
hangmanstop_noparams_1:
  args:
    - ''
  desc: Handles the event when the hangman game ends.
  params: [ ]
hangmanstop_noparams_2:
  args:
    - ''
  desc: Stops the currently running hangman game in the current channel.
  params: [ ]
happy:
  args:
    - null
  desc: Expresses happiness.
  params:
    - *ref_1
happy_=:
  args:
    - null
  desc: Expresses happiness.
  params:
    - *ref_1
happy_=_1:
  args:
    - null
  desc: Expresses happiness.
  params:
    - *ref_1
happy_=_2:
  args:
    - null
  desc: Expresses happiness.
  params:
    - *ref_1
help:
  args:
    - command
  desc: Shows help information for commands.
  params:
    - desc: The command to get help for.
      name: command
      optional: true
      type: string
hentai:
  args:
    - text
  desc: >-
    Command to fetch and display NSFW content from the "hentai" subreddit with
    optional tags in the current guild channel or direct messages.
  params:
    - &ref_245
      desc: Optional tags to filter the NSFW content from each source.
      name: tags
      optional: false
      type: string[]
hentai_string[]:
  args:
    - text
  desc: >-
    Command to fetch and display NSFW content from the "hentai" subreddit with
    optional tags in the current guild channel or direct messages.
  params:
    - *ref_245
hentai_string[]_1:
  args:
    - text
  desc: >-
    Command to fetch and display NSFW content from the "hentai" subreddit with
    optional tags in the current guild channel or direct messages.
  params:
    - *ref_245
hentai_string[]_2:
  args:
    - text
  desc: >-
    Command to fetch and display NSFW content from the "hentai" subreddit with
    optional tags in the current guild channel or direct messages.
  params:
    - *ref_245
hentaibomb:
  args:
    - text
  desc: >-
    Command to initiate a "hentai bomb" by fetching and displaying NSFW content
    from multiple sources with optional tags in the current guild channel or
    direct messages.
  params:
    - *ref_245
hentaibomb_string[]:
  args:
    - text
  desc: >-
    Command to initiate a "hentai bomb" by fetching and displaying NSFW content
    from multiple sources with optional tags in the current guild channel or
    direct messages.
  params:
    - *ref_245
hentaibomb_string[]_1:
  args:
    - text
  desc: >-
    Command to initiate a "hentai bomb" by fetching and displaying NSFW content
    from multiple sources with optional tags in the current guild channel or
    direct messages.
  params:
    - *ref_245
hentaibomb_string[]_2:
  args:
    - text
  desc: >-
    Command to initiate a "hentai bomb" by fetching and displaying NSFW content
    from multiple sources with optional tags in the current guild channel or
    direct messages.
  params:
    - *ref_245
hentaigif:
  args:
    - ''
  desc: Command to fetch and display NSFW content from the "HENTAI_GIF" subreddit.
  params: [ ]
hentaigif_noparams:
  args:
    - ''
  desc: Command to fetch and display NSFW content from the "HENTAI_GIF" subreddit.
  params: [ ]
hentaigif_noparams_1:
  args:
    - ''
  desc: Command to fetch and display NSFW content from the "HENTAI_GIF" subreddit.
  params: [ ]
hentaigif_noparams_2:
  args:
    - ''
  desc: Command to fetch and display NSFW content from the "HENTAI_GIF" subreddit.
  params: [ ]
highfive:
  args:
    - text
  desc: Gives someone a high-five.
  params:
    - *ref_99
highfive_string:
  args:
    - text
  desc: Gives someone a high-five.
  params:
    - *ref_99
highfive_string_1:
  args:
    - text
  desc: Gives someone a high-five.
  params:
    - *ref_99
highfive_string_2:
  args:
    - text
  desc: Gives someone a high-five.
  params:
    - *ref_99
highlight:
  args:
    - add|list|delete null
    - add|list|delete
    - add
    - list
    - delete
  desc: The actions available for the highlight command.
  params:
    - &ref_246
      desc: >-
        ///  /// Possible values: Add, List, Delete, Remove, Match,
        ToggleIgnore, Toggle
      name: action
      optional: false
      type: HighlightActions
    - *ref_1
highlight_HighlightActions_=:
  args:
    - add|list|delete null
    - add|list|delete
    - add
    - list
    - delete
  desc: Toggles whether highlights are enabled
  params:
    - *ref_246
    - *ref_1
highlight_HighlightActions_=_1:
  args:
    - add|list|delete null
    - add|list|delete
    - add
    - list
    - delete
  desc: Module for managing highlights.
  params:
    - *ref_246
    - *ref_1
highlight_HighlightActions_=_2:
  args:
    - add|list|delete null
    - add|list|delete
    - add
    - list
    - delete
  desc: Toggles whether highlights are enabled
  params:
    - *ref_246
    - *ref_1
highlights:
  args:
    - action word
  desc: Manages user highlights.
  params:
    - desc: The action to perform with highlights.
      name: action
      optional: false
      type: string
    - desc: The word to highlight.
      name: word
      optional: true
      type: string
highlow:
  args:
    - text
  desc: >-
    Allows the user to guess whether the next number is higher or lower than the
    current number.
  params:
    - &ref_247
      desc: The user's guess ("higher" or "lower").
      name: guess
      optional: false
      type: string
highlow_string:
  args:
    - text
  desc: >-
    Allows the user to guess whether the next number is higher or lower than the
    current number.
  params:
    - *ref_247
highlow_string_1:
  args:
    - text
  desc: >-
    Allows the user to guess whether the next number is higher or lower than the
    current number.
  params:
    - *ref_247
highlow_string_2:
  args:
    - text
  desc: >-
    Allows the user to guess whether the next number is higher or lower than the
    current number.
  params:
    - *ref_247
hit:
  args:
    - ''
  desc: Hits and draws a new card for the player.
  params: [ ]
hit_noparams:
  args:
    - ''
  desc: Hits and draws a new card for the player.
  params: [ ]
hit_noparams_1:
  args:
    - ''
  desc: Hits and draws a new card for the player.
  params: [ ]
hit_noparams_2:
  args:
    - ''
  desc: Hits and draws a new card for the player.
  params: [ ]
horserace:
  args:
    - number
  desc: Joins or starts a horse race with a specified bet amount.
  params:
    - &ref_248
      desc: The amount of currency to bet on the race.
      name: betAmount
      optional: false
      type: int
horserace_int:
  args:
    - number
  desc: Joins or starts a horse race with a specified bet amount.
  params:
    - *ref_248
horserace_int_1:
  args:
    - number
  desc: Submodule for horse racing commands.
  params:
    - *ref_248
horserace_int_2:
  args:
    - number
  desc: Submodule for horse racing commands.
  params:
    - *ref_248
hug:
  args:
    - text
  desc: Hugs someone.
  params:
    - *ref_242
hug_string:
  args:
    - text
  desc: Hugs someone.
  params:
    - *ref_242
hug_string_1:
  args:
    - text
  desc: Hugs someone.
  params:
    - *ref_243
hug_string_2:
  args:
    - text
  desc: Hugs someone.
  params:
    - *ref_243
iam:
  args:
    - '@role'
  desc: Grants a user a self-assignable role.
  params:
    - &ref_249
      desc: The role to be assigned to the user.
      name: role
      optional: false
      type: IRole
iam_IRole:
  args:
    - '@role'
  desc: Grants a user a self-assignable role.
  params:
    - *ref_249
iam_IRole_1:
  args:
    - '@role'
  desc: Grants a user a self-assignable role.
  params:
    - *ref_249
iam_IRole_2:
  args:
    - '@role'
  desc: Grants a user a self-assignable role.
  params:
    - *ref_249
iamnot:
  args:
    - '@role'
  desc: Removes a self-assigned role from the user.
  params:
    - &ref_250
      desc: The role to be removed from the user.
      name: role
      optional: false
      type: IRole
iamnot_IRole:
  args:
    - '@role'
  desc: Removes a self-assigned role from the user.
  params:
    - *ref_250
iamnot_IRole_1:
  args:
    - '@role'
  desc: Removes a self-assigned role from the user.
  params:
    - *ref_250
iamnot_IRole_2:
  args:
    - '@role'
  desc: Removes a self-assigned role from the user.
  params:
    - *ref_250
image:
  args:
    - text
  desc: >-
    Fetches and displays a random image from the specified category using
    Martine API.
  params:
    - &ref_251
      desc: ''
      name: query
      optional: false
      type: string
image_string:
  args:
    - text
  desc: Execute the Image command
  params:
    - &ref_252
      desc: The search query for the image.
      name: query
      optional: false
      type: string
image_string_1:
  args:
    - text
  desc: >-
    Fetches and displays a random image from the specified category using
    Martine API.
  params:
    - *ref_251
image_string_2:
  args:
    - text
  desc: Execute the Image command
  params:
    - *ref_252
imagesreload:
  args:
    - ''
  desc: Initiates the reloading of images used by the bot.
  params: [ ]
imagesreload_noparams:
  args:
    - ''
  desc: Initiates the reloading of images used by the bot.
  params: [ ]
imagesreload_noparams_1:
  args:
    - ''
  desc: Initiates the reloading of images used by the bot.
  params: [ ]
imagesreload_noparams_2:
  args:
    - ''
  desc: Initiates the reloading of images used by the bot.
  params: [ ]
implementchannel:
  args:
    - null
  desc: Sets the channel where implemented suggestions are posted.
  params:
    - *ref_1
implementchannel_=:
  args:
    - null
  desc: Execute the ImplementChannel command
  params:
    - *ref_1
implementchannel_=_1:
  args:
    - null
  desc: Sets the channel where implemented suggestions are posted.
  params:
    - *ref_1
implementchannel_=_2:
  args:
    - null
  desc: Execute the ImplementChannel command
  params:
    - *ref_1
implemented:
  args:
    - sid null
    - sid
  desc: Marks a suggestion as implemented.
  params:
    - *ref_143
    - *ref_1
implemented_ulong_=:
  args:
    - sid null
    - sid
  desc: Marks a suggestion as implemented.
  params:
    - *ref_143
    - *ref_1
implemented_ulong_=_1:
  args:
    - sid null
    - sid
  desc: Marks a suggestion as implemented.
  params:
    - *ref_143
    - *ref_1
implemented_ulong_=_2:
  args:
    - sid null
    - sid
  desc: Marks a suggestion as implemented.
  params:
    - *ref_143
    - *ref_1
implementmessage:
  args:
    - text
  desc: Sets or updates the implement message for suggestions.
  params:
    - *ref_2
implementmessage_string:
  args:
    - text
  desc: Execute the ImplementMessage command
  params:
    - *ref_2
implementmessage_string_1:
  args:
    - text
  desc: Sets or updates the implement message for suggestions.
  params:
    - *ref_2
implementmessage_string_2:
  args:
    - text
  desc: Execute the ImplementMessage command
  params:
    - *ref_2
importrolelist:
  args:
    - false
  desc: >-
    Imports roles and user associations from a text file, applying the specified
    roles to the mentioned users.
  params:
    - *ref_181
importrolelist_=:
  args:
    - false
  desc: >-
    Imports roles and user associations from a text file, applying the specified
    roles to the mentioned users.
  params:
    - *ref_181
importrolelist_=_1:
  args:
    - false
  desc: >-
    Imports roles and user associations from a text file, applying the specified
    roles to the mentioned users.
  params:
    - *ref_181
importrolelist_=_2:
  args:
    - false
  desc: >-
    Imports roles and user associations from a text file, applying the specified
    roles to the mentioned users.
  params:
    - *ref_181
inrole:
  args:
    - '@role'
  desc: Shows a list of users in a specified role.
  params:
    - &ref_253
      desc: The role to search for.
      name: role
      optional: false
      type: IRole
inrole_IRole:
  args:
    - '@role'
  desc: Shows a list of users in a specified role.
  params:
    - *ref_253
inrole_IRole_1:
  args:
    - '@role'
  desc: Shows a list of users in a specified role.
  params:
    - *ref_253
inrole_IRole_2:
  args:
    - '@role'
  desc: Shows a list of users in a specified role.
  params:
    - *ref_253
inroles:
  args:
    - '@role @role'
  desc: Shows a list of users in the specified roles.
  params:
    - &ref_254
      desc: The first role to search for.
      name: role
      optional: false
      type: IRole
    - &ref_255
      desc: The second role to search for.
      name: role2
      optional: false
      type: IRole
inroles_IRole_IRole:
  args:
    - '@role @role'
  desc: Shows a list of users in the specified roles.
  params:
    - *ref_254
    - *ref_255
inroles_IRole_IRole_1:
  args:
    - '@role @role'
  desc: Shows a list of users in the specified roles.
  params:
    - *ref_254
    - *ref_255
inroles_IRole_IRole_2:
  args:
    - '@role @role'
  desc: Shows a list of users in the specified roles.
  params:
    - *ref_254
    - *ref_255
instancestatus:
  args:
    - number
  desc: Checks the status of a specific bot instance.
  params:
    - &ref_256
      desc: The port number of the instance to check
      name: instancePort
      optional: false
      type: int
instancestatus_int:
  args:
    - number
  desc: Checks the status of a specific bot instance.
  params:
    - *ref_256
invite:
  args:
    - ''
  desc: >-
    Gets the bots invite link. As well as showing the website, docs, and support
    server.
  params: [ ]
invite_noparams:
  args:
    - ''
  desc: >-
    Gets the bots invite link. As well as showing the website, docs, and support
    server.
  params: [ ]
invite_noparams_1:
  args:
    - ''
  desc: >-
    Gets the bots invite link. As well as showing the website, docs, and support
    server.
  params: [ ]
invite_noparams_2:
  args:
    - ''
  desc: >-
    Gets the bots invite link. As well as showing the website, docs, and support
    server.
  params: [ ]
invitedusers:
  args:
    - null
  desc: Displays a list of users invited by a specific user.
  params:
    - *ref_1
invitedusers_=:
  args:
    - null
  desc: Displays a list of users invited by a specific user.
  params:
    - *ref_1
invitedusers_=_1:
  args:
    - null
  desc: Displays a list of users invited by a specific user.
  params:
    - *ref_1
invitedusers_=_2:
  args:
    - null
  desc: Displays a list of users invited by a specific user.
  params:
    - *ref_1
inviteleaderboard:
  args:
    - ''
  desc: Displays a leaderboard of users with the most invites.
  params: [ ]
inviteleaderboard_noparams:
  args:
    - ''
  desc: Displays a leaderboard of users with the most invites.
  params: [ ]
inviteleaderboard_noparams_1:
  args:
    - ''
  desc: Displays a leaderboard of users with the most invites.
  params: [ ]
inviteleaderboard_noparams_2:
  args:
    - ''
  desc: Displays a leaderboard of users with the most invites.
  params: [ ]
invites:
  args:
    - null
  desc: Initializes a new instance of the InviteCommands class.
  params:
    - *ref_1
invites_=:
  args:
    - null
  desc: Displays the number of invites for a user.
  params:
    - *ref_1
invites_=_1:
  args:
    - null
  desc: Provides commands for managing and viewing invite-related information.
  params:
    - *ref_1
invites_=_2:
  args:
    - null
  desc: Displays the number of invites for a user.
  params:
    - *ref_1
invitesettings:
  args:
    - ''
  desc: Displays the current invite settings for the guild.
  params: [ ]
invitesettings_noparams:
  args:
    - ''
  desc: Displays the current invite settings for the guild.
  params: [ ]
invitesettings_noparams_1:
  args:
    - ''
  desc: Displays the current invite settings for the guild.
  params: [ ]
invitesettings_noparams_2:
  args:
    - ''
  desc: Displays the current invite settings for the guild.
  params: [ ]
invwarn:
  args:
    - text
  desc: Enables or disables warnings for invite links posted in the current guild.
  params:
    - *ref_219
invwarn_string:
  args:
    - text
  desc: Execute the InvWarn command
  params:
    - *ref_219
invwarn_string_1:
  args:
    - text
  desc: Enables or disables warnings for invite links posted in the current guild.
  params:
    - *ref_219
invwarn_string_2:
  args:
    - text
  desc: Execute the InvWarn command
  params:
    - *ref_219
join:
  args:
    - ''
  desc: A module containing music commands.
  params: [ ]
join_noparams:
  args:
    - ''
  desc: A module containing music commands.
  params: [ ]
joinstats:
  args:
    - ''
  desc: Generates and sends a graph displaying the join statistics of the server.
  params: [ ]
joinstats_noparams:
  args:
    - ''
  desc: Generates and sends a graph displaying the join statistics of the server.
  params: [ ]
joinstats_noparams_1:
  args:
    - ''
  desc: Commands for managing join and leave statistics.
  params: [ ]
joinstats_noparams_2:
  args:
    - ''
  desc: Commands for managing join and leave statistics.
  params: [ ]
joinstatscolor:
  args:
    - number number number
  desc: Sets the color for the join statistics graph.
  params:
    - &ref_257
      desc: Red component of the color.
      name: r
      optional: false
      type: int
    - &ref_258
      desc: Green component of the color.
      name: g
      optional: false
      type: int
    - &ref_259
      desc: Blue component of the color.
      name: b
      optional: false
      type: int
joinstatscolor_int_int_int:
  args:
    - number number number
  desc: Sets the color for the join statistics graph.
  params:
    - *ref_257
    - *ref_258
    - *ref_259
joinstatscolor_int_int_int_1:
  args:
    - number number number
  desc: Sets the color for the join statistics graph.
  params:
    - *ref_257
    - *ref_258
    - *ref_259
joinstatscolor_int_int_int_2:
  args:
    - number number number
  desc: Sets the color for the join statistics graph.
  params:
    - *ref_257
    - *ref_258
    - *ref_259
joinstatscolor_noparams:
  args:
    - ''
  desc: >-
    Sets the default color for the join statistics graph to gold. This method is
    a convenience command that applies a predefined color without the need for
    RGB input.
  params: [ ]
joinstatscolor_noparams_1:
  args:
    - ''
  desc: >-
    Sets the default color for the join statistics graph to gold. This method is
    a convenience command that applies a predefined color without the need for
    RGB input.
  params: [ ]
joinstatscolor_noparams_2:
  args:
    - ''
  desc: >-
    Sets the default color for the join statistics graph to gold. This method is
    a convenience command that applies a predefined color without the need for
    RGB input.
  params: [ ]
joinstatscolor_noparams_3:
  args:
    - ''
  desc: >-
    Sets the default color for the join statistics graph to gold. This method is
    a convenience command that applies a predefined color without the need for
    RGB input.
  params: [ ]
karaoke:
  args:
    - true
  desc: >-
    Applies or removes a karaoke filter that attempts to remove vocals from the
    track.
  params:
    - *ref_57
karaoke_=:
  args:
    - true
  desc: Execute the Karaoke command
  params:
    - *ref_57
karaoke_=_1:
  args:
    - true
  desc: >-
    Applies or removes a karaoke filter that attempts to remove vocals from the
    track.
  params:
    - *ref_57
karaoke_=_2:
  args:
    - true
  desc: Execute the Karaoke command
  params:
    - *ref_57
keno:
  args:
    - number text
  desc: Play Keno - pick numbers and hope they match.
  params:
    - desc: The amount to bet.
      name: betAmount
      optional: false
      type: long
    - desc: Up to 10 numbers between 1-80, separated by spaces.
      name: numbers
      optional: false
      type: string
kick:
  args:
    - '@user null'
  desc: Kicks a user.
  params:
    - &ref_260
      desc: The user to kick
      name: user
      optional: true
      type: IGuildUser
    - *ref_1
kick_IGuildUser_=:
  args:
    - '@user null'
  desc: Kicks a user.
  params:
    - *ref_260
    - *ref_1
kick_IGuildUser_=_1:
  args:
    - '@user null'
  desc: Kicks a user.
  params:
    - *ref_260
    - *ref_1
kick_IGuildUser_=_2:
  args:
    - '@user null'
  desc: Kicks a user.
  params:
    - *ref_260
    - *ref_1
kick_ulong_=:
  args:
    - userid null
    - userid
  desc: Kicks a user.
  params:
    - &ref_261
      desc: The ID of the user to kick
      name: userId
      optional: false
      type: ulong
    - *ref_1
kick_ulong_=_1:
  args:
    - userid null
    - userid
  desc: Kicks a user.
  params:
    - *ref_261
    - *ref_1
kick_ulong_=_2:
  args:
    - userid null
    - userid
  desc: Kicks a user.
  params:
    - *ref_261
    - *ref_1
kick_ulong_=_3:
  args:
    - userid null
    - userid
  desc: Kicks a user.
  params:
    - *ref_261
    - *ref_1
kickunder:
  args:
    - time null
    - time
  desc: Kicks users who have been in the server for less than a specified time.
  params:
    - &ref_262
      desc: Time duration in a custom format
      name: time
      optional: false
      type: StoopidTime
    - *ref_1
kickunder_StoopidTime_=:
  args:
    - time null
    - time
  desc: Execute the KickUnder command
  params:
    - *ref_262
    - *ref_1
kickunder_StoopidTime_=_1:
  args:
    - time null
    - time
  desc: Kicks users who have been in the server for less than a specified time.
  params:
    - *ref_262
    - *ref_1
kickunder_StoopidTime_=_2:
  args:
    - time null
    - time
  desc: Execute the KickUnder command
  params:
    - *ref_262
    - *ref_1
kiss:
  args:
    - text
  desc: Kisses someone.
  params:
    - *ref_242
kiss_string:
  args:
    - text
  desc: Kisses someone.
  params:
    - *ref_242
kiss_string_1:
  args:
    - text
  desc: Kisses someone.
  params:
    - *ref_243
kiss_string_2:
  args:
    - text
  desc: Kisses someone.
  params:
    - *ref_242
konachan:
  args:
    - text
  desc: >-
    Command to fetch and display NSFW content from the Konachan image board with
    optional tags in the current guild channel or direct messages.
  params:
    - &ref_263
      desc: Optional tags to filter the NSFW content from the Sankaku image board.
      name: tags
      optional: false
      type: string[]
konachan_string[]:
  args:
    - text
  desc: >-
    Command to fetch and display NSFW content from the Konachan image board with
    optional tags in the current guild channel or direct messages.
  params:
    - *ref_263
konachan_string[]_1:
  args:
    - text
  desc: >-
    Command to fetch and display NSFW content from the Konachan image board with
    optional tags in the current guild channel or direct messages.
  params:
    - *ref_263
konachan_string[]_2:
  args:
    - text
  desc: >-
    Command to fetch and display NSFW content from the Konachan image board with
    optional tags in the current guild channel or direct messages.
  params:
    - *ref_263
langsetdefault:
  args:
    - language
  desc: Sets the default language for the server.
  params:
    - desc: The language code to set as default.
      name: language
      optional: false
      type: string
languageset:
  args:
    - text
  desc: Sets the language for the current guild.
  params:
    - &ref_264
      desc: The name of the language or "default" to reset to the default language.
      name: name
      optional: false
      type: string
languageset_string:
  args:
    - text
  desc: Sets the language for the current guild.
  params:
    - *ref_264
languageset_string_1:
  args:
    - text
  desc: Module for managing the bot's language settings.
  params:
    - *ref_159
languageset_string_2:
  args:
    - text
  desc: Sets the language for the current guild.
  params:
    - *ref_264
languagesetdefault:
  args:
    - ''
  desc: Displays the default language for the bot.
  params: [ ]
languagesetdefault_noparams:
  args:
    - ''
  desc: Displays the default language for the bot.
  params: [ ]
languagesetdefault_noparams_1:
  args:
    - ''
  desc: Displays the default language for the bot.
  params: [ ]
languagesetdefault_noparams_2:
  args:
    - ''
  desc: Displays the default language for the bot.
  params: [ ]
languagesetdefault_string:
  args:
    - text
  desc: Sets the default language for the bot.
  params:
    - *ref_264
languagesetdefault_string_1:
  args:
    - text
  desc: Sets the default language for the bot.
  params:
    - *ref_264
languagesetdefault_string_2:
  args:
    - text
  desc: Sets the default language for the bot.
  params:
    - *ref_264
languagesetdefault_string_3:
  args:
    - text
  desc: Sets the default language for the bot.
  params:
    - *ref_264
languagesetdefault_string_4:
  args:
    - text
  desc: Sets the default language for the bot by specifying a culture name.
  params:
    - &ref_265
      desc: >-
        /// The name of the culture to set as the default language. Use
        "default" to reset to the bot's original /// default language. ///
      name: name
      optional: false
      type: string
languagesetdefault_string_5:
  args:
    - text
  desc: Execute the LanguageSetDefault command
  params:
    - *ref_265
languagesetdefault_string_6:
  args:
    - text
  desc: Sets the default language for the bot by specifying a culture name.
  params:
    - *ref_265
languagesetdefault_string_7:
  args:
    - text
  desc: Execute the LanguageSetDefault command
  params:
    - *ref_265
languageslist:
  args:
    - ''
  desc: Lists all supported languages along with their codes.
  params: [ ]
languageslist_noparams:
  args:
    - ''
  desc: Lists all supported languages along with their codes.
  params: [ ]
languageslist_noparams_1:
  args:
    - ''
  desc: Lists all supported languages along with their codes.
  params: [ ]
languageslist_noparams_2:
  args:
    - ''
  desc: Lists all supported languages along with their codes.
  params: [ ]
laugh:
  args:
    - null
  desc: Laughs.
  params:
    - *ref_1
laugh_=:
  args:
    - null
  desc: Laughs.
  params:
    - *ref_1
laugh_=_1:
  args:
    - null
  desc: Laughs.
  params:
    - *ref_1
laugh_=_2:
  args:
    - null
  desc: Laughs.
  params:
    - *ref_1
leaderboard:
  args:
    - ''
  desc: Displays the leaderboard of users with the highest balances.
  params: [ ]
leaderboard_=:
  args:
    - 1
  desc: Shows the XP leaderboard for the server.
  params:
    - *ref_95
leaderboard_=_1:
  args:
    - 1
  desc: Shows the XP leaderboard for the server.
  params:
    - *ref_95
leaderboard_=_2:
  args:
    - 1
  desc: Shows the XP leaderboard for the server.
  params:
    - *ref_95
leaderboard_=_3:
  args:
    - 1
  desc: Shows the XP leaderboard for the server.
  params:
    - *ref_95
leaderboard_noparams:
  args:
    - ''
  desc: Displays the leaderboard of users with the highest balances.
  params: [ ]
leaderboard_noparams_1:
  args:
    - ''
  desc: Displays the leaderboard of users with the highest balances.
  params: [ ]
leaderboard_noparams_2:
  args:
    - ''
  desc: Displays the leaderboard of users with the highest balances.
  params: [ ]
leave:
  args:
    - ''
  desc: Disconnects the bot from the voice channel.
  params: [ ]
leave_noparams:
  args:
    - ''
  desc: Disconnects the bot from the voice channel.
  params: [ ]
leavehook:
  args:
    - chan text null null
  desc: Sets up a webhook for leave messages with an optional image.
  params:
    - &ref_266
      desc: The text channel to set up the webhook in.
      name: chan
      optional: true
      type: ITextChannel
    - &ref_267
      desc: The name of the webhook.
      name: name
      optional: true
      type: string
    - *ref_1
    - *ref_1
leavehook_ITextChannel_string_=_=:
  args:
    - chan text null null
  desc: Execute the LeaveHook command
  params:
    - *ref_266
    - *ref_267
    - *ref_1
    - *ref_1
leavehook_ITextChannel_string_=_=_1:
  args:
    - chan text null null
  desc: Sets up a webhook for leave messages with an optional image.
  params:
    - *ref_266
    - *ref_267
    - *ref_1
    - *ref_1
leavehook_ITextChannel_string_=_=_2:
  args:
    - chan text null null
  desc: Execute the LeaveHook command
  params:
    - *ref_266
    - *ref_267
    - *ref_1
    - *ref_1
leavehook_string:
  args:
    - text
  desc: Sets up a leave message using the specified text.
  params:
    - &ref_268
      desc: The text to include in the leave message.
      name: text
      optional: false
      type: string
leavehook_string_1:
  args:
    - text
  desc: Sets up a leave message using the specified text.
  params:
    - *ref_268
leavehook_string_2:
  args:
    - text
  desc: Sets up a leave message using the specified text.
  params:
    - *ref_268
leavehook_string_3:
  args:
    - text
  desc: Sets up a leave message using the specified text.
  params:
    - *ref_268
leaveserver:
  args:
    - text
  desc: Commands the bot to leave a server.
  params:
    - &ref_269
      desc: The identifier or name of the guild to leave.
      name: guildStr
      optional: false
      type: string
leaveserver_string:
  args:
    - text
  desc: Commands the bot to leave a server.
  params:
    - *ref_269
leaveserver_string_1:
  args:
    - text
  desc: Commands the bot to leave a server.
  params:
    - *ref_269
leaveserver_string_2:
  args:
    - text
  desc: Commands the bot to leave a server.
  params:
    - *ref_269
leavestats:
  args:
    - ''
  desc: Generates and sends a graph displaying the leave statistics of the server.
  params: [ ]
leavestats_noparams:
  args:
    - ''
  desc: Generates and sends a graph displaying the leave statistics of the server.
  params: [ ]
leavestats_noparams_1:
  args:
    - ''
  desc: Generates and sends a graph displaying the leave statistics of the server.
  params: [ ]
leavestats_noparams_2:
  args:
    - ''
  desc: Generates and sends a graph displaying the leave statistics of the server.
  params: [ ]
leavestatscolor:
  args:
    - number number number
  desc: >-
    Sets the default color for the leave statistics graph using specific RGB
    values. Allows for precise control over the graph's appearance.
  params:
    - &ref_270
      desc: Red component of the color, between 0 and 255.
      name: r
      optional: false
      type: int
    - &ref_271
      desc: Green component of the color, between 0 and 255.
      name: g
      optional: false
      type: int
    - &ref_272
      desc: Blue component of the color, between 0 and 255.
      name: b
      optional: false
      type: int
leavestatscolor_int_int_int:
  args:
    - number number number
  desc: Execute the LeaveStatsColor command
  params:
    - *ref_270
    - *ref_271
    - *ref_272
leavestatscolor_int_int_int_1:
  args:
    - number number number
  desc: >-
    Sets the default color for the leave statistics graph using specific RGB
    values. Allows for precise control over the graph's appearance.
  params:
    - *ref_270
    - *ref_271
    - *ref_272
leavestatscolor_int_int_int_2:
  args:
    - number number number
  desc: Execute the LeaveStatsColor command
  params:
    - *ref_270
    - *ref_271
    - *ref_272
leavestatscolor_noparams:
  args:
    - ''
  desc: >-
    Sets the default color for the leave statistics graph to gold. This method
    is a convenience command that applies a predefined color without the need
    for RGB input.
  params: [ ]
leavestatscolor_noparams_1:
  args:
    - ''
  desc: Execute the LeaveStatsColor command
  params: [ ]
leavestatscolor_noparams_2:
  args:
    - ''
  desc: >-
    Sets the default color for the leave statistics graph to gold. This method
    is a convenience command that applies a predefined color without the need
    for RGB input.
  params: [ ]
leavestatscolor_noparams_3:
  args:
    - ''
  desc: Execute the LeaveStatsColor command
  params: [ ]
levelnotif:
  args:
    - type
  desc: Sets how users are notified when they level up.
  params:
    - &ref_273
      desc: 'The notification type: None, Channel, or DM.'
      name: type
      optional: false
      type: XpNotificationType
levelnotif_XpNotificationType:
  args:
    - type
  desc: Sets how users are notified when they level up.
  params:
    - *ref_273
levelnotif_XpNotificationType_1:
  args:
    - type
  desc: Sets how users are notified when they level up.
  params:
    - *ref_273
levelnotif_XpNotificationType_2:
  args:
    - type
  desc: Sets how users are notified when they level up.
  params:
    - *ref_273
levelupchannel:
  args:
    - '#channel'
  desc: Sets the channel where level-up notifications will be sent.
  params:
    - desc: >-
        The channel to send level-up notifications to. Leave empty to use the
        current channel.
      name: channel
      optional: true
      type: ITextChannel
levelupmessages:
  args:
    - ''
  desc: Lists all custom level-up messages for this server.
  params: [ ]
leveluppings:
  args:
    - enabled
  desc: Toggles level-up ping notifications for yourself.
  params:
    - desc: Whether to enable (true) or disable (false) level-up pings.
      name: enabled
      optional: false
      type: bool
levelupplaceholders:
  args:
    - ''
  desc: Shows available level-up placeholders that can be used in custom messages.
  params: [ ]
liftlockdown:
  args:
    - lockdowntype.readonly
  desc: >-
    Lifts the lockdown based on the specified lockdown type (Joins, Readonly,
    Full).
  params:
    - &ref_274
      desc: ''
      name: LockdownType.Readonly
      optional: false
      type: '='
liftlockdown_=:
  args:
    - lockdowntype.readonly
  desc: >-
    Lifts the lockdown based on the specified lockdown type (Joins, Readonly,
    Full).
  params:
    - *ref_274
liftlockdown_=_1:
  args:
    - lockdowntype.readonly
  desc: >-
    Lifts the lockdown based on the specified lockdown type (Joins, Readonly,
    Full).
  params:
    - *ref_274
liftlockdown_=_2:
  args:
    - lockdowntype.readonly
  desc: >-
    Lifts the lockdown based on the specified lockdown type (Joins, Readonly,
    Full).
  params:
    - *ref_274
linux:
  args:
    - text text
  desc: Funni interjecting linux command
  params:
    - &ref_275
      desc: The name to replace "GNU".
      name: guhnoo
      optional: false
      type: string
    - &ref_276
      desc: The name to replace "Linux".
      name: loonix
      optional: false
      type: string
linux_string_string:
  args:
    - text text
  desc: Funni interjecting linux command
  params:
    - *ref_275
    - *ref_276
linux_string_string_1:
  args:
    - text text
  desc: Funni interjecting linux command
  params:
    - *ref_275
    - *ref_276
linux_string_string_2:
  args:
    - text text
  desc: Funni interjecting linux command
  params:
    - *ref_275
    - *ref_276
listblacklists:
  args:
    - ''
  desc: Lists all blacklisted and whitelisted roles and permissions.
  params: [ ]
listblacklists_noparams:
  args:
    - ''
  desc: Lists all blacklisted and whitelisted roles and permissions.
  params: [ ]
listblacklists_noparams_1:
  args:
    - ''
  desc: Lists all blacklisted and whitelisted roles and permissions.
  params: [ ]
listblacklists_noparams_2:
  args:
    - ''
  desc: Lists all blacklisted and whitelisted roles and permissions.
  params: [ ]
listchattriggers:
  args:
    - ''
  desc: Lists all chat triggers.
  params: [ ]
listchattriggers_noparams:
  args:
    - ''
  desc: Lists all chat triggers.
  params: [ ]
listchattriggers_noparams_1:
  args:
    - ''
  desc: Lists all chat triggers.
  params: [ ]
listchattriggers_noparams_2:
  args:
    - ''
  desc: Lists all chat triggers.
  params: [ ]
listchattriggersgroup:
  args:
    - ''
  desc: Lists all chat triggers grouped by trigger.
  params: [ ]
listchattriggersgroup_noparams:
  args:
    - ''
  desc: Lists all chat triggers grouped by trigger.
  params: [ ]
listchattriggersgroup_noparams_1:
  args:
    - ''
  desc: Lists all chat triggers grouped by trigger.
  params: [ ]
listchattriggersgroup_noparams_2:
  args:
    - ''
  desc: Lists all chat triggers grouped by trigger.
  params: [ ]
listinstances:
  args:
    - ''
  desc: Lists all registered bot instances and their status.
  params: [ ]
listinstances_noparams:
  args:
    - ''
  desc: Lists all registered bot instances and their status.
  params: [ ]
listmodalfields:
  args:
    - number
  desc: Lists all fields in a ticket creation modal
  params:
    - &ref_277
      desc: ''
      name: buttonId
      optional: false
      type: int
listmodalfields_int:
  args:
    - number
  desc: Lists all fields in a ticket creation modal
  params:
    - *ref_277
listmodalfields_int_1:
  args:
    - number
  desc: Lists all fields in a ticket creation modal
  params:
    - *ref_277
listmodalfields_int_2:
  args:
    - number
  desc: Lists all fields in a ticket creation modal
  params:
    - *ref_277
listmodalfields_int_3:
  args:
    - number
  desc: Lists all fields in a ticket creation modal
  params:
    - *ref_277
listmodalfields_int_4:
  args:
    - number
  desc: Lists all fields in a ticket creation modal
  params:
    - *ref_277
listoptions:
  args:
    - text
  desc: Lists all options in a select menu
  params:
    - &ref_278
      desc: The ID of the menu to view
      name: menuId
      optional: false
      type: string
listoptions_string:
  args:
    - text
  desc: Lists all options in a select menu
  params:
    - *ref_278
listoptions_string_1:
  args:
    - text
  desc: Lists all options in a select menu
  params:
    - *ref_278
listoptions_string_2:
  args:
    - text
  desc: Lists all options in a select menu
  params:
    - *ref_278
listoptions_string_3:
  args:
    - text
  desc: Lists all options in a select menu
  params:
    - *ref_278
listoptions_string_4:
  args:
    - text
  desc: Lists all options in a select menu
  params:
    - *ref_278
listperms:
  args:
    - ''
  desc: Lists the permissions for the guild.
  params: [ ]
listperms_noparams:
  args:
    - ''
  desc: Lists the permissions for the guild.
  params: [ ]
listperms_noparams_1:
  args:
    - ''
  desc: Lists the permissions for the guild.
  params: [ ]
listperms_noparams_2:
  args:
    - ''
  desc: Lists the permissions for the guild.
  params: [ ]
listplaying:
  args:
    - ''
  desc: Lists all statuses currently in the rotation.
  params: [ ]
listplaying_noparams:
  args:
    - ''
  desc: Lists all statuses currently in the rotation.
  params: [ ]
listplaying_noparams_1:
  args:
    - ''
  desc: Lists all statuses currently in the rotation.
  params: [ ]
listplaying_noparams_2:
  args:
    - ''
  desc: Lists all statuses currently in the rotation.
  params: [ ]
listquotes:
  args:
    - ordertype.keyword
  desc: Lists quotes in the guild. Quotes can be ordered by keyword or date added.
  params:
    - &ref_279
      desc: ''
      name: OrderType.Keyword
      optional: false
      type: '='
listquotes_=:
  args:
    - ordertype.keyword
  desc: Lists quotes in the guild. Quotes can be ordered by keyword or date added.
  params:
    - *ref_279
listquotes_=_1:
  args:
    - ordertype.keyword
  desc: >-
    Provides commands for managing and displaying quotes within a guild. I dont
    know why you would use this when chat triggers exist.
  params:
    - *ref_279
listquotes_=_2:
  args:
    - ordertype.keyword
  desc: Lists quotes in the guild. Quotes can be ordered by keyword or date added.
  params:
    - *ref_279
listquotes_=_=:
  args:
    - 1 ordertype.keyword
  desc: >-
    Lists quotes in the guild on a specific page. Quotes can be ordered by
    keyword or date added.
  params:
    - *ref_95
    - *ref_279
listquotes_=_=_1:
  args:
    - 1 ordertype.keyword
  desc: >-
    Lists quotes in the guild on a specific page. Quotes can be ordered by
    keyword or date added.
  params:
    - *ref_95
    - *ref_279
listquotes_=_=_2:
  args:
    - 1 ordertype.keyword
  desc: >-
    Lists quotes in the guild on a specific page. Quotes can be ordered by
    keyword or date added.
  params:
    - *ref_95
    - *ref_279
listquotes_=_=_3:
  args:
    - 1 ordertype.keyword
  desc: >-
    Lists quotes in the guild on a specific page. Quotes can be ordered by
    keyword or date added.
  params:
    - *ref_95
    - *ref_279
listservers:
  args:
    - ''
  desc: Lists all servers the bot is currently in.
  params: [ ]
listservers_noparams:
  args:
    - ''
  desc: Lists all servers the bot is currently in.
  params: [ ]
listservers_noparams_1:
  args:
    - ''
  desc: Lists all servers the bot is currently in.
  params: [ ]
listservers_noparams_2:
  args:
    - ''
  desc: Lists all servers the bot is currently in.
  params: [ ]
liststarboards:
  args:
    - ''
  desc: Lists all starboard configurations in the guild.
  params: [ ]
liststarboards_noparams:
  args:
    - ''
  desc: Lists all starboard configurations in the guild.
  params: [ ]
liststarboards_noparams_1:
  args:
    - ''
  desc: Lists all starboard configurations in the guild.
  params: [ ]
liststarboards_noparams_2:
  args:
    - ''
  desc: Lists all starboard configurations in the guild.
  params: [ ]
liststatusroles:
  args:
    - ''
  desc: Lists all current status roles with their details.
  params: [ ]
liststatusroles_noparams:
  args:
    - ''
  desc: Lists all current status roles with their details.
  params: [ ]
liststatusroles_noparams_1:
  args:
    - ''
  desc: Lists all current status roles with their details.
  params: [ ]
liststatusroles_noparams_2:
  args:
    - ''
  desc: Lists all current status roles with their details.
  params: [ ]
loadplaylist:
  args:
    - text false
    - text
  desc: Loads a previously saved playlist into the queue.
  params:
    - &ref_280
      desc: The name of the playlist to load.
      name: name
      optional: false
      type: string
    - *ref_181
loadplaylist_string_=:
  args:
    - text false
    - text
  desc: Loads a previously saved playlist into the queue.
  params:
    - *ref_280
    - *ref_181
lock:
  args:
    - null
  desc: Enables or disables slowmode in a channel, with customizable duration.
  params:
    - *ref_1
lock_=:
  args:
    - null
  desc: Enables or disables slowmode in a channel, with customizable duration.
  params:
    - *ref_1
lock_=_1:
  args:
    - null
  desc: Enables or disables slowmode in a channel, with customizable duration.
  params:
    - *ref_1
lock_=_2:
  args:
    - null
  desc: Enables or disables slowmode in a channel, with customizable duration.
  params:
    - *ref_1
lockdown:
  args:
    - lockdowntype.readonly punishmentaction.ban false
  desc: >-
    Locks down the server based on the specified lockdown type (Joins, Readonly,
    Full).
  params:
    - *ref_274
    - &ref_281
      desc: ''
      name: PunishmentAction.Ban
      optional: false
      type: '='
    - *ref_181
lockdown_=_=_=:
  args:
    - lockdowntype.readonly punishmentaction.ban false
  desc: Execute the Lockdown command
  params:
    - *ref_274
    - *ref_281
    - *ref_181
lockdown_=_=_=_1:
  args:
    - lockdowntype.readonly punishmentaction.ban false
  desc: Represents the type of lockdown that can be applied to the server.
  params:
    - *ref_274
    - *ref_281
    - *ref_181
lockdown_=_=_=_2:
  args:
    - lockdowntype.readonly punishmentaction.ban false
  desc: Execute the Lockdown command
  params:
    - *ref_274
    - *ref_281
    - *ref_181
log:
  args:
    - types
  desc: Sets multiple logging channels for specified event types at once.
  params:
    - &ref_283
      desc: The types of events to set the logging channel for.
      name: types
      optional: true
      type: LogType[]
log_LogType[]:
  args:
    - types
  desc: Sets multiple logging channels for specified event types at once.
  params:
    - *ref_283
log_LogType[]_1:
  args:
    - types
  desc: Sets multiple logging channels for specified event types at once.
  params:
    - *ref_283
log_LogType[]_2:
  args:
    - types
  desc: Sets multiple logging channels for specified event types at once.
  params:
    - *ref_283
log_LogType_=:
  args:
    - type null
    - type
  desc: Sets the logging channel for a specific event type.
  params:
    - &ref_282
      desc: The type of event to set the logging channel for.
      name: type
      optional: false
      type: LogType
    - *ref_1
log_LogType_=_1:
  args:
    - type null
    - type
  desc: Execute the Log command
  params:
    - *ref_282
    - *ref_1
log_LogType_=_2:
  args:
    - type null
    - type
  desc: Sets the logging channel for a specific event type.
  params:
    - *ref_282
    - *ref_1
log_LogType_=_3:
  args:
    - type null
    - type
  desc: Execute the Log command
  params:
    - *ref_282
    - *ref_1
log_string[]:
  args:
    - text
  desc: >-
    Sets multiple logging channels for different event types at once using
    channel-type pairs.
  params:
    - &ref_284
      desc: >-
        Strings containing channel-type pairs in the format
        "#channel:Type1,Type2"
      name: channelTypePairs
      optional: false
      type: string[]
log_string[]_1:
  args:
    - text
  desc: Execute the Log command
  params:
    - *ref_284
log_string[]_2:
  args:
    - text
  desc: >-
    Sets multiple logging channels for different event types at once using
    channel-type pairs.
  params:
    - *ref_284
log_string[]_3:
  args:
    - text
  desc: Execute the Log command
  params:
    - *ref_284
logcategory:
  args:
    - type null
    - type
  desc: Sets the logging category for a specified type of logs.
  params:
    - &ref_285
      desc: The type of logs to set the category for.
      name: type
      optional: false
      type: LogCommandService.LogCategoryTypes
    - *ref_1
logcategory_LogCommandService_LogCategoryTypes_=:
  args:
    - type null
    - type
  desc: Execute the LogCategory command
  params:
    - *ref_285
    - *ref_1
logcategory_LogCommandService_LogCategoryTypes_=_1:
  args:
    - type null
    - type
  desc: Module for logging commands.
  params:
    - *ref_285
    - *ref_1
logcategory_LogCommandService_LogCategoryTypes_=_2:
  args:
    - type null
    - type
  desc: Execute the LogCategory command
  params:
    - *ref_285
    - *ref_1
logevents:
  args:
    - ''
  desc: Displays the current logging events configuration for the guild.
  params: [ ]
logevents_noparams:
  args:
    - ''
  desc: Displays the current logging events configuration for the guild.
  params: [ ]
logevents_noparams_1:
  args:
    - ''
  desc: Displays the current logging events configuration for the guild.
  params: [ ]
logevents_noparams_2:
  args:
    - ''
  desc: Displays the current logging events configuration for the guild.
  params: [ ]
logignore:
  args:
    - channel
  desc: Sets a channel to be ignored from logging.
  params:
    - desc: >-
        The channel to ignore or unignore from logging. If not specified, uses
        current channel.
      name: channel
      optional: true
      type: ITextChannel
logignorelist:
  args:
    - ''
  desc: Shows all channels currently ignored from logging.
  params: [ ]
loop:
  args:
    - repeattype
  desc: Sets if the bot should loop and how.
  params:
    - &ref_286
      desc: The repeat type.
      name: repeatType
      optional: false
      type: PlayerRepeatType
loop_PlayerRepeatType:
  args:
    - repeattype
  desc: Sets if the bot should loop and how.
  params:
    - *ref_286
lottery:
  args:
    - number
  desc: Buy lottery tickets for a chance to win big.
  params:
    - desc: Number of tickets to buy (1-10).
      name: ticketCount
      optional: true
      type: int
lsar:
  args:
    - ''
  desc: Lists the auto-self-assignable roles configured for the guild.
  params: [ ]
lsar_noparams:
  args:
    - ''
  desc: Lists the auto-self-assignable roles configured for the guild.
  params: [ ]
lsar_noparams_1:
  args:
    - ''
  desc: Lists the auto-self-assignable roles configured for the guild.
  params: [ ]
lsar_noparams_2:
  args:
    - ''
  desc: Lists the auto-self-assignable roles configured for the guild.
  params: [ ]
lstfilterwords:
  args:
    - ''
  desc: Lists all words currently on the filtered words list for the current guild.
  params: [ ]
lstfilterwords_noparams:
  args:
    - ''
  desc: Execute the LstFilterWords command
  params: [ ]
lstfilterwords_noparams_1:
  args:
    - ''
  desc: Lists all words currently on the filtered words list for the current guild.
  params: [ ]
lstfilterwords_noparams_2:
  args:
    - ''
  desc: Execute the LstFilterWords command
  params: [ ]
magicitem:
  args:
    - ''
  desc: Retrieves a magic item description related to World of Warcraft.
  params: [ ]
magicitem_noparams:
  args:
    - ''
  desc: Retrieves a magic item description related to World of Warcraft.
  params: [ ]
magicitem_noparams_1:
  args:
    - ''
  desc: Retrieves a magic item description related to World of Warcraft.
  params: [ ]
magicitem_noparams_2:
  args:
    - ''
  desc: Retrieves a magic item description related to World of Warcraft.
  params: [ ]
mal:
  args:
    - text
  desc: Retrieves and displays information about a MyAnimeList profile.
  params:
    - &ref_288
      desc: The username of the MyAnimeList profile.
      name: name
      optional: true
      type: string
mal_IGuildUser:
  args:
    - '@user'
  desc: >-
    Retrieves and displays information about a MyAnimeList profile for a
    specified user in the current guild.
  params:
    - &ref_287
      desc: The user for whom to retrieve the MyAnimeList profile information.
      name: usr
      optional: false
      type: IGuildUser
mal_IGuildUser_1:
  args:
    - '@user'
  desc: Execute the Mal command
  params:
    - *ref_287
mal_IGuildUser_2:
  args:
    - '@user'
  desc: >-
    Retrieves and displays information about a MyAnimeList profile for a
    specified user in the current guild.
  params:
    - *ref_287
mal_IGuildUser_3:
  args:
    - '@user'
  desc: Execute the Mal command
  params:
    - *ref_287
mal_string:
  args:
    - text
  desc: Execute the Mal command
  params:
    - *ref_288
mal_string_1:
  args:
    - text
  desc: Retrieves and displays information about a MyAnimeList profile.
  params:
    - *ref_288
mal_string_2:
  args:
    - text
  desc: Execute the Mal command
  params:
    - *ref_288
manga:
  args:
    - text
  desc: Searches for manga and displays information about the search results.
  params:
    - *ref_66
manga_string:
  args:
    - text
  desc: Execute the Manga command
  params:
    - *ref_66
manga_string_1:
  args:
    - text
  desc: Searches for manga and displays information about the search results.
  params:
    - *ref_66
manga_string_2:
  args:
    - text
  desc: Execute the Manga command
  params:
    - *ref_66
manualblacklistcheck:
  args:
    - ''
  desc: Performs a manual check for blacklisted entities across the bot's scope.
  params: [ ]
manualblacklistcheck_noparams:
  args:
    - ''
  desc: Performs a manual check for blacklisted entities across the bot's scope.
  params: [ ]
manualblacklistcheck_noparams_1:
  args:
    - ''
  desc: Performs a manual check for blacklisted entities across the bot's scope.
  params: [ ]
manualblacklistcheck_noparams_2:
  args:
    - ''
  desc: Performs a manual check for blacklisted entities across the bot's scope.
  params: [ ]
masskick:
  args:
    - '@user'
  desc: Kicks multiple users.
  params:
    - &ref_289
      desc: The users to kick
      name: usersUnp
      optional: false
      type: IUser[]
masskick_IUser[]:
  args:
    - '@user'
  desc: Kicks multiple users.
  params:
    - *ref_289
masskick_IUser[]_1:
  args:
    - '@user'
  desc: Kicks multiple users.
  params:
    - *ref_289
masskick_IUser[]_2:
  args:
    - '@user'
  desc: Kicks multiple users.
  params:
    - *ref_289
masskill:
  args:
    - text
  desc: >-
    Massbans users. Use this to ban multiple users at once. Blacklists them from
    the bot as well.
  params:
    - &ref_290
      desc: ''
      name: people
      optional: false
      type: string
masskill_string:
  args:
    - text
  desc: >-
    Massbans users. Use this to ban multiple users at once. Blacklists them from
    the bot as well.
  params:
    - *ref_290
masskill_string_1:
  args:
    - text
  desc: >-
    Massbans users. Use this to ban multiple users at once. Blacklists them from
    the bot as well.
  params:
    - *ref_290
masskill_string_2:
  args:
    - text
  desc: >-
    Massbans users. Use this to ban multiple users at once. Blacklists them from
    the bot as well.
  params:
    - *ref_290
massnickprogress:
  args:
    - ''
  desc: The thing used for addrole in commands to be able to parse it
  params: [ ]
massnickprogress_noparams:
  args:
    - ''
  desc: The thing used for addrole in commands to be able to parse it
  params: [ ]
massnickprogress_noparams_1:
  args:
    - ''
  desc: Module for user punishment commands.
  params: [ ]
massnickprogress_noparams_2:
  args:
    - ''
  desc: The thing used for addrole in commands to be able to parse it
  params: [ ]
massnickstop:
  args:
    - ''
  desc: Stops a mass nickname operation.
  params: [ ]
massnickstop_noparams:
  args:
    - ''
  desc: Stops a mass nickname operation.
  params: [ ]
massnickstop_noparams_1:
  args:
    - ''
  desc: Stops a mass nickname operation.
  params: [ ]
massnickstop_noparams_2:
  args:
    - ''
  desc: Stops a mass nickname operation.
  params: [ ]
maxsuggestionlength:
  args:
    - number
  desc: Sets the maximum length for suggestions.
  params:
    - &ref_291
      desc: The maximum number of characters a suggestion can have.
      name: length
      optional: false
      type: int
maxsuggestionlength_int:
  args:
    - number
  desc: Sets the maximum length for suggestions.
  params:
    - *ref_291
maxsuggestionlength_int_1:
  args:
    - number
  desc: Sets the maximum length for suggestions.
  params:
    - *ref_291
maxsuggestionlength_int_2:
  args:
    - number
  desc: Sets the maximum length for suggestions.
  params:
    - *ref_291
memberrole:
  args:
    - '@role'
  desc: Sets the member role for the server. Currently unused.
  params:
    - &ref_292
      desc: The role that members will have.
      name: role
      optional: true
      type: IRole
memberrole_IRole:
  args:
    - '@role'
  desc: Sets the member role for the server. Currently unused.
  params:
    - *ref_292
memberrole_IRole_1:
  args:
    - '@role'
  desc: Sets the member role for the server. Currently unused.
  params:
    - *ref_292
memberrole_IRole_2:
  args:
    - '@role'
  desc: Sets the member role for the server. Currently unused.
  params:
    - *ref_292
meme:
  args:
    - ''
  desc: Fetches and displays a random meme from Reddit.
  params: [ ]
meme_noparams:
  args:
    - ''
  desc: Fetches and displays a random meme from Reddit.
  params: [ ]
meme_noparams_1:
  args:
    - ''
  desc: >-
    The Searches module provides commands for searching and retrieving various
    types of information. It includes commands for searching memes, Reddit
    posts, weather, and more.
  params: [ ]
meme_noparams_2:
  args:
    - ''
  desc: Fetches and displays a random meme from Reddit.
  params: [ ]
memegen:
  args:
    - text null
    - text
  desc: Generates a meme with the specified template and text.
  params:
    - &ref_293
      desc: The name of the meme template.
      name: meme
      optional: false
      type: string
    - *ref_1
memegen_string_=:
  args:
    - text null
    - text
  desc: Execute the Memegen command
  params:
    - *ref_293
    - *ref_1
memegen_string_=_1:
  args:
    - text null
    - text
  desc: Generates a meme with the specified template and text.
  params:
    - *ref_293
    - *ref_1
memegen_string_=_2:
  args:
    - text null
    - text
  desc: Execute the Memegen command
  params:
    - *ref_293
    - *ref_1
memelist:
  args:
    - ''
  desc: Lists available meme templates.
  params: [ ]
memelist_noparams:
  args:
    - ''
  desc: Lists available meme templates.
  params: [ ]
memelist_noparams_1:
  args:
    - ''
  desc: Module for generating memes using the memegen API.
  params: [ ]
memelist_noparams_2:
  args:
    - ''
  desc: Lists available meme templates.
  params: [ ]
memory:
  args:
    - number text
  desc: Play a memory game for currency rewards.
  params:
    - desc: The amount to bet.
      name: betAmount
      optional: false
      type: long
    - desc: The difficulty level (easy, medium, hard).
      name: difficulty
      optional: true
      type: string
minesweeper:
  args:
    - number text
  desc: Play a Minesweeper-style gambling game.
  params:
    - desc: The amount to bet.
      name: betAmount
      optional: false
      type: long
    - desc: Grid size (small, medium, large).
      name: size
      optional: true
      type: string
minmessagecountlength:
  args:
    - 0
  desc: Sets the minimum length for a message to count
  params:
    - *ref_90
minmessagecountlength_=:
  args:
    - 0
  desc: Sets the minimum length for a message to count
  params:
    - *ref_90
minmessagecountlength_=_1:
  args:
    - 0
  desc: Sets the minimum length for a message to count
  params:
    - *ref_90
minmessagecountlength_=_2:
  args:
    - 0
  desc: Sets the minimum length for a message to count
  params:
    - *ref_90
minmsglength:
  args:
    - length
  desc: Sets minimum message count length.
  params:
    - desc: The minimum message length.
      name: length
      optional: false
      type: int
minsuggestionlength:
  args:
    - number
  desc: Sets the minimum length for suggestions.
  params:
    - &ref_294
      desc: The minimum number of characters a suggestion must have.
      name: length
      optional: false
      type: int
minsuggestionlength_int:
  args:
    - number
  desc: Sets the minimum length for suggestions.
  params:
    - *ref_294
minsuggestionlength_int_1:
  args:
    - number
  desc: Sets the minimum length for suggestions.
  params:
    - *ref_294
minsuggestionlength_int_2:
  args:
    - number
  desc: Sets the minimum length for suggestions.
  params:
    - *ref_294
modifybalance:
  args:
    - '@user number null'
    - '@user number'
  desc: Adds money to a users balance
  params:
    - &ref_295
      desc: The user to add it to.
      name: user
      optional: false
      type: IUser
    - &ref_296
      desc: The amount to add, dont go too crazy lol. Can be negative
      name: amount
      optional: false
      type: long
    - *ref_1
modifybalance_IUser_long_=:
  args:
    - '@user number null'
    - '@user number'
  desc: Adds money to a users balance
  params:
    - *ref_295
    - *ref_296
    - *ref_1
modifybalance_IUser_long_=_1:
  args:
    - '@user number null'
    - '@user number'
  desc: Adds money to a users balance
  params:
    - *ref_295
    - *ref_296
    - *ref_1
modifybalance_IUser_long_=_2:
  args:
    - '@user number null'
    - '@user number'
  desc: Adds money to a users balance
  params:
    - *ref_295
    - *ref_296
    - *ref_1
modules:
  args:
    - ''
  desc: Shows a list of all modules. Is basically just a help alias at this point.
  params: [ ]
modules_noparams:
  args:
    - ''
  desc: Shows a list of all modules. Is basically just a help alias at this point.
  params: [ ]
modules_noparams_1:
  args:
    - ''
  desc: Shows a list of all modules. Is basically just a help alias at this point.
  params: [ ]
modules_noparams_2:
  args:
    - ''
  desc: Shows a list of all modules. Is basically just a help alias at this point.
  params: [ ]
moveperm:
  args:
    - number number
  desc: Moves a permission higher in the heirarchy.
  params:
    - &ref_297
      desc: Initial Index
      name: from
      optional: false
      type: int
    - &ref_298
      desc: Replacement index
      name: to
      optional: false
      type: int
moveperm_int_int:
  args:
    - number number
  desc: Moves a permission higher in the heirarchy.
  params:
    - *ref_297
    - *ref_298
moveperm_int_int_1:
  args:
    - number number
  desc: Moves a permission higher in the heirarchy.
  params:
    - *ref_297
    - *ref_298
moveperm_int_int_2:
  args:
    - number number
  desc: Moves a permission higher in the heirarchy.
  params:
    - *ref_297
    - *ref_298
movesong:
  args:
    - number number
  desc: Moves a song in the queue to a new position.
  params:
    - &ref_299
      desc: The current position of the song.
      name: from
      optional: false
      type: int
    - &ref_300
      desc: The new position of the song.
      name: to
      optional: false
      type: int
movesong_int_int:
  args:
    - number number
  desc: Moves a song in the queue to a new position.
  params:
    - *ref_299
    - *ref_300
moveto:
  args:
    - channel
  desc: Moves the command issuer to a specified voice channel.
  params:
    - &ref_301
      desc: The target voice channel to move the user to.
      name: channel
      optional: false
      type: IVoiceChannel
moveto_IVoiceChannel:
  args:
    - channel
  desc: Moves the command issuer to a specified voice channel.
  params:
    - *ref_301
moveto_IVoiceChannel_1:
  args:
    - channel
  desc: Moves the command issuer to a specified voice channel.
  params:
    - *ref_301
moveto_IVoiceChannel_2:
  args:
    - channel
  desc: Moves the command issuer to a specified voice channel.
  params:
    - *ref_301
moveuserto:
  args:
    - '@user channel'
  desc: Moves a specified user to a given voice channel.
  params:
    - &ref_302
      desc: The user to be moved.
      name: user
      optional: false
      type: IGuildUser
    - *ref_301
moveuserto_IGuildUser_IVoiceChannel:
  args:
    - '@user channel'
  desc: Moves a specified user to a given voice channel.
  params:
    - *ref_233
    - *ref_301
moveuserto_IGuildUser_IVoiceChannel_1:
  args:
    - '@user channel'
  desc: Moves a specified user to a given voice channel.
  params:
    - *ref_302
    - *ref_301
moveuserto_IGuildUser_IVoiceChannel_2:
  args:
    - '@user channel'
  desc: Moves a specified user to a given voice channel.
  params:
    - *ref_233
    - *ref_301
movie:
  args:
    - null
  desc: >-
    Fetches and displays information about a movie from IMDb based on the
    provided query.
  params:
    - *ref_1
movie_=:
  args:
    - null
  desc: Execute the Movie command
  params:
    - *ref_1
movie_=_1:
  args:
    - null
  desc: >-
    Fetches and displays information about a movie from IMDb based on the
    provided query.
  params:
    - *ref_1
movie_=_2:
  args:
    - null
  desc: Execute the Movie command
  params:
    - *ref_1
multigreetadd:
  args:
    - null
  desc: The types of MultiGreets.
  params:
    - *ref_1
multigreetadd_=:
  args:
    - null
  desc: Executes all MultiGreets.
  params:
    - *ref_1
multigreetadd_=_1:
  args:
    - null
  desc: Module for MultiGreets.
  params:
    - *ref_1
multigreetadd_=_2:
  args:
    - null
  desc: Executes all MultiGreets.
  params:
    - *ref_1
multigreetdelete:
  args:
    - number time
  desc: Changes the delete time for a MultiGreet message.
  params:
    - &ref_303
      desc: The id of the MultiGreet to change
      name: id
      optional: false
      type: int
    - &ref_305
      desc: The time to delete the message after
      name: time
      optional: false
      type: StoopidTime
multigreetdelete_int_StoopidTime:
  args:
    - number time
  desc: Changes the delete time for a MultiGreet message.
  params:
    - *ref_303
    - *ref_305
multigreetdelete_int_StoopidTime_1:
  args:
    - number time
  desc: Changes the delete time for a MultiGreet message.
  params:
    - *ref_303
    - *ref_305
multigreetdelete_int_StoopidTime_2:
  args:
    - number time
  desc: Changes the delete time for a MultiGreet message.
  params:
    - *ref_303
    - *ref_305
multigreetdelete_int_int:
  args:
    - number number
  desc: Changes the delete time for a MultiGreet message in seconds.
  params:
    - *ref_303
    - &ref_304
      desc: The time to delete the message after in seconds
      name: howlong
      optional: false
      type: int
multigreetdelete_int_int_1:
  args:
    - number number
  desc: Changes the delete time for a MultiGreet message in seconds.
  params:
    - *ref_303
    - *ref_304
multigreetdelete_int_int_2:
  args:
    - number number
  desc: Changes the delete time for a MultiGreet message in seconds.
  params:
    - *ref_303
    - *ref_304
multigreetdelete_int_int_3:
  args:
    - number number
  desc: Changes the delete time for a MultiGreet message in seconds.
  params:
    - *ref_303
    - *ref_304
multigreetdisable:
  args:
    - number true|false
  desc: Disables a MultiGreet.
  params:
    - &ref_306
      desc: The id of the MultiGreet to disable
      name: num
      optional: false
      type: int
    - &ref_307
      desc: Whether to disable the MultiGreet
      name: enabled
      optional: false
      type: bool
multigreetdisable_int_bool:
  args:
    - number true|false
  desc: Disables a MultiGreet.
  params:
    - *ref_306
    - *ref_307
multigreetdisable_int_bool_1:
  args:
    - number true|false
  desc: Disables a MultiGreet.
  params:
    - *ref_306
    - *ref_307
multigreetdisable_int_bool_2:
  args:
    - number true|false
  desc: Disables a MultiGreet.
  params:
    - *ref_306
    - *ref_307
multigreetgreetbots:
  args:
    - number true|false
  desc: Changes whether a MultiGreet greets bots.
  params:
    - &ref_308
      desc: The id of the MultiGreet to change
      name: num
      optional: false
      type: int
    - &ref_309
      desc: Whether to greet bots
      name: enabled
      optional: false
      type: bool
multigreetgreetbots_int_bool:
  args:
    - number true|false
  desc: Changes whether a MultiGreet greets bots.
  params:
    - *ref_308
    - *ref_309
multigreetgreetbots_int_bool_1:
  args:
    - number true|false
  desc: Changes whether a MultiGreet greets bots.
  params:
    - *ref_308
    - *ref_309
multigreetgreetbots_int_bool_2:
  args:
    - number true|false
  desc: Changes whether a MultiGreet greets bots.
  params:
    - *ref_308
    - *ref_309
multigreetlist:
  args:
    - ''
  desc: Lists all MultiGreets.
  params: [ ]
multigreetlist_noparams:
  args:
    - ''
  desc: Lists all MultiGreets.
  params: [ ]
multigreetlist_noparams_1:
  args:
    - ''
  desc: Lists all MultiGreets.
  params: [ ]
multigreetlist_noparams_2:
  args:
    - ''
  desc: Lists all MultiGreets.
  params: [ ]
multigreetmessage:
  args:
    - number null
    - number
  desc: Changes the message for a MultiGreet.
  params:
    - *ref_303
    - *ref_1
multigreetmessage_int_=:
  args:
    - number null
    - number
  desc: Changes the message for a MultiGreet.
  params:
    - *ref_303
    - *ref_1
multigreetmessage_int_=_1:
  args:
    - number null
    - number
  desc: Changes the message for a MultiGreet.
  params:
    - *ref_303
    - *ref_1
multigreetmessage_int_=_2:
  args:
    - number null
    - number
  desc: Changes the message for a MultiGreet.
  params:
    - *ref_303
    - *ref_1
multigreetremove:
  args:
    - number
  desc: Removes a MultiGreet channel.
  params:
    - &ref_310
      desc: The id of the MultiGreet to remove
      name: id
      optional: false
      type: int
multigreetremove_ITextChannel:
  args:
    - channel
  desc: Removes all MultiGreets from a channel.
  params:
    - &ref_311
      desc: The channel to remove MultiGreets from
      name: channel
      optional: false
      type: ITextChannel
multigreetremove_ITextChannel_1:
  args:
    - channel
  desc: Removes all MultiGreets from a channel.
  params:
    - *ref_311
multigreetremove_ITextChannel_2:
  args:
    - channel
  desc: Removes all MultiGreets from a channel.
  params:
    - *ref_311
multigreetremove_ITextChannel_3:
  args:
    - channel
  desc: Removes all MultiGreets from a channel.
  params:
    - *ref_311
multigreetremove_int:
  args:
    - number
  desc: Removes a MultiGreet channel.
  params:
    - *ref_310
multigreetremove_int_1:
  args:
    - number
  desc: Removes a MultiGreet channel.
  params:
    - *ref_310
multigreetremove_int_2:
  args:
    - number
  desc: Removes a MultiGreet channel.
  params:
    - *ref_310
multigreettype:
  args:
    - multigreet|randomgreet|off
    - multigreet
    - randomgreet
    - 'off'
  desc: Changes the type of MultiGreet.
  params:
    - &ref_312
      desc: >-
        The type of MultiGreet to set Possible values: MultiGreet, RandomGreet,
        Off
      name: types
      optional: false
      type: MultiGreetTypes
multigreettype_MultiGreetTypes:
  args:
    - multigreet|randomgreet|off
    - multigreet
    - randomgreet
    - 'off'
  desc: Changes the type of MultiGreet.
  params:
    - *ref_312
multigreettype_MultiGreetTypes_1:
  args:
    - multigreet|randomgreet|off
    - multigreet
    - randomgreet
    - 'off'
  desc: Changes the type of MultiGreet.
  params:
    - *ref_312
multigreettype_MultiGreetTypes_2:
  args:
    - multigreet|randomgreet|off
    - multigreet
    - randomgreet
    - 'off'
  desc: Changes the type of MultiGreet.
  params:
    - *ref_312
multigreetwebhook:
  args:
    - number null null
    - number
  desc: Changes the webhook for a MultiGreet.
  params:
    - *ref_303
    - *ref_1
    - *ref_1
multigreetwebhook_int_=_=:
  args:
    - number null null
    - number
  desc: Changes the webhook for a MultiGreet.
  params:
    - *ref_303
    - *ref_1
    - *ref_1
multigreetwebhook_int_=_=_1:
  args:
    - number null null
    - number
  desc: Changes the webhook for a MultiGreet.
  params:
    - *ref_303
    - *ref_1
    - *ref_1
multigreetwebhook_int_=_=_2:
  args:
    - number null null
    - number
  desc: Changes the webhook for a MultiGreet.
  params:
    - *ref_303
    - *ref_1
    - *ref_1
musicsettings:
  args:
    - ''
  desc: Gets the guilds current settings for music.
  params: [ ]
musicsettings_noparams:
  args:
    - ''
  desc: Gets the guilds current settings for music.
  params: [ ]
mute:
  args:
    - '@user ""'
  desc: Mutes a user.
  params:
    - &ref_313
      desc: The user to mute
      name: target
      optional: true
      type: IGuildUser
    - *ref_126
mute_IGuildUser_=:
  args:
    - '@user ""'
  desc: Mutes a user.
  params:
    - *ref_313
    - *ref_126
mute_IGuildUser_=_1:
  args:
    - '@user ""'
  desc: Mutes a user.
  params:
    - *ref_313
    - *ref_126
mute_IGuildUser_=_2:
  args:
    - '@user ""'
  desc: Mutes a user.
  params:
    - *ref_313
    - *ref_126
mute_IGuildUser_StoopidTime_=:
  args:
    - '@user time ""'
    - time
  desc: Mutes a user for a specified amount of time.
  params:
    - *ref_127
    - *ref_129
    - *ref_126
mute_IGuildUser_StoopidTime_=_1:
  args:
    - '@user time ""'
    - time
  desc: Mutes a user for a specified amount of time.
  params:
    - *ref_127
    - *ref_129
    - *ref_126
mute_IGuildUser_StoopidTime_=_2:
  args:
    - '@user time ""'
    - time
  desc: Mutes a user for a specified amount of time.
  params:
    - *ref_127
    - *ref_129
    - *ref_126
mute_IGuildUser_StoopidTime_=_3:
  args:
    - '@user time ""'
    - time
  desc: Mutes a user for a specified amount of time.
  params:
    - *ref_127
    - *ref_129
    - *ref_126
mute_StoopidTime_IGuildUser_=:
  args:
    - time @user ""
    - time
  desc: Mutes a user for a specified amount of time.
  params:
    - *ref_129
    - *ref_127
    - *ref_126
mute_StoopidTime_IGuildUser_=_1:
  args:
    - time @user ""
    - time
  desc: Mutes a user for a specified amount of time.
  params:
    - *ref_129
    - *ref_127
    - *ref_126
mute_StoopidTime_IGuildUser_=_2:
  args:
    - time @user ""
    - time
  desc: Mutes a user for a specified amount of time.
  params:
    - *ref_129
    - *ref_127
    - *ref_126
mute_StoopidTime_IGuildUser_=_3:
  args:
    - time @user ""
    - time
  desc: Mutes a user for a specified amount of time.
  params:
    - *ref_129
    - *ref_127
    - *ref_126
muterole:
  args:
    - null
  desc: Sets the mute role for the guild.
  params:
    - *ref_1
muterole_=:
  args:
    - null
  desc: Sets the mute role for the guild.
  params:
    - *ref_1
muterole_=_1:
  args:
    - null
  desc: Sets the mute role for the guild.
  params:
    - *ref_1
muterole_=_2:
  args:
    - null
  desc: Sets the mute role for the guild.
  params:
    - *ref_1
mwarn:
  args:
    - '@user null'
    - '@user'
  desc: Mini Warns a user.
  params:
    - &ref_314
      desc: The user to warn
      name: user
      optional: false
      type: IGuildUser
    - *ref_1
mwarn_IGuildUser_=:
  args:
    - '@user null'
    - '@user'
  desc: Mini Warns a user.
  params:
    - *ref_314
    - *ref_1
mwarn_IGuildUser_=_1:
  args:
    - '@user null'
    - '@user'
  desc: Mini Warns a user.
  params:
    - *ref_314
    - *ref_1
mwarn_IGuildUser_=_2:
  args:
    - '@user null'
    - '@user'
  desc: Mini Warns a user.
  params:
    - *ref_314
    - *ref_1
mwarnclear:
  args:
    - '@user 0'
    - '@user'
  desc: >-
    Clears a user's mini warnings. If index is specified, clears only that
    warning.
  params:
    - &ref_315
      desc: The user to clear the warnings for
      name: user
      optional: false
      type: IGuildUser
    - *ref_90
mwarnclear_IGuildUser_=:
  args:
    - '@user 0'
    - '@user'
  desc: >-
    Clears a user's mini warnings. If index is specified, clears only that
    warning.
  params:
    - *ref_315
    - *ref_90
mwarnclear_IGuildUser_=_1:
  args:
    - '@user 0'
    - '@user'
  desc: >-
    Clears a user's mini warnings. If index is specified, clears only that
    warning.
  params:
    - *ref_315
    - *ref_90
mwarnclear_IGuildUser_=_2:
  args:
    - '@user 0'
    - '@user'
  desc: >-
    Clears a user's mini warnings. If index is specified, clears only that
    warning.
  params:
    - *ref_315
    - *ref_90
mwarnclear_ulong_=:
  args:
    - userid 0
    - userid
  desc: >-
    Clears a user's mini warnings. If index is specified, clears only that
    warning.
  params:
    - &ref_316
      desc: The user id to clear the warnings for
      name: userId
      optional: false
      type: ulong
    - *ref_90
mwarnclear_ulong_=_1:
  args:
    - userid 0
    - userid
  desc: >-
    Clears a user's mini warnings. If index is specified, clears only that
    warning.
  params:
    - *ref_316
    - *ref_90
mwarnclear_ulong_=_2:
  args:
    - userid 0
    - userid
  desc: >-
    Clears a user's mini warnings. If index is specified, clears only that
    warning.
  params:
    - *ref_316
    - *ref_90
mwarnclear_ulong_=_3:
  args:
    - userid 0
    - userid
  desc: >-
    Clears a user's mini warnings. If index is specified, clears only that
    warning.
  params:
    - *ref_316
    - *ref_90
mwarnexpire:
  args:
    - number warnexpireaction.clear
    - number
  desc: Sets the mini warn expire time.
  params:
    - &ref_317
      desc: The number of days to set
      name: days
      optional: false
      type: int
    - &ref_318
      desc: ''
      name: WarnExpireAction.Clear
      optional: false
      type: '='
mwarnexpire_int_=:
  args:
    - number warnexpireaction.clear
    - number
  desc: Sets the mini warn expire time.
  params:
    - *ref_317
    - *ref_318
mwarnexpire_int_=_1:
  args:
    - number warnexpireaction.clear
    - number
  desc: Sets the mini warn expire time.
  params:
    - *ref_317
    - *ref_318
mwarnexpire_int_=_2:
  args:
    - number warnexpireaction.clear
    - number
  desc: Sets the mini warn expire time.
  params:
    - *ref_317
    - *ref_318
mwarnlog:
  args:
    - number @user
  desc: Gets the mini warnlog for a user.
  params:
    - &ref_319
      desc: The page number
      name: page
      optional: false
      type: int
    - &ref_320
      desc: ''
      name: user
      optional: false
      type: IGuildUser
mwarnlog_=:
  args:
    - null
  desc: Gets the mini warnlog for a user.
  params:
    - *ref_1
mwarnlog_=_1:
  args:
    - null
  desc: Gets the mini warnlog for a user.
  params:
    - *ref_1
mwarnlog_=_2:
  args:
    - null
  desc: Gets the mini warnlog for a user.
  params:
    - *ref_1
mwarnlog_=_3:
  args:
    - null
  desc: Gets the mini warnlog for a user.
  params:
    - *ref_1
mwarnlog_int_IGuildUser:
  args:
    - number @user
  desc: Gets the mini warnlog for a user.
  params:
    - *ref_319
    - *ref_320
mwarnlog_int_IGuildUser_1:
  args:
    - number @user
  desc: Gets the mini warnlog for a user.
  params:
    - *ref_319
    - *ref_320
mwarnlog_int_IGuildUser_2:
  args:
    - number @user
  desc: Gets the mini warnlog for a user.
  params:
    - *ref_319
    - *ref_320
mwarnlog_int_ulong:
  args:
    - number userid
  desc: Gets the mini warnlog for a user.
  params:
    - *ref_319
    - &ref_321
      desc: The user id to get the warnlog for
      name: userId
      optional: false
      type: ulong
mwarnlog_int_ulong_1:
  args:
    - number userid
  desc: Gets the mini warnlog for a user.
  params:
    - *ref_319
    - *ref_321
mwarnlog_int_ulong_2:
  args:
    - number userid
  desc: Gets the mini warnlog for a user.
  params:
    - *ref_319
    - *ref_321
mwarnlog_int_ulong_3:
  args:
    - number userid
  desc: Gets the mini warnlog for a user.
  params:
    - *ref_319
    - *ref_321
mwarnlog_ulong:
  args:
    - userid
  desc: Gets the mini warnlog for a user.
  params:
    - *ref_321
mwarnlog_ulong_1:
  args:
    - userid
  desc: Gets the mini warnlog for a user.
  params:
    - *ref_321
mwarnlog_ulong_2:
  args:
    - userid
  desc: Gets the mini warnlog for a user.
  params:
    - *ref_321
mwarnlog_ulong_3:
  args:
    - userid
  desc: Gets the mini warnlog for a user.
  params:
    - *ref_321
mwarnlogall:
  args:
    - ''
  desc: Gets the mini warnlog for all users.
  params: [ ]
mwarnlogall_noparams:
  args:
    - ''
  desc: Gets the mini warnlog for all users.
  params: [ ]
mwarnlogall_noparams_1:
  args:
    - ''
  desc: Gets the mini warnlog for all users.
  params: [ ]
mwarnlogall_noparams_2:
  args:
    - ''
  desc: Gets the mini warnlog for all users.
  params: [ ]
mwarnpunish:
  args:
    - number addrole @role null
    - number addrole @role
    - addrole
  desc: Sets the mini warn punishment.
  params:
    - &ref_322
      desc: The number of warnings
      name: number
      optional: false
      type: int
    - &ref_323
      desc: 'The addrole thing Possible values: AddRole'
      name: _
      optional: false
      type: AddRole
    - &ref_324
      desc: The role to add (used only if addrole is specified)
      name: role
      optional: false
      type: IRole
    - *ref_1
mwarnpunish_int:
  args:
    - number
  desc: Removes a mini warn punishment.
  params:
    - *ref_322
mwarnpunish_int_1:
  args:
    - number
  desc: Removes a mini warn punishment.
  params:
    - *ref_322
mwarnpunish_int_2:
  args:
    - number
  desc: Removes a mini warn punishment.
  params:
    - *ref_322
mwarnpunish_int_3:
  args:
    - number
  desc: Removes a mini warn punishment.
  params:
    - *ref_322
mwarnpunish_int_AddRole_IRole_=:
  args:
    - number addrole @role null
    - number addrole @role
    - addrole
  desc: Sets the mini warn punishment.
  params:
    - *ref_322
    - *ref_323
    - *ref_324
    - *ref_1
mwarnpunish_int_AddRole_IRole_=_1:
  args:
    - number addrole @role null
    - number addrole @role
    - addrole
  desc: Sets the mini warn punishment.
  params:
    - *ref_322
    - *ref_323
    - *ref_324
    - *ref_1
mwarnpunish_int_AddRole_IRole_=_2:
  args:
    - number addrole @role null
    - number addrole @role
    - addrole
  desc: Sets the mini warn punishment.
  params:
    - *ref_322
    - *ref_323
    - *ref_324
    - *ref_1
mwarnpunish_int_PunishmentAction_=:
  args:
    - number punish null
    - number punish
  desc: Sets the mini warn punishment.
  params:
    - *ref_322
    - &ref_325
      desc: The punishment to set
      name: punish
      optional: false
      type: PunishmentAction
    - *ref_1
mwarnpunish_int_PunishmentAction_=_1:
  args:
    - number punish null
    - number punish
  desc: Sets the mini warn punishment.
  params:
    - *ref_322
    - *ref_325
    - *ref_1
mwarnpunish_int_PunishmentAction_=_2:
  args:
    - number punish null
    - number punish
  desc: Sets the mini warn punishment.
  params:
    - *ref_322
    - *ref_325
    - *ref_1
mwarnpunish_int_PunishmentAction_=_3:
  args:
    - number punish null
    - number punish
  desc: Sets the mini warn punishment.
  params:
    - *ref_322
    - *ref_325
    - *ref_1
mwarnpunishlist:
  args:
    - ''
  desc: Lists mini warn punishments.
  params: [ ]
mwarnpunishlist_noparams:
  args:
    - ''
  desc: Lists mini warn punishments.
  params: [ ]
mwarnpunishlist_noparams_1:
  args:
    - ''
  desc: Lists mini warn punishments.
  params: [ ]
mwarnpunishlist_noparams_2:
  args:
    - ''
  desc: Lists mini warn punishments.
  params: [ ]
myrep:
  args:
    - ''
  desc: Checks the current user's reputation.
  params: [ ]
nameban:
  args:
    - text
  desc: >-
    Allows you to ban users with a specific name. This command will show a
    preview of the users that will be banned. Takes a regex pattern as well.
  params:
    - &ref_326
      desc: The name or regex pattern you want to use.
      name: name
      optional: false
      type: string
nameban_string:
  args:
    - text
  desc: >-
    Allows you to ban users with a specific name. This command will show a
    preview of the users that will be banned. Takes a regex pattern as well.
  params:
    - *ref_326
nameban_string_1:
  args:
    - text
  desc: >-
    Allows you to ban users with a specific name. This command will show a
    preview of the users that will be banned. Takes a regex pattern as well.
  params:
    - *ref_326
nameban_string_2:
  args:
    - text
  desc: >-
    Allows you to ban users with a specific name. This command will show a
    preview of the users that will be banned. Takes a regex pattern as well.
  params:
    - *ref_326
nhentai:
  args:
    - number
  desc: >-
    Command to fetch and display information about a manga from the NHentai
    website.
  params:
    - &ref_327
      desc: The identification number of the manga to fetch.
      name: num
      optional: false
      type: int
nhentai_int:
  args:
    - number
  desc: >-
    Command to fetch and display information about a manga from the NHentai
    website.
  params:
    - *ref_327
nhentai_int_1:
  args:
    - number
  desc: >-
    Command to fetch and display information about a manga from the NHentai
    website.
  params:
    - *ref_327
nhentai_int_2:
  args:
    - number
  desc: >-
    Command to fetch and display information about a manga from the NHentai
    website.
  params:
    - *ref_327
nhentaisearch:
  args:
    - text
  desc: >-
    Command to search for hentai manga on NHentai based on the provided search
    query.
  params:
    - &ref_328
      desc: The search query for NHentai.
      name: search
      optional: false
      type: string
nhentaisearch_string:
  args:
    - text
  desc: >-
    Command to search for hentai manga on NHentai based on the provided search
    query.
  params:
    - *ref_328
nhentaisearch_string_1:
  args:
    - text
  desc: >-
    Command to search for hentai manga on NHentai based on the provided search
    query.
  params:
    - *ref_328
nhentaisearch_string_2:
  args:
    - text
  desc: >-
    Command to search for hentai manga on NHentai based on the provided search
    query.
  params:
    - *ref_328
nhentaisearch_string_int:
  args:
    - text number
  desc: >-
    Command to search for hentai manga on NHentai based on the provided search
    query and page number.
  params:
    - *ref_328
    - &ref_329
      desc: The page number for NHentai search.
      name: page
      optional: false
      type: int
nhentaisearch_string_int_1:
  args:
    - text number
  desc: >-
    Command to search for hentai manga on NHentai based on the provided search
    query and page number.
  params:
    - *ref_328
    - *ref_329
nhentaisearch_string_int_2:
  args:
    - text number
  desc: >-
    Command to search for hentai manga on NHentai based on the provided search
    query and page number.
  params:
    - *ref_328
    - *ref_329
nhentaisearch_string_int_3:
  args:
    - text number
  desc: >-
    Command to search for hentai manga on NHentai based on the provided search
    query and page number.
  params:
    - *ref_328
    - *ref_329
nhentaisearch_string_int_string:
  args:
    - text number text
  desc: >-
    Command to search for hentai manga on NHentai based on the provided search
    query, page number, and type.
  params:
    - *ref_328
    - *ref_329
    - &ref_330
      desc: The type of NHentai search.
      name: type
      optional: false
      type: string
nhentaisearch_string_int_string_1:
  args:
    - text number text
  desc: >-
    Command to search for hentai manga on NHentai based on the provided search
    query, page number, and type.
  params:
    - *ref_328
    - *ref_329
    - *ref_330
nhentaisearch_string_int_string_2:
  args:
    - text number text
  desc: >-
    Command to search for hentai manga on NHentai based on the provided search
    query, page number, and type.
  params:
    - *ref_328
    - *ref_329
    - *ref_330
nhentaisearch_string_int_string_3:
  args:
    - text number text
  desc: >-
    Command to search for hentai manga on NHentai based on the provided search
    query, page number, and type.
  params:
    - *ref_328
    - *ref_329
    - *ref_330
nhentaisearch_string_int_string_string:
  args:
    - text number text text
  desc: >-
    Command to search for hentai manga on NHentai based on the provided search
    query, page number, type, and blacklist.
  params:
    - *ref_328
    - *ref_329
    - *ref_330
    - &ref_331
      desc: The blacklist for NHentai search.
      name: blacklist
      optional: false
      type: string
nhentaisearch_string_int_string_string_1:
  args:
    - text number text text
  desc: Execute the NHentaiSearch command
  params:
    - *ref_328
    - *ref_329
    - *ref_330
    - *ref_331
nhentaisearch_string_int_string_string_2:
  args:
    - text number text text
  desc: >-
    Command to search for hentai manga on NHentai based on the provided search
    query, page number, type, and blacklist.
  params:
    - *ref_328
    - *ref_329
    - *ref_330
    - *ref_331
nhentaisearch_string_int_string_string_3:
  args:
    - text number text text
  desc: Execute the NHentaiSearch command
  params:
    - *ref_328
    - *ref_329
    - *ref_330
    - *ref_331
nhentaisearch_string_string:
  args:
    - text text
  desc: >-
    Command to search for hentai manga on NHentai based on the provided search
    query and blacklist.
  params:
    - *ref_328
    - *ref_331
nhentaisearch_string_string_1:
  args:
    - text text
  desc: >-
    Command to search for hentai manga on NHentai based on the provided search
    query and blacklist.
  params:
    - *ref_328
    - *ref_331
nhentaisearch_string_string_2:
  args:
    - text text
  desc: >-
    Command to search for hentai manga on NHentai based on the provided search
    query and blacklist.
  params:
    - *ref_328
    - *ref_331
nhentaisearch_string_string_3:
  args:
    - text text
  desc: >-
    Command to search for hentai manga on NHentai based on the provided search
    query and blacklist.
  params:
    - *ref_328
    - *ref_331
nightcore:
  args:
    - true
  desc: Toggles the nightcore effect for the current track.
  params:
    - *ref_57
nightcore_=:
  args:
    - true
  desc: Toggles the nightcore effect for the current track.
  params:
    - *ref_57
nightcore_=_1:
  args:
    - true
  desc: Toggles the nightcore effect for the current track.
  params:
    - *ref_57
nightcore_=_2:
  args:
    - true
  desc: Toggles the nightcore effect for the current track.
  params:
    - *ref_57
nowplaying:
  args:
    - ''
  desc: Gets the now playing track, if any.
  params: [ ]
nowplaying_noparams:
  args:
    - ''
  desc: Gets the now playing track, if any.
  params: [ ]
nsfwtagbl:
  args:
    - action tag
  desc: Manages NSFW tag blacklist.
  params:
    - desc: The action to perform (add/remove).
      name: action
      optional: false
      type: string
    - desc: The tag to blacklist.
      name: tag
      optional: false
      type: string
nsfwtagblacklist:
  args:
    - null
  desc: Command to manage the blacklist of NSFW tags in the current guild.
  params:
    - *ref_1
nsfwtagblacklist_=:
  args:
    - null
  desc: Command to manage the blacklist of NSFW tags in the current guild.
  params:
    - *ref_1
nsfwtagblacklist_=_1:
  args:
    - null
  desc: Command to manage the blacklist of NSFW tags in the current guild.
  params:
    - *ref_1
nsfwtagblacklist_=_2:
  args:
    - null
  desc: Command to manage the blacklist of NSFW tags in the current guild.
  params:
    - *ref_1
nsfwtoggle:
  args:
    - ''
  desc: Toggles the NSFW setting of the current text channel.
  params: [ ]
nsfwtoggle_noparams:
  args:
    - ''
  desc: Toggles the NSFW setting of the current text channel.
  params: [ ]
nsfwtoggle_noparams_1:
  args:
    - ''
  desc: Toggles the NSFW setting of the current text channel.
  params: [ ]
nsfwtoggle_noparams_2:
  args:
    - ''
  desc: Toggles the NSFW setting of the current text channel.
  params: [ ]
nuke:
  args:
    - null
  desc: Deletes and recreates a text channel, effectively "nuking" it.
  params:
    - *ref_1
nuke_=:
  args:
    - null
  desc: Deletes and recreates a text channel, effectively "nuking" it.
  params:
    - *ref_1
nuke_=_1:
  args:
    - null
  desc: Deletes and recreates a text channel, effectively "nuking" it.
  params:
    - *ref_1
nuke_=_2:
  args:
    - null
  desc: Deletes and recreates a text channel, effectively "nuking" it.
  params:
    - *ref_1
nunchi:
  args:
    - ''
  desc: Starts or joins a game of Nunchi.
  params: [ ]
nunchi_noparams:
  args:
    - ''
  desc: Starts or joins a game of Nunchi.
  params: [ ]
nunchi_noparams_1:
  args:
    - ''
  desc: A module containing Nunchi commands.
  params: [ ]
nunchi_noparams_2:
  args:
    - ''
  desc: A module containing Nunchi commands.
  params: [ ]
osu:
  args:
    - text null
    - text
  desc: Retrieves osu! user profile information.
  params:
    - &ref_332
      desc: The osu! username to retrieve information for.
      name: user
      optional: false
      type: string
    - *ref_1
osu5:
  args:
    - text null
    - text
  desc: Retrieves the top 5 osu! plays for a user.
  params:
    - &ref_333
      desc: The osu! username to retrieve plays for.
      name: user
      optional: false
      type: string
    - *ref_1
osu5_string_=:
  args:
    - text null
    - text
  desc: Execute the Osu5 command
  params:
    - *ref_333
    - *ref_1
osu5_string_=_1:
  args:
    - text null
    - text
  desc: Retrieves the top 5 osu! plays for a user.
  params:
    - *ref_333
    - *ref_1
osu5_string_=_2:
  args:
    - text null
    - text
  desc: Execute the Osu5 command
  params:
    - *ref_333
    - *ref_1
osu_string_=:
  args:
    - text null
    - text
  desc: Execute the Osu command
  params:
    - *ref_332
    - *ref_1
osu_string_=_1:
  args:
    - text null
    - text
  desc: Module for interacting with osu! APIs and retrieving user data.
  params:
    - *ref_332
    - *ref_1
osu_string_=_2:
  args:
    - text null
    - text
  desc: Execute the Osu command
  params:
    - *ref_332
    - *ref_1
owoify:
  args:
    - text
  desc: O-OwoIfy WoIfy's the specified input.
  params:
    - &ref_334
      desc: The input to owoify woify.
      name: input
      optional: false
      type: string
owoify_string:
  args:
    - text
  desc: O-OwoIfy WoIfy's the specified input.
  params:
    - *ref_334
owoify_string_1:
  args:
    - text
  desc: O-OwoIfy WoIfy's the specified input.
  params:
    - *ref_334
owoify_string_2:
  args:
    - text
  desc: O-OwoIfy WoIfy's the specified input.
  params:
    - *ref_334
panelinfo:
  args:
    - panelid
  desc: Displays detailed information about a ticket panel.
  params:
    - &ref_335
      desc: The ID of the panel to view.
      name: panelId
      optional: false
      type: ulong
panelinfo_ulong:
  args:
    - panelid
  desc: Displays detailed information about a ticket panel.
  params:
    - *ref_335
panelinfo_ulong_1:
  args:
    - panelid
  desc: Displays detailed information about a ticket panel.
  params:
    - *ref_335
panelinfo_ulong_2:
  args:
    - panelid
  desc: Displays detailed information about a ticket panel.
  params:
    - *ref_335
panelinfo_ulong_3:
  args:
    - panelid
  desc: Displays detailed information about a ticket panel.
  params:
    - *ref_335
panelinfo_ulong_4:
  args:
    - panelid
  desc: Displays detailed information about a ticket panel.
  params:
    - *ref_335
panellist:
  args:
    - ''
  desc: >-
    Provides configuration commands for managing ticket panels, buttons, and
    select menus.
  params: [ ]
panellist_noparams:
  args:
    - ''
  desc: Lists all ticket panels in the guild.
  params: [ ]
panellist_noparams_1:
  args:
    - ''
  desc: Initializes a new instance of the TicketConfig class.
  params: [ ]
panellist_noparams_2:
  args:
    - ''
  desc: Lists all ticket panels in the guild.
  params: [ ]
panellist_noparams_3:
  args:
    - ''
  desc: >-
    Provides configuration commands for managing ticket panels, buttons, and
    select menus.
  params: [ ]
panellist_noparams_4:
  args:
    - ''
  desc: Lists all ticket panels in the guild.
  params: [ ]
pat:
  args:
    - text
  desc: Pats someone.
  params:
    - *ref_242
pat_string:
  args:
    - text
  desc: Pats someone.
  params:
    - &ref_336
      desc: The person to slap.
      name: toShow
      optional: false
      type: string
pat_string_1:
  args:
    - text
  desc: Pats someone.
  params:
    - *ref_242
pat_string_2:
  args:
    - text
  desc: Pats someone.
  params:
    - *ref_336
patreonanalytics:
  args:
    - ''
  desc: Show detailed Patreon analytics.
  params: [ ]
patreonannounce:
  args:
    - ''
  desc: Manually trigger a Patreon announcement.
  params: [ ]
patreonch:
  args:
    - '#channel'
  desc: Sets or shows the Patreon announcement channel.
  params:
    - desc: >-
        The channel to set for Patreon announcements. If null, shows current
        channel.
      name: channel
      optional: true
      type: ITextChannel?
patreonconfig:
  args:
    - ''
  desc: Show current Patreon configuration.
  params: [ ]
patreonday:
  args:
    - number
  desc: Sets the day of the month for Patreon announcements.
  params:
    - desc: >-
        The day of the month (1-28) for announcements. If null, shows current
        day.
      name: day
      optional: true
      type: int?
patreondisable:
  args:
    - ''
  desc: Disables Patreon announcements for this server.
  params: [ ]
patreonhelp:
  args:
    - ''
  desc: Shows Patreon command help.
  params: [ ]
patreonlink:
  args:
    - '@user text'
  desc: Link a Discord user to a Patreon supporter.
  params:
    - desc: The Discord user to link.
      name: user
      optional: false
      type: IGuildUser
    - desc: The Patreon user ID to link to.
      name: patreonUserId
      optional: false
      type: string
patreonmsg:
  args:
    - text
  desc: Sets a custom message for Patreon announcements.
  params:
    - desc: >-
        The custom message. Use placeholders like %server.name%, %month%, etc.
        Use "-" to reset to default.
      name: message
      optional: true
      type: string?
patreonrecognize:
  args:
    - '#channel'
  desc: Send recognition messages for new supporters.
  params:
    - desc: The channel to send recognition messages to.
      name: channel
      optional: true
      type: ITextChannel?
patreonroles:
  args:
    - ''
  desc: List Patreon tier-role mappings.
  params: [ ]
patreonrolesync:
  args:
    - ''
  desc: Toggle automatic role synchronization.
  params: [ ]
patreonstats:
  args:
    - ''
  desc: Show Patreon supporter statistics.
  params: [ ]
patreonsupporters:
  args:
    - ''
  desc: Lists Patreon supporters.
  params: [ ]
patreonsync:
  args:
    - ''
  desc: Synchronizes Patreon supporters.
  params: [ ]
patreonsyncall:
  args:
    - ''
  desc: Sync roles for all linked supporters.
  params: [ ]
patreontiermap:
  args:
    - text @role
  desc: Map a Patreon tier to a Discord role.
  params:
    - desc: The Patreon tier ID.
      name: tierId
      optional: false
      type: string
    - desc: The Discord role to map to the tier.
      name: role
      optional: false
      type: IRole
patreontoggle:
  args:
    - ''
  desc: Toggle Patreon announcements on or off.
  params: [ ]
patreontop:
  args:
    - number
  desc: Show top Patreon supporters.
  params:
    - desc: Number of top supporters to show (1-20).
      name: count
      optional: true
      type: int
pause:
  args:
    - ''
  desc: Pauses or unpauses the player based on the current state.
  params: [ ]
pause_noparams:
  args:
    - ''
  desc: Pauses or unpauses the player based on the current state.
  params: [ ]
permcontrol:
  args:
    - channel perm @role perms
  desc: >-
    Computes the raw value of a set of channel permissions by aggregating their
    bitwise representations.
  params:
    - &ref_337
      desc: The channel for which permissions are being modified.
      name: channel
      optional: false
      type: SocketGuildChannel
    - &ref_338
      desc: The action to perform (Allow, Deny, Inherit).
      name: perm
      optional: false
      type: PermValue
    - &ref_339
      desc: The role to which the permissions modifications apply.
      name: role
      optional: false
      type: IRole
    - &ref_340
      desc: A set of permissions to be modified.
      name: perms
      optional: false
      type: ChannelPermission[]
permcontrol_SocketGuildChannel_PermValue_IRole_ChannelPermission[]:
  args:
    - channel perm @role perms
  desc: Execute the PermControl command
  params:
    - *ref_337
    - *ref_338
    - *ref_339
    - *ref_340
permcontrol_SocketGuildChannel_PermValue_IRole_ChannelPermission[]_1:
  args:
    - channel perm @role perms
  desc: >-
    Contains commands for managing channel permission overrides for roles and
    users.
  params:
    - *ref_337
    - *ref_338
    - *ref_339
    - *ref_340
permcontrol_SocketGuildChannel_PermValue_IRole_ChannelPermission[]_2:
  args:
    - channel perm @role perms
  desc: Execute the PermControl command
  params:
    - *ref_337
    - *ref_338
    - *ref_339
    - *ref_340
permcontrol_SocketGuildChannel_PermValue_IUser_ChannelPermission[]:
  args:
    - channel perm @user perms
  desc: >-
    Modifies channel permissions for a specified user according to the provided
    permissions and action.
  params:
    - *ref_337
    - *ref_338
    - &ref_341
      desc: The user to which the permissions modifications apply.
      name: user
      optional: false
      type: IUser
    - *ref_340
permcontrol_SocketGuildChannel_PermValue_IUser_ChannelPermission[]_1:
  args:
    - channel perm @user perms
  desc: Execute the PermControl command
  params:
    - *ref_337
    - *ref_338
    - *ref_341
    - *ref_340
permcontrol_SocketGuildChannel_PermValue_IUser_ChannelPermission[]_2:
  args:
    - channel perm @user perms
  desc: >-
    Modifies channel permissions for a specified user according to the provided
    permissions and action.
  params:
    - *ref_337
    - *ref_338
    - *ref_341
    - *ref_340
permcontrol_SocketGuildChannel_PermValue_IUser_ChannelPermission[]_3:
  args:
    - channel perm @user perms
  desc: Execute the PermControl command
  params:
    - *ref_337
    - *ref_338
    - *ref_341
    - *ref_340
permrole:
  args:
    - null
  desc: >-
    Sets the role that will be used for permissions. If no role is provided, it
    will show the current permission role.
  params:
    - *ref_1
permrole_=:
  args:
    - null
  desc: >-
    Sets the role that will be used for permissions. If no role is provided, it
    will show the current permission role.
  params:
    - *ref_1
permrole_=_1:
  args:
    - null
  desc: >-
    Sets the role that will be used for permissions. If no role is provided, it
    will show the current permission role.
  params:
    - *ref_1
permrole_=_2:
  args:
    - null
  desc: >-
    Sets the role that will be used for permissions. If no role is provided, it
    will show the current permission role.
  params:
    - *ref_1
permrole_Reset:
  args:
    - reset
  desc: Resets the permission role.
  params:
    - &ref_342
      desc: 'Possible values: Reset'
      name: _
      optional: false
      type: Reset
permrole_Reset_1:
  args:
    - reset
  desc: Resets the permission role.
  params:
    - *ref_342
permrole_Reset_2:
  args:
    - reset
  desc: Resets the permission role.
  params:
    - *ref_342
permrole_Reset_3:
  args:
    - reset
  desc: Resets the permission role.
  params:
    - *ref_342
permview:
  args:
    - ''
  desc: Contains commands related to server management.
  params: [ ]
permview_IGuildUser:
  args:
    - '@user'
  desc: Displays the list of allowed permissions for the specified user.
  params:
    - &ref_343
      desc: The role whose permissions will be displayed.
      name: user
      optional: false
      type: IGuildUser
permview_IGuildUser_1:
  args:
    - '@user'
  desc: Displays the list of allowed permissions for the specified user.
  params:
    - *ref_343
permview_IRole:
  args:
    - '@role'
  desc: Displays the list of allowed permissions for the specified role.
  params:
    - &ref_344
      desc: The role whose permissions will be displayed.
      name: user
      optional: false
      type: IRole
permview_IRole_1:
  args:
    - '@role'
  desc: Displays the list of allowed permissions for the specified role.
  params:
    - *ref_344
permview_noparams:
  args:
    - ''
  desc: Contains commands related to server management.
  params: [ ]
ping:
  args:
    - ''
  desc: Shows the bot's ping.
  params: [ ]
ping_noparams:
  args:
    - ''
  desc: Shows the bot's ping.
  params: [ ]
ping_noparams_1:
  args:
    - ''
  desc: Shows the bot's ping.
  params: [ ]
ping_noparams_2:
  args:
    - ''
  desc: Shows the bot's ping.
  params: [ ]
pingip:
  args:
    - text 1
    - text
  desc: Pings an IP address. Maximum of 10 pings.
  params:
    - &ref_345
      desc: The IP address to ping.
      name: ip
      optional: false
      type: string
    - *ref_95
pingip_string_=:
  args:
    - text 1
    - text
  desc: Pings an IP address. Maximum of 10 pings.
  params:
    - *ref_345
    - *ref_95
pingip_string_=_1:
  args:
    - text 1
    - text
  desc: >-
    Generates the sequence of IP addresses representing the path taken to the
    specified hostname using ICMP echo requests.
  params:
    - desc: ''
      name: ip
      optional: false
      type: string
    - *ref_95
pingip_string_=_2:
  args:
    - text 1
    - text
  desc: Pings an IP address. Maximum of 10 pings.
  params:
    - *ref_345
    - *ref_95
play:
  args:
    - number
  desc: Plays a specified track in the current voice channel.
  params:
    - &ref_346
      desc: The queue number to play.
      name: queueNumber
      optional: false
      type: int
play_int:
  args:
    - number
  desc: Plays a specified track in the current voice channel.
  params:
    - *ref_346
play_string:
  args:
    - text
  desc: >-
    Plays music from various sources including YouTube, Spotify, and direct
    searches. Supports tracks, playlists, and albums from supported platforms.
  params:
    - &ref_347
      desc: URL or search query for the music to play
      name: query
      optional: false
      type: string
play_string_1:
  args:
    - text
  desc: >-
    Plays music from various sources including YouTube, Spotify, and direct
    searches. Supports tracks, playlists, and albums from supported platforms.
  params:
    - *ref_347
playlists:
  args:
    - ''
  desc: Lists all saved playlists for the guild.
  params: [ ]
playlists_noparams:
  args:
    - ''
  desc: Lists all saved playlists for the guild.
  params: [ ]
plinko:
  args:
    - number number
  desc: Play Plinko - drop a ball down pegs for prizes.
  params:
    - desc: The amount to bet.
      name: betAmount
      optional: false
      type: long
    - desc: Number of peg rows (5-10).
      name: rows
      optional: true
      type: int
plot:
  args:
    - expression
  desc: Creates a graph plot.
  params:
    - desc: The mathematical expression to plot.
      name: expression
      optional: false
      type: string
poke:
  args:
    - text
  desc: Pokes someone.
  params:
    - *ref_171
poke_string:
  args:
    - text
  desc: Pokes someone.
  params:
    - *ref_213
poke_string_1:
  args:
    - text
  desc: Pokes someone.
  params:
    - *ref_171
poke_string_2:
  args:
    - text
  desc: Pokes someone.
  params:
    - *ref_213
pokemon:
  args:
    - text
  desc: Retrieves information about a Pokémon.
  params:
    - &ref_348
      desc: The name of the Pokémon.
      name: name
      optional: false
      type: string
pokemon_string:
  args:
    - text
  desc: Retrieves information about a Pokémon.
  params:
    - *ref_348
pokemon_string_1:
  args:
    - text
  desc: Module for retrieving Pokémon information.
  params:
    - *ref_348
pokemon_string_2:
  args:
    - text
  desc: Retrieves information about a Pokémon.
  params:
    - *ref_348
poll:
  args:
    - text
  desc: Starts a poll with a single answer type.
  params:
    - &ref_351
      desc: The input string for the poll.
      name: input
      optional: false
      type: string
poll_PollType_string:
  args:
    - type text
  desc: Starts a poll with the specified type and input.
  params:
    - &ref_349
      desc: The type of the poll.
      name: type
      optional: false
      type: PollType
    - &ref_350
      desc: The input string for the poll.
      name: arg
      optional: false
      type: string
poll_PollType_string_1:
  args:
    - type text
  desc: Starts a poll with the specified type and input.
  params:
    - *ref_349
    - *ref_350
poll_PollType_string_2:
  args:
    - type text
  desc: Starts a poll with the specified type and input.
  params:
    - *ref_349
    - *ref_350
poll_PollType_string_3:
  args:
    - type text
  desc: Starts a poll with the specified type and input.
  params:
    - *ref_349
    - *ref_350
poll_string:
  args:
    - text
  desc: Starts a poll with a single answer type.
  params:
    - *ref_351
poll_string_1:
  args:
    - text
  desc: A module containing poll commands.
  params:
    - *ref_351
poll_string_2:
  args:
    - text
  desc: Starts a poll with a single answer type.
  params:
    - *ref_351
polla:
  args:
    - input
  desc: Creates an anonymous poll where users can vote privately.
  params:
    - desc: Poll question and options separated by semicolons.
      name: input
      optional: false
      type: string
pollc:
  args:
    - input
  desc: Creates a custom poll with specific options.
  params:
    - desc: Poll question and options separated by semicolons.
      name: input
      optional: false
      type: string
pollm:
  args:
    - input
  desc: Creates a multi-choice poll where users can select multiple options.
  params:
    - desc: Poll question and options separated by semicolons.
      name: input
      optional: false
      type: string
polltemplate:
  args:
    - templateName
  desc: Creates a poll from a saved template.
  params:
    - desc: The name of the template to use.
      name: templateName
      optional: false
      type: string
polltemplates:
  args:
    - ''
  desc: Shows available poll templates in the server.
  params: [ ]
porn:
  args:
    - ''
  desc: Command to fetch and display NSFW content from the "porn" subreddit.
  params: [ ]
porn_noparams:
  args:
    - ''
  desc: Command to fetch and display NSFW content from the "porn" subreddit.
  params: [ ]
porn_noparams_1:
  args:
    - ''
  desc: Command to fetch and display NSFW content from the "porn" subreddit.
  params: [ ]
porn_noparams_2:
  args:
    - ''
  desc: Command to fetch and display NSFW content from the "porn" subreddit.
  params: [ ]
pornbomb:
  args:
    - text
  desc: >-
    Command to initiate a "porn bomb" by fetching and displaying NSFW content
    from a RealBooru source with optional tags in the current guild channel or
    direct messages.
  params:
    - &ref_352
      desc: Optional tags to filter the NSFW content from the RealBooru source.
      name: tags
      optional: false
      type: string[]
pornbomb_string[]:
  args:
    - text
  desc: >-
    Command to initiate a "porn bomb" by fetching and displaying NSFW content
    from a RealBooru source with optional tags in the current guild channel or
    direct messages.
  params:
    - *ref_352
pornbomb_string[]_1:
  args:
    - text
  desc: >-
    Command to initiate a "porn bomb" by fetching and displaying NSFW content
    from a RealBooru source with optional tags in the current guild channel or
    direct messages.
  params:
    - *ref_352
pornbomb_string[]_2:
  args:
    - text
  desc: >-
    Command to initiate a "porn bomb" by fetching and displaying NSFW content
    from a RealBooru source with optional tags in the current guild channel or
    direct messages.
  params:
    - *ref_352
pout:
  args:
    - null
  desc: Pouts.
  params:
    - *ref_1
pout_=:
  args:
    - null
  desc: Pouts.
  params:
    - *ref_1
pout_=_1:
  args:
    - null
  desc: Pouts.
  params:
    - *ref_1
pout_=_2:
  args:
    - null
  desc: Pouts.
  params:
    - *ref_1
prefix:
  args:
    - prefix
  desc: Manages command prefixes.
  params:
    - desc: The prefix to set.
      name: prefix
      optional: true
      type: string
prefixcommand:
  args:
    - ''
  desc: >-
    Enumerates different variations of the term "set". Used for idiots that try
    to do .prefix set !.
  params: [ ]
prefixcommand_Set_string:
  args:
    - set text
    - set
  desc: Sets the command prefix for the guild.
  params:
    - &ref_353
      desc: 'Used for idiots that try to do .prefix set ! Possible values: Set'
      name: _
      optional: false
      type: Set
    - &ref_354
      desc: The new command prefix to set.
      name: prefix
      optional: false
      type: string
prefixcommand_Set_string_1:
  args:
    - set text
    - set
  desc: Sets the command prefix for the guild.
  params:
    - *ref_353
    - *ref_354
prefixcommand_Set_string_2:
  args:
    - set text
    - set
  desc: Sets the command prefix for the guild.
  params:
    - *ref_353
    - *ref_354
prefixcommand_Set_string_3:
  args:
    - set text
    - set
  desc: Sets the command prefix for the guild.
  params:
    - *ref_353
    - *ref_354
prefixcommand_noparams:
  args:
    - ''
  desc: Represents the term "set".
  params: [ ]
prefixcommand_noparams_1:
  args:
    - ''
  desc: Module for managing the bot's prefix.
  params: [ ]
prefixcommand_noparams_2:
  args:
    - ''
  desc: Represents the term "set".
  params: [ ]
prefixcommand_string:
  args:
    - text
  desc: Sets the command prefix for the guild.
  params:
    - *ref_354
prefixcommand_string_1:
  args:
    - text
  desc: Sets the command prefix for the guild.
  params:
    - *ref_354
prefixcommand_string_2:
  args:
    - text
  desc: Sets the command prefix for the guild.
  params:
    - *ref_354
prefixcommand_string_3:
  args:
    - text
  desc: Sets the command prefix for the guild.
  params:
    - *ref_354
previewlinks:
  args:
    - text
  desc: Toggles link previews on or off for the server.
  params:
    - &ref_355
      desc: '"yes" to enable link previews, literally anything else to disable.'
      name: yesnt
      optional: false
      type: string
previewlinks_string:
  args:
    - text
  desc: Toggles link previews on or off for the server.
  params:
    - *ref_355
previewlinks_string_1:
  args:
    - text
  desc: Commands for managing link previews.
  params:
    - *ref_355
previewlinks_string_2:
  args:
    - text
  desc: Commands for managing link previews.
  params:
    - *ref_355
profile:
  args:
    - null
  desc: Shows the user's profile or another user's profile if specified.
  params:
    - *ref_1
profile_=:
  args:
    - null
  desc: Shows the user's profile or another user's profile if specified.
  params:
    - *ref_1
profile_=_1:
  args:
    - null
  desc: >-
    Handles text commands for user profiles, providing functionalities to view
    and manage user profile details.
  params:
    - *ref_1
profile_=_2:
  args:
    - null
  desc: >-
    Handles text commands for user profiles, providing functionalities to view
    and manage user profile details.
  params:
    - *ref_1
pronouns:
  args:
    - null
  desc: >-
    Displays the pronouns of the specified user or the command caller if no user
    is specified.
  params:
    - *ref_1
pronouns_=:
  args:
    - null
  desc: >-
    Displays the pronouns of the specified user or the command caller if no user
    is specified.
  params:
    - *ref_1
pronouns_=_1:
  args:
    - null
  desc: >-
    Displays the pronouns of the specified user or the command caller if no user
    is specified.
  params:
    - *ref_1
pronouns_=_2:
  args:
    - null
  desc: >-
    Displays the pronouns of the specified user or the command caller if no user
    is specified.
  params:
    - *ref_1
pronounsforceclear:
  args:
    - '@user true|false text'
    - true|false text
  desc: >-
    Force-clears the pronouns for a user, optionally marking them as disabled
    due to abuse.
  params:
    - &ref_356
      desc: The user whose pronouns are to be cleared.
      name: user
      optional: true
      type: IUser
    - &ref_357
      desc: Whether the pronouns are being disabled due to abuse.
      name: pronounsDisabledAbuse
      optional: false
      type: bool
    - &ref_358
      desc: The reason for the action.
      name: reason
      optional: false
      type: string
pronounsforceclear_IUser_bool_string:
  args:
    - '@user true|false text'
    - true|false text
  desc: >-
    Force-clears the pronouns for a user, optionally marking them as disabled
    due to abuse.
  params:
    - *ref_356
    - *ref_357
    - *ref_358
pronounsforceclear_IUser_bool_string_1:
  args:
    - '@user true|false text'
    - true|false text
  desc: >-
    Force-clears the pronouns for a user, optionally marking them as disabled
    due to abuse.
  params:
    - *ref_356
    - *ref_357
    - *ref_358
pronounsforceclear_IUser_bool_string_2:
  args:
    - '@user true|false text'
    - true|false text
  desc: >-
    Force-clears the pronouns for a user, optionally marking them as disabled
    due to abuse.
  params:
    - *ref_356
    - *ref_357
    - *ref_358
pronounsforceclear_ulong_bool_string:
  args:
    - user true|false text
  desc: >-
    Force-clears the pronouns for a user by ID, optionally marking them as
    disabled due to abuse.
  params:
    - &ref_359
      desc: The user ID of the user whose pronouns are to be cleared.
      name: user
      optional: false
      type: ulong
    - *ref_357
    - *ref_358
pronounsforceclear_ulong_bool_string_1:
  args:
    - user true|false text
  desc: >-
    Force-clears the pronouns for a user by ID, optionally marking them as
    disabled due to abuse.
  params:
    - *ref_359
    - *ref_357
    - *ref_358
pronounsforceclear_ulong_bool_string_2:
  args:
    - user true|false text
  desc: >-
    Force-clears the pronouns for a user by ID, optionally marking them as
    disabled due to abuse.
  params:
    - *ref_359
    - *ref_357
    - *ref_358
pronounsforceclear_ulong_bool_string_3:
  args:
    - user true|false text
  desc: >-
    Force-clears the pronouns for a user by ID, optionally marking them as
    disabled due to abuse.
  params:
    - *ref_359
    - *ref_357
    - *ref_358
prunemembers:
  args:
    - time "no"
    - time
  desc: Prunes members from the server based on their activity or inactivity.
  params:
    - *ref_262
    - &ref_360
      desc: ''
      name: '"no"'
      optional: false
      type: '='
prunemembers_StoopidTime_=:
  args:
    - time "no"
    - time
  desc: Execute the PruneMembers command
  params:
    - *ref_262
    - *ref_360
prunemembers_StoopidTime_=_1:
  args:
    - time "no"
    - time
  desc: Prunes members from the server based on their activity or inactivity.
  params:
    - *ref_262
    - *ref_360
prunemembers_StoopidTime_=_2:
  args:
    - time "no"
    - time
  desc: Execute the PruneMembers command
  params:
    - *ref_262
    - *ref_360
punch:
  args:
    - text
  desc: Punches someone.
  params:
    - *ref_242
punch_string:
  args:
    - text
  desc: Punches someone.
  params:
    - *ref_242
punch_string_1:
  args:
    - text
  desc: Punches someone.
  params:
    - *ref_243
punch_string_2:
  args:
    - text
  desc: Punches someone.
  params:
    - *ref_243
purge:
  args:
    - null
  desc: Purges messages from the current channel.
  params:
    - *ref_1
purge_=:
  args:
    - null
  desc: Purges messages from the current channel.
  params:
    - *ref_1
purge_=_1:
  args:
    - null
  desc: Module for purging messages.
  params:
    - *ref_1
purge_=_2:
  args:
    - null
  desc: Module for purging messages.
  params:
    - *ref_1
purge_IGuildUser_=_=:
  args:
    - '@user 100 null'
    - '@user'
  desc: Purges messages from the current channel with the specific user and amount.
  params:
    - &ref_361
      desc: The user to purge messages from
      name: user
      optional: false
      type: IGuildUser
    - &ref_362
      desc: ''
      name: 100
      optional: false
      type: '='
    - *ref_1
purge_IGuildUser_=_=_1:
  args:
    - '@user 100 null'
    - '@user'
  desc: Purges messages from the current channel with the specific user and amount.
  params:
    - *ref_361
    - *ref_362
    - *ref_1
purge_IGuildUser_=_=_2:
  args:
    - '@user 100 null'
    - '@user'
  desc: Purges messages from the current channel with the specific user and amount.
  params:
    - *ref_361
    - *ref_362
    - *ref_1
purge_IGuildUser_=_=_3:
  args:
    - '@user 100 null'
    - '@user'
  desc: Purges messages from the current channel with the specific user and amount.
  params:
    - *ref_361
    - *ref_362
    - *ref_1
purge_ulong_=:
  args:
    - number null
    - number
  desc: >-
    Purges messages from the current channel with the specific amount and
    parameters. The options are: -s, --safe: Purge messages that are not pinned
    -nb, --nobots: Purge messages that are not from bots -ob, --onlybots: Purge
    messages that are from bots -b, --before: Purge messages before a specific
    time -a, --after: Purge messages after a specific time -he, --hasembed:
    Purge messages that have an embed -ne, --noembed: Purge messages that do not
    have an embed -c, --contains: Purge messages that contain a specific string
  params:
    - &ref_364
      desc: The amount of messages to purge
      name: count
      optional: false
      type: ulong
    - *ref_1
purge_ulong_=_1:
  args:
    - number null
    - number
  desc: Execute the Purge command
  params:
    - *ref_364
    - *ref_1
purge_ulong_=_2:
  args:
    - number null
    - number
  desc: >-
    Purges messages from the current channel with the specific amount and
    parameters. The options are: -s, --safe: Purge messages that are not pinned
    -nb, --nobots: Purge messages that are not from bots -ob, --onlybots: Purge
    messages that are from bots -b, --before: Purge messages before a specific
    time -a, --after: Purge messages after a specific time -he, --hasembed:
    Purge messages that have an embed -ne, --noembed: Purge messages that do not
    have an embed -c, --contains: Purge messages that contain a specific string
  params:
    - *ref_364
    - *ref_1
purge_ulong_=_3:
  args:
    - number null
    - number
  desc: Execute the Purge command
  params:
    - *ref_364
    - *ref_1
purge_ulong_=_=:
  args:
    - userid 100 null
    - userid
  desc: >-
    Purges messages from the current channel with the specific user id and
    amount.
  params:
    - &ref_363
      desc: The user id to purge messages from
      name: userId
      optional: false
      type: ulong
    - *ref_362
    - *ref_1
purge_ulong_=_=_1:
  args:
    - userid 100 null
    - userid
  desc: >-
    Purges messages from the current channel with the specific user id and
    amount.
  params:
    - *ref_363
    - *ref_362
    - *ref_1
purge_ulong_=_=_2:
  args:
    - userid 100 null
    - userid
  desc: >-
    Purges messages from the current channel with the specific user id and
    amount.
  params:
    - *ref_363
    - *ref_362
    - *ref_1
purge_ulong_=_=_3:
  args:
    - userid 100 null
    - userid
  desc: >-
    Purges messages from the current channel with the specific user id and
    amount.
  params:
    - *ref_363
    - *ref_362
    - *ref_1
purgeuser:
  args:
    - '@user number'
  desc: Purges all messages from accesible channels for a user.
  params:
    - &ref_365
      desc: The user who's messages to purge
      name: user
      optional: false
      type: IUser
    - &ref_366
      desc: The count of messages to search
      name: messageCount
      optional: false
      type: int
purgeuser_IUser_int:
  args:
    - '@user number'
  desc: Purges all messages from accesible channels for a user.
  params:
    - *ref_365
    - *ref_366
purgeuser_IUser_int_1:
  args:
    - '@user number'
  desc: Purges all messages from accesible channels for a user.
  params:
    - *ref_365
    - *ref_366
purgeuser_IUser_int_2:
  args:
    - '@user number'
  desc: Purges all messages from accesible channels for a user.
  params:
    - *ref_365
    - *ref_366
pussy:
  args:
    - ''
  desc: Command to fetch and display NSFW content from the "pussy" subreddit.
  params: [ ]
pussy_noparams:
  args:
    - ''
  desc: Command to fetch and display NSFW content from the "pussy" subreddit.
  params: [ ]
pussy_noparams_1:
  args:
    - ''
  desc: Command to fetch and display NSFW content from the "pussy" subreddit.
  params: [ ]
pussy_noparams_2:
  args:
    - ''
  desc: Command to fetch and display NSFW content from the "pussy" subreddit.
  params: [ ]
queue:
  args:
    - ''
  desc: The music queue.
  params: [ ]
queue_noparams:
  args:
    - ''
  desc: The music queue.
  params: [ ]
quoteadd:
  args:
    - text text
  desc: Adds a new quote with the specified keyword and text.
  params:
    - &ref_367
      desc: The keyword associated with the quote.
      name: keyword
      optional: false
      type: string
    - &ref_368
      desc: The text of the quote.
      name: text
      optional: false
      type: string
quoteadd_string_string:
  args:
    - text text
  desc: Adds a new quote with the specified keyword and text.
  params:
    - *ref_367
    - *ref_368
quoteadd_string_string_1:
  args:
    - text text
  desc: Adds a new quote with the specified keyword and text.
  params:
    - *ref_367
    - *ref_368
quoteadd_string_string_2:
  args:
    - text text
  desc: Adds a new quote with the specified keyword and text.
  params:
    - *ref_367
    - *ref_368
quotedelete:
  args:
    - number
  desc: Deletes a quote with the specified ID.
  params:
    - &ref_369
      desc: The ID of the quote to delete.
      name: id
      optional: false
      type: int
quotedelete_int:
  args:
    - number
  desc: Deletes a quote with the specified ID.
  params:
    - *ref_369
quotedelete_int_1:
  args:
    - number
  desc: Deletes a quote with the specified ID.
  params:
    - *ref_369
quotedelete_int_2:
  args:
    - number
  desc: Deletes a quote with the specified ID.
  params:
    - *ref_369
quoteexport:
  args: [ ]
  desc: Exports all quotes from the guild in JSON format.
  params: [ ]
quoteid:
  args:
    - number
  desc: Displays who added a quote with the specified ID.
  params:
    - &ref_370
      desc: The ID of the quote to display.
      name: id
      optional: false
      type: int
quoteid_int:
  args:
    - number
  desc: Displays who added a quote with the specified ID.
  params:
    - *ref_370
quoteid_int_1:
  args:
    - number
  desc: Displays who added a quote with the specified ID.
  params:
    - *ref_370
quoteid_int_2:
  args:
    - number
  desc: Displays who added a quote with the specified ID.
  params:
    - *ref_370
quoteimport:
  args: [ ]
  desc: Imports quotes from a JSON file attachment. Duplicate quotes are allowed.
  params: [ ]
quoteprint:
  args:
    - text
  desc: Displays a random quote matching the specified keyword.
  params:
    - &ref_371
      desc: The keyword to search for in quotes.
      name: keyword
      optional: false
      type: string
quoteprint_string:
  args:
    - text
  desc: Displays a random quote matching the specified keyword.
  params:
    - *ref_371
quoteprint_string_1:
  args:
    - text
  desc: Displays a random quote matching the specified keyword.
  params:
    - *ref_371
quoteprint_string_2:
  args:
    - text
  desc: Displays a random quote matching the specified keyword.
  params:
    - *ref_371
quotesearch:
  args:
    - text text
  desc: >-
    Searches for and displays a quote that matches both a keyword and a text
    query.
  params:
    - &ref_372
      desc: The keyword to match in the quotes.
      name: keyword
      optional: false
      type: string
    - &ref_373
      desc: The text to match in the quotes.
      name: text
      optional: false
      type: string
quotesearch_string_string:
  args:
    - text text
  desc: >-
    Searches for and displays a quote that matches both a keyword and a text
    query.
  params:
    - *ref_372
    - *ref_373
quotesearch_string_string_1:
  args:
    - text text
  desc: >-
    Searches for and displays a quote that matches both a keyword and a text
    query.
  params:
    - *ref_372
    - *ref_373
quotesearch_string_string_2:
  args:
    - text text
  desc: >-
    Searches for and displays a quote that matches both a keyword and a text
    query.
  params:
    - *ref_372
    - *ref_373
quoteshow:
  args:
    - number
  desc: Displays the quote with the specified ID.
  params:
    - *ref_370
quoteshow_int:
  args:
    - number
  desc: Displays the quote with the specified ID.
  params:
    - *ref_370
quoteshow_int_1:
  args:
    - number
  desc: Displays the quote with the specified ID.
  params:
    - *ref_370
quoteshow_int_2:
  args:
    - number
  desc: Displays the quote with the specified ID.
  params:
    - *ref_370
randjoke:
  args:
    - ''
  desc: Retrieves a random joke.
  params: [ ]
randjoke_noparams:
  args:
    - ''
  desc: Retrieves a random joke.
  params: [ ]
randjoke_noparams_1:
  args:
    - ''
  desc: Retrieves a random joke.
  params: [ ]
randjoke_noparams_2:
  args:
    - ''
  desc: Retrieves a random joke.
  params: [ ]
randombird:
  args:
    - ''
  desc: Displays birb.
  params: [ ]
randombird_noparams:
  args:
    - ''
  desc: Displays birb.
  params: [ ]
randombird_noparams_1:
  args:
    - ''
  desc: Displays birb.
  params: [ ]
randombird_noparams_2:
  args:
    - ''
  desc: Displays birb.
  params: [ ]
randomcat:
  args:
    - ''
  desc: Displays a random cat image.
  params: [ ]
randomcat_noparams:
  args:
    - ''
  desc: Displays a random cat image.
  params: [ ]
randomcat_noparams_1:
  args:
    - ''
  desc: Displays a random cat image.
  params: [ ]
randomcat_noparams_2:
  args:
    - ''
  desc: Displays a random cat image.
  params: [ ]
randomdog:
  args:
    - ''
  desc: Displays a random dog image.
  params: [ ]
randomdog_noparams:
  args:
    - ''
  desc: Displays a random dog image.
  params: [ ]
randomdog_noparams_1:
  args:
    - ''
  desc: Displays a random dog image.
  params: [ ]
randomdog_noparams_2:
  args:
    - ''
  desc: Displays a random dog image.
  params: [ ]
randomfood:
  args:
    - ''
  desc: Displays a random food image.
  params: [ ]
randomfood_noparams:
  args:
    - ''
  desc: Displays a random food image.
  params: [ ]
randomfood_noparams_1:
  args:
    - ''
  desc: Displays a random food image.
  params: [ ]
randomfood_noparams_2:
  args:
    - ''
  desc: Displays a random food image.
  params: [ ]
randomkitsune:
  args:
    - ''
  desc: Sends a random kitsune image.
  params: [ ]
randomkitsune_noparams:
  args:
    - ''
  desc: Sends a random kitsune image.
  params: [ ]
randomkitsune_noparams_1:
  args:
    - ''
  desc: Sends a random kitsune image.
  params: [ ]
randomkitsune_noparams_2:
  args:
    - ''
  desc: Sends a random kitsune image.
  params: [ ]
randomneko:
  args:
    - ''
  desc: Sends a random neko image.
  params: [ ]
randomneko_noparams:
  args:
    - ''
  desc: Sends a random neko image.
  params: [ ]
randomneko_noparams_1:
  args:
    - ''
  desc: Sends a random neko image.
  params: [ ]
randomneko_noparams_2:
  args:
    - ''
  desc: Sends a random neko image.
  params: [ ]
randomreddit:
  args:
    - text
  desc: Fetches and displays a random post from a specified subreddit.
  params:
    - &ref_374
      desc: The subreddit from which to fetch a random post.
      name: subreddit
      optional: false
      type: string
randomreddit_string:
  args:
    - text
  desc: Execute the RandomReddit command
  params:
    - *ref_374
randomreddit_string_1:
  args:
    - text
  desc: Fetches and displays a random post from a specified subreddit.
  params:
    - *ref_374
randomreddit_string_2:
  args:
    - text
  desc: Execute the RandomReddit command
  params:
    - *ref_374
randomwaifu:
  args:
    - ''
  desc: Sends a random waifu image.
  params: [ ]
randomwaifu_noparams:
  args:
    - ''
  desc: Sends a random waifu image.
  params: [ ]
randomwaifu_noparams_1:
  args:
    - ''
  desc: Sends a random waifu image.
  params: [ ]
randomwaifu_noparams_2:
  args:
    - ''
  desc: Sends a random waifu image.
  params: [ ]
rank:
  args:
    - null
  desc: Shows a user's XP card with their rank, level, and progress.
  params:
    - *ref_1
rank_=:
  args:
    - null
  desc: Shows a user's XP card with their rank, level, and progress.
  params:
    - *ref_1
rank_=_1:
  args:
    - null
  desc: Module for managing XP system functionality.
  params:
    - *ref_1
rank_=_2:
  args:
    - null
  desc: Module for managing XP system functionality.
  params:
    - *ref_1
rategirl:
  args:
    - ''
  desc: >-
    Command that used to exist. Called trans people a slur in NadekoBot. Here as
    a memory and a fuck you to NadekoBot.
  params: [ ]
rategirl_noparams:
  args:
    - ''
  desc: >-
    Command that used to exist. Called trans people a slur in NadekoBot. Here as
    a memory and a fuck you to NadekoBot.
  params: [ ]
rategirl_noparams_1:
  args:
    - ''
  desc: >-
    Command that used to exist. Called trans people a slur in NadekoBot. Here as
    a memory and a fuck you to NadekoBot.
  params: [ ]
rategirl_noparams_2:
  args:
    - ''
  desc: >-
    Command that used to exist. Called trans people a slur in NadekoBot. Here as
    a memory and a fuck you to NadekoBot.
  params: [ ]
reactionroles:
  args:
    - messageid text
  desc: >-
    Enumerates different variations of the term "exclude". Sets whether roles
    are exclusive.
  params:
    - &ref_380
      desc: ''
      name: messageId
      optional: false
      type: ulong
    - &ref_381
      desc: ''
      name: input
      optional: false
      type: string[]
reactionroles_Exclude_string[]:
  args:
    - excl text
    - excl
  desc: Assigns reaction roles based on the provided input, excluding certain roles.
  params:
    - &ref_376
      desc: 'Exclusion parameter (ignored). Possible values: Excl'
      name: _
      optional: false
      type: Exclude
    - &ref_375
      desc: The roles and emojis to be associated with reactions.
      name: input
      optional: false
      type: string[]
reactionroles_Exclude_string[]_1:
  args:
    - excl text
    - excl
  desc: Execute the ReactionRoles command
  params:
    - &ref_377
      desc: 'Possible values: Excl'
      name: _
      optional: false
      type: Exclude
    - *ref_375
reactionroles_Exclude_string[]_2:
  args:
    - excl text
    - excl
  desc: Assigns reaction roles based on the provided input, excluding certain roles.
  params:
    - *ref_376
    - *ref_375
reactionroles_Exclude_string[]_3:
  args:
    - excl text
    - excl
  desc: Execute the ReactionRoles command
  params:
    - *ref_377
    - *ref_375
reactionroles_Exclude_ulong_string[]:
  args:
    - excl messageid text
    - excl
  desc: Assigns reaction roles based on the provided input, excluding certain roles.
  params:
    - *ref_376
    - &ref_378
      desc: The ID of the message to which reactions will be added.
      name: messageId
      optional: false
      type: ulong
    - *ref_375
reactionroles_Exclude_ulong_string[]_1:
  args:
    - excl messageid text
    - excl
  desc: Execute the ReactionRoles command
  params:
    - *ref_376
    - *ref_378
    - *ref_375
reactionroles_Exclude_ulong_string[]_2:
  args:
    - excl messageid text
    - excl
  desc: Assigns reaction roles based on the provided input, excluding certain roles.
  params:
    - *ref_376
    - *ref_378
    - *ref_375
reactionroles_Exclude_ulong_string[]_3:
  args:
    - excl messageid text
    - excl
  desc: Execute the ReactionRoles command
  params:
    - *ref_376
    - *ref_378
    - *ref_375
reactionroles_string[]:
  args:
    - text
  desc: Assigns reaction roles based on the provided input.
  params:
    - *ref_375
reactionroles_string[]_1:
  args:
    - text
  desc: Execute the ReactionRoles command
  params:
    - *ref_375
reactionroles_string[]_2:
  args:
    - text
  desc: Assigns reaction roles based on the provided input.
  params:
    - *ref_375
reactionroles_string[]_3:
  args:
    - text
  desc: Execute the ReactionRoles command
  params:
    - *ref_375
reactionroles_ulong_Exclude_string[]:
  args:
    - messageid excl text
    - excl
  desc: Assigns reaction roles based on the provided input, excluding certain roles.
  params:
    - *ref_378
    - &ref_379
      desc: 'Used to mark Possible values: Excl'
      name: _
      optional: false
      type: Exclude
    - *ref_375
reactionroles_ulong_Exclude_string[]_1:
  args:
    - messageid excl text
    - excl
  desc: Execute the ReactionRoles command
  params:
    - *ref_378
    - *ref_376
    - *ref_375
reactionroles_ulong_Exclude_string[]_2:
  args:
    - messageid excl text
    - excl
  desc: Assigns reaction roles based on the provided input, excluding certain roles.
  params:
    - *ref_378
    - *ref_379
    - *ref_375
reactionroles_ulong_Exclude_string[]_3:
  args:
    - messageid excl text
    - excl
  desc: Execute the ReactionRoles command
  params:
    - *ref_378
    - *ref_376
    - *ref_375
reactionroles_ulong_string[]:
  args:
    - messageid text
  desc: Execute the ReactionRoles command
  params:
    - *ref_378
    - *ref_375
reactionroles_ulong_string[]_1:
  args:
    - messageid text
  desc: Commands for managing roles.
  params:
    - *ref_380
    - *ref_381
reactionroles_ulong_string[]_2:
  args:
    - messageid text
  desc: Execute the ReactionRoles command
  params:
    - *ref_378
    - *ref_375
reactionroleslist:
  args:
    - ''
  desc: Displays a list of reaction roles configured in the server.
  params: [ ]
reactionroleslist_noparams:
  args:
    - ''
  desc: Displays a list of reaction roles configured in the server.
  params: [ ]
reactionroleslist_noparams_1:
  args:
    - ''
  desc: Displays a list of reaction roles configured in the server.
  params: [ ]
reactionroleslist_noparams_2:
  args:
    - ''
  desc: Displays a list of reaction roles configured in the server.
  params: [ ]
reactionrolesremove:
  args:
    - number
  desc: Removes a reaction role based on its index.
  params:
    - &ref_382
      desc: The index of the reaction role to remove.
      name: index
      optional: false
      type: int
reactionrolesremove_int:
  args:
    - number
  desc: Removes a reaction role based on its index.
  params:
    - *ref_382
reactionrolesremove_int_1:
  args:
    - number
  desc: Removes a reaction role based on its index.
  params:
    - *ref_382
reactionrolesremove_int_2:
  args:
    - number
  desc: Removes a reaction role based on its index.
  params:
    - *ref_382
realbooru:
  args:
    - text
  desc: >-
    Command to fetch and display NSFW content from the Realbooru image board
    with optional tags in the current guild channel or direct messages.
  params:
    - &ref_383
      desc: Optional tags to filter the NSFW content from the Realbooru image board.
      name: tags
      optional: false
      type: string[]
realbooru_string[]:
  args:
    - text
  desc: >-
    Command to fetch and display NSFW content from the Realbooru image board
    with optional tags in the current guild channel or direct messages.
  params:
    - *ref_383
realbooru_string[]_1:
  args:
    - text
  desc: >-
    Command to fetch and display NSFW content from the Realbooru image board
    with optional tags in the current guild channel or direct messages.
  params:
    - *ref_383
realbooru_string[]_2:
  args:
    - text
  desc: >-
    Command to fetch and display NSFW content from the Realbooru image board
    with optional tags in the current guild channel or direct messages.
  params:
    - *ref_383
recreateallpanels:
  args:
    - ''
  desc: Recreates all panels with missing messages.
  params: [ ]
recreatepanel:
  args:
    - number
  desc: Recreates a deleted ticket panel in its original channel.
  params:
    - desc: The message ID of the panel to recreate
      name: panelId
      optional: false
      type: ulong
redditnsfw:
  args:
    - text
  desc: Command to retrieve NSFW content from a specified subreddit.
  params:
    - &ref_384
      desc: The name of the subreddit from which to fetch the content.
      name: subreddit
      optional: false
      type: string
redditnsfw_string:
  args:
    - text
  desc: Command to retrieve NSFW content from a specified subreddit.
  params:
    - *ref_384
redditnsfw_string_1:
  args:
    - text
  desc: The most used module in Mewdeko, nsfw.
  params:
    - *ref_384
redditnsfw_string_2:
  args:
    - text
  desc: Command to retrieve NSFW content from a specified subreddit.
  params:
    - *ref_384
redisexec:
  args:
    - text
  desc: Executes a Redis command and returns the result.
  params:
    - &ref_385
      desc: The Redis command to execute.
      name: command
      optional: false
      type: string
redisexec_string:
  args:
    - text
  desc: Executes a Redis command and returns the result.
  params:
    - *ref_385
redisexec_string_1:
  args:
    - text
  desc: Executes a Redis command and returns the result.
  params:
    - *ref_385
redisexec_string_2:
  args:
    - text
  desc: Executes a Redis command and returns the result.
  params:
    - *ref_385
remind:
  args:
    - me|here text
    - me
    - here
  desc: >-
    Determines whether the reminder should be sent to the user directly or to
    the channel.
  params:
    - &ref_388
      desc: >-
        Specifies whether to send the reminder to the user or the channel.
        Possible values: Me, Here
      name: meorhere
      optional: false
      type: MeOrHere
    - &ref_386
      desc: The reminder message and timing information.
      name: remindString
      optional: false
      type: string
remind_ITextChannel_string:
  args:
    - channel text
  desc: Creates a reminder for a specific text channel.
  params:
    - &ref_387
      desc: The text channel to send the reminder to.
      name: channel
      optional: false
      type: ITextChannel
    - *ref_386
remind_ITextChannel_string_1:
  args:
    - channel text
  desc: Creates a reminder for a specific text channel.
  params:
    - *ref_387
    - *ref_386
remind_ITextChannel_string_2:
  args:
    - channel text
  desc: Creates a reminder for a specific text channel.
  params:
    - *ref_387
    - *ref_386
remind_ITextChannel_string_3:
  args:
    - channel text
  desc: Creates a reminder for a specific text channel.
  params:
    - *ref_387
    - *ref_386
remind_MeOrHere_string:
  args:
    - me|here text
    - me
    - here
  desc: Creates a reminder for the user or the current channel.
  params:
    - *ref_388
    - *ref_386
remind_MeOrHere_string_1:
  args:
    - me|here text
    - me
    - here
  desc: Provides commands for managing reminders.
  params:
    - *ref_388
    - *ref_386
remind_MeOrHere_string_2:
  args:
    - me|here text
    - me
    - here
  desc: Creates a reminder for the user or the current channel.
  params:
    - *ref_388
    - *ref_386
reminddelete:
  args:
    - number
  desc: Deletes a specific reminder.
  params:
    - &ref_389
      desc: The index of the reminder to delete.
      name: index
      optional: false
      type: int
reminddelete_int:
  args:
    - number
  desc: Deletes a specific reminder.
  params:
    - *ref_389
reminddelete_int_1:
  args:
    - number
  desc: Deletes a specific reminder.
  params:
    - *ref_389
reminddelete_int_2:
  args:
    - number
  desc: Deletes a specific reminder.
  params:
    - *ref_389
remindlist:
  args:
    - ''
  desc: Lists all reminders for the current user.
  params: [ ]
remindlist_noparams:
  args:
    - ''
  desc: Lists all reminders for the current user.
  params: [ ]
remindlist_noparams_1:
  args:
    - ''
  desc: Lists all reminders for the current user.
  params: [ ]
remindlist_noparams_2:
  args:
    - ''
  desc: Lists all reminders for the current user.
  params: [ ]
removeaddroles:
  args:
    - number @role
  desc: Sets the roles to remove when a user has the selected status.
  params:
    - &ref_390
      desc: The index of the status role.
      name: index
      optional: false
      type: int
    - &ref_391
      desc: The roles to remove.
      name: roles
      optional: false
      type: IRole[]
removeaddroles_int_IRole[]:
  args:
    - number @role
  desc: Sets the roles to remove when a user has the selected status.
  params:
    - *ref_390
    - *ref_391
removeaddroles_int_IRole[]_1:
  args:
    - number @role
  desc: Sets the roles to remove when a user has the selected status.
  params:
    - *ref_390
    - *ref_391
removeaddroles_int_IRole[]_2:
  args:
    - number @role
  desc: Sets the roles to remove when a user has the selected status.
  params:
    - *ref_390
    - *ref_391
removeallroles:
  args:
    - '@user'
  desc: Removes all roles from a user except managed roles and the everyone role.
  params:
    - &ref_392
      desc: The user from whom to remove all roles.
      name: user
      optional: false
      type: IGuildUser
removeallroles_IGuildUser:
  args:
    - '@user'
  desc: Execute the RemoveAllRoles command
  params:
    - *ref_392
removeallroles_IGuildUser_1:
  args:
    - '@user'
  desc: Removes all roles from a user except managed roles and the everyone role.
  params:
    - *ref_392
removeallroles_IGuildUser_2:
  args:
    - '@user'
  desc: Execute the RemoveAllRoles command
  params:
    - *ref_392
removeautopublish:
  args:
    - channel
  desc: Disables auto-publishing for a specified news channel within the guild.
  params:
    - &ref_393
      desc: The news channel to disable auto-publishing for.
      name: channel
      optional: false
      type: ITextChannel
removeautopublish_ITextChannel:
  args:
    - channel
  desc: Disables auto-publishing for a specified news channel within the guild.
  params:
    - *ref_393
removeautopublish_ITextChannel_1:
  args:
    - channel
  desc: Disables auto-publishing for a specified news channel within the guild.
  params:
    - *ref_393
removeautopublish_ITextChannel_2:
  args:
    - channel
  desc: Disables auto-publishing for a specified news channel within the guild.
  params:
    - *ref_393
removeblacklistedpermission:
  args:
    - permission
  desc: Removes a permission from the blacklist.
  params:
    - *ref_7
removeblacklistedpermission_GuildPermission:
  args:
    - permission
  desc: Removes a permission from the blacklist.
  params:
    - *ref_7
removeblacklistedpermission_GuildPermission_1:
  args:
    - permission
  desc: Removes a permission from the blacklist.
  params:
    - *ref_7
removeblacklistedpermission_GuildPermission_2:
  args:
    - permission
  desc: Removes a permission from the blacklist.
  params:
    - *ref_7
removeblacklistedrole:
  args:
    - '@role'
  desc: Removes a role from the blacklist.
  params:
    - *ref_8
removeblacklistedrole_IRole:
  args:
    - '@role'
  desc: Removes a role from the blacklist.
  params:
    - *ref_8
removeblacklistedrole_IRole_1:
  args:
    - '@role'
  desc: Removes a role from the blacklist.
  params:
    - *ref_8
removeblacklistedrole_IRole_2:
  args:
    - '@role'
  desc: Removes a role from the blacklist.
  params:
    - *ref_8
removecurrencyreward:
  args:
    - number
  desc: Removes a currency reward for a specific level.
  params:
    - *ref_174
removecurrencyreward_int:
  args:
    - number
  desc: Removes a currency reward for a specific level.
  params:
    - *ref_174
removecurrencyreward_int_1:
  args:
    - number
  desc: Removes a currency reward for a specific level.
  params:
    - *ref_174
removecurrencyreward_int_2:
  args:
    - number
  desc: Removes a currency reward for a specific level.
  params:
    - *ref_174
removeemote:
  args:
    - text
  desc: Removes an emote from the server.
  params:
    - &ref_394
      desc: Placeholder parameter to satisfy command signature requirements.
      name: _
      optional: false
      type: string
removeemote_string:
  args:
    - text
  desc: Removes an emote from the server.
  params:
    - *ref_394
removefromall:
  args:
    - '@role'
  desc: Removes a specified role from all server members.
  params:
    - &ref_395
      desc: The role to be removed from all server members.
      name: role
      optional: false
      type: IRole
removefromall_IRole:
  args:
    - '@role'
  desc: Removes a specified role from all server members.
  params:
    - *ref_395
removefromall_IRole_1:
  args:
    - '@role'
  desc: Removes a specified role from all server members.
  params:
    - *ref_395
removefromall_IRole_2:
  args:
    - '@role'
  desc: Removes a specified role from all server members.
  params:
    - *ref_395
removefromallbots:
  args:
    - '@role'
  desc: Removes a specified role from all bots in the server.
  params:
    - &ref_396
      desc: The role to be removed from all bots.
      name: role
      optional: false
      type: IRole
removefromallbots_IRole:
  args:
    - '@role'
  desc: Removes a specified role from all bots in the server.
  params:
    - *ref_396
removefromallbots_IRole_1:
  args:
    - '@role'
  desc: Removes a specified role from all bots in the server.
  params:
    - *ref_396
removefromallbots_IRole_2:
  args:
    - '@role'
  desc: Removes a specified role from all bots in the server.
  params:
    - *ref_396
removefromallusers:
  args:
    - '@role'
  desc: Removes a specified role from all human users, excluding bots.
  params:
    - &ref_397
      desc: The role to be removed from all human members.
      name: role
      optional: false
      type: IRole
removefromallusers_IRole:
  args:
    - '@role'
  desc: Removes a specified role from all human users, excluding bots.
  params:
    - *ref_397
removefromallusers_IRole_1:
  args:
    - '@role'
  desc: Removes a specified role from all human users, excluding bots.
  params:
    - *ref_397
removefromallusers_IRole_2:
  args:
    - '@role'
  desc: Removes a specified role from all human users, excluding bots.
  params:
    - *ref_397
removefromrole:
  args:
    - '@role @role'
  desc: >-
    Removes a specified role from all users who currently have another specified
    role.
  params:
    - &ref_398
      desc: The role to remove from users.
      name: role
      optional: false
      type: IRole
    - &ref_399
      desc: The role whose members will have the first role removed.
      name: role2
      optional: false
      type: IRole
removefromrole_IRole_IRole:
  args:
    - '@role @role'
  desc: Execute the RemoveFromRole command
  params:
    - *ref_398
    - *ref_399
removefromrole_IRole_IRole_1:
  args:
    - '@role @role'
  desc: >-
    Removes a specified role from all users who currently have another specified
    role.
  params:
    - *ref_398
    - *ref_399
removefromrole_IRole_IRole_2:
  args:
    - '@role @role'
  desc: Execute the RemoveFromRole command
  params:
    - *ref_398
    - *ref_399
removeinstance:
  args:
    - number
  desc: Removes a bot instance from dashboard management.
  params:
    - *ref_400
removeinstance_int:
  args:
    - number
  desc: Removes a bot instance from dashboard management.
  params:
    - *ref_400
removelevelupmessage:
  args:
    - messageId
  desc: Removes a custom level-up message by ID.
  params:
    - desc: The ID of the message to remove (shown in levelupmessages command).
      name: messageId
      optional: false
      type: int
removemodalfield:
  args:
    - number text
  desc: Removes a field from a ticket creation modal
  params:
    - *ref_277
    - &ref_401
      desc: ''
      name: fieldId
      optional: false
      type: string
removemodalfield_int_string:
  args:
    - number text
  desc: Removes a field from a ticket creation modal
  params:
    - *ref_277
    - *ref_401
removemodalfield_int_string_1:
  args:
    - number text
  desc: Removes a field from a ticket creation modal
  params:
    - *ref_277
    - *ref_401
removemodalfield_int_string_2:
  args:
    - number text
  desc: Removes a field from a ticket creation modal
  params:
    - *ref_277
    - *ref_401
removemodalfield_int_string_3:
  args:
    - number text
  desc: Removes a field from a ticket creation modal
  params:
    - *ref_277
    - *ref_401
removemodalfield_int_string_4:
  args:
    - number text
  desc: Removes a field from a ticket creation modal
  params:
    - *ref_277
    - *ref_401
removeonmute:
  args:
    - text
  desc: Toggles whether to remove roles on mute
  params:
    - &ref_402
      desc: Nosnt
      name: yesnt
      optional: false
      type: string
removeonmute_string:
  args:
    - text
  desc: Toggles whether to remove roles on mute
  params:
    - *ref_402
removeonmute_string_1:
  args:
    - text
  desc: Toggles whether to remove roles on mute
  params:
    - *ref_402
removeonmute_string_2:
  args:
    - text
  desc: Toggles whether to remove roles on mute
  params:
    - *ref_402
removeoption:
  args:
    - text text
  desc: Removes an option from a select menu
  params:
    - &ref_403
      desc: The ID of the menu
      name: menuId
      optional: false
      type: string
    - &ref_404
      desc: The value of the option to remove
      name: optionValue
      optional: false
      type: string
removeoption_string_string:
  args:
    - text text
  desc: Removes an option from a select menu
  params:
    - *ref_403
    - *ref_404
removeoption_string_string_1:
  args:
    - text text
  desc: Removes an option from a select menu
  params:
    - *ref_403
    - *ref_404
removeoption_string_string_2:
  args:
    - text text
  desc: Removes an option from a select menu
  params:
    - *ref_403
    - *ref_404
removeoption_string_string_3:
  args:
    - text text
  desc: Removes an option from a select menu
  params:
    - *ref_403
    - *ref_404
removeoption_string_string_4:
  args:
    - text text
  desc: Removes an option from a select menu
  params:
    - *ref_403
    - *ref_404
removeperm:
  args:
    - number
  desc: Removes a permission from the list based on its index.
  params:
    - &ref_405
      desc: The perm to remove
      name: index
      optional: false
      type: int
removeperm_int:
  args:
    - number
  desc: Removes a permission from the list based on its index.
  params:
    - *ref_405
removeperm_int_1:
  args:
    - number
  desc: Removes a permission from the list based on its index.
  params:
    - *ref_405
removeperm_int_2:
  args:
    - number
  desc: Removes a permission from the list based on its index.
  params:
    - *ref_405
removeplaying:
  args:
    - number
  desc: Removes a status from the rotating playing statuses by its index.
  params:
    - &ref_406
      desc: >-
        The one-based index of the status to remove. The actual removal will use
        zero-based indexing.
      name: index
      optional: false
      type: int
removeplaying_int:
  args:
    - number
  desc: Removes a status from the rotating playing statuses by its index.
  params:
    - *ref_406
removeplaying_int_1:
  args:
    - number
  desc: Removes a status from the rotating playing statuses by its index.
  params:
    - *ref_406
removeplaying_int_2:
  args:
    - number
  desc: Removes a status from the rotating playing statuses by its index.
  params:
    - *ref_406
removepublishblacklist:
  args:
    - '@user channel'
  desc: Removes a user from the auto-publish blacklist for a specified channel.
  params:
    - &ref_409
      desc: The user to unblacklist.
      name: user
      optional: false
      type: IUser
    - &ref_407
      desc: The channel for which to remove the blacklist.
      name: channel
      optional: false
      type: ITextChannel
removepublishblacklist_ITextChannel_string:
  args:
    - channel text
  desc: Removes a word from the auto-publish blacklist for a specified channel.
  params:
    - *ref_407
    - &ref_408
      desc: The word to unblacklist.
      name: word
      optional: false
      type: string
removepublishblacklist_ITextChannel_string_1:
  args:
    - channel text
  desc: Removes a word from the auto-publish blacklist for a specified channel.
  params:
    - *ref_407
    - *ref_408
removepublishblacklist_ITextChannel_string_2:
  args:
    - channel text
  desc: Removes a word from the auto-publish blacklist for a specified channel.
  params:
    - *ref_407
    - *ref_408
removepublishblacklist_ITextChannel_string_3:
  args:
    - channel text
  desc: Removes a word from the auto-publish blacklist for a specified channel.
  params:
    - *ref_407
    - *ref_408
removepublishblacklist_IUser_ITextChannel:
  args:
    - '@user channel'
  desc: Removes a user from the auto-publish blacklist for a specified channel.
  params:
    - *ref_409
    - *ref_407
removepublishblacklist_IUser_ITextChannel_1:
  args:
    - '@user channel'
  desc: Removes a user from the auto-publish blacklist for a specified channel.
  params:
    - *ref_409
    - *ref_407
removepublishblacklist_IUser_ITextChannel_2:
  args:
    - '@user channel'
  desc: Removes a user from the auto-publish blacklist for a specified channel.
  params:
    - *ref_409
    - *ref_407
removeremoveroles:
  args:
    - number @role
  desc: >-
    Removes one or more roles from the roles added when a user has the selected
    status.
  params:
    - *ref_390
    - *ref_391
removeremoveroles_int_IRole[]:
  args:
    - number @role
  desc: >-
    Removes one or more roles from the roles added when a user has the selected
    status.
  params:
    - *ref_390
    - *ref_391
removeremoveroles_int_IRole[]_1:
  args:
    - number @role
  desc: >-
    Removes one or more roles from the roles added when a user has the selected
    status.
  params:
    - *ref_390
    - *ref_391
removeremoveroles_int_IRole[]_2:
  args:
    - number @role
  desc: >-
    Removes one or more roles from the roles added when a user has the selected
    status.
  params:
    - *ref_390
    - *ref_391
removerole:
  args:
    - '@role @user'
  desc: Removes a role from a user.
  params:
    - &ref_411
      desc: The role to remove from the user.
      name: roleToRemove
      optional: false
      type: IRole
    - &ref_410
      desc: The user to remove the role from.
      name: targetUser
      optional: false
      type: IGuildUser
removerole_IGuildUser_IRole:
  args:
    - '@user @role'
  desc: Removes a role from a user.
  params:
    - *ref_410
    - *ref_411
removerole_IGuildUser_IRole_1:
  args:
    - '@user @role'
  desc: Execute the RemoveRole command
  params:
    - *ref_410
    - *ref_411
removerole_IGuildUser_IRole_2:
  args:
    - '@user @role'
  desc: Removes a role from a user.
  params:
    - *ref_410
    - *ref_411
removerole_IGuildUser_IRole_3:
  args:
    - '@user @role'
  desc: Execute the RemoveRole command
  params:
    - *ref_410
    - *ref_411
removerole_IRole_IGuildUser:
  args:
    - '@role @user'
  desc: Execute the RemoveRole command
  params:
    - *ref_411
    - *ref_410
removerole_IRole_IGuildUser_1:
  args:
    - '@role @user'
  desc: Removes a role from a user.
  params:
    - *ref_411
    - *ref_410
removerole_IRole_IGuildUser_2:
  args:
    - '@role @user'
  desc: Execute the RemoveRole command
  params:
    - *ref_411
    - *ref_410
removerolereward:
  args:
    - number
  desc: Removes a role reward for a specific level.
  params:
    - *ref_174
removerolereward_int:
  args:
    - number
  desc: Removes a role reward for a specific level.
  params:
    - *ref_174
removerolereward_int_1:
  args:
    - number
  desc: Removes a role reward for a specific level.
  params:
    - *ref_174
removerolereward_int_2:
  args:
    - number
  desc: Removes a role reward for a specific level.
  params:
    - *ref_174
removeroles:
  args:
    - '@user @role'
  desc: Removes specified roles from a user.
  params:
    - &ref_412
      desc: The user from whom the roles will be removed.
      name: user
      optional: false
      type: IGuildUser
    - &ref_413
      desc: The roles to be removed from the user.
      name: roles
      optional: false
      type: IRole[]
removeroles_IGuildUser_IRole[]:
  args:
    - '@user @role'
  desc: Removes specified roles from a user.
  params:
    - *ref_412
    - *ref_413
removeroles_IGuildUser_IRole[]_1:
  args:
    - '@user @role'
  desc: Removes specified roles from a user.
  params:
    - *ref_412
    - *ref_413
removeroles_IGuildUser_IRole[]_2:
  args:
    - '@user @role'
  desc: Removes specified roles from a user.
  params:
    - *ref_412
    - *ref_413
removerolesfromrolestate:
  args:
    - '@user @role'
  desc: Removes roles from a user's role state.
  params:
    - *ref_26
    - &ref_414
      desc: The roles to be removed from the user's role state.
      name: roles
      optional: false
      type: IRole[]
removerolesfromrolestate_IUser_IRole[]:
  args:
    - '@user @role'
  desc: Removes roles from a user's role state.
  params:
    - *ref_26
    - *ref_25
removerolesfromrolestate_IUser_IRole[]_1:
  args:
    - '@user @role'
  desc: Removes roles from a user's role state.
  params:
    - *ref_26
    - *ref_414
removerolesfromrolestate_IUser_IRole[]_2:
  args:
    - '@user @role'
  desc: Removes roles from a user's role state.
  params:
    - *ref_26
    - *ref_25
removestarboardemote:
  args:
    - number emote
  desc: Removes an emote from an existing starboard configuration.
  params:
    - *ref_415
    - desc: The emote to remove.
      name: emote
      optional: false
      type: IEmote
removestatusrole:
  args:
    - number
  desc: Removes a status role configuration.
  params:
    - *ref_390
removestatusrole_int:
  args:
    - number
  desc: Removes a status role configuration.
  params:
    - *ref_390
removestatusrole_int_1:
  args:
    - number
  desc: Removes a status role configuration.
  params:
    - *ref_390
removestatusrole_int_2:
  args:
    - number
  desc: Removes a status role configuration.
  params:
    - *ref_390
removeusersfromrole:
  args:
    - '@role @user'
    - '@user @role'
  desc: Removes a specific role from a list of users, if they have the role.
  params:
    - &ref_416
      desc: The role to be removed from the users.
      name: role
      optional: false
      type: IRole
    - &ref_417
      desc: The users from whom the role will be removed.
      name: users
      optional: false
      type: IUser[]
removeusersfromrole_IRole_IUser[]:
  args:
    - '@role @user'
    - '@user @role'
  desc: Removes a specific role from a list of users, if they have the role.
  params:
    - *ref_416
    - *ref_417
removeusersfromrole_IRole_IUser[]_1:
  args:
    - '@role @user'
    - '@user @role'
  desc: Removes a specific role from a list of users, if they have the role.
  params:
    - *ref_416
    - *ref_417
removeusersfromrole_IRole_IUser[]_2:
  args:
    - '@role @user'
    - '@user @role'
  desc: Removes a specific role from a list of users, if they have the role.
  params:
    - *ref_416
    - *ref_417
removewhitelistedrole:
  args:
    - '@role'
  desc: Removes a role from the whitelist.
  params:
    - *ref_43
removewhitelistedrole_IRole:
  args:
    - '@role'
  desc: Removes a role from the whitelist.
  params:
    - *ref_43
removewhitelistedrole_IRole_1:
  args:
    - '@role'
  desc: Removes a role from the whitelist.
  params:
    - *ref_43
removewhitelistedrole_IRole_2:
  args:
    - '@role'
  desc: Removes a role from the whitelist.
  params:
    - *ref_43
removewhitelisteduser:
  args:
    - '@user'
  desc: Removes a user from the whitelist.
  params:
    - *ref_44
removewhitelisteduser_IGuildUser:
  args:
    - '@user'
  desc: Removes a user from the whitelist.
  params:
    - *ref_44
removewhitelisteduser_IGuildUser_1:
  args:
    - '@user'
  desc: Removes a user from the whitelist.
  params:
    - *ref_44
removewhitelisteduser_IGuildUser_2:
  args:
    - '@user'
  desc: Removes a user from the whitelist.
  params:
    - *ref_44
renamechannel:
  args:
    - channel text
  desc: Internal handler for message deletion.
  params:
    - &ref_418
      desc: The target channel
      name: channel
      optional: false
      type: IGuildChannel
    - *ref_159
renamechannel_IGuildChannel_string:
  args:
    - channel text
  desc: Renames the specified channel.
  params:
    - &ref_419
      desc: The channel to rename
      name: channel
      optional: false
      type: IGuildChannel
    - &ref_420
      desc: The new name for the channel
      name: name
      optional: false
      type: string
renamechannel_IGuildChannel_string_1:
  args:
    - channel text
  desc: Internal handler for message deletion.
  params:
    - *ref_418
    - *ref_159
renamechannel_IGuildChannel_string_2:
  args:
    - channel text
  desc: Renames the specified channel.
  params:
    - *ref_419
    - *ref_420
renameemote:
  args:
    - text text
  desc: Renames an existing emote on the server.
  params:
    - &ref_421
      desc: The existing emote to rename.
      name: emote
      optional: false
      type: string
    - &ref_422
      desc: The new name for the emote.
      name: name
      optional: false
      type: string
renameemote_string_string:
  args:
    - text text
  desc: Renames an existing emote on the server.
  params:
    - *ref_421
    - *ref_422
renamerole:
  args:
    - '@role text'
  desc: Renames a role.
  params:
    - &ref_423
      desc: The role to rename.
      name: roleToEdit
      optional: false
      type: IRole
    - &ref_424
      desc: The new name for the role.
      name: newname
      optional: false
      type: string
renamerole_IRole_string:
  args:
    - '@role text'
  desc: Renames a role.
  params:
    - *ref_423
    - *ref_424
renamerole_IRole_string_1:
  args:
    - '@role text'
  desc: Renames a role.
  params:
    - *ref_423
    - *ref_424
renamerole_IRole_string_2:
  args:
    - '@role text'
  desc: Renames a role.
  params:
    - *ref_423
    - *ref_424
rep:
  args:
    - '@user reptype text'
  desc: Gives reputation to a specified user.
  params:
    - *ref_228
    - *ref_229
    - *ref_230
repanon:
  args:
    - '@user reptype text'
  desc: Gives anonymous reputation to a specified user.
  params:
    - *ref_228
    - *ref_229
    - *ref_230
repanonymous:
  args:
    - enabled
  desc: Enables or disables anonymous reputation giving.
  params:
    - desc: True to enable anonymous reputation.
      name: enabled
      optional: false
      type: bool
repchannel:
  args:
    - '#channel state number'
  desc: Configures channel-specific reputation settings.
  params:
    - desc: The channel to configure.
      name: channel
      optional: false
      type: ITextChannel
    - desc: The state to set (enabled/disabled/readonly).
      name: state
      optional: true
      type: string
    - desc: The reputation multiplier for this channel.
      name: multiplier
      optional: true
      type: decimal
repcheck:
  args:
    - '@user'
  desc: Checks the reputation of a user.
  params:
    - *ref_425
repcommandbypass:
  args:
    - commandname '@role'
  desc: Sets bypass roles for a command requirement.
  params:
    - &ref_426
      desc: The command name.
      name: commandName
      optional: false
      type: string
    - desc: The roles that can bypass the requirement.
      name: roles
      optional: false
      type: IRole[]
repcommandinfo:
  args:
    - commandname
  desc: Shows reputation requirements for a specific command.
  params:
    - *ref_426
repcommandreq:
  args:
    - commandname 50
    - commandname 50 helper
    - 'commandname 50 helper #channel1 #channel2'
  desc: >-
    Sets reputation requirements for a command, optionally restricted to
    specific channels.
  params:
    - *ref_426
    - desc: The minimum reputation required.
      name: minReputation
      optional: false
      type: int
    - desc: The specific reputation type required (optional, defaults to total).
      name: repType
      optional: true
      type: string
    - desc: >-
        Optional channels where this requirement applies (if none specified,
        applies globally).
      name: channels
      optional: true
      type: ITextChannel[]
repcommandreqlist:
  args:
    - ''
  desc: Lists all command requirements for the server.
  params: [ ]
repcommandreqremove:
  args:
    - commandname
  desc: Removes reputation requirements from a command.
  params:
    - *ref_426
repconfig:
  args:
    - ''
  desc: Shows the current reputation configuration for the server.
  params: [ ]
repcooldown:
  args:
    - minutes
  desc: Sets the default cooldown between giving reputation.
  params:
    - desc: Cooldown in minutes (1-1440).
      name: minutes
      optional: false
      type: int
repdailylimit:
  args:
    - limit
  desc: Sets the daily limit for giving reputation.
  params:
    - desc: Daily limit (1-100).
      name: limit
      optional: false
      type: int
repdecay:
  args:
    - enabled
  desc: Enables or disables reputation decay for inactive users.
  params:
    - desc: True to enable decay.
      name: enabled
      optional: false
      type: bool
repdecayamount:
  args:
    - amount
  desc: Sets the decay amount.
  params:
    - desc: The decay amount (1-100).
      name: amount
      optional: false
      type: int
repdecayinactive:
  args:
    - days
  desc: Sets the number of inactive days before decay starts.
  params:
    - desc: Days of inactivity (1-365).
      name: days
      optional: false
      type: int
repdecaytype:
  args:
    - type
  desc: Sets the decay type (daily, weekly, monthly).
  params:
    - desc: The decay type.
      name: type
      optional: false
      type: string
repeat:
  args:
    - text
  desc: Creates a repeater with the specified message.
  params:
    - &ref_427
      desc: The message to repeat.
      name: message
      optional: true
      type: string
repeat_GuildDateTime_StoopidTime_string:
  args:
    - dt interval text
  desc: Creates a repeater with optional start time and interval.
  params:
    - &ref_428
      desc: Optional time of day to start the repeater.
      name: dt
      optional: true
      type: GuildDateTime
    - &ref_429
      desc: Optional interval between repeats.
      name: interval
      optional: true
      type: StoopidTime
    - *ref_427
repeat_GuildDateTime_StoopidTime_string_1:
  args:
    - dt interval text
  desc: Execute the Repeat command
  params:
    - *ref_428
    - *ref_429
    - *ref_427
repeat_GuildDateTime_StoopidTime_string_2:
  args:
    - dt interval text
  desc: Creates a repeater with optional start time and interval.
  params:
    - *ref_428
    - *ref_429
    - *ref_427
repeat_GuildDateTime_StoopidTime_string_3:
  args:
    - dt interval text
  desc: Execute the Repeat command
  params:
    - *ref_428
    - *ref_429
    - *ref_427
repeat_GuildDateTime_string:
  args:
    - dt text
    - dt
  desc: Creates a repeater that runs at a specific time each day.
  params:
    - &ref_430
      desc: Optional time of day to start the repeater.
      name: dt
      optional: false
      type: GuildDateTime
    - *ref_427
repeat_GuildDateTime_string_1:
  args:
    - dt text
    - dt
  desc: Creates a repeater that runs at a specific time each day.
  params:
    - *ref_430
    - *ref_427
repeat_GuildDateTime_string_2:
  args:
    - dt text
    - dt
  desc: Creates a repeater that runs at a specific time each day.
  params:
    - *ref_430
    - *ref_427
repeat_GuildDateTime_string_3:
  args:
    - dt text
    - dt
  desc: Creates a repeater that runs at a specific time each day.
  params:
    - *ref_430
    - *ref_427
repeat_StoopidTime_string:
  args:
    - interval text
    - interval
  desc: Creates a repeater with specified interval and message.
  params:
    - &ref_431
      desc: The time interval between repeats.
      name: interval
      optional: false
      type: StoopidTime
    - *ref_427
repeat_StoopidTime_string_1:
  args:
    - interval text
    - interval
  desc: Creates a repeater with specified interval and message.
  params:
    - *ref_431
    - *ref_427
repeat_StoopidTime_string_2:
  args:
    - interval text
    - interval
  desc: Creates a repeater with specified interval and message.
  params:
    - *ref_431
    - *ref_427
repeat_StoopidTime_string_3:
  args:
    - interval text
    - interval
  desc: Creates a repeater with specified interval and message.
  params:
    - *ref_431
    - *ref_427
repeat_string:
  args:
    - text
  desc: Creates a repeater with the specified message.
  params:
    - *ref_427
repeat_string_1:
  args:
    - text
  desc: Creates a repeater with the specified message.
  params:
    - *ref_427
repeat_string_2:
  args:
    - text
  desc: Creates a repeater with the specified message.
  params:
    - *ref_427
repeatactivity:
  args:
    - index threshold timeWindow
  desc: Sets the activity threshold for a repeater.
  params:
    - desc: The one-based index of the repeater to modify.
      name: index
      optional: false
      type: int
    - desc: Number of messages needed to trigger.
      name: threshold
      optional: false
      type: int
    - desc: Time window for activity detection (e.g., 5m, 10s).
      name: timeWindow
      optional: false
      type: stoopid time
repeatchannel:
  args:
    - number null
    - number
  desc: Changes the channel where a repeater sends its messages.
  params:
    - &ref_432
      desc: The one-based index of the repeater to modify.
      name: index
      optional: false
      type: int
    - *ref_1
repeatchannel_int_=:
  args:
    - number null
    - number
  desc: Execute the RepeatChannel command
  params:
    - *ref_432
    - *ref_1
repeatchannel_int_=_1:
  args:
    - number null
    - number
  desc: Changes the channel where a repeater sends its messages.
  params:
    - *ref_432
    - *ref_1
repeatchannel_int_=_2:
  args:
    - number null
    - number
  desc: Execute the RepeatChannel command
  params:
    - *ref_432
    - *ref_1
repeatconversation:
  args:
    - index
  desc: Toggles conversation detection for a repeater.
  params:
    - desc: The one-based index of the repeater to modify.
      name: index
      optional: false
      type: int
repeatforumtags:
  args:
    - index action tagType tags
  desc: Sets forum tag conditions for a repeater.
  params:
    - desc: The one-based index of the repeater to modify.
      name: index
      optional: false
      type: int
    - desc: Action to perform (add, remove, clear, list).
      name: action
      optional: false
      type: string
    - desc: Type of tag rule (required or excluded).
      name: tagType
      optional: true
      type: string
    - desc: Comma-separated list of tag names or IDs.
      name: tags
      optional: true
      type: string
repeatinvoke:
  args:
    - number
  desc: Immediately triggers a repeater by its index number.
  params:
    - *ref_432
repeatinvoke_int:
  args:
    - number
  desc: Immediately triggers a repeater by its index number.
  params:
    - *ref_432
repeatinvoke_int_1:
  args:
    - number
  desc: >-
    Provides commands for managing message repeaters within the guild. Allows
    for creating, modifying, and removing automated repeating messages.
  params:
    - &ref_433
      desc: The one-based index of the repeater to remove.
      name: index
      optional: false
      type: int
repeatinvoke_int_2:
  args:
    - number
  desc: Immediately triggers a repeater by its index number.
  params:
    - *ref_433
repeatlist:
  args:
    - ''
  desc: Lists all active repeaters in the guild.
  params: [ ]
repeatlist_noparams:
  args:
    - ''
  desc: Lists all active repeaters in the guild.
  params: [ ]
repeatlist_noparams_1:
  args:
    - ''
  desc: Lists all active repeaters in the guild.
  params: [ ]
repeatlist_noparams_2:
  args:
    - ''
  desc: Lists all active repeaters in the guild.
  params: [ ]
repeatmessage:
  args:
    - number text
    - number
  desc: Updates the message of an existing repeater.
  params:
    - &ref_434
      desc: The one-based index of the repeater to update.
      name: index
      optional: false
      type: int
    - &ref_435
      desc: The new message for the repeater.
      name: message
      optional: true
      type: string
repeatmessage_int_string:
  args:
    - number text
    - number
  desc: Updates the message of an existing repeater.
  params:
    - *ref_434
    - *ref_435
repeatmessage_int_string_1:
  args:
    - number text
    - number
  desc: Updates the message of an existing repeater.
  params:
    - *ref_434
    - *ref_435
repeatmessage_int_string_2:
  args:
    - number text
    - number
  desc: Updates the message of an existing repeater.
  params:
    - *ref_434
    - *ref_435
repeatpriority:
  args:
    - index priority
  desc: Sets the priority for a repeater (0-100, higher = more important).
  params:
    - desc: The one-based index of the repeater to modify.
      name: index
      optional: false
      type: int
    - desc: Priority level (0-100).
      name: priority
      optional: false
      type: int
repeatredun:
  args:
    - action
  desc: Manages repeat redundancy.
  params:
    - desc: The action to perform.
      name: action
      optional: false
      type: string
repeatredundant:
  args:
    - number
  desc: Toggles the redundancy check for a repeater.
  params:
    - *ref_432
repeatredundant_int:
  args:
    - number
  desc: Toggles the redundancy check for a repeater.
  params:
    - *ref_432
repeatredundant_int_1:
  args:
    - number
  desc: Toggles the redundancy check for a repeater.
  params:
    - *ref_432
repeatredundant_int_2:
  args:
    - number
  desc: Toggles the redundancy check for a repeater.
  params:
    - *ref_432
repeatremove:
  args:
    - number
  desc: Removes a repeater by its index number.
  params:
    - *ref_432
repeatremove_int:
  args:
    - number
  desc: Removes a repeater by its index number.
  params:
    - *ref_432
repeatremove_int_1:
  args:
    - number
  desc: Removes a repeater by its index number.
  params:
    - *ref_433
repeatremove_int_2:
  args:
    - number
  desc: Removes a repeater by its index number.
  params:
    - *ref_433
repeatschedule:
  args:
    - index preset
  desc: Sets time-based scheduling for a repeater.
  params:
    - desc: The one-based index of the repeater to modify.
      name: index
      optional: false
      type: int
    - desc: Preset time condition (business, evening, weekend, none, disable).
      name: preset
      optional: false
      type: string
repeatthreadautosticky:
  args:
    - index
  desc: Toggles thread auto-sticky feature for a repeater.
  params:
    - desc: The one-based index of the repeater to modify.
      name: index
      optional: false
      type: int
repeatthreadonly:
  args:
    - index
  desc: Toggles thread-only mode for a repeater.
  params:
    - desc: The one-based index of the repeater to modify.
      name: index
      optional: false
      type: int
repeattoggle:
  args:
    - index
  desc: Toggles the enabled state of a repeater.
  params:
    - desc: The one-based index of the repeater to toggle.
      name: index
      optional: false
      type: int
repeattriggermode:
  args:
    - index mode
  desc: >-
    Sets the trigger mode for a repeater (timeinterval, onactivity,
    onnoactivity, immediate, aftermessages).
  params:
    - desc: The one-based index of the repeater to modify.
      name: index
      optional: false
      type: int
    - desc: The trigger mode to set.
      name: mode
      optional: false
      type: string
repenable:
  args:
    - enabled
  desc: Enables or disables the reputation system for this server.
  params:
    - desc: True to enable, false to disable.
      name: enabled
      optional: true
      type: bool
repeventcreate:
  args:
    - name multiplier duration
  desc: Creates a reputation multiplier event.
  params:
    - desc: Name of the event.
      name: name
      optional: false
      type: string
    - desc: Reputation multiplier.
      name: multiplier
      optional: false
      type: decimal
    - desc: Duration in hours.
      name: duration
      optional: false
      type: int
repeventend:
  args:
    - name
  desc: Ends a reputation event early.
  params:
    - desc: Name of the event to end.
      name: name
      optional: false
      type: string
repexport:
  args:
    - ''
  desc: Exports the current reputation configuration to JSON.
  params: [ ]
repfreeze:
  args:
    - '@user'
  desc: >-
    Freezes a user's reputation, preventing them from gaining or losing
    reputation.
  params:
    - &ref_438
      desc: The user to remove reputation from.
      name: user
      optional: false
      type: IGuildUser
repgive:
  args:
    - '@user reptype text'
  desc: Gives reputation to a specified user.
  params:
    - *ref_228
    - *ref_229
    - *ref_230
rephistory:
  args:
    - '@user'
  desc: Shows the reputation history for a user.
  params:
    - *ref_425
repimport:
  args:
    - ''
  desc: Imports reputation configuration from uploaded JSON file.
  params: [ ]
replb:
  args:
    - number
  desc: Shows the reputation leaderboard for the server.
  params:
    - &ref_436
      desc: The page number to display.
      name: page
      optional: true
      type: int
repleaderboard:
  args:
    - number
  desc: Shows the reputation leaderboard for the server.
  params:
    - *ref_436
repmilestonelost:
  args:
    - user role threshold
  desc: Manually triggers milestone lost event for testing.
  params:
    - desc: The user who lost the milestone.
      name: user
      optional: false
      type: IGuildUser
    - desc: The role that was lost.
      name: role
      optional: false
      type: IRole
    - desc: The reputation threshold.
      name: threshold
      optional: false
      type: int
repminage:
  args:
    - days
  desc: Sets the minimum account age required to give reputation.
  params:
    - desc: Minimum account age in days (0-365).
      name: days
      optional: false
      type: int
repminmembership:
  args:
    - hours
  desc: Sets the minimum server membership time required to give reputation.
  params:
    - desc: Minimum membership time in hours (0-720).
      name: hours
      optional: false
      type: int
repminmessages:
  args:
    - count
  desc: Sets the minimum message count required to give reputation.
  params:
    - desc: Minimum message count (0-1000).
      name: count
      optional: false
      type: int
repnegative:
  args:
    - enabled
  desc: Enables or disables negative reputation.
  params:
    - desc: True to enable negative reputation.
      name: enabled
      optional: false
      type: bool
repnotificationchannel:
  args:
    - channel
  desc: Sets the notification channel for reputation events.
  params:
    - desc: The channel to send notifications to (null to disable).
      name: channel
      optional: true
      type: ITextChannel
repreaction:
  args:
    - emoji number reptype
  desc: Configures reaction-based reputation giving.
  params:
    - desc: The emoji to use for reputation.
      name: emoji
      optional: false
      type: string
    - desc: The amount of reputation to give.
      name: amount
      optional: true
      type: int
    - desc: The type of reputation (standard, helper, artist, memer).
      name: repType
      optional: true
      type: string
repreactionlist:
  args:
    - ''
  desc: Lists all configured reaction-based reputation settings.
  params: [ ]
repreactionremove:
  args:
    - emoji
  desc: Removes a reaction-based reputation configuration.
  params:
    - desc: The emoji to remove.
      name: emoji
      optional: false
      type: string
represet:
  args:
    - text
  desc: Resets reputation for a user or all users in the server.
  params:
    - desc: The user to reset, or "all" to reset everyone.
      name: target
      optional: false
      type: string
reprole:
  args:
    - ''
    - detailed
    - '@role'
    - '@role 100'
    - '@role 100 false #channel true 50'
  desc: >-
    Manages role rewards for reputation milestones. Use without parameters to
    list rewards, with advanced settings for comprehensive configuration.
  params:
    - &ref_437
      desc: The role to reward (optional for listing).
      name: role
      optional: true
      type: IRole
    - desc: The reputation required to earn this role (optional for listing).
      name: reputation
      optional: true
      type: int
    - desc: Whether to remove the role if reputation drops.
      name: removeOnDrop
      optional: true
      type: bool
    - desc: Optional channel to announce role awards.
      name: announceChannel
      optional: true
      type: ITextChannel
    - desc: Whether to send DM notifications.
      name: announceDm
      optional: true
      type: bool
    - desc: Optional XP reward for reaching milestone.
      name: xpReward
      optional: true
      type: int
    - desc: >-
        Show detailed information when listing (use 'detailed' as first
        parameter).
      name: detailed
      optional: true
      type: string
reprolechannel:
  args:
    - role channel
  desc: Sets the announcement channel for a role reward.
  params:
    - desc: The role to configure.
      name: role
      optional: false
      type: IRole
    - desc: The channel for announcements (null to disable).
      name: channel
      optional: true
      type: ITextChannel
reproleremove:
  args:
    - '@role'
  desc: Removes a role reward configuration.
  params:
    - *ref_437
repset:
  args:
    - '@user number'
  desc: Sets a user's reputation to a specific value.
  params:
    - *ref_438
    - desc: The amount to set reputation to.
      name: amount
      optional: false
      type: int
repstats:
  args:
    - '@user'
  desc: Shows detailed reputation statistics for a user.
  params:
    - *ref_425
repstatus:
  args:
    - ''
  desc: Shows the current reputation configuration in a detailed embed.
  params: [ ]
reptake:
  args:
    - '@user number'
  desc: Removes reputation from a user.
  params:
    - *ref_438
    - desc: The amount of reputation to remove.
      name: amount
      optional: true
      type: int
reptop:
  args:
    - number
  desc: Shows the reputation leaderboard for the server.
  params:
    - *ref_436
reptypeadd:
  args:
    - typeName displayName
  desc: Adds a custom reputation type.
  params:
    - desc: The name of the reputation type.
      name: typeName
      optional: false
      type: string
    - desc: The display name for the type.
      name: displayName
      optional: false
      type: string
reptypelist:
  args:
    - ''
  desc: Lists all custom reputation types for this server.
  params: [ ]
reptyperemove:
  args:
    - typeName
  desc: Removes a custom reputation type.
  params:
    - desc: The name of the reputation type to remove.
      name: typeName
      optional: false
      type: string
repunfreeze:
  args:
    - '@user'
  desc: >-
    Unfreezes a user's reputation, allowing them to gain and lose reputation
    again.
  params:
    - *ref_438
repweeklylimit:
  args:
    - limit
  desc: Sets the weekly limit for giving reputation.
  params:
    - desc: Weekly limit (null to disable, 1-500).
      name: limit
      optional: true
      type: int
resetfilters:
  args:
    - ''
  desc: Removes all active audio filters from the current track.
  params: [ ]
resetfilters_noparams:
  args:
    - ''
  desc: Removes all active audio filters from the current track.
  params: [ ]
resetfilters_noparams_1:
  args:
    - ''
  desc: Removes all active audio filters from the current track.
  params: [ ]
resetfilters_noparams_2:
  args:
    - ''
  desc: Removes all active audio filters from the current track.
  params: [ ]
resetglobalperms:
  args:
    - ''
  desc: >-
    Resets all global permissions, clearing all global command and module
    blocks.
  params: [ ]
resetglobalperms_noparams:
  args:
    - ''
  desc: >-
    Resets all global permissions, clearing all global command and module
    blocks.
  params: [ ]
resetglobalperms_noparams_1:
  args:
    - ''
  desc: >-
    Resets all global permissions, clearing all global command and module
    blocks.
  params: [ ]
resetglobalperms_noparams_2:
  args:
    - ''
  desc: >-
    Resets all global permissions, clearing all global command and module
    blocks.
  params: [ ]
resetmessagecounts:
  args:
    - null null
  desc: Resets message counts for a user, channel, or both, with confirmation.
  params:
    - *ref_1
    - *ref_1
resetmessagecounts_=_=:
  args:
    - null null
  desc: Resets message counts for a user, channel, or both, with confirmation.
  params:
    - *ref_1
    - *ref_1
resetmessagecounts_=_=_1:
  args:
    - null null
  desc: Resets message counts for a user, channel, or both, with confirmation.
  params:
    - *ref_1
    - *ref_1
resetmessagecounts_=_=_2:
  args:
    - null null
  desc: Resets message counts for a user, channel, or both, with confirmation.
  params:
    - *ref_1
    - *ref_1
resetmessagecounts_ITextChannel:
  args:
    - channel
  desc: Overload for ITextChannel?)
  params:
    - &ref_439
      desc: 'Optional: The channel to reset message counts in.'
      name: channel
      optional: true
      type: ITextChannel
resetmessagecounts_ITextChannel_1:
  args:
    - channel
  desc: Overload for ITextChannel?)
  params:
    - *ref_439
resetmessagecounts_ITextChannel_2:
  args:
    - channel
  desc: Overload for ITextChannel?)
  params:
    - *ref_439
resetmessagecounts_ITextChannel_3:
  args:
    - channel
  desc: Overload for ITextChannel?)
  params:
    - *ref_439
resetperms:
  args:
    - ''
  desc: Used with the permrole command to reset the permission role.
  params: [ ]
resetperms_noparams:
  args:
    - ''
  desc: Used with the permrole command to reset the permission role.
  params: [ ]
resetperms_noparams_1:
  args:
    - ''
  desc: A module for managing permissions for commands.
  params: [ ]
resetperms_noparams_2:
  args:
    - ''
  desc: Used with the permrole command to reset the permission role.
  params: [ ]
resetxp:
  args:
    - '@user false'
    - '@user'
  desc: Resets a user's XP to zero.
  params:
    - &ref_440
      desc: The user to reset XP for.
      name: user
      optional: false
      type: IGuildUser
    - *ref_181
resetxp_IGuildUser_=:
  args:
    - '@user false'
    - '@user'
  desc: Resets a user's XP to zero.
  params:
    - *ref_440
    - *ref_181
resetxp_IGuildUser_=_1:
  args:
    - '@user false'
    - '@user'
  desc: Resets a user's XP to zero.
  params:
    - *ref_440
    - *ref_181
resetxp_IGuildUser_=_2:
  args:
    - '@user false'
    - '@user'
  desc: Resets a user's XP to zero.
  params:
    - *ref_440
    - *ref_181
resetxp_noparams:
  args:
    - ''
  desc: Resets a user's XP to zero.
  params: [ ]
resetxp_noparams_1:
  args:
    - ''
  desc: Resets a user's XP to zero.
  params: [ ]
resetxp_noparams_2:
  args:
    - ''
  desc: Resets a user's XP to zero.
  params: [ ]
resetxp_noparams_3:
  args:
    - ''
  desc: Resets a user's XP to zero.
  params: [ ]
resolvetonetags:
  args:
    - text
  desc: >-
    Resolves tone tags in a message and provides explanations for each
    identified tag.
  params:
    - &ref_441
      desc: The message containing tone tags to be resolved.
      name: tag
      optional: false
      type: string
resolvetonetags_string:
  args:
    - text
  desc: Execute the ResolveToneTags command
  params:
    - *ref_441
resolvetonetags_string_1:
  args:
    - text
  desc: >-
    Resolves tone tags in a message and provides explanations for each
    identified tag.
  params:
    - *ref_441
resolvetonetags_string_2:
  args:
    - text
  desc: Execute the ResolveToneTags command
  params:
    - *ref_441
revav:
  args:
    - null
  desc: Performs a reverse image search using an avatar link.
  params:
    - *ref_1
revav_=:
  args:
    - null
  desc: Execute the Revav command
  params:
    - *ref_1
revav_=_1:
  args:
    - null
  desc: Performs a reverse image search using an avatar link.
  params:
    - *ref_1
revav_=_2:
  args:
    - null
  desc: Execute the Revav command
  params:
    - *ref_1
revimg:
  args:
    - null
  desc: Performs a reverse image search using the provided image link.
  params:
    - *ref_1
revimg_=:
  args:
    - null
  desc: Execute the Revimg command
  params:
    - *ref_1
revimg_=_1:
  args:
    - null
  desc: Performs a reverse image search using the provided image link.
  params:
    - *ref_1
revimg_=_2:
  args:
    - null
  desc: Execute the Revimg command
  params:
    - *ref_1
rinfo:
  args:
    - '@role'
  desc: Displays information about a specified role within the guild.
  params:
    - &ref_442
      desc: The role to gather information about.
      name: role
      optional: false
      type: IRole
rinfo_IRole:
  args:
    - '@role'
  desc: Displays information about a specified role within the guild.
  params:
    - *ref_442
rinfo_IRole_1:
  args:
    - '@role'
  desc: Commands for displaying information about various entities within the guild.
  params:
    - *ref_442
rinfo_IRole_2:
  args:
    - '@role'
  desc: Displays information about a specified role within the guild.
  params:
    - *ref_442
rip:
  args:
    - '@user'
  desc: Displays a RIP image with the user's name and avatar.
  params:
    - &ref_443
      desc: The user for whom to generate the RIP image.
      name: usr
      optional: false
      type: IGuildUser
rip_IGuildUser:
  args:
    - '@user'
  desc: Displays a RIP image with the user's name and avatar.
  params:
    - *ref_443
rip_IGuildUser_1:
  args:
    - '@user'
  desc: Displays a RIP image with the user's name and avatar.
  params:
    - *ref_443
rip_IGuildUser_2:
  args:
    - '@user'
  desc: Displays a RIP image with the user's name and avatar.
  params:
    - *ref_443
rj:
  args:
    - action
  desc: Manages role jobs.
  params:
    - desc: The action to perform on role jobs.
      name: action
      optional: false
      type: string
rolecmd:
  args:
    - command action @role
  desc: Adds or removes role-specific permissions for a specific command.
  params:
    - *ref_120
    - *ref_61
    - *ref_64
rolecmd_CommandOrCrInfo_PermissionAction_IRole:
  args:
    - command action @role
  desc: Adds or removes role-specific permissions for a specific command.
  params:
    - *ref_120
    - *ref_61
    - *ref_64
rolecmd_CommandOrCrInfo_PermissionAction_IRole_1:
  args:
    - command action @role
  desc: Adds or removes role-specific permissions for a specific command.
  params:
    - *ref_120
    - *ref_61
    - *ref_64
rolecmd_CommandOrCrInfo_PermissionAction_IRole_2:
  args:
    - command action @role
  desc: Adds or removes role-specific permissions for a specific command.
  params:
    - *ref_120
    - *ref_61
    - *ref_64
rolecolor:
  args:
    - '@role'
  desc: Displays the hexadecimal color value of the specified role.
  params:
    - &ref_444
      desc: The role to display the color for.
      name: role
      optional: false
      type: IRole
rolecolor_IRole:
  args:
    - '@role'
  desc: Displays the hexadecimal color value of the specified role.
  params:
    - &ref_445
      desc: The role to change the color for.
      name: role
      optional: false
      type: IRole
rolecolor_IRole_1:
  args:
    - '@role'
  desc: Displays the hexadecimal color value of the specified role.
  params:
    - *ref_444
rolecolor_IRole_2:
  args:
    - '@role'
  desc: Displays the hexadecimal color value of the specified role.
  params:
    - *ref_445
rolecolor_IRole_SKColor:
  args:
    - '@role color'
  desc: Changes the color of the specified role.
  params:
    - *ref_445
    - &ref_446
      desc: The new color for the role.
      name: color
      optional: false
      type: SKColor
rolecolor_IRole_SKColor_1:
  args:
    - '@role color'
  desc: Execute the RoleColor command
  params:
    - *ref_445
    - *ref_446
rolecolor_IRole_SKColor_2:
  args:
    - '@role color'
  desc: Changes the color of the specified role.
  params:
    - *ref_445
    - *ref_446
rolecolor_IRole_SKColor_3:
  args:
    - '@role color'
  desc: Execute the RoleColor command
  params:
    - *ref_445
    - *ref_446
rolegreetadd:
  args:
    - '@role null'
    - '@role'
  desc: >-
    Adds a new role greet message for a specified role. If no channel is
    specified, the current channel is used.
  params:
    - &ref_447
      desc: The role to delete rgs for.
      name: role
      optional: false
      type: IRole
    - *ref_1
rolegreetadd_IRole_=:
  args:
    - '@role null'
    - '@role'
  desc: >-
    Adds a new role greet message for a specified role. If no channel is
    specified, the current channel is used.
  params:
    - *ref_447
    - *ref_1
rolegreetadd_IRole_=_1:
  args:
    - '@role null'
    - '@role'
  desc: >-
    The RoleGreets module provides commands for managing role greet messages
    within a Discord guild. These messages are sent when a user receives a
    specific role, allowing for custom greetings or information to be shared
    automatically.
  params:
    - *ref_447
    - *ref_1
rolegreetadd_IRole_=_2:
  args:
    - '@role null'
    - '@role'
  desc: >-
    Adds a new role greet message for a specified role. If no channel is
    specified, the current channel is used.
  params:
    - *ref_447
    - *ref_1
rolegreetdelete:
  args:
    - number time
  desc: >-
    Updates a role greet message to be automatically deleted after a specified
    duration.
  params:
    - &ref_448
      desc: >-
        The ID of the role greet to update, based on its position in the list of
        all role greets.
      name: id
      optional: false
      type: int
    - &ref_450
      desc: >-
        /// The duration after which the greet message will be deleted,
        specified in seconds or as a /// human-readable string. ///
      name: time
      optional: false
      type: StoopidTime
rolegreetdelete_int_StoopidTime:
  args:
    - number time
  desc: >-
    Updates a role greet message to be automatically deleted after a specified
    duration.
  params:
    - *ref_448
    - *ref_450
rolegreetdelete_int_StoopidTime_1:
  args:
    - number time
  desc: >-
    Updates a role greet message to be automatically deleted after a specified
    duration.
  params:
    - *ref_448
    - *ref_450
rolegreetdelete_int_StoopidTime_2:
  args:
    - number time
  desc: >-
    Updates a role greet message to be automatically deleted after a specified
    duration.
  params:
    - *ref_448
    - *ref_450
rolegreetdelete_int_int:
  args:
    - number number
  desc: >-
    Updates a role greet message to be automatically deleted after a specified
    duration.
  params:
    - *ref_448
    - &ref_449
      desc: The duration, in seconds, after which the greet message will be deleted.
      name: howlong
      optional: false
      type: int
rolegreetdelete_int_int_1:
  args:
    - number number
  desc: >-
    Updates a role greet message to be automatically deleted after a specified
    duration.
  params:
    - *ref_448
    - *ref_449
rolegreetdelete_int_int_2:
  args:
    - number number
  desc: >-
    Updates a role greet message to be automatically deleted after a specified
    duration.
  params:
    - *ref_448
    - *ref_449
rolegreetdelete_int_int_3:
  args:
    - number number
  desc: >-
    Updates a role greet message to be automatically deleted after a specified
    duration.
  params:
    - *ref_448
    - *ref_449
rolegreetdisable:
  args:
    - number true|false
  desc: Enables or disables a role greet message.
  params:
    - &ref_451
      desc: >-
        The ID of the role greet to update, based on its position in the list of
        all role greets.
      name: num
      optional: false
      type: int
    - &ref_452
      desc: Whether to enable or disable the greet message.
      name: enabled
      optional: false
      type: bool
rolegreetdisable_int_bool:
  args:
    - number true|false
  desc: Enables or disables a role greet message.
  params:
    - *ref_451
    - *ref_452
rolegreetdisable_int_bool_1:
  args:
    - number true|false
  desc: Enables or disables a role greet message.
  params:
    - *ref_451
    - *ref_452
rolegreetdisable_int_bool_2:
  args:
    - number true|false
  desc: Enables or disables a role greet message.
  params:
    - *ref_451
    - *ref_452
rolegreetgreetbots:
  args:
    - number true|false
  desc: Enables or disables the greeting of bots by a specific role greet.
  params:
    - *ref_451
    - &ref_453
      desc: Whether to enable or disable greeting bots.
      name: enabled
      optional: false
      type: bool
rolegreetgreetbots_int_bool:
  args:
    - number true|false
  desc: Enables or disables the greeting of bots by a specific role greet.
  params:
    - *ref_451
    - *ref_452
rolegreetgreetbots_int_bool_1:
  args:
    - number true|false
  desc: Enables or disables the greeting of bots by a specific role greet.
  params:
    - *ref_451
    - *ref_453
rolegreetgreetbots_int_bool_2:
  args:
    - number true|false
  desc: Enables or disables the greeting of bots by a specific role greet.
  params:
    - *ref_451
    - *ref_452
rolegreetlist:
  args:
    - ''
  desc: >-
    Lists all role greets set up in the guild, providing detailed information
    for each.
  params: [ ]
rolegreetlist_noparams:
  args:
    - ''
  desc: >-
    Lists all role greets set up in the guild, providing detailed information
    for each.
  params: [ ]
rolegreetlist_noparams_1:
  args:
    - ''
  desc: >-
    Lists all role greets set up in the guild, providing detailed information
    for each.
  params: [ ]
rolegreetlist_noparams_2:
  args:
    - ''
  desc: >-
    Lists all role greets set up in the guild, providing detailed information
    for each.
  params: [ ]
rolegreetmessage:
  args:
    - number null
    - number
  desc: >-
    Updates the message content of a role greet. If no message is provided,
    presents options to preview the message as is or view it as regular text.
  params:
    - *ref_448
    - *ref_1
rolegreetmessage_int_=:
  args:
    - number null
    - number
  desc: >-
    Updates the message content of a role greet. If no message is provided,
    presents options to preview the message as is or view it as regular text.
  params:
    - *ref_448
    - *ref_1
rolegreetmessage_int_=_1:
  args:
    - number null
    - number
  desc: >-
    Updates the message content of a role greet. If no message is provided,
    presents options to preview the message as is or view it as regular text.
  params:
    - *ref_448
    - *ref_1
rolegreetmessage_int_=_2:
  args:
    - number null
    - number
  desc: >-
    Updates the message content of a role greet. If no message is provided,
    presents options to preview the message as is or view it as regular text.
  params:
    - *ref_448
    - *ref_1
rolegreetremove:
  args:
    - number
  desc: Removes a role greet message by its list ID.
  params:
    - &ref_454
      desc: >-
        The ID of the role greet to remove, based on its position in the list of
        all role greets.
      name: id
      optional: false
      type: int
rolegreetremove_IRole:
  args:
    - '@role'
  desc: Removes rolegreets associated with the given roleid
  params:
    - *ref_447
rolegreetremove_IRole_1:
  args:
    - '@role'
  desc: Removes rolegreets associated with the given roleid
  params:
    - *ref_447
rolegreetremove_IRole_2:
  args:
    - '@role'
  desc: Removes rolegreets associated with the given roleid
  params:
    - *ref_447
rolegreetremove_IRole_3:
  args:
    - '@role'
  desc: Removes rolegreets associated with the given roleid
  params:
    - *ref_447
rolegreetremove_int:
  args:
    - number
  desc: Removes a role greet message by its list ID.
  params:
    - *ref_454
rolegreetremove_int_1:
  args:
    - number
  desc: Removes a role greet message by its list ID.
  params:
    - *ref_454
rolegreetremove_int_2:
  args:
    - number
  desc: Removes a role greet message by its list ID.
  params:
    - *ref_454
rolegreetwebhook:
  args:
    - number null null
    - number
  desc: >-
    Configures a webhook for a role greet message, allowing for custom name and
    avatar. If no name is provided, the webhook is disabled.
  params:
    - &ref_455
      desc: >-
        /// The ID of the role greet to configure the webhook for, based on its
        position in the list of all role /// greets. ///
      name: id
      optional: false
      type: int
    - *ref_1
    - *ref_1
rolegreetwebhook_int_=_=:
  args:
    - number null null
    - number
  desc: Execute the RoleGreetWebhook command
  params:
    - *ref_455
    - *ref_1
    - *ref_1
rolegreetwebhook_int_=_=_1:
  args:
    - number null null
    - number
  desc: >-
    Configures a webhook for a role greet message, allowing for custom name and
    avatar. If no name is provided, the webhook is disabled.
  params:
    - *ref_455
    - *ref_1
    - *ref_1
rolegreetwebhook_int_=_=_2:
  args:
    - number null null
    - number
  desc: Execute the RoleGreetWebhook command
  params:
    - *ref_455
    - *ref_1
    - *ref_1
rolehoist:
  args:
    - '@role'
  desc: Toggles the hoist status of the specified role.
  params:
    - &ref_456
      desc: The role to toggle the hoist status for.
      name: role
      optional: false
      type: IRole
rolehoist_IRole:
  args:
    - '@role'
  desc: Toggles the hoist status of the specified role.
  params:
    - *ref_456
rolehoist_IRole_1:
  args:
    - '@role'
  desc: Toggles the hoist status of the specified role.
  params:
    - *ref_456
rolehoist_IRole_2:
  args:
    - '@role'
  desc: Toggles the hoist status of the specified role.
  params:
    - *ref_456
roleid:
  args:
    - '@role'
  desc: Gets the role id of a specified role.
  params:
    - &ref_457
      desc: The role to get the id of.
      name: role
      optional: false
      type: IRole
roleid_IRole:
  args:
    - '@role'
  desc: Gets the role id of a specified role.
  params:
    - *ref_457
roleid_IRole_1:
  args:
    - '@role'
  desc: Gets the role id of a specified role.
  params:
    - *ref_457
roleid_IRole_2:
  args:
    - '@role'
  desc: Gets the role id of a specified role.
  params:
    - *ref_457
rolejobs:
  args:
    - ''
  desc: >-
    Lists all ongoing mass role operations within the server, providing details
    about each.
  params: [ ]
rolejobs_noparams:
  args:
    - ''
  desc: >-
    Lists all ongoing mass role operations within the server, providing details
    about each.
  params: [ ]
rolejobs_noparams_1:
  args:
    - ''
  desc: >-
    Lists all ongoing mass role operations within the server, providing details
    about each.
  params: [ ]
rolejobs_noparams_2:
  args:
    - ''
  desc: >-
    Lists all ongoing mass role operations within the server, providing details
    about each.
  params: [ ]
rolelevelreq:
  args:
    - number @role
  desc: Sets the level requirement for an auto-self-assignable role.
  params:
    - &ref_458
      desc: The level required to obtain the role.
      name: level
      optional: false
      type: int
    - &ref_459
      desc: The role to set the level requirement for.
      name: role
      optional: false
      type: IRole
rolelevelreq_int_IRole:
  args:
    - number @role
  desc: Sets the level requirement for an auto-self-assignable role.
  params:
    - *ref_458
    - *ref_459
rolelevelreq_int_IRole_1:
  args:
    - number @role
  desc: Sets the level requirement for an auto-self-assignable role.
  params:
    - *ref_458
    - *ref_459
rolelevelreq_int_IRole_2:
  args:
    - number @role
  desc: Sets the level requirement for an auto-self-assignable role.
  params:
    - *ref_458
    - *ref_459
rolemdl:
  args:
    - module action @role
  desc: Adds or removes role-specific permissions for a specific module.
  params:
    - *ref_121
    - *ref_61
    - *ref_64
rolemdl_ModuleOrCrInfo_PermissionAction_IRole:
  args:
    - module action @role
  desc: Adds or removes role-specific permissions for a specific module.
  params:
    - *ref_121
    - *ref_61
    - *ref_64
rolemdl_ModuleOrCrInfo_PermissionAction_IRole_1:
  args:
    - module action @role
  desc: Adds or removes role-specific permissions for a specific module.
  params:
    - *ref_121
    - *ref_61
    - *ref_64
rolemdl_ModuleOrCrInfo_PermissionAction_IRole_2:
  args:
    - module action @role
  desc: Adds or removes role-specific permissions for a specific module.
  params:
    - *ref_121
    - *ref_61
    - *ref_64
rolepermlist:
  args:
    - permissiontype.and perms
    - perms
  desc: Lists all roles that have the specified permissions.
  params:
    - &ref_460
      desc: ''
      name: PermissionType.And
      optional: false
      type: '='
    - &ref_461
      desc: The permissions to search for.
      name: perms
      optional: false
      type: GuildPermission[]
rolepermlist_=_GuildPermission[]:
  args:
    - permissiontype.and perms
    - perms
  desc: Lists all roles that have the specified permissions.
  params:
    - *ref_460
    - *ref_461
rolepermlist_=_GuildPermission[]_1:
  args:
    - permissiontype.and perms
    - perms
  desc: Lists all roles that have the specified permissions.
  params:
    - *ref_460
    - *ref_461
rolepermlist_=_GuildPermission[]_2:
  args:
    - permissiontype.and perms
    - perms
  desc: Lists all roles that have the specified permissions.
  params:
    - *ref_460
    - *ref_461
rolepermlist_GuildPermission[]:
  args:
    - perms
  desc: >-
    Lists all roles that have the specified permissions. Default search type is
    And.
  params:
    - *ref_461
rolepermlist_GuildPermission[]_1:
  args:
    - perms
  desc: >-
    Lists all roles that have the specified permissions. Default search type is
    And.
  params:
    - *ref_461
rolepermlist_GuildPermission[]_2:
  args:
    - perms
  desc: >-
    Lists all roles that have the specified permissions. Default search type is
    And.
  params:
    - *ref_461
rolepermlist_GuildPermission[]_3:
  args:
    - perms
  desc: >-
    Lists all roles that have the specified permissions. Default search type is
    And.
  params:
    - *ref_461
rolereward:
  args:
    - number @role
  desc: Sets a role reward for a specific level.
  params:
    - *ref_173
    - &ref_462
      desc: The role to award.
      name: role
      optional: false
      type: IRole
rolereward_int_IRole:
  args:
    - number @role
  desc: Sets a role reward for a specific level.
  params:
    - *ref_174
    - *ref_462
rolereward_int_IRole_1:
  args:
    - number @role
  desc: Sets a role reward for a specific level.
  params:
    - *ref_173
    - *ref_462
rolereward_int_IRole_2:
  args:
    - number @role
  desc: Sets a role reward for a specific level.
  params:
    - *ref_174
    - *ref_462
rolerewards:
  args:
    - ''
  desc: Lists all role rewards.
  params: [ ]
rolerewards_noparams:
  args:
    - ''
  desc: Lists all role rewards.
  params: [ ]
rolerewards_noparams_1:
  args:
    - ''
  desc: Lists all role rewards.
  params: [ ]
rolerewards_noparams_2:
  args:
    - ''
  desc: Lists all role rewards.
  params: [ ]
roles:
  args:
    - null
  desc: >-
    Gets a list of roles in the current server. Shows a user's roles if a user
    is specified.
  params:
    - *ref_1
roles_=:
  args:
    - null
  desc: >-
    Gets a list of roles in the current server. Shows a user's roles if a user
    is specified.
  params:
    - *ref_1
roles_=_1:
  args:
    - null
  desc: >-
    Gets a list of roles in the current server. Shows a user's roles if a user
    is specified.
  params:
    - *ref_1
roles_=_2:
  args:
    - null
  desc: >-
    Gets a list of roles in the current server. Shows a user's roles if a user
    is specified.
  params:
    - *ref_1
rolestatesadddenyrole:
  args:
    - '@role'
  desc: Adds roles to the deny list for the role states feature.
  params:
    - &ref_463
      desc: The roles to be added to the deny list.
      name: roles
      optional: false
      type: IRole[]
rolestatesadddenyrole_IRole[]:
  args:
    - '@role'
  desc: Adds roles to the deny list for the role states feature.
  params:
    - *ref_463
rolestatesadddenyrole_IRole[]_1:
  args:
    - '@role'
  desc: Adds roles to the deny list for the role states feature.
  params:
    - *ref_463
rolestatesadddenyrole_IRole[]_2:
  args:
    - '@role'
  desc: Adds roles to the deny list for the role states feature.
  params:
    - *ref_463
rolestatesadddenyuser:
  args:
    - '@user'
  desc: Adds users to the deny list for the role states feature.
  params:
    - &ref_464
      desc: The users to be added to the deny list.
      name: users
      optional: false
      type: IGuildUser[]
rolestatesadddenyuser_IGuildUser[]:
  args:
    - '@user'
  desc: Adds users to the deny list for the role states feature.
  params:
    - *ref_464
rolestatesadddenyuser_IGuildUser[]_1:
  args:
    - '@user'
  desc: Adds users to the deny list for the role states feature.
  params:
    - *ref_464
rolestatesadddenyuser_IGuildUser[]_2:
  args:
    - '@user'
  desc: Adds users to the deny list for the role states feature.
  params:
    - *ref_464
rolestatesremoveadduser:
  args:
    - user
  desc: Removes or denies a user from role states.
  params:
    - desc: The user to remove/deny from role states.
      name: user
      optional: false
      type: IUser
rolestatesremovedenyrole:
  args:
    - '@role'
  desc: Removes roles from the deny list for the role states feature.
  params:
    - &ref_465
      desc: The roles to be removed from the deny list.
      name: roles
      optional: false
      type: IRole[]
rolestatesremovedenyrole_IRole[]:
  args:
    - '@role'
  desc: Removes roles from the deny list for the role states feature.
  params:
    - *ref_465
rolestatesremovedenyrole_IRole[]_1:
  args:
    - '@role'
  desc: Removes roles from the deny list for the role states feature.
  params:
    - *ref_465
rolestatesremovedenyrole_IRole[]_2:
  args:
    - '@role'
  desc: Removes roles from the deny list for the role states feature.
  params:
    - *ref_465
rolestatesremovedenyuser:
  args:
    - '@user'
  desc: Removes users from the deny list for the role states feature.
  params:
    - &ref_466
      desc: The users to be removed from the deny list.
      name: users
      optional: false
      type: IGuildUser[]
rolestatesremovedenyuser_IGuildUser[]:
  args:
    - '@user'
  desc: Removes users from the deny list for the role states feature.
  params:
    - *ref_466
rolestatesremovedenyuser_IGuildUser[]_1:
  args:
    - '@user'
  desc: Removes users from the deny list for the role states feature.
  params:
    - *ref_466
rolestatesremovedenyuser_IGuildUser[]_2:
  args:
    - '@user'
  desc: Removes users from the deny list for the role states feature.
  params:
    - *ref_466
roll:
  args:
    - number @user
    - number
    - '@user number'
  desc: // Roll dice and bet on the outcome. //
  params:
    - *ref_135
    - &ref_467
      default: null
      desc: ''
      name: user
      optional: true
      type: Transactions(IUser
roll_long_Transactions(IUser:
  args:
    - number @user
    - number
    - '@user number'
  desc: // Roll dice and bet on the outcome. //
  params:
    - *ref_135
    - *ref_467
roll_long_Transactions(IUser_1:
  args:
    - number @user
    - number
    - '@user number'
  desc: // Roll dice and bet on the outcome. //
  params:
    - *ref_135
    - *ref_467
roll_long_Transactions(IUser_2:
  args:
    - number @user
    - number
    - '@user number'
  desc: // Roll dice and bet on the outcome. //
  params:
    - *ref_135
    - *ref_467
roll_string:
  args:
    - text
  desc: Rolls a dice with the specified number of sides. Dnd dice are supported.
  params:
    - &ref_468
      desc: The roll to make.
      name: roll
      optional: false
      type: string
roll_string_1:
  args:
    - text
  desc: Rolls a dice with the specified number of sides. Dnd dice are supported.
  params:
    - *ref_468
roll_string_2:
  args:
    - text
  desc: Rolls a dice with the specified number of sides. Dnd dice are supported.
  params:
    - *ref_468
roll_string_3:
  args:
    - text
  desc: Rolls a dice with the specified number of sides. Dnd dice are supported.
  params:
    - *ref_468
rotateplaying:
  args:
    - ''
  desc: Changes yml based config for the bot.
  params: [ ]
rotateplaying_noparams:
  args:
    - ''
  desc: Changes yml based config for the bot.
  params: [ ]
rotateplaying_noparams_1:
  args:
    - ''
  desc: Changes yml based config for the bot.
  params: [ ]
rotateplaying_noparams_2:
  args:
    - ''
  desc: Changes yml based config for the bot.
  params: [ ]
roulette:
  args:
    - number text
  desc: Play a game of roulette with a specified bet amount and type.
  params:
    - *ref_135
    - &ref_469
      desc: >-
        The type of bet (e.g., "red", "black", "even", "odd", or a number from
        0-36).
      name: betType
      optional: false
      type: string
roulette_long_string:
  args:
    - number text
  desc: Play a game of roulette with a specified bet amount and type.
  params:
    - *ref_135
    - *ref_469
roulette_long_string_1:
  args:
    - number text
  desc: Play a game of roulette with a specified bet amount and type.
  params:
    - *ref_135
    - *ref_469
roulette_long_string_2:
  args:
    - number text
  desc: Play a game of roulette with a specified bet amount and type.
  params:
    - *ref_135
    - *ref_469
rps:
  args:
    - text 0
    - text
  desc: >-
    Play Rock Paper Scissors Lizard Spock against the bot, with or without
    betting.
  params:
    - &ref_470
      desc: Your choice (rock, paper, scissors, lizard, or spock).
      name: choice
      optional: false
      type: string
    - *ref_90
rps_string_=:
  args:
    - text 0
    - text
  desc: >-
    Play Rock Paper Scissors Lizard Spock against the bot, with or without
    betting.
  params:
    - *ref_470
    - *ref_90
rps_string_=_1:
  args:
    - text 0
    - text
  desc: >-
    Play Rock Paper Scissors Lizard Spock against the bot, with or without
    betting.
  params:
    - *ref_470
    - *ref_90
rps_string_=_2:
  args:
    - text 0
    - text
  desc: >-
    Play Rock Paper Scissors Lizard Spock against the bot, with or without
    betting.
  params:
    - *ref_470
    - *ref_90
rsar:
  args:
    - '@role'
  desc: Removes the specified role from the auto-self-assignable roles list.
  params:
    - &ref_471
      desc: The role to remove from the auto-self-assignable roles list.
      name: role
      optional: false
      type: IRole
rsar_IRole:
  args:
    - '@role'
  desc: Execute the Rsar command
  params:
    - *ref_471
rsar_IRole_1:
  args:
    - '@role'
  desc: Removes the specified role from the auto-self-assignable roles list.
  params:
    - *ref_471
rsar_IRole_2:
  args:
    - '@role'
  desc: Execute the Rsar command
  params:
    - *ref_471
rsstest:
  args:
    - number
  desc: Tests the retrieval of an RSS feed to check for updates.
  params:
    - *ref_215
rsstest_int:
  args:
    - number
  desc: Tests the retrieval of an RSS feed to check for updates.
  params:
    - *ref_215
rsstest_int_1:
  args:
    - number
  desc: Tests the retrieval of an RSS feed to check for updates.
  params:
    - *ref_215
rsstest_int_2:
  args:
    - number
  desc: Tests the retrieval of an RSS feed to check for updates.
  params:
    - *ref_215
rtt:
  args:
    - number
  desc: Sets a chat trigger to react to the trigger.
  params:
    - *ref_162
rtt_int:
  args:
    - number
  desc: Sets a chat trigger to react to the trigger.
  params:
    - *ref_162
rtt_int_1:
  args:
    - number
  desc: Sets a chat trigger to react to the trigger.
  params:
    - *ref_162
rtt_int_2:
  args:
    - number
  desc: Sets a chat trigger to react to the trigger.
  params:
    - *ref_162
rule34:
  args:
    - text
  desc: >-
    Command to fetch and display NSFW content from the Rule34 image board with
    optional tags in the current guild channel or direct messages.
  params:
    - &ref_472
      desc: Optional tags to filter the NSFW content from the Danbooru image board.
      name: tags
      optional: false
      type: string[]
rule34_string[]:
  args:
    - text
  desc: >-
    Command to fetch and display NSFW content from the Rule34 image board with
    optional tags in the current guild channel or direct messages.
  params:
    - *ref_472
rule34_string[]_1:
  args:
    - text
  desc: >-
    Command to fetch and display NSFW content from the Rule34 image board with
    optional tags in the current guild channel or direct messages.
  params:
    - *ref_472
rule34_string[]_2:
  args:
    - text
  desc: >-
    Command to fetch and display NSFW content from the Rule34 image board with
    optional tags in the current guild channel or direct messages.
  params:
    - *ref_472
russianroulette:
  args:
    - number number
  desc: Play Russian Roulette with customizable bullet count.
  params:
    - desc: The amount to bet.
      name: betAmount
      optional: false
      type: long
    - desc: Number of bullets (1-5).
      name: bullets
      optional: true
      type: int
safebooru:
  args:
    - text
  desc: >-
    Command to fetch and display NSFW content from the Safebooru image board
    with optional tags in the current guild channel or direct messages.
  params:
    - *ref_383
safebooru_=:
  args:
    - null
  desc: Searches for and displays an image based on the provided tag from Safebooru.
  params:
    - *ref_1
safebooru_=_1:
  args:
    - null
  desc: Execute the Safebooru command
  params:
    - *ref_1
safebooru_=_2:
  args:
    - null
  desc: Searches for and displays an image based on the provided tag from Safebooru.
  params:
    - *ref_1
safebooru_=_3:
  args:
    - null
  desc: Execute the Safebooru command
  params:
    - *ref_1
safebooru_string[]:
  args:
    - text
  desc: >-
    Command to fetch and display NSFW content from the Safebooru image board
    with optional tags in the current guild channel or direct messages.
  params:
    - *ref_383
safebooru_string[]_1:
  args:
    - text
  desc: >-
    Command to fetch and display NSFW content from the Safebooru image board
    with optional tags in the current guild channel or direct messages.
  params:
    - *ref_383
safebooru_string[]_2:
  args:
    - text
  desc: >-
    Command to fetch and display NSFW content from the Safebooru image board
    with optional tags in the current guild channel or direct messages.
  params:
    - *ref_383
sanitize:
  args:
    - '@user'
  desc: Sanitizes a user by replacing special characters in their username.
  params:
    - &ref_473
      desc: The user to sanitize
      name: user
      optional: false
      type: IGuildUser
sanitize_IGuildUser:
  args:
    - '@user'
  desc: Sanitizes a user by replacing special characters in their username.
  params:
    - *ref_473
sanitize_IGuildUser_1:
  args:
    - '@user'
  desc: Sanitizes a user by replacing special characters in their username.
  params:
    - *ref_473
sanitize_IGuildUser_2:
  args:
    - '@user'
  desc: Sanitizes a user by replacing special characters in their username.
  params:
    - *ref_473
sanitizeall:
  args:
    - ''
  desc: >-
    Sanitizes all users in the guild by replacing special characters in their
    usernames.
  params: [ ]
sanitizeall_noparams:
  args:
    - ''
  desc: >-
    Sanitizes all users in the guild by replacing special characters in their
    usernames.
  params: [ ]
sanitizeall_noparams_1:
  args:
    - ''
  desc: >-
    Sanitizes all users in the guild by replacing special characters in their
    usernames.
  params: [ ]
sanitizeall_noparams_2:
  args:
    - ''
  desc: >-
    Sanitizes all users in the guild by replacing special characters in their
    usernames.
  params: [ ]
sankaku:
  args:
    - text
  desc: >-
    Command to fetch and display NSFW content from the Sankaku image board with
    optional tags in the current guild channel or direct messages.
  params:
    - &ref_474
      desc: Optional tags to filter the NSFW content from the E621 image board.
      name: tags
      optional: false
      type: string[]
sankaku_string[]:
  args:
    - text
  desc: >-
    Command to fetch and display NSFW content from the Sankaku image board with
    optional tags in the current guild channel or direct messages.
  params:
    - *ref_474
sankaku_string[]_1:
  args:
    - text
  desc: >-
    Command to fetch and display NSFW content from the Sankaku image board with
    optional tags in the current guild channel or direct messages.
  params:
    - *ref_474
sankaku_string[]_2:
  args:
    - text
  desc: >-
    Command to fetch and display NSFW content from the Sankaku image board with
    optional tags in the current guild channel or direct messages.
  params:
    - *ref_474
sargn:
  args:
    - number null
    - number
  desc: >-
    Sets or removes the name for the specified group of auto-self-assignable
    roles.
  params:
    - &ref_475
      desc: The group number for which to set or remove the name.
      name: group
      optional: false
      type: int
    - *ref_1
sargn_int_=:
  args:
    - number null
    - number
  desc: Execute the Sargn command
  params:
    - *ref_475
    - *ref_1
sargn_int_=_1:
  args:
    - number null
    - number
  desc: >-
    Sets or removes the name for the specified group of auto-self-assignable
    roles.
  params:
    - *ref_475
    - *ref_1
sargn_int_=_2:
  args:
    - number null
    - number
  desc: Execute the Sargn command
  params:
    - *ref_475
    - *ref_1
saveallrolestates:
  args:
    - ''
  desc: Saves role states for all users in the server.
  params: [ ]
saveallrolestates_noparams:
  args:
    - ''
  desc: Saves role states for all users in the server.
  params: [ ]
saveallrolestates_noparams_1:
  args:
    - ''
  desc: Saves role states for all users in the server.
  params: [ ]
saveallrolestates_noparams_2:
  args:
    - ''
  desc: Saves role states for all users in the server.
  params: [ ]
savechat:
  args:
    - time null
    - time
  desc: >-
    Saves the chat log of a channel. Public mewdeko saves this to the nginx cdn
    then sends you a link to display it on the cdn
  params:
    - &ref_476
      desc: ''
      name: time
      optional: false
      type: StoopidTime
    - *ref_1
savechat_StoopidTime_=:
  args:
    - time null
    - time
  desc: >-
    Saves the chat log of a channel. Public mewdeko saves this to the nginx cdn
    then sends you a link to display it on the cdn
  params:
    - *ref_476
    - *ref_1
savechat_StoopidTime_=_1:
  args:
    - time null
    - time
  desc: >-
    Saves the chat log of a channel. Public mewdeko saves this to the nginx cdn
    then sends you a link to display it on the cdn
  params:
    - *ref_476
    - *ref_1
savechat_StoopidTime_=_2:
  args:
    - time null
    - time
  desc: >-
    Saves the chat log of a channel. Public mewdeko saves this to the nginx cdn
    then sends you a link to display it on the cdn
  params:
    - *ref_476
    - *ref_1
saveplaylist:
  args:
    - text
  desc: Saves the current queue as a named playlist.
  params:
    - &ref_477
      desc: The name to save the playlist as.
      name: name
      optional: false
      type: string
saveplaylist_string:
  args:
    - text
  desc: Saves the current queue as a named playlist.
  params:
    - *ref_477
say:
  args:
    - channel text
    - channel
  desc: Used to say or embed a message as the bot.
  params:
    - &ref_478
      desc: The channel to send the message to.
      name: channel
      optional: false
      type: ITextChannel
    - &ref_479
      desc: The message to send.
      name: message
      optional: true
      type: string
say_=:
  args:
    - null
  desc: Used to say or embed a message as the bot.
  params:
    - *ref_1
say_=_1:
  args:
    - null
  desc: Used to say or embed a message as the bot.
  params:
    - *ref_1
say_=_2:
  args:
    - null
  desc: Used to say or embed a message as the bot.
  params:
    - *ref_1
say_=_3:
  args:
    - null
  desc: Used to say or embed a message as the bot.
  params:
    - *ref_1
say_ITextChannel_string:
  args:
    - channel text
    - channel
  desc: Used to say or embed a message as the bot.
  params:
    - *ref_478
    - *ref_479
say_ITextChannel_string_1:
  args:
    - channel text
    - channel
  desc: Used to say or embed a message as the bot.
  params:
    - *ref_478
    - *ref_479
say_ITextChannel_string_2:
  args:
    - channel text
    - channel
  desc: Used to say or embed a message as the bot.
  params:
    - *ref_478
    - *ref_479
scadd:
  args:
    - command
  desc: Adds a command to run at startup.
  params:
    - desc: The command to add to startup.
      name: command
      optional: false
      type: string
scclear:
  args:
    - ''
  desc: Clears all startup commands.
  params: [ ]
sclist:
  args:
    - ''
  desc: Lists all startup commands.
  params: [ ]
scratchcard:
  args:
    - text
  desc: Buy and play a scratch card lottery game.
  params:
    - desc: The type of card to buy (bronze, silver, gold, diamond).
      name: cardType
      optional: true
      type: string
scrm:
  args:
    - index
  desc: Removes a startup command.
  params:
    - desc: The index of the command to remove.
      name: index
      optional: false
      type: int
search:
  args:
    - text
  desc: Searches for tracks without automatically playing them.
  params:
    - &ref_480
      desc: The search query
      name: query
      optional: false
      type: string
search_string:
  args:
    - text
  desc: Searches for tracks without automatically playing them.
  params:
    - *ref_480
searchcommand:
  args:
    - text
  desc: Searches for a command by name or description.
  params:
    - &ref_481
      desc: The term to search for
      name: commandname
      optional: false
      type: string
searchcommand_string:
  args:
    - text
  desc: Searches for a command by name or description.
  params:
    - *ref_481
searchcommand_string_1:
  args:
    - text
  desc: Searches for a command by name or description.
  params:
    - *ref_481
searchcommand_string_2:
  args:
    - text
  desc: Searches for a command by name or description.
  params:
    - *ref_481
seek:
  args:
    - text
  desc: Seeks to a specific position in the current track.
  params:
    - &ref_482
      desc: Time to seek to in format mm:ss
      name: timeSpan
      optional: false
      type: string
seek_string:
  args:
    - text
  desc: Seeks to a specific position in the current track.
  params:
    - *ref_482
send:
  args:
    - whereorto text
  desc: Sends a message to a specified channel or user.
  params:
    - &ref_483
      desc: The ID of the channel or user to send the message to.
      name: whereOrTo
      optional: false
      type: ulong
    - &ref_484
      desc: The message to send.
      name: msg
      optional: false
      type: string
send_ulong_=_=:
  args:
    - whereorto 0 null
    - whereorto
  desc: Sends a message to a specified channel or user.
  params:
    - *ref_483
    - *ref_90
    - *ref_1
send_ulong_=_=_1:
  args:
    - whereorto 0 null
    - whereorto
  desc: Sends a message to a specified channel or user.
  params:
    - *ref_483
    - *ref_90
    - *ref_1
send_ulong_=_=_2:
  args:
    - whereorto 0 null
    - whereorto
  desc: Sends a message to a specified channel or user.
  params:
    - *ref_483
    - *ref_90
    - *ref_1
send_ulong_=_=_3:
  args:
    - whereorto 0 null
    - whereorto
  desc: Sends a message to a specified channel or user.
  params:
    - *ref_483
    - *ref_90
    - *ref_1
send_ulong_string:
  args:
    - whereorto text
  desc: Sends a message to a specified channel or user.
  params:
    - *ref_483
    - *ref_484
send_ulong_string_1:
  args:
    - whereorto text
  desc: Sends a message to a specified channel or user.
  params:
    - *ref_483
    - *ref_484
send_ulong_string_2:
  args:
    - whereorto text
  desc: Sends a message to a specified channel or user.
  params:
    - *ref_483
    - *ref_484
serverblacklist:
  args:
    - action id text
    - action id
  desc: Blacklists or unblacklists a server by its ID, with an optional reason.
  params:
    - *ref_122
    - *ref_123
    - *ref_124
serverblacklist_AddRemove_IGuild_string:
  args:
    - action guild text
    - action guild
  desc: >-
    Blacklists or unblacklists a server by its guild object, with an optional
    reason.
  params:
    - *ref_122
    - &ref_485
      desc: The guild object.
      name: guild
      optional: false
      type: IGuild
    - *ref_124
serverblacklist_AddRemove_IGuild_string_1:
  args:
    - action guild text
    - action guild
  desc: Execute the ServerBlacklist command
  params:
    - *ref_122
    - *ref_485
    - *ref_124
serverblacklist_AddRemove_IGuild_string_2:
  args:
    - action guild text
    - action guild
  desc: >-
    Blacklists or unblacklists a server by its guild object, with an optional
    reason.
  params:
    - *ref_122
    - *ref_485
    - *ref_124
serverblacklist_AddRemove_IGuild_string_3:
  args:
    - action guild text
    - action guild
  desc: Execute the ServerBlacklist command
  params:
    - *ref_122
    - *ref_485
    - *ref_124
serverblacklist_AddRemove_ulong_string:
  args:
    - action id text
    - action id
  desc: Execute the ServerBlacklist command
  params:
    - *ref_122
    - *ref_123
    - *ref_124
serverblacklist_AddRemove_ulong_string_1:
  args:
    - action id text
    - action id
  desc: Blacklists or unblacklists a server by its ID, with an optional reason.
  params:
    - *ref_122
    - *ref_123
    - *ref_124
serverblacklist_AddRemove_ulong_string_2:
  args:
    - action id text
    - action id
  desc: Execute the ServerBlacklist command
  params:
    - *ref_122
    - *ref_123
    - *ref_124
serverid:
  args:
    - ''
  desc: Gets the server id of the current server.
  params: [ ]
serverid_noparams:
  args:
    - ''
  desc: Gets the channel id of the current channel.
  params: [ ]
serverid_noparams_1:
  args:
    - ''
  desc: Gets the server id of the current server.
  params: [ ]
serverid_noparams_2:
  args:
    - ''
  desc: Gets the channel id of the current channel.
  params: [ ]
serverinfo:
  args:
    - null
  desc: Displays detailed information about the server.
  params:
    - *ref_1
serverinfo_=:
  args:
    - null
  desc: Displays detailed information about the server.
  params:
    - *ref_1
serverinfo_=_1:
  args:
    - null
  desc: Displays detailed information about the server.
  params:
    - *ref_1
serverinfo_=_2:
  args:
    - null
  desc: Displays detailed information about the server.
  params:
    - *ref_1
servermessages:
  args:
    - ''
  desc: Retrieves message statistics for the entire server.
  params: [ ]
servermessages_noparams:
  args:
    - ''
  desc: Retrieves message statistics for the entire server.
  params: [ ]
servermessages_noparams_1:
  args:
    - ''
  desc: Retrieves message statistics for the entire server.
  params: [ ]
servermessages_noparams_2:
  args:
    - ''
  desc: Retrieves message statistics for the entire server.
  params: [ ]
setaddroles:
  args:
    - number @role
  desc: Sets the roles to add when a user has the selected status.
  params:
    - *ref_390
    - &ref_486
      desc: The roles to add.
      name: roles
      optional: false
      type: IRole[]
setaddroles_int_IRole[]:
  args:
    - number @role
  desc: Sets the roles to add when a user has the selected status.
  params:
    - *ref_390
    - *ref_486
setaddroles_int_IRole[]_1:
  args:
    - number @role
  desc: Sets the roles to add when a user has the selected status.
  params:
    - *ref_390
    - *ref_486
setaddroles_int_IRole[]_2:
  args:
    - number @role
  desc: Sets the roles to add when a user has the selected status.
  params:
    - *ref_390
    - *ref_486
setafk:
  args:
    - null
  desc: Enumerates different types of AFK (Away From Keyboard) settings.
  params:
    - *ref_1
setafk_=:
  args:
    - null
  desc: Indicates AFK removed either by receiving a message or typing.
  params:
    - *ref_1
setafk_=_1:
  args:
    - null
  desc: Module for managing AFK.
  params:
    - *ref_1
setafk_=_2:
  args:
    - null
  desc: Indicates AFK removed either by receiving a message or typing.
  params:
    - *ref_1
setautoclose:
  args:
    - number number
    - number
  desc: Sets the auto-close time for tickets created by a button.
  params:
    - &ref_487
      desc: The ID of the button to modify.
      name: buttonId
      optional: false
      type: int
    - &ref_488
      desc: The number of hours of inactivity before auto-close, or null to disable.
      name: hours
      optional: true
      type: int
setautoclose_int_int:
  args:
    - number number
    - number
  desc: Execute the SetAutoClose command
  params:
    - *ref_487
    - *ref_488
setautoclose_int_int_1:
  args:
    - number number
    - number
  desc: Sets the auto-close time for tickets created by a button.
  params:
    - *ref_487
    - *ref_488
setautoclose_int_int_2:
  args:
    - number number
    - number
  desc: Execute the SetAutoClose command
  params:
    - *ref_487
    - *ref_488
setautoclose_int_int_3:
  args:
    - number number
    - number
  desc: Sets the auto-close time for tickets created by a button.
  params:
    - *ref_487
    - *ref_488
setautoclose_int_int_4:
  args:
    - number number
    - number
  desc: Execute the SetAutoClose command
  params:
    - *ref_487
    - *ref_488
setavatar:
  args:
    - null
  desc: Sets the bot's avatar.
  params:
    - *ref_1
setavatar_=:
  args:
    - null
  desc: Sets the bot's avatar.
  params:
    - *ref_1
setavatar_=_1:
  args:
    - null
  desc: Sets the bot's avatar.
  params:
    - *ref_1
setavatar_=_2:
  args:
    - null
  desc: Sets the bot's avatar.
  params:
    - *ref_1
setbanner:
  args:
    - text
  desc: Sets the banner of the server.
  params:
    - &ref_489
      desc: The URL of the new server banner.
      name: img
      optional: false
      type: string
setbanner_string:
  args:
    - text
  desc: Sets the banner of the server.
  params:
    - *ref_489
setbio:
  args:
    - text
  desc: Sets or updates the biography in the user's profile.
  params:
    - &ref_490
      desc: The biography text. Must be under 2048 characters.
      name: bio
      optional: false
      type: string
setbio_string:
  args:
    - text
  desc: Sets or updates the biography in the user's profile.
  params:
    - *ref_490
setbio_string_1:
  args:
    - text
  desc: Sets or updates the biography in the user's profile.
  params:
    - *ref_490
setbio_string_2:
  args:
    - text
  desc: Sets or updates the biography in the user's profile.
  params:
    - *ref_490
setbirthday:
  args:
    - time
  desc: Sets the birthday in the user's profile.
  params:
    - &ref_491
      desc: The birthday date.
      name: dateTime
      optional: false
      type: DateTime
setbirthday_DateTime:
  args:
    - time
  desc: Sets the birthday in the user's profile.
  params:
    - *ref_491
setbirthday_DateTime_1:
  args:
    - time
  desc: Sets the birthday in the user's profile.
  params:
    - *ref_491
setbirthday_DateTime_2:
  args:
    - time
  desc: Sets the birthday in the user's profile.
  params:
    - *ref_491
setbirthdayprivacy:
  args:
    - birthdaydisplaymodeenum
  desc: Sets the birthday privacy mode in the user's profile.
  params:
    - &ref_492
      desc: The birthday display mode to set.
      name: birthdayDisplayModeEnum
      optional: false
      type: BirthdayDisplayModeEnum
setbirthdayprivacy_BirthdayDisplayModeEnum:
  args:
    - birthdaydisplaymodeenum
  desc: Sets the birthday privacy mode in the user's profile.
  params:
    - *ref_492
setbirthdayprivacy_BirthdayDisplayModeEnum_1:
  args:
    - birthdaydisplaymodeenum
  desc: Sets the birthday privacy mode in the user's profile.
  params:
    - *ref_492
setbirthdayprivacy_BirthdayDisplayModeEnum_2:
  args:
    - birthdaydisplaymodeenum
  desc: Sets the birthday privacy mode in the user's profile.
  params:
    - *ref_492
setchanlname:
  args:
    - text
  desc: Sets the name of the current text channel.
  params:
    - &ref_493
      desc: The name to set for the text channel
      name: name
      optional: false
      type: string
setchanlname_string:
  args:
    - text
  desc: Sets the name of the current text channel.
  params:
    - *ref_493
setchanlname_string_1:
  args:
    - text
  desc: Sets the name of the current text channel.
  params:
    - *ref_493
setchanlname_string_2:
  args:
    - text
  desc: Sets the name of the current text channel.
  params:
    - *ref_493
setchannelxp:
  args:
    - channel number
  desc: Sets an XP multiplier for a channel.
  params:
    - &ref_494
      desc: The channel to set the multiplier for.
      name: channel
      optional: false
      type: ITextChannel
    - &ref_495
      desc: The multiplier value.
      name: multiplier
      optional: false
      type: double
setchannelxp_ITextChannel_double:
  args:
    - channel number
  desc: Sets an XP multiplier for a channel.
  params:
    - *ref_494
    - *ref_495
setchannelxp_ITextChannel_double_1:
  args:
    - channel number
  desc: Sets an XP multiplier for a channel.
  params:
    - *ref_494
    - *ref_495
setchannelxp_ITextChannel_double_2:
  args:
    - channel number
  desc: Sets an XP multiplier for a channel.
  params:
    - *ref_494
    - *ref_495
setctinterdesc:
  args:
    - number text
  desc: Sets the interaction description for a chat trigger.
  params:
    - *ref_130
    - &ref_496
      desc: The description to set for the interaction.
      name: description
      optional: false
      type: string
setctinterdesc_int_string:
  args:
    - number text
  desc: Sets the interaction description for a chat trigger.
  params:
    - *ref_130
    - *ref_496
setctinterdesc_int_string_1:
  args:
    - number text
  desc: Sets the interaction description for a chat trigger.
  params:
    - *ref_130
    - *ref_496
setctinterdesc_int_string_2:
  args:
    - number text
  desc: Sets the interaction description for a chat trigger.
  params:
    - *ref_130
    - *ref_496
setctintername:
  args:
    - number text
  desc: Sets the interaction name for a chat trigger.
  params:
    - *ref_130
    - &ref_497
      desc: The name to set for the interaction.
      name: name
      optional: false
      type: string
setctintername_int_string:
  args:
    - number text
  desc: Sets the interaction name for a chat trigger.
  params:
    - *ref_130
    - *ref_497
setctintername_int_string_1:
  args:
    - number text
  desc: Sets the interaction name for a chat trigger.
  params:
    - *ref_130
    - *ref_497
setctintername_int_string_2:
  args:
    - number text
  desc: Sets the interaction name for a chat trigger.
  params:
    - *ref_130
    - *ref_497
setctintertype:
  args:
    - number type
  desc: Sets the interaction type for a chat trigger.
  params:
    - *ref_130
    - &ref_498
      desc: 'The interaction type to set. '
      name: type
      optional: false
      type: CtApplicationCommandType
setctintertype_int_CtApplicationCommandType:
  args:
    - number type
  desc: Sets the interaction type for a chat trigger.
  params:
    - *ref_130
    - *ref_498
setctintertype_int_CtApplicationCommandType_1:
  args:
    - number type
  desc: Sets the interaction type for a chat trigger.
  params:
    - *ref_130
    - *ref_498
setctintertype_int_CtApplicationCommandType_2:
  args:
    - number type
  desc: Sets the interaction type for a chat trigger.
  params:
    - *ref_130
    - *ref_498
setdaily:
  args:
    - number time
  desc: Sets the daily reward amount and cooldown time for the guild.
  params:
    - &ref_499
      desc: The amount of the daily reward.
      name: amount
      optional: false
      type: int
    - &ref_500
      desc: The cooldown time for claiming the daily reward.
      name: time
      optional: false
      type: StoopidTime
setdaily_int_StoopidTime:
  args:
    - number time
  desc: Sets the daily reward amount and cooldown time for the guild.
  params:
    - *ref_499
    - *ref_500
setdaily_int_StoopidTime_1:
  args:
    - number time
  desc: Sets the daily reward amount and cooldown time for the guild.
  params:
    - *ref_499
    - *ref_500
setdaily_int_StoopidTime_2:
  args:
    - number time
  desc: Sets the daily reward amount and cooldown time for the guild.
  params:
    - *ref_499
    - *ref_500
setdefaultpunishment:
  args:
    - punishmentaction
  desc: Sets the default punishment action for the guild.
  params:
    - &ref_501
      desc: Optional punishment action specific to this permission.
      name: punishmentAction
      optional: false
      type: PunishmentAction
setdefaultpunishment_PunishmentAction:
  args:
    - punishmentaction
  desc: Sets the default punishment action for the guild.
  params:
    - *ref_501
setdefaultpunishment_PunishmentAction_1:
  args:
    - punishmentaction
  desc: Manages role monitoring settings, blacklists, and whitelists.
  params:
    - &ref_502
      desc: Optional punishment action specific to this role.
      name: punishmentAction
      optional: false
      type: PunishmentAction
setdefaultpunishment_PunishmentAction_2:
  args:
    - punishmentaction
  desc: Sets the default punishment action for the guild.
  params:
    - *ref_502
setdjrole:
  args:
    - null
  desc: Sets the DJ role for music commands that require elevated permissions.
  params:
    - *ref_1
setdjrole_=:
  args:
    - null
  desc: Sets the DJ role for music commands that require elevated permissions.
  params:
    - *ref_1
setgame:
  args:
    - type null
    - type
  desc: Sets the bot's currently playing game.
  params:
    - &ref_503
      desc: The type of activity (e.g., Playing, Streaming).
      name: type
      optional: false
      type: ActivityType
    - *ref_1
setgame_ActivityType_=:
  args:
    - type null
    - type
  desc: Sets the bot's currently playing game.
  params:
    - *ref_503
    - *ref_1
setgame_ActivityType_=_1:
  args:
    - type null
    - type
  desc: Sets the bot's currently playing game.
  params:
    - *ref_503
    - *ref_1
setgame_ActivityType_=_2:
  args:
    - type null
    - type
  desc: Sets the bot's currently playing game.
  params:
    - *ref_503
    - *ref_1
seticon:
  args:
    - text
  desc: Sets the icon of the server.
  params:
    - &ref_525
      desc: The URL of the new server icon.
      name: img
      optional: false
      type: string
seticon_string:
  args:
    - text
  desc: Sets the icon of the server.
  params:
    - *ref_489
setmessagexp:
  args:
    - number
  desc: Sets the amount of XP gained per message.
  params:
    - &ref_504
      desc: The amount of XP to award per message.
      name: amount
      optional: false
      type: int
setmessagexp_int:
  args:
    - number
  desc: Sets the amount of XP gained per message.
  params:
    - *ref_504
setmessagexp_int_1:
  args:
    - number
  desc: Sets the amount of XP gained per message.
  params:
    - *ref_504
setmessagexp_int_2:
  args:
    - number
  desc: Sets the amount of XP gained per message.
  params:
    - *ref_504
setminaccountage:
  args:
    - number
  desc: Sets the minimum account age required for an invite to be counted.
  params:
    - &ref_505
      desc: The minimum age in days.
      name: days
      optional: false
      type: int
setminaccountage_int:
  args:
    - number
  desc: Sets the minimum account age required for an invite to be counted.
  params:
    - *ref_505
setminaccountage_int_1:
  args:
    - number
  desc: Sets the minimum account age required for an invite to be counted.
  params:
    - *ref_505
setminaccountage_int_2:
  args:
    - number
  desc: Sets the minimum account age required for an invite to be counted.
  params:
    - *ref_505
setmodaltitle:
  args:
    - number text
  desc: Sets the title for a ticket creation modal
  params:
    - *ref_17
    - &ref_506
      desc: The title to display on the modal
      name: title
      optional: false
      type: string
setmodaltitle_int_string:
  args:
    - number text
  desc: Sets the title for a ticket creation modal
  params:
    - *ref_17
    - *ref_506
setmodaltitle_int_string_1:
  args:
    - number text
  desc: Sets the title for a ticket creation modal
  params:
    - *ref_17
    - *ref_506
setmodaltitle_int_string_2:
  args:
    - number text
  desc: Sets the title for a ticket creation modal
  params:
    - *ref_17
    - *ref_506
setmodaltitle_int_string_3:
  args:
    - number text
  desc: Sets the title for a ticket creation modal
  params:
    - *ref_17
    - *ref_506
setmodaltitle_int_string_4:
  args:
    - number text
  desc: Sets the title for a ticket creation modal
  params:
    - *ref_17
    - *ref_506
setmusicchannel:
  args:
    - null
  desc: Sets the channel where music events will be sent.
  params:
    - *ref_1
setmusicchannel_=:
  args:
    - null
  desc: Sets the channel where music events will be sent.
  params:
    - *ref_1
setmwarnchannel:
  args:
    - channel
  desc: The addrole thing used for punishments
  params:
    - &ref_507
      desc: The channel to set
      name: channel
      optional: false
      type: ITextChannel
setmwarnchannel_ITextChannel:
  args:
    - channel
  desc: The addrole thing used for punishments
  params:
    - *ref_507
setmwarnchannel_ITextChannel_1:
  args:
    - channel
  desc: Module for managing mini warnings.
  params:
    - *ref_507
setmwarnchannel_ITextChannel_2:
  args:
    - channel
  desc: The addrole thing used for punishments
  params:
    - *ref_507
setname:
  args:
    - text
  desc: Changes the bot's username to the specified new name.
  params:
    - &ref_508
      desc: The new username for the bot.
      name: newName
      optional: false
      type: string
setname_string:
  args:
    - text
  desc: Changes the bot's username to the specified new name.
  params:
    - *ref_508
setname_string_1:
  args:
    - text
  desc: Changes the bot's username to the specified new name.
  params:
    - *ref_508
setname_string_2:
  args:
    - text
  desc: Changes the bot's username to the specified new name.
  params:
    - *ref_508
setnick:
  args:
    - '@user null'
    - '@user'
  desc: >-
    Lets you set the nickname for a mentioned user. If no user is mentioned it
    defaults to setting a nickname for the bot.
  params:
    - &ref_509
      desc: The target user.
      name: gu
      optional: false
      type: IGuildUser
    - *ref_1
setnick_=:
  args:
    - null
  desc: Overload for setting the bot's nickname.
  params:
    - *ref_1
setnick_=_1:
  args:
    - null
  desc: Overload for setting the bot's nickname.
  params:
    - *ref_1
setnick_=_2:
  args:
    - null
  desc: Overload for setting the bot's nickname.
  params:
    - *ref_1
setnick_=_3:
  args:
    - null
  desc: Overload for setting the bot's nickname.
  params:
    - *ref_1
setnick_IGuildUser_=:
  args:
    - '@user null'
    - '@user'
  desc: >-
    Lets you set the nickname for a mentioned user. If no user is mentioned it
    defaults to setting a nickname for the bot.
  params:
    - *ref_509
    - *ref_1
setnick_IGuildUser_=_1:
  args:
    - '@user null'
    - '@user'
  desc: >-
    Lets you set the nickname for a mentioned user. If no user is mentioned it
    defaults to setting a nickname for the bot.
  params:
    - *ref_509
    - *ref_1
setnick_IGuildUser_=_2:
  args:
    - '@user null'
    - '@user'
  desc: >-
    Lets you set the nickname for a mentioned user. If no user is mentioned it
    defaults to setting a nickname for the bot.
  params:
    - *ref_509
    - *ref_1
setpaneltranscripts:
  args:
    - panelid true|false
  desc: Enables or disables transcript saving for a panel.
  params:
    - &ref_510
      desc: The ID of the panel to modify.
      name: panelId
      optional: false
      type: ulong
    - &ref_511
      desc: Whether to enable or disable transcript saving.
      name: enable
      optional: false
      type: bool
setpaneltranscripts_ulong_bool:
  args:
    - panelid true|false
  desc: Enables or disables transcript saving for a panel.
  params:
    - *ref_510
    - *ref_511
setpaneltranscripts_ulong_bool_1:
  args:
    - panelid true|false
  desc: Enables or disables transcript saving for a panel.
  params:
    - *ref_510
    - *ref_511
setpaneltranscripts_ulong_bool_2:
  args:
    - panelid true|false
  desc: Enables or disables transcript saving for a panel.
  params:
    - *ref_510
    - *ref_511
setpaneltranscripts_ulong_bool_3:
  args:
    - panelid true|false
  desc: Enables or disables transcript saving for a panel.
  params:
    - *ref_510
    - *ref_511
setpaneltranscripts_ulong_bool_4:
  args:
    - panelid true|false
  desc: Enables or disables transcript saving for a panel.
  params:
    - *ref_510
    - *ref_511
setplaceholder:
  args:
    - text text
  desc: Updates the placeholder text for a select menu
  params:
    - *ref_403
    - &ref_512
      desc: The new placeholder text
      name: placeholder
      optional: false
      type: string
setplaceholder_string_string:
  args:
    - text text
  desc: Updates the placeholder text for a select menu
  params:
    - *ref_403
    - *ref_512
setplaceholder_string_string_1:
  args:
    - text text
  desc: Updates the placeholder text for a select menu
  params:
    - *ref_403
    - *ref_512
setplaceholder_string_string_2:
  args:
    - text text
  desc: Updates the placeholder text for a select menu
  params:
    - *ref_403
    - *ref_512
setplaceholder_string_string_3:
  args:
    - text text
  desc: Updates the placeholder text for a select menu
  params:
    - *ref_403
    - *ref_512
setplaceholder_string_string_4:
  args:
    - text text
  desc: Updates the placeholder text for a select menu
  params:
    - *ref_403
    - *ref_512
setprivacy:
  args:
    - privacyenum
  desc: Sets the privacy level of the user's profile.
  params:
    - &ref_513
      desc: The privacy setting to apply.
      name: privacyEnum
      optional: false
      type: ProfilePrivacyEnum
setprivacy_ProfilePrivacyEnum:
  args:
    - privacyenum
  desc: Sets the privacy level of the user's profile.
  params:
    - *ref_513
setprivacy_ProfilePrivacyEnum_1:
  args:
    - privacyenum
  desc: Sets the privacy level of the user's profile.
  params:
    - *ref_513
setprivacy_ProfilePrivacyEnum_2:
  args:
    - privacyenum
  desc: Sets the privacy level of the user's profile.
  params:
    - *ref_513
setprofilecolor:
  args:
    - input
  desc: Sets the profile color based on an SKColor input.
  params:
    - &ref_514
      desc: The SKColor representing the desired profile color.
      name: input
      optional: false
      type: SKColor
setprofilecolor_SKColor:
  args:
    - input
  desc: Sets the profile color based on an SKColor input.
  params:
    - *ref_514
setprofilecolor_SKColor_1:
  args:
    - input
  desc: Sets the profile color based on an SKColor input.
  params:
    - *ref_514
setprofilecolor_SKColor_2:
  args:
    - input
  desc: Sets the profile color based on an SKColor input.
  params:
    - *ref_514
setprofileimage:
  args:
    - text
  desc: Sets the profile image URL in the user's profile.
  params:
    - &ref_515
      desc: The URL of the image to set as the profile image.
      name: url
      optional: false
      type: string
setprofileimage_string:
  args:
    - text
  desc: Sets the profile image URL in the user's profile.
  params:
    - *ref_515
setprofileimage_string_1:
  args:
    - text
  desc: Sets the profile image URL in the user's profile.
  params:
    - *ref_515
setprofileimage_string_2:
  args:
    - text
  desc: Sets the profile image URL in the user's profile.
  params:
    - *ref_515
setpronouns:
  args:
    - null
  desc: Sets or clears the pronouns for the user.
  params:
    - *ref_1
setpronouns_=:
  args:
    - null
  desc: Sets or clears the pronouns for the user.
  params:
    - *ref_1
setpronouns_=_1:
  args:
    - null
  desc: Sets or clears the pronouns for the user.
  params:
    - *ref_1
setpronouns_=_2:
  args:
    - null
  desc: Sets or clears the pronouns for the user.
  params:
    - *ref_1
setremoveroles:
  args:
    - number @role
  desc: Sets the roles to remove when a user has the selected status.
  params:
    - *ref_390
    - *ref_391
setremoveroles_int_IRole[]:
  args:
    - number @role
  desc: Sets the roles to remove when a user has the selected status.
  params:
    - *ref_390
    - *ref_391
setremoveroles_int_IRole[]_1:
  args:
    - number @role
  desc: Sets the roles to remove when a user has the selected status.
  params:
    - *ref_390
    - *ref_391
setremoveroles_int_IRole[]_2:
  args:
    - number @role
  desc: Sets the roles to remove when a user has the selected status.
  params:
    - *ref_390
    - *ref_391
setrepostthreshold:
  args:
    - number number
  desc: Sets the repost threshold for a starboard configuration.
  params:
    - *ref_415
    - desc: The repost threshold to set.
      name: threshold
      optional: false
      type: int
setrepostthreshold_int_int:
  args:
    - number number
  desc: Sets the repost threshold for a starboard configuration.
  params:
    - *ref_415
    - &ref_517
      desc: The star threshold to set.
      name: threshold
      optional: false
      type: int
setrepostthreshold_int_int_1:
  args:
    - number number
  desc: Sets the repost threshold for a starboard configuration.
  params:
    - *ref_415
    - *ref_516
setrepostthreshold_int_int_2:
  args:
    - number number
  desc: Sets the repost threshold for a starboard configuration.
  params:
    - *ref_415
    - *ref_517
setresponsetime:
  args:
    - number number
    - number
  desc: Sets the required response time for tickets created by a button.
  params:
    - *ref_487
    - &ref_518
      desc: The number of minutes, or null to disable.
      name: minutes
      optional: true
      type: int
setresponsetime_int_int:
  args:
    - number number
    - number
  desc: Sets the required response time for tickets created by a button.
  params:
    - *ref_487
    - *ref_518
setresponsetime_int_int_1:
  args:
    - number number
    - number
  desc: Sets the required response time for tickets created by a button.
  params:
    - *ref_487
    - *ref_518
setresponsetime_int_int_2:
  args:
    - number number
    - number
  desc: Sets the required response time for tickets created by a button.
  params:
    - *ref_487
    - *ref_518
setresponsetime_int_int_3:
  args:
    - number number
    - number
  desc: Sets the required response time for tickets created by a button.
  params:
    - *ref_487
    - *ref_518
setresponsetime_int_int_4:
  args:
    - number number
    - number
  desc: Sets the required response time for tickets created by a button.
  params:
    - *ref_487
    - *ref_518
setrole:
  args:
    - '@role @user'
  desc: Sets a role to a user.
  params:
    - &ref_520
      desc: The role to add to the user.
      name: roleToAdd
      optional: false
      type: IRole
    - &ref_519
      desc: The user to add the role to.
      name: targetUser
      optional: false
      type: IGuildUser
setrole_IGuildUser_IRole:
  args:
    - '@user @role'
  desc: Adds a role to a user.
  params:
    - *ref_519
    - *ref_520
setrole_IGuildUser_IRole_1:
  args:
    - '@user @role'
  desc: Execute the SetRole command
  params:
    - *ref_519
    - *ref_520
setrole_IGuildUser_IRole_2:
  args:
    - '@user @role'
  desc: Adds a role to a user.
  params:
    - *ref_519
    - *ref_520
setrole_IGuildUser_IRole_3:
  args:
    - '@user @role'
  desc: Execute the SetRole command
  params:
    - *ref_519
    - *ref_520
setrole_IRole_IGuildUser:
  args:
    - '@role @user'
  desc: Execute the SetRole command
  params:
    - *ref_520
    - *ref_519
setrole_IRole_IGuildUser_1:
  args:
    - '@role @user'
  desc: Sets a role to a user.
  params:
    - *ref_520
    - *ref_519
setrole_IRole_IGuildUser_2:
  args:
    - '@role @user'
  desc: Execute the SetRole command
  params:
    - *ref_520
    - *ref_519
setroles:
  args:
    - '@user @role'
  desc: >-
    Modifies the roles of a user by adding new roles and/or removing existing
    ones.
  params:
    - &ref_521
      desc: The user whose roles will be modified.
      name: user
      optional: false
      type: IGuildUser
    - &ref_522
      desc: The roles to be added to the user.
      name: roles
      optional: false
      type: IRole[]
setroles_IGuildUser_IRole[]:
  args:
    - '@user @role'
  desc: >-
    Modifies the roles of a user by adding new roles and/or removing existing
    ones.
  params:
    - *ref_521
    - *ref_522
setroles_IGuildUser_IRole[]_1:
  args:
    - '@user @role'
  desc: >-
    Modifies the roles of a user by adding new roles and/or removing existing
    ones.
  params:
    - *ref_521
    - *ref_522
setroles_IGuildUser_IRole[]_2:
  args:
    - '@user @role'
  desc: >-
    Modifies the roles of a user by adding new roles and/or removing existing
    ones.
  params:
    - *ref_521
    - *ref_522
setrolexp:
  args:
    - '@role number'
  desc: Sets an XP multiplier for a role.
  params:
    - &ref_523
      desc: The role to set the multiplier for.
      name: role
      optional: false
      type: IRole
    - *ref_495
setrolexp_IRole_double:
  args:
    - '@role number'
  desc: Sets an XP multiplier for a role.
  params:
    - *ref_523
    - &ref_524
      desc: The XP multiplier for the boost.
      name: multiplier
      optional: false
      type: double
setrolexp_IRole_double_1:
  args:
    - '@role number'
  desc: Sets an XP multiplier for a role.
  params:
    - *ref_523
    - *ref_495
setrolexp_IRole_double_2:
  args:
    - '@role number'
  desc: Sets an XP multiplier for a role.
  params:
    - *ref_523
    - *ref_524
setservername:
  args:
    - text
  desc: Sets the name of the server.
  params:
    - *ref_16
setservername_string:
  args:
    - text
  desc: Sets the name of the server.
  params:
    - *ref_16
setsplash:
  args:
    - text
  desc: Sets the splash image of the server.
  params:
    - desc: The URL of the new splash image.
      name: img
      optional: false
      type: string
setsplash_string:
  args:
    - text
  desc: Sets the splash image of the server.
  params:
    - *ref_525
setstarthreshold:
  args:
    - number number
  desc: Sets the star threshold for a starboard configuration.
  params:
    - *ref_415
    - *ref_517
setstarthreshold_int_int:
  args:
    - number number
  desc: Sets the star threshold for a starboard configuration.
  params:
    - *ref_415
    - *ref_517
setstarthreshold_int_int_1:
  args:
    - number number
  desc: Sets the star threshold for a starboard configuration.
  params:
    - *ref_415
    - *ref_517
setstarthreshold_int_int_2:
  args:
    - number number
  desc: Sets the star threshold for a starboard configuration.
  params:
    - *ref_415
    - *ref_517
setstatus:
  args:
    - online|invisible|idle
    - online
    - invisible
    - idle
  desc: Sets the bot's online status.
  params:
    - &ref_526
      desc: 'The new status to set. Possible values: Online, Invisible, Idle, Dnd'
      name: status
      optional: false
      type: SettableUserStatus
setstatus_SettableUserStatus:
  args:
    - online|invisible|idle
    - online
    - invisible
    - idle
  desc: Sets the bot's online status.
  params:
    - *ref_526
setstatus_SettableUserStatus_1:
  args:
    - online|invisible|idle
    - online
    - invisible
    - idle
  desc: Sets the bot's online status.
  params:
    - *ref_526
setstatus_SettableUserStatus_2:
  args:
    - online|invisible|idle
    - online
    - invisible
    - idle
  desc: Sets the bot's online status.
  params:
    - *ref_526
setstatusrolechannel:
  args:
    - number channel
  desc: Sets the channel for a specific status role.
  params:
    - *ref_390
    - &ref_527
      desc: The channel to set.
      name: channel
      optional: false
      type: ITextChannel
setstatusrolechannel_int_ITextChannel:
  args:
    - number channel
  desc: Sets the channel for a specific status role.
  params:
    - *ref_390
    - *ref_527
setstatusrolechannel_int_ITextChannel_1:
  args:
    - number channel
  desc: Sets the channel for a specific status role.
  params:
    - *ref_390
    - *ref_527
setstatusrolechannel_int_ITextChannel_2:
  args:
    - number channel
  desc: Sets the channel for a specific status role.
  params:
    - *ref_390
    - *ref_527
setstatusroleembed:
  args:
    - number null
    - number
  desc: Sets or previews the embed text for a specific status role.
  params:
    - *ref_390
    - *ref_1
setstatusroleembed_int_=:
  args:
    - number null
    - number
  desc: Sets or previews the embed text for a specific status role.
  params:
    - *ref_390
    - *ref_1
setstatusroleembed_int_=_1:
  args:
    - number null
    - number
  desc: Sets or previews the embed text for a specific status role.
  params:
    - *ref_390
    - *ref_1
setstatusroleembed_int_=_2:
  args:
    - number null
    - number
  desc: Sets or previews the embed text for a specific status role.
  params:
    - *ref_390
    - *ref_1
setstream:
  args:
    - text null
    - text
  desc: Sets the bot's streaming status.
  params:
    - &ref_528
      desc: The URL of the stream.
      name: url
      optional: false
      type: string
    - *ref_1
setstream_string_=:
  args:
    - text null
    - text
  desc: Sets the bot's streaming status.
  params:
    - *ref_528
    - *ref_1
setstream_string_=_1:
  args:
    - text null
    - text
  desc: Sets the bot's streaming status.
  params:
    - *ref_528
    - *ref_1
setstream_string_=_2:
  args:
    - text null
    - text
  desc: Sets the bot's streaming status.
  params:
    - *ref_528
    - *ref_1
setsuggestchannel:
  args:
    - null
  desc: Sets or disables the suggestion channel for the server.
  params:
    - *ref_1
setsuggestchannel_=:
  args:
    - null
  desc: Sets or disables the suggestion channel for the server.
  params:
    - *ref_1
setsuggestchannel_=_1:
  args:
    - null
  desc: Commands for managing and interacting with suggestions.
  params:
    - *ref_1
setsuggestchannel_=_2:
  args:
    - null
  desc: Sets or disables the suggestion channel for the server.
  params:
    - *ref_1
setswitchfc:
  args:
    - '""'
  desc: Sets or clears the Nintendo Switch friend code in the user's profile.
  params:
    - *ref_126
setswitchfc_=:
  args:
    - '""'
  desc: Sets or clears the Nintendo Switch friend code in the user's profile.
  params:
    - *ref_126
setswitchfc_=_1:
  args:
    - '""'
  desc: Sets or clears the Nintendo Switch friend code in the user's profile.
  params:
    - *ref_126
setswitchfc_=_2:
  args:
    - '""'
  desc: Sets or clears the Nintendo Switch friend code in the user's profile.
  params:
    - *ref_126
settopic:
  args:
    - null
  desc: Sets the topic of the current text channel.
  params:
    - *ref_1
settopic_=:
  args:
    - null
  desc: Sets the topic of the current text channel.
  params:
    - *ref_1
settopic_=_1:
  args:
    - null
  desc: Sets the topic of the current text channel.
  params:
    - *ref_1
settopic_=_2:
  args:
    - null
  desc: Sets the topic of the current text channel.
  params:
    - *ref_1
setupvoicehub:
  args:
    - ''
  desc: Sets up a voice channel as a hub for creating custom voice channels.
  params: [ ]
setupvoicehub_noparams:
  args:
    - ''
  desc: Sets up a voice channel as a hub for creating custom voice channels.
  params: [ ]
setupvoicehub_noparams_1:
  args:
    - ''
  desc: Sets up a voice channel as a hub for creating custom voice channels.
  params: [ ]
setupvoicehub_noparams_2:
  args:
    - ''
  desc: Sets up a voice channel as a hub for creating custom voice channels.
  params: [ ]
setuserrolestate:
  args:
    - '@user @role'
  desc: Sets the role state for a specific user.
  params:
    - &ref_529
      desc: The user whose role state should be set.
      name: user
      optional: false
      type: IGuildUser
    - &ref_530
      desc: The roles to be included in the user's role state.
      name: roles
      optional: false
      type: IRole[]
setuserrolestate_IGuildUser_IRole[]:
  args:
    - '@user @role'
  desc: Sets the role state for a specific user.
  params:
    - &ref_531
      desc: The user whose role state should be modified.
      name: user
      optional: false
      type: IGuildUser
    - *ref_414
setuserrolestate_IGuildUser_IRole[]_1:
  args:
    - '@user @role'
  desc: Sets the role state for a specific user.
  params:
    - *ref_529
    - *ref_530
setuserrolestate_IGuildUser_IRole[]_2:
  args:
    - '@user @role'
  desc: Sets the role state for a specific user.
  params:
    - *ref_531
    - *ref_414
setvoicehub:
  args:
    - channel null
    - channel
  desc: Sets a specific voice channel as the hub for creating custom voice channels.
  params:
    - &ref_532
      desc: ''
      name: channel
      optional: false
      type: IVoiceChannel
    - *ref_1
setvoicehub_IVoiceChannel_=:
  args:
    - channel null
    - channel
  desc: Sets a specific voice channel as the hub for creating custom voice channels.
  params:
    - *ref_532
    - *ref_1
setvoicehub_IVoiceChannel_=_1:
  args:
    - channel null
    - channel
  desc: Sets a specific voice channel as the hub for creating custom voice channels.
  params:
    - *ref_532
    - *ref_1
setvoicehub_IVoiceChannel_=_2:
  args:
    - channel null
    - channel
  desc: Sets a specific voice channel as the hub for creating custom voice channels.
  params:
    - *ref_532
    - *ref_1
setvoicetimeout:
  args:
    - number
  desc: Sets the voice XP timeout (how long a user must be in voice to gain XP).
  params:
    - &ref_533
      desc: The timeout in minutes.
      name: minutes
      optional: false
      type: int
setvoicetimeout_int:
  args:
    - number
  desc: Sets the voice XP timeout (how long a user must be in voice to gain XP).
  params:
    - *ref_533
setvoicetimeout_int_1:
  args:
    - number
  desc: Sets the voice XP timeout (how long a user must be in voice to gain XP).
  params:
    - *ref_533
setvoicetimeout_int_2:
  args:
    - number
  desc: Sets the voice XP timeout (how long a user must be in voice to gain XP).
  params:
    - *ref_533
setvoicexp:
  args:
    - number
  desc: Sets the amount of XP gained per minute in voice channels.
  params:
    - &ref_534
      desc: The amount of XP to award per minute in voice.
      name: amount
      optional: false
      type: int
setvoicexp_int:
  args:
    - number
  desc: Sets the amount of XP gained per minute in voice channels.
  params:
    - *ref_534
setvoicexp_int_1:
  args:
    - number
  desc: Sets the amount of XP gained per minute in voice channels.
  params:
    - *ref_534
setvoicexp_int_2:
  args:
    - number
  desc: Sets the amount of XP gained per minute in voice channels.
  params:
    - *ref_534
setwarnchannel:
  args:
    - channel
  desc: Sets the warnlog channel for the guild.
  params:
    - *ref_158
setwarnchannel_ITextChannel:
  args:
    - channel
  desc: Sets the warnlog channel for the guild.
  params:
    - *ref_158
setwarnchannel_ITextChannel_1:
  args:
    - channel
  desc: Sets the warnlog channel for the guild.
  params:
    - *ref_158
setwarnchannel_ITextChannel_2:
  args:
    - channel
  desc: Sets the warnlog channel for the guild.
  params:
    - *ref_158
setxp:
  args:
    - '@user number'
  desc: Sets a user's XP to a specific amount.
  params:
    - *ref_47
    - &ref_535
      desc: The amount of XP to set.
      name: amount
      optional: false
      type: long
setxp_IGuildUser_long:
  args:
    - '@user number'
  desc: Sets a user's XP to a specific amount.
  params:
    - *ref_440
    - *ref_535
setxp_IGuildUser_long_1:
  args:
    - '@user number'
  desc: Sets a user's XP to a specific amount.
  params:
    - *ref_47
    - *ref_535
setxp_IGuildUser_long_2:
  args:
    - '@user number'
  desc: Sets a user's XP to a specific amount.
  params:
    - *ref_440
    - *ref_535
setxpcooldown:
  args:
    - number
  desc: Sets the cooldown between message XP gains.
  params:
    - &ref_536
      desc: The cooldown in seconds.
      name: seconds
      optional: false
      type: int
setxpcooldown_int:
  args:
    - number
  desc: Sets the cooldown between message XP gains.
  params:
    - *ref_536
setxpcooldown_int_1:
  args:
    - number
  desc: Sets the cooldown between message XP gains.
  params:
    - *ref_536
setxpcooldown_int_2:
  args:
    - number
  desc: Sets the cooldown between message XP gains.
  params:
    - *ref_536
setxpcurve:
  args:
    - type
  desc: Sets the XP curve type used for level calculations.
  params:
    - &ref_537
      desc: 'The XP curve type: Default, Flat, or Steep.'
      name: type
      optional: false
      type: XpCurveType
setxpcurve_XpCurveType:
  args:
    - type
  desc: Sets the XP curve type used for level calculations.
  params:
    - *ref_537
setxpcurve_XpCurveType_1:
  args:
    - type
  desc: Sets the XP curve type used for level calculations.
  params:
    - *ref_537
setxpcurve_XpCurveType_2:
  args:
    - type
  desc: Sets the XP curve type used for level calculations.
  params:
    - *ref_537
setxpexclusive:
  args:
    - true|false
  desc: >-
    Sets whether role rewards are exclusive (only highest level role) or
    additive (all earned roles).
  params:
    - desc: Whether role rewards should be exclusive.
      name: exclusive
      optional: false
      type: bool
setxpmultiplier:
  args:
    - number
  desc: Sets the server-wide XP multiplier.
  params:
    - &ref_538
      desc: The XP multiplier value.
      name: multiplier
      optional: false
      type: double
setxpmultiplier_double:
  args:
    - number
  desc: Sets the server-wide XP multiplier.
  params:
    - *ref_538
setxpmultiplier_double_1:
  args:
    - number
  desc: Sets the server-wide XP multiplier.
  params:
    - *ref_538
setxpmultiplier_double_2:
  args:
    - number
  desc: Sets the server-wide XP multiplier.
  params:
    - *ref_538
setzodiac:
  args:
    - text
  desc: Sets the zodiac sign in the user's profile.
  params:
    - &ref_539
      desc: The zodiac sign to set.
      name: zodiac
      optional: false
      type: string
setzodiac_string:
  args:
    - text
  desc: Sets the zodiac sign in the user's profile.
  params:
    - *ref_539
setzodiac_string_1:
  args:
    - text
  desc: Sets the zodiac sign in the user's profile.
  params:
    - *ref_539
setzodiac_string_2:
  args:
    - text
  desc: Sets the zodiac sign in the user's profile.
  params:
    - *ref_539
sfr:
  args:
    - role emotes
  desc: Steals emotes for a specific role.
  params:
    - desc: The role to steal emotes for.
      name: role
      optional: false
      type: IRole
    - desc: Space-separated list of emote URLs or emote names.
      name: e
      optional: false
      type: string
shardstats:
  args:
    - ''
  desc: >-
    Displays statistics for all shards of the bot, including their statuses,
    guild counts, and user counts.
  params: [ ]
shardstats_noparams:
  args:
    - ''
  desc: Execute the ShardStats command
  params: [ ]
shardstats_noparams_1:
  args:
    - ''
  desc: >-
    Displays statistics for all shards of the bot, including their statuses,
    guild counts, and user counts.
  params: [ ]
shardstats_noparams_2:
  args:
    - ''
  desc: Execute the ShardStats command
  params: [ ]
ship:
  args:
    - '@user @user'
  desc: Sends a ship image based on compatibility between two users.
  params:
    - &ref_540
      desc: The user to be compared with the current user.
      name: user
      optional: false
      type: IUser
    - &ref_541
      desc: The second user to be compared.
      name: user2
      optional: false
      type: IUser
ship_IUser:
  args:
    - '@user'
  desc: >-
    Sends a ship image based on compatibility between the current user and
    another user.
  params:
    - *ref_540
ship_IUser_1:
  args:
    - '@user'
  desc: Execute the Ship command
  params:
    - *ref_540
ship_IUser_2:
  args:
    - '@user'
  desc: >-
    Sends a ship image based on compatibility between the current user and
    another user.
  params:
    - *ref_540
ship_IUser_3:
  args:
    - '@user'
  desc: Execute the Ship command
  params:
    - *ref_540
ship_IUser_IUser:
  args:
    - '@user @user'
  desc: Execute the Ship command
  params:
    - *ref_540
    - *ref_541
ship_IUser_IUser_1:
  args:
    - '@user @user'
  desc: Group of commands related to anime.
  params:
    - &ref_542
      desc: The first user to be compared.
      name: user
      optional: false
      type: IUser
    - *ref_541
ship_IUser_IUser_2:
  args:
    - '@user @user'
  desc: Execute the Ship command
  params:
    - *ref_542
    - *ref_541
shoot:
  args:
    - text
  desc: Shoots someone.
  params:
    - *ref_242
shoot_string:
  args:
    - text
  desc: Shoots someone.
  params:
    - *ref_242
shoot_string_1:
  args:
    - text
  desc: Submodule containing action commands.
  params:
    - *ref_243
shoot_string_2:
  args:
    - text
  desc: Submodule containing action commands.
  params:
    - *ref_243
shorten:
  args:
    - text
  desc: Shortens a provided URL using the goolnk.com API.
  params:
    - &ref_543
      desc: The URL to be shortened.
      name: query
      optional: false
      type: string
shorten_string:
  args:
    - text
  desc: Execute the Shorten command
  params:
    - *ref_543
shorten_string_1:
  args:
    - text
  desc: Shortens a provided URL using the goolnk.com API.
  params:
    - *ref_543
shorten_string_2:
  args:
    - text
  desc: Execute the Shorten command
  params:
    - *ref_543
showchattrigger:
  args:
    - number
  desc: Shows details of a specific chat trigger.
  params:
    - &ref_544
      desc: The ID of the chat trigger to delete.
      name: id
      optional: false
      type: int
showchattrigger_int:
  args:
    - number
  desc: Shows details of a specific chat trigger.
  params:
    - *ref_544
showchattrigger_int_1:
  args:
    - number
  desc: Shows details of a specific chat trigger.
  params:
    - *ref_544
showchattrigger_int_2:
  args:
    - number
  desc: Shows details of a specific chat trigger.
  params:
    - *ref_544
showemojis:
  args:
    - text
  desc: Enlarges one or more specified emojis.
  params:
    - &ref_545
      desc: ''
      name: _
      optional: false
      type: string
showemojis_string:
  args:
    - text
  desc: Enlarges one or more specified emojis.
  params:
    - *ref_545
showemojis_string_1:
  args:
    - text
  desc: Enlarges one or more specified emojis.
  params:
    - *ref_545
showemojis_string_2:
  args:
    - text
  desc: Enlarges one or more specified emojis.
  params:
    - *ref_545
shrug:
  args:
    - null
  desc: Shrugs.
  params:
    - *ref_1
shrug_=:
  args:
    - null
  desc: Shrugs.
  params:
    - *ref_1
shrug_=_1:
  args:
    - null
  desc: Shrugs.
  params:
    - *ref_1
shrug_=_2:
  args:
    - null
  desc: Shrugs.
  params:
    - *ref_1
shuffle:
  args:
    - ''
  desc: Shuffles the current music queue.
  params: [ ]
shuffle_noparams:
  args:
    - ''
  desc: Shuffles the current music queue.
  params: [ ]
sj:
  args:
    - job
  desc: Stops a running job.
  params:
    - desc: The job to stop.
      name: job
      optional: false
      type: string
skip:
  args:
    - ''
  desc: Skips to the next track.
  params: [ ]
skip_noparams:
  args:
    - ''
  desc: Skips to the next track.
  params: [ ]
slap:
  args:
    - text
  desc: Slaps someone.
  params:
    - &ref_546
      desc: The person to cuddle with.
      name: toShow
      optional: false
      type: string
slap_string:
  args:
    - text
  desc: Slaps someone.
  params:
    - *ref_170
slap_string_1:
  args:
    - text
  desc: Slaps someone.
  params:
    - *ref_546
slap_string_2:
  args:
    - text
  desc: Slaps someone.
  params:
    - *ref_170
sleep:
  args:
    - null
  desc: Sleeps.
  params:
    - *ref_1
sleep_=:
  args:
    - null
  desc: Sleeps.
  params:
    - *ref_1
sleep_=_1:
  args:
    - null
  desc: Sleeps.
  params:
    - *ref_1
sleep_=_2:
  args:
    - null
  desc: Sleeps.
  params:
    - *ref_1
slot:
  args:
    - 10
  desc: Ends the game and updates the player's balance and transactions.
  params:
    - *ref_236
slot_=:
  args:
    - 10
  desc: Plays a slot machine game with a specified bet amount.
  params:
    - *ref_236
slot_=_1:
  args:
    - 10
  desc: Ends the game and updates the player's balance and transactions.
  params:
    - *ref_236
slot_=_2:
  args:
    - 10
  desc: Plays a slot machine game with a specified bet amount.
  params:
    - *ref_236
slowmode:
  args:
    - time channel
  desc: Applies or removes slowmode settings in a channel.
  params:
    - &ref_550
      desc: The duration for slowmode. Use 0 or omit to toggle or remove slowmode.
      name: time
      optional: false
      type: StoopidTime
    - &ref_549
      desc: >-
        The channel to apply slowmode to. If omitted, applies to the current
        channel.
      name: channel
      optional: false
      type: ITextChannel
slowmode_ITextChannel:
  args:
    - channel
  desc: Sets or removes the slowmode interval for a specified text channel.
  params:
    - &ref_547
      desc: The text channel to apply the slowmode settings to.
      name: channel
      optional: false
      type: ITextChannel
slowmode_ITextChannel_1:
  args:
    - channel
  desc: Execute the Slowmode command
  params:
    - *ref_547
slowmode_ITextChannel_2:
  args:
    - channel
  desc: Sets or removes the slowmode interval for a specified text channel.
  params:
    - *ref_547
slowmode_ITextChannel_3:
  args:
    - channel
  desc: Execute the Slowmode command
  params:
    - *ref_547
slowmode_StoopidTime:
  args:
    - time
  desc: Sets the slowmode interval for the current text channel.
  params:
    - &ref_548
      desc: >-
        The duration for slowmode, specified in various time formats (e.g.,
        "1m", "30s").
      name: time
      optional: false
      type: StoopidTime
slowmode_StoopidTime_1:
  args:
    - time
  desc: Execute the Slowmode command
  params:
    - *ref_548
slowmode_StoopidTime_2:
  args:
    - time
  desc: Sets the slowmode interval for the current text channel.
  params:
    - *ref_548
slowmode_StoopidTime_3:
  args:
    - time
  desc: Execute the Slowmode command
  params:
    - *ref_548
slowmode_StoopidTime_ITextChannel:
  args:
    - time channel
  desc: Execute the Slowmode command
  params:
    - *ref_548
    - *ref_549
slowmode_StoopidTime_ITextChannel_1:
  args:
    - time channel
  desc: Applies or removes slowmode settings in a channel.
  params:
    - *ref_550
    - *ref_549
slowmode_StoopidTime_ITextChannel_2:
  args:
    - time channel
  desc: Execute the Slowmode command
  params:
    - *ref_548
    - *ref_549
slowmode_noparams:
  args:
    - ''
  desc: >-
    Toggles the slowmode interval for the current text channel between off and a
    default interval.
  params: [ ]
slowmode_noparams_1:
  args:
    - ''
  desc: Execute the Slowmode command
  params: [ ]
slowmode_noparams_2:
  args:
    - ''
  desc: >-
    Toggles the slowmode interval for the current text channel between off and a
    default interval.
  params: [ ]
slowmode_noparams_3:
  args:
    - ''
  desc: Execute the Slowmode command
  params: [ ]
smile:
  args:
    - null
  desc: Smiles.
  params:
    - *ref_1
smile_=:
  args:
    - null
  desc: Smiles.
  params:
    - *ref_1
smile_=_1:
  args:
    - null
  desc: Smiles.
  params:
    - *ref_1
smile_=_2:
  args:
    - null
  desc: Smiles.
  params:
    - *ref_1
smug:
  args:
    - null
  desc: Is smug.
  params:
    - *ref_1
smug_=:
  args:
    - null
  desc: Is smug.
  params:
    - *ref_1
smug_=_1:
  args:
    - null
  desc: Is smug.
  params:
    - *ref_1
smug_=_2:
  args:
    - null
  desc: Is smug.
  params:
    - *ref_1
snipe:
  args:
    - ''
  desc: Snipes the last deleted message in the channel.
  params: [ ]
snipe_ITextChannel:
  args:
    - chan
  desc: Snipes the last deleted message in a specified channel.
  params:
    - *ref_207
snipe_ITextChannel_1:
  args:
    - chan
  desc: Snipes the last deleted message in a specified channel.
  params:
    - *ref_207
snipe_ITextChannel_2:
  args:
    - chan
  desc: Snipes the last deleted message in a specified channel.
  params:
    - *ref_207
snipe_ITextChannel_3:
  args:
    - chan
  desc: Snipes the last deleted message in a specified channel.
  params:
    - *ref_207
snipe_ITextChannel_IUser:
  args:
    - chan @user
  desc: Snipes the last deleted message by a user in a specified channel.
  params:
    - *ref_207
    - *ref_208
snipe_ITextChannel_IUser_1:
  args:
    - chan @user
  desc: Snipes the last deleted message by a user in a specified channel.
  params:
    - *ref_207
    - *ref_208
snipe_ITextChannel_IUser_2:
  args:
    - chan @user
  desc: Snipes the last deleted message by a user in a specified channel.
  params:
    - *ref_207
    - *ref_208
snipe_ITextChannel_IUser_3:
  args:
    - chan @user
  desc: Snipes the last deleted message by a user in a specified channel.
  params:
    - *ref_207
    - *ref_208
snipe_IUser:
  args:
    - '@user'
  desc: Snipes the last deleted message by a user in the current channel.
  params:
    - *ref_208
snipe_IUser_1:
  args:
    - '@user'
  desc: Snipes the last deleted message by a user in the current channel.
  params:
    - *ref_208
snipe_IUser_2:
  args:
    - '@user'
  desc: Snipes the last deleted message by a user in the current channel.
  params:
    - *ref_208
snipe_IUser_3:
  args:
    - '@user'
  desc: Snipes the last deleted message by a user in the current channel.
  params:
    - *ref_208
snipe_noparams:
  args:
    - ''
  desc: Snipes the last deleted message in the channel.
  params: [ ]
snipe_noparams_1:
  args:
    - ''
  desc: Snipes the last deleted message in the channel.
  params: [ ]
snipe_noparams_2:
  args:
    - ''
  desc: Snipes the last deleted message in the channel.
  params: [ ]
snipelist:
  args:
    - 5
  desc: Gets the last x amount of deleted messages in a channel.
  params:
    - *ref_209
snipelist_=:
  args:
    - 5
  desc: Gets the last x amount of deleted messages in a channel.
  params:
    - *ref_209
snipelist_=_1:
  args:
    - 5
  desc: Gets the last x amount of deleted messages in a channel.
  params:
    - *ref_209
snipelist_=_2:
  args:
    - 5
  desc: Gets the last x amount of deleted messages in a channel.
  params:
    - *ref_209
snipelist_ITextChannel_=:
  args:
    - channel 5
    - channel
  desc: Gets the last x amount of deleted messages in a channel.
  params:
    - *ref_210
    - *ref_209
snipelist_ITextChannel_=_1:
  args:
    - channel 5
    - channel
  desc: Gets the last x amount of deleted messages in a channel.
  params:
    - *ref_210
    - *ref_209
snipelist_ITextChannel_=_2:
  args:
    - channel 5
    - channel
  desc: Gets the last x amount of deleted messages in a channel.
  params:
    - *ref_210
    - *ref_209
snipelist_ITextChannel_=_3:
  args:
    - channel 5
    - channel
  desc: Gets the last x amount of deleted messages in a channel.
  params:
    - *ref_210
    - *ref_209
snipelist_ITextChannel_IUser_=:
  args:
    - channel @user 5
    - channel @user
    - '@user number'
  desc: Gets the last x amount of deleted messages by a user in a specified channel.
  params:
    - *ref_210
    - *ref_211
    - *ref_209
snipelist_ITextChannel_IUser_=_1:
  args:
    - channel @user 5
    - channel @user
    - '@user number'
  desc: Gets the last x amount of deleted messages by a user in a specified channel.
  params:
    - *ref_210
    - *ref_211
    - *ref_209
snipelist_ITextChannel_IUser_=_2:
  args:
    - channel @user 5
    - channel @user
    - '@user number'
  desc: Gets the last x amount of deleted messages by a user in a specified channel.
  params:
    - *ref_210
    - *ref_211
    - *ref_209
snipelist_ITextChannel_IUser_=_3:
  args:
    - channel @user 5
    - channel @user
    - '@user number'
  desc: Gets the last x amount of deleted messages by a user in a specified channel.
  params:
    - *ref_210
    - *ref_211
    - *ref_209
snipelist_IUser_=:
  args:
    - '@user 5'
    - '@user'
    - '@user number'
  desc: Gets the last x amount of deleted messages by a user in a channel.
  params:
    - *ref_211
    - *ref_209
snipelist_IUser_=_1:
  args:
    - '@user 5'
    - '@user'
    - '@user number'
  desc: Gets the last x amount of deleted messages by a user in a channel.
  params:
    - *ref_211
    - *ref_209
snipelist_IUser_=_2:
  args:
    - '@user 5'
    - '@user'
    - '@user number'
  desc: Gets the last x amount of deleted messages by a user in a channel.
  params:
    - *ref_211
    - *ref_209
snipelist_IUser_=_3:
  args:
    - '@user 5'
    - '@user'
    - '@user number'
  desc: Gets the last x amount of deleted messages by a user in a channel.
  params:
    - *ref_211
    - *ref_209
snipeset:
  args:
    - value
  desc: Enables or disables sniping of deleted messages. Default is disabled.
  params:
    - &ref_551
      desc: The value to set.
      name: value
      optional: false
      type: PermissionAction
snipeset_PermissionAction:
  args:
    - value
  desc: Enables or disables sniping of deleted messages. Default is disabled.
  params:
    - *ref_551
snipeset_PermissionAction_1:
  args:
    - value
  desc: Enables or disables sniping of deleted messages. Default is disabled.
  params:
    - *ref_551
snipeset_PermissionAction_2:
  args:
    - value
  desc: Enables or disables sniping of deleted messages. Default is disabled.
  params:
    - *ref_551
softban:
  args:
    - '@user null'
  desc: Softbans a user. Use this to kick a user and delete their messages.
  params:
    - &ref_552
      desc: The user to softban
      name: user
      optional: true
      type: IGuildUser
    - *ref_1
softban_IGuildUser_=:
  args:
    - '@user null'
  desc: Softbans a user. Use this to kick a user and delete their messages.
  params:
    - *ref_552
    - *ref_1
softban_IGuildUser_=_1:
  args:
    - '@user null'
  desc: Softbans a user. Use this to kick a user and delete their messages.
  params:
    - *ref_552
    - *ref_1
softban_IGuildUser_=_2:
  args:
    - '@user null'
  desc: Softbans a user. Use this to kick a user and delete their messages.
  params:
    - *ref_552
    - *ref_1
softban_ulong_=:
  args:
    - userid null
    - userid
  desc: Softbans a user. Use this to kick a user and delete their messages.
  params:
    - &ref_553
      desc: The ID of the user to softban
      name: userId
      optional: false
      type: ulong
    - *ref_1
softban_ulong_=_1:
  args:
    - userid null
    - userid
  desc: Softbans a user. Use this to kick a user and delete their messages.
  params:
    - *ref_553
    - *ref_1
softban_ulong_=_2:
  args:
    - userid null
    - userid
  desc: Softbans a user. Use this to kick a user and delete their messages.
  params:
    - *ref_553
    - *ref_1
softban_ulong_=_3:
  args:
    - userid null
    - userid
  desc: Softbans a user. Use this to kick a user and delete their messages.
  params:
    - *ref_553
    - *ref_1
songremove:
  args:
    - number
  desc: >-
    Removes the selected track from the queue. If the selected track is the
    current track, it will be skipped. If next track is not available, the
    player will stop.
  params:
    - &ref_554
      desc: The queue number to remove.
      name: queueNumber
      optional: false
      type: int
songremove_int:
  args:
    - number
  desc: >-
    Removes the selected track from the queue. If the selected track is the
    current track, it will be skipped. If next track is not available, the
    player will stop.
  params:
    - *ref_554
source:
  args:
    - ''
  desc: Shows the source code link for the bot.
  params: [ ]
source_noparams:
  args:
    - ''
  desc: Shows the guide for the bot.
  params: [ ]
source_noparams_1:
  args:
    - ''
  desc: Shows the source code link for the bot.
  params: [ ]
source_noparams_2:
  args:
    - ''
  desc: Shows the guide for the bot.
  params: [ ]
spinwheel:
  args:
    - 0
  desc: Allows the user to spin the wheel for a chance to win or lose credits.
  params:
    - *ref_90
spinwheel_=:
  args:
    - 0
  desc: Allows the user to spin the wheel for a chance to win or lose credits.
  params:
    - *ref_90
spinwheel_=_1:
  args:
    - 0
  desc: Allows the user to spin the wheel for a chance to win or lose credits.
  params:
    - *ref_90
spinwheel_=_2:
  args:
    - 0
  desc: Allows the user to spin the wheel for a chance to win or lose credits.
  params:
    - *ref_90
sqlexec:
  args:
    - text
  desc: Executes a raw SQL command against the database.
  params:
    - &ref_555
      desc: The SQL command to execute.
      name: sql
      optional: false
      type: string
sqlexec_string:
  args:
    - text
  desc: Executes a raw SQL command against the database.
  params:
    - *ref_555
sqlexec_string_1:
  args:
    - text
  desc: Executes a raw SQL command against the database.
  params:
    - *ref_555
sqlexec_string_2:
  args:
    - text
  desc: Executes a raw SQL command against the database.
  params:
    - *ref_555
srvrcmd:
  args:
    - command action
  desc: Enables or disables a command in the server.
  params:
    - &ref_556
      desc: The command to run an action on
      name: command
      optional: false
      type: CommandOrCrInfo
    - &ref_557
      desc: Whether to disable or enable the command
      name: action
      optional: false
      type: PermissionAction
srvrcmd_CommandOrCrInfo_PermissionAction:
  args:
    - command action
  desc: Enables or disables a command in the server.
  params:
    - *ref_556
    - *ref_557
srvrcmd_CommandOrCrInfo_PermissionAction_1:
  args:
    - command action
  desc: Enables or disables a command in the server.
  params:
    - *ref_556
    - *ref_557
srvrcmd_CommandOrCrInfo_PermissionAction_2:
  args:
    - command action
  desc: Enables or disables a command in the server.
  params:
    - *ref_556
    - *ref_557
srvrfilterinv:
  args:
    - ''
  desc: Toggles the server-wide invite link filter on or off.
  params: [ ]
srvrfilterinv_noparams:
  args:
    - ''
  desc: Execute the SrvrFilterInv command
  params: [ ]
srvrfilterinv_noparams_1:
  args:
    - ''
  desc: Toggles the server-wide invite link filter on or off.
  params: [ ]
srvrfilterinv_noparams_2:
  args:
    - ''
  desc: Execute the SrvrFilterInv command
  params: [ ]
srvrfilterlin:
  args:
    - ''
  desc: Toggles the server-wide link filter on or off.
  params: [ ]
srvrfilterlin_noparams:
  args:
    - ''
  desc: Execute the SrvrFilterLin command
  params: [ ]
srvrfilterlin_noparams_1:
  args:
    - ''
  desc: Toggles the server-wide link filter on or off.
  params: [ ]
srvrfilterlin_noparams_2:
  args:
    - ''
  desc: Execute the SrvrFilterLin command
  params: [ ]
srvrfilterwords:
  args:
    - ''
  desc: Toggles the server-wide word filter on or off.
  params: [ ]
srvrfilterwords_noparams:
  args:
    - ''
  desc: Execute the SrvrFilterWords command
  params: [ ]
srvrfilterwords_noparams_1:
  args:
    - ''
  desc: Toggles the server-wide word filter on or off.
  params: [ ]
srvrfilterwords_noparams_2:
  args:
    - ''
  desc: Execute the SrvrFilterWords command
  params: [ ]
srvrmdl:
  args:
    - module action
  desc: Adds or removes server-level permissions for a specific module.
  params:
    - *ref_121
    - *ref_61
srvrmdl_ModuleOrCrInfo_PermissionAction:
  args:
    - module action
  desc: Adds or removes server-level permissions for a specific module.
  params:
    - *ref_121
    - *ref_61
srvrmdl_ModuleOrCrInfo_PermissionAction_1:
  args:
    - module action
  desc: Adds or removes server-level permissions for a specific module.
  params:
    - *ref_121
    - *ref_61
srvrmdl_ModuleOrCrInfo_PermissionAction_2:
  args:
    - module action
  desc: Adds or removes server-level permissions for a specific module.
  params:
    - *ref_121
    - *ref_61
staffrole:
  args:
    - null
  desc: Sets or updates the role assigned to staff members.
  params:
    - *ref_1
staffrole_=:
  args:
    - null
  desc: Sets or updates the role assigned to staff members.
  params:
    - *ref_1
staffrole_=_1:
  args:
    - null
  desc: Sets or updates the role assigned to staff members.
  params:
    - *ref_1
staffrole_=_2:
  args:
    - null
  desc: Sets or updates the role assigned to staff members.
  params:
    - *ref_1
staffroledisable:
  args:
    - ''
  desc: Disables the role assigned to staff members.
  params: [ ]
staffroledisable_noparams:
  args:
    - ''
  desc: Disables the role assigned to staff members.
  params: [ ]
staffroledisable_noparams_1:
  args:
    - ''
  desc: Disables the role assigned to staff members.
  params: [ ]
staffroledisable_noparams_2:
  args:
    - ''
  desc: Disables the role assigned to staff members.
  params: [ ]
stand:
  args:
    - ''
  desc: Stands and ends the player's turn, handling the dealer's turn.
  params: [ ]
stand_noparams:
  args:
    - ''
  desc: Stands and ends the player's turn, handling the dealer's turn.
  params: [ ]
stand_noparams_1:
  args:
    - ''
  desc: Stands and ends the player's turn, handling the dealer's turn.
  params: [ ]
stand_noparams_2:
  args:
    - ''
  desc: Stands and ends the player's turn, handling the dealer's turn.
  params: [ ]
starboardallowbots:
  args:
    - number true|false
  desc: Sets whether bots are allowed to be counted for a specific starboard.
  params:
    - *ref_415
    - &ref_558
      desc: Whether to allow bots to be counted.
      name: enabled
      optional: false
      type: bool
starboardallowbots_int_bool:
  args:
    - number true|false
  desc: Sets whether bots are allowed to be counted for a specific starboard.
  params:
    - *ref_415
    - &ref_559
      desc: Whether to remove posts when reactions are cleared.
      name: enabled
      optional: false
      type: bool
starboardallowbots_int_bool_1:
  args:
    - number true|false
  desc: Sets whether bots are allowed to be counted for a specific starboard.
  params:
    - *ref_415
    - *ref_558
starboardallowbots_int_bool_2:
  args:
    - number true|false
  desc: Sets whether bots are allowed to be counted for a specific starboard.
  params:
    - *ref_415
    - *ref_559
starboardchtoggle:
  args:
    - number channel
  desc: Toggles whether a channel is checked for a specific starboard.
  params:
    - *ref_415
    - &ref_560
      desc: The channel to toggle.
      name: channel
      optional: false
      type: ITextChannel
starboardchtoggle_int_ITextChannel:
  args:
    - number channel
  desc: Toggles whether a channel is checked for a specific starboard.
  params:
    - *ref_415
    - *ref_560
starboardchtoggle_int_ITextChannel_1:
  args:
    - number channel
  desc: Toggles whether a channel is checked for a specific starboard.
  params:
    - *ref_415
    - *ref_560
starboardchtoggle_int_ITextChannel_2:
  args:
    - number channel
  desc: Toggles whether a channel is checked for a specific starboard.
  params:
    - *ref_415
    - *ref_560
starboardremoveonbelowthreshold:
  args:
    - number true|false
  desc: Sets whether to remove starboard posts when they fall below the threshold.
  params:
    - *ref_415
    - &ref_561
      desc: Whether to remove posts when they fall below threshold.
      name: enabled
      optional: false
      type: bool
starboardremoveonbelowthreshold_int_bool:
  args:
    - number true|false
  desc: Sets whether to remove starboard posts when they fall below the threshold.
  params:
    - *ref_415
    - *ref_561
starboardremoveonbelowthreshold_int_bool_1:
  args:
    - number true|false
  desc: Sets whether to remove starboard posts when they fall below the threshold.
  params:
    - *ref_415
    - *ref_561
starboardremoveonbelowthreshold_int_bool_2:
  args:
    - number true|false
  desc: Sets whether to remove starboard posts when they fall below the threshold.
  params:
    - *ref_415
    - *ref_561
starboardremoveondelete:
  args:
    - number true|false
  desc: Sets whether to remove starboard posts when the original message is deleted.
  params:
    - *ref_415
    - &ref_562
      desc: Whether to remove posts when the original message is deleted.
      name: enabled
      optional: false
      type: bool
starboardremoveondelete_int_bool:
  args:
    - number true|false
  desc: Sets whether to remove starboard posts when the original message is deleted.
  params:
    - *ref_415
    - *ref_561
starboardremoveondelete_int_bool_1:
  args:
    - number true|false
  desc: Sets whether to remove starboard posts when the original message is deleted.
  params:
    - *ref_415
    - *ref_562
starboardremoveondelete_int_bool_2:
  args:
    - number true|false
  desc: Sets whether to remove starboard posts when the original message is deleted.
  params:
    - *ref_415
    - *ref_561
starboardremoveonreactionsclear:
  args:
    - number true|false
  desc: Sets whether to remove starboard posts when reactions are cleared.
  params:
    - *ref_415
    - *ref_559
starboardremoveonreactionsclear_int_bool:
  args:
    - number true|false
  desc: Sets whether to remove starboard posts when reactions are cleared.
  params:
    - *ref_415
    - *ref_559
starboardremoveonreactionsclear_int_bool_1:
  args:
    - number true|false
  desc: Sets whether to remove starboard posts when reactions are cleared.
  params:
    - *ref_415
    - *ref_559
starboardremoveonreactionsclear_int_bool_2:
  args:
    - number true|false
  desc: Sets whether to remove starboard posts when reactions are cleared.
  params:
    - *ref_415
    - *ref_559
starboardstats:
  args:
    - ''
  desc: Shows starboard statistics for the guild.
  params: [ ]
starboarduserstats:
  args:
    - '@user'
    - ''
  desc: Shows starboard statistics for a specific user.
  params:
    - desc: The user to show stats for. Defaults to command invoker.
      name: user
      optional: true
      type: IUser
starboardwlmode:
  args:
    - number whitelist|wl|white
    - whitelist
    - wl
    - white
  desc: Sets the whitelist/blacklist mode for a starboard configuration.
  params:
    - *ref_415
    - &ref_563
      desc: >-
        The whitelist/blacklist mode to set. Possible values: Whitelist, Wl,
        White, Blacklist, Bl, Black
      name: mode
      optional: false
      type: WhitelistMode
starboardwlmode_int_WhitelistMode:
  args:
    - number whitelist|wl|white
    - whitelist
    - wl
    - white
  desc: Sets the whitelist/blacklist mode for a starboard configuration.
  params:
    - *ref_415
    - *ref_563
starboardwlmode_int_WhitelistMode_1:
  args:
    - number whitelist|wl|white
    - whitelist
    - wl
    - white
  desc: Sets the whitelist/blacklist mode for a starboard configuration.
  params:
    - *ref_415
    - *ref_563
starboardwlmode_int_WhitelistMode_2:
  args:
    - number whitelist|wl|white
    - whitelist
    - wl
    - white
  desc: Sets the whitelist/blacklist mode for a starboard configuration.
  params:
    - *ref_415
    - *ref_563
stare:
  args:
    - null
  desc: Stares.
  params:
    - *ref_1
stare_=:
  args:
    - null
  desc: Stares.
  params:
    - *ref_1
stare_=_1:
  args:
    - null
  desc: Stares.
  params:
    - *ref_1
stare_=_2:
  args:
    - null
  desc: Stares.
  params:
    - *ref_1
startupcommandadd:
  args:
    - text
  desc: Adds a new startup command to be executed when the bot starts.
  params:
    - &ref_564
      desc: The text of the command to add, excluding the prefix.
      name: cmdText
      optional: false
      type: string
startupcommandadd_string:
  args:
    - text
  desc: Adds a new startup command to be executed when the bot starts.
  params:
    - *ref_564
startupcommandadd_string_1:
  args:
    - text
  desc: Adds a new startup command to be executed when the bot starts.
  params:
    - *ref_564
startupcommandadd_string_2:
  args:
    - text
  desc: Adds a new startup command to be executed when the bot starts.
  params:
    - *ref_564
startupcommandremove:
  args:
    - number
  desc: Removes a startup command based on its index.
  params:
    - *ref_94
startupcommandremove_int:
  args:
    - number
  desc: Removes a startup command based on its index.
  params:
    - *ref_94
startupcommandremove_int_1:
  args:
    - number
  desc: Removes a startup command based on its index.
  params:
    - *ref_94
startupcommandremove_int_2:
  args:
    - number
  desc: Removes a startup command based on its index.
  params:
    - *ref_94
startupcommandsclear:
  args:
    - ''
  desc: Clears all startup commands for the guild.
  params: [ ]
startupcommandsclear_noparams:
  args:
    - ''
  desc: Clears all startup commands for the guild.
  params: [ ]
startupcommandsclear_noparams_1:
  args:
    - ''
  desc: Clears all startup commands for the guild.
  params: [ ]
startupcommandsclear_noparams_2:
  args:
    - ''
  desc: Clears all startup commands for the guild.
  params: [ ]
startupcommandslist:
  args:
    - 1
  desc: Lists the startup commands configured for the guild.
  params:
    - *ref_95
startupcommandslist_=:
  args:
    - 1
  desc: Lists the startup commands configured for the guild.
  params:
    - *ref_95
startupcommandslist_=_1:
  args:
    - 1
  desc: Lists the startup commands configured for the guild.
  params:
    - *ref_95
startupcommandslist_=_2:
  args:
    - 1
  desc: Lists the startup commands configured for the guild.
  params:
    - *ref_95
stats:
  args:
    - ''
  desc: Shows the bot's stats.
  params: [ ]
stats_noparams:
  args:
    - ''
  desc: Shows the bot's stats.
  params: [ ]
stats_noparams_1:
  args:
    - ''
  desc: Shows the bot's stats.
  params: [ ]
stats_noparams_2:
  args:
    - ''
  desc: Shows the bot's stats.
  params: [ ]
steal:
  args:
    - emotes
  desc: Steals emotes from other servers.
  params:
    - desc: Space-separated list of emote URLs or emote names.
      name: e
      optional: false
      type: string
stealemotes:
  args:
    - text
  desc: Steals emotes from a message and adds them to the server.
  params:
    - &ref_565
      desc: The message containing the emotes to steal.
      name: e
      optional: false
      type: string
stealemotes_string:
  args:
    - text
  desc: Steals emotes from a message and adds them to the server.
  params:
    - *ref_565
stealforrole:
  args:
    - '@role text'
  desc: Steals emotes from a message and locks them to a specified role.
  params:
    - &ref_566
      desc: The role to add the emotes to.
      name: role
      optional: false
      type: IRole
    - *ref_565
stealforrole_IRole_string:
  args:
    - '@role text'
  desc: Steals emotes from a message and locks them to a specified role.
  params:
    - *ref_566
    - *ref_565
steam:
  args:
    - text
  desc: >-
    Searches for a game on Steam by name and provides a link to its Steam Store
    page.
  params:
    - &ref_567
      desc: The name of the game to search for on Steam.
      name: query
      optional: false
      type: string
steam_string:
  args:
    - text
  desc: Execute the Steam command
  params:
    - *ref_567
steam_string_1:
  args:
    - text
  desc: >-
    Searches for a game on Steam by name and provides a link to its Steam Store
    page.
  params:
    - *ref_567
steam_string_2:
  args:
    - text
  desc: Execute the Steam command
  params:
    - *ref_567
stereowiden:
  args:
    - true
  desc: Applies a stereo widening effect to enhance the spatial soundstage.
  params:
    - *ref_57
stereowiden_=:
  args:
    - true
  desc: Applies a stereo widening effect to enhance the spatial soundstage.
  params:
    - *ref_57
stereowiden_=_1:
  args:
    - true
  desc: Applies a stereo widening effect to enhance the spatial soundstage.
  params:
    - *ref_57
stereowiden_=_2:
  args:
    - true
  desc: Applies a stereo widening effect to enhance the spatial soundstage.
  params:
    - *ref_57
stfu:
  args:
    - time @user
    - time
  desc: Whats there not to understand? Shuts a user the fuck up.
  params:
    - &ref_569
      desc: For how long to shut a user the fuck up for.
      name: time
      optional: false
      type: StoopidTime
    - &ref_568
      desc: The user to shut up
      name: user
      optional: true
      type: IGuildUser
stfu_IGuildUser_=:
  args:
    - '@user null'
  desc: Whats there not to understand? Shuts a user the fuck up.
  params:
    - *ref_568
    - *ref_1
stfu_IGuildUser_=_1:
  args:
    - '@user null'
  desc: Whats there not to understand? Shuts a user the fuck up.
  params:
    - *ref_568
    - *ref_1
stfu_IGuildUser_=_2:
  args:
    - '@user null'
  desc: Whats there not to understand? Shuts a user the fuck up.
  params:
    - *ref_568
    - *ref_1
stfu_IGuildUser_=_3:
  args:
    - '@user null'
  desc: Whats there not to understand? Shuts a user the fuck up.
  params:
    - *ref_568
    - *ref_1
stfu_StoopidTime_IGuildUser:
  args:
    - time @user
    - time
  desc: Whats there not to understand? Shuts a user the fuck up.
  params:
    - *ref_569
    - *ref_568
stfu_StoopidTime_IGuildUser_1:
  args:
    - time @user
    - time
  desc: Module for moderation commands.
  params:
    - *ref_569
    - *ref_568
stfu_StoopidTime_IGuildUser_2:
  args:
    - time @user
    - time
  desc: Module for muting and unmuting users.
  params:
    - *ref_569
    - *ref_568
stopjob:
  args:
    - number
  desc: Stops a mass role operation job by its job number.
  params:
    - &ref_570
      desc: The job number of the mass role operation to stop.
      name: jobnum
      optional: false
      type: int
stopjob_int:
  args:
    - number
  desc: Stops a mass role operation job by its job number.
  params:
    - *ref_570
stopjob_int_1:
  args:
    - number
  desc: Stops a mass role operation job by its job number.
  params:
    - *ref_570
stopjob_int_2:
  args:
    - number
  desc: Stops a mass role operation job by its job number.
  params:
    - *ref_570
streamadd:
  args:
    - text
  desc: Adds a new stream to the notification list for the current guild.
  params:
    - &ref_571
      desc: The link to the stream to be added.
      name: link
      optional: false
      type: string
streamadd_string:
  args:
    - text
  desc: Execute the StreamAdd command
  params:
    - *ref_571
streamadd_string_1:
  args:
    - text
  desc: Contains commands for managing stream notifications within a Discord guild.
  params:
    - *ref_571
streamadd_string_2:
  args:
    - text
  desc: Execute the StreamAdd command
  params:
    - *ref_571
streamcheck:
  args:
    - text
  desc: Checks the live status of a stream by its URL.
  params:
    - &ref_572
      desc: The URL of the stream to check.
      name: url
      optional: false
      type: string
streamcheck_string:
  args:
    - text
  desc: Checks the live status of a stream by its URL.
  params:
    - *ref_572
streamcheck_string_1:
  args:
    - text
  desc: Checks the live status of a stream by its URL.
  params:
    - *ref_572
streamcheck_string_2:
  args:
    - text
  desc: Checks the live status of a stream by its URL.
  params:
    - *ref_572
streamlist:
  args:
    - ''
  desc: Lists all streams currently followed by the guild.
  params: [ ]
streamlist_noparams:
  args:
    - ''
  desc: Lists all streams currently followed by the guild.
  params: [ ]
streamlist_noparams_1:
  args:
    - ''
  desc: Lists all streams currently followed by the guild.
  params: [ ]
streamlist_noparams_2:
  args:
    - ''
  desc: Lists all streams currently followed by the guild.
  params: [ ]
streammessage:
  args:
    - number text
  desc: >-
    Sets a custom notification message for a specific stream in the guild's
    notification list.
  params:
    - &ref_573
      desc: The 1-based index of the stream to set the message for.
      name: index
      optional: false
      type: int
    - &ref_574
      desc: >-
        /// The custom message to be sent when the stream goes live. An empty
        message will reset it to /// default. ///
      name: message
      optional: false
      type: string
streammessage_int_string:
  args:
    - number text
  desc: Execute the StreamMessage command
  params:
    - *ref_573
    - *ref_574
streammessage_int_string_1:
  args:
    - number text
  desc: >-
    Sets a custom notification message for a specific stream in the guild's
    notification list.
  params:
    - *ref_573
    - *ref_574
streammessage_int_string_2:
  args:
    - number text
  desc: Execute the StreamMessage command
  params:
    - *ref_573
    - *ref_574
streamoffline:
  args:
    - ''
  desc: >-
    Toggles the setting for notifying the guild when a followed stream goes
    offline.
  params: [ ]
streamoffline_noparams:
  args:
    - ''
  desc: >-
    Toggles the setting for notifying the guild when a followed stream goes
    offline.
  params: [ ]
streamoffline_noparams_1:
  args:
    - ''
  desc: >-
    Toggles the setting for notifying the guild when a followed stream goes
    offline.
  params: [ ]
streamoffline_noparams_2:
  args:
    - ''
  desc: >-
    Toggles the setting for notifying the guild when a followed stream goes
    offline.
  params: [ ]
streamofflinemessage:
  args:
    - number
    - text
  desc: Sets the offline message for a specific stream.
  params:
    - desc: The 1-based index of the stream.
      name: index
      optional: false
      type: int
    - desc: The offline message template with placeholders.
      name: message
      optional: false
      type: string
streamremove:
  args:
    - number
  desc: Removes a stream from the notification list based on its index.
  params:
    - &ref_575
      desc: The 1-based index of the stream in the notification list to be removed.
      name: index
      optional: false
      type: int
streamremove_int:
  args:
    - number
  desc: Execute the StreamRemove command
  params:
    - *ref_575
streamremove_int_1:
  args:
    - number
  desc: Removes a stream from the notification list based on its index.
  params:
    - *ref_575
streamremove_int_2:
  args:
    - number
  desc: Execute the StreamRemove command
  params:
    - *ref_575
streamrole:
  args:
    - '@role @role'
  desc: >-
    Sets a stream role for users in the server. When users start streaming, they
    are automatically assigned a specific role.
  params:
    - &ref_576
      desc: The role to monitor for streaming activity.
      name: fromRole
      optional: false
      type: IRole
    - &ref_577
      desc: The role to assign to users who start streaming.
      name: addRole
      optional: false
      type: IRole
streamrole_IRole_IRole:
  args:
    - '@role @role'
  desc: >-
    Sets a stream role for users in the server. When users start streaming, they
    are automatically assigned a specific role.
  params:
    - *ref_576
    - *ref_577
streamrole_IRole_IRole_1:
  args:
    - '@role @role'
  desc: Contains commands related to stream roles in Discord servers.
  params:
    - *ref_576
    - *ref_577
streamrole_IRole_IRole_2:
  args:
    - '@role @role'
  desc: >-
    Sets a stream role for users in the server. When users start streaming, they
    are automatically assigned a specific role.
  params:
    - *ref_576
    - *ref_577
streamrole_noparams:
  args:
    - ''
  desc: Disables the stream role feature in the server.
  params: [ ]
streamrole_noparams_1:
  args:
    - ''
  desc: Disables the stream role feature in the server.
  params: [ ]
streamrole_noparams_2:
  args:
    - ''
  desc: Disables the stream role feature in the server.
  params: [ ]
streamrole_noparams_3:
  args:
    - ''
  desc: Disables the stream role feature in the server.
  params: [ ]
streamroleblacklist:
  args:
    - action @user
  desc: Adds or removes a user to/from the blacklist for the stream role feature.
  params:
    - &ref_578
      desc: The action to perform (add or remove).
      name: action
      optional: false
      type: AddRemove
    - &ref_579
      desc: The user to add or remove from the list.
      name: user
      optional: false
      type: IGuildUser
streamroleblacklist_AddRemove_IGuildUser:
  args:
    - action @user
  desc: Adds or removes a user to/from the blacklist for the stream role feature.
  params:
    - *ref_578
    - *ref_579
streamroleblacklist_AddRemove_IGuildUser_1:
  args:
    - action @user
  desc: Adds or removes a user to/from the blacklist for the stream role feature.
  params:
    - *ref_578
    - *ref_579
streamroleblacklist_AddRemove_IGuildUser_2:
  args:
    - action @user
  desc: Adds or removes a user to/from the blacklist for the stream role feature.
  params:
    - *ref_578
    - *ref_579
streamrolekeyword:
  args:
    - null
  desc: >-
    Sets a keyword for the stream role feature. Only users with streams
    containing this keyword will receive the stream role.
  params:
    - *ref_1
streamrolekeyword_=:
  args:
    - null
  desc: >-
    Sets a keyword for the stream role feature. Only users with streams
    containing this keyword will receive the stream role.
  params:
    - *ref_1
streamrolekeyword_=_1:
  args:
    - null
  desc: >-
    Sets a keyword for the stream role feature. Only users with streams
    containing this keyword will receive the stream role.
  params:
    - *ref_1
streamrolekeyword_=_2:
  args:
    - null
  desc: >-
    Sets a keyword for the stream role feature. Only users with streams
    containing this keyword will receive the stream role.
  params:
    - *ref_1
streamrolewhitelist:
  args:
    - action @user
  desc: Adds or removes a user to/from the whitelist for the stream role feature.
  params:
    - *ref_578
    - *ref_579
streamrolewhitelist_AddRemove_IGuildUser:
  args:
    - action @user
  desc: Adds or removes a user to/from the whitelist for the stream role feature.
  params:
    - *ref_578
    - *ref_579
streamrolewhitelist_AddRemove_IGuildUser_1:
  args:
    - action @user
  desc: Adds or removes a user to/from the whitelist for the stream role feature.
  params:
    - *ref_578
    - *ref_579
streamrolewhitelist_AddRemove_IGuildUser_2:
  args:
    - action @user
  desc: Adds or removes a user to/from the whitelist for the stream role feature.
  params:
    - *ref_578
    - *ref_579
streamsclear:
  args:
    - ''
  desc: Clears all streams from the guild's notification list.
  params: [ ]
streamsclear_noparams:
  args:
    - ''
  desc: Clears all streams from the guild's notification list.
  params: [ ]
streamsclear_noparams_1:
  args:
    - ''
  desc: Clears all streams from the guild's notification list.
  params: [ ]
streamsclear_noparams_2:
  args:
    - ''
  desc: Clears all streams from the guild's notification list.
  params: [ ]
streamtemplate:
  args:
    - text
  desc: >-
    Sets or shows the custom stream notification message template for all
    streams in the guild.
  params:
    - desc: >-
        The custom message template with placeholders. Leave empty to show
        current template, use "reset" to disable custom messages.
      name: template
      optional: true
      type: string
stringsreload:
  args:
    - ''
  desc: Initiates the reloading of bot strings (localizations).
  params: [ ]
stringsreload_noparams:
  args:
    - ''
  desc: Initiates the reloading of bot strings (localizations).
  params: [ ]
stringsreload_noparams_1:
  args:
    - ''
  desc: Initiates the reloading of bot strings (localizations).
  params: [ ]
stringsreload_noparams_2:
  args:
    - ''
  desc: Initiates the reloading of bot strings (localizations).
  params: [ ]
sudo:
  args:
    - '@user text'
  desc: Executes a command as if it were sent by the specified guild user.
  params:
    - &ref_580
      desc: The guild user to impersonate when executing the command.
      name: user
      optional: false
      type: IGuildUser
    - &ref_581
      desc: The command string to execute, including command name and arguments.
      name: args
      optional: false
      type: string
sudo_IGuildUser_string:
  args:
    - '@user text'
  desc: Execute the Sudo command
  params:
    - *ref_580
    - *ref_581
sudo_IGuildUser_string_1:
  args:
    - '@user text'
  desc: Executes a command as if it were sent by the specified guild user.
  params:
    - *ref_580
    - *ref_581
sudo_IGuildUser_string_2:
  args:
    - '@user text'
  desc: Execute the Sudo command
  params:
    - *ref_580
    - *ref_581
sudo_string:
  args:
    - text
  desc: Executes a command as if it were sent by the owner of the guild.
  params:
    - *ref_581
sudo_string_1:
  args:
    - text
  desc: Execute the Sudo command
  params:
    - *ref_581
sudo_string_2:
  args:
    - text
  desc: Executes a command as if it were sent by the owner of the guild.
  params:
    - *ref_581
sudo_string_3:
  args:
    - text
  desc: Execute the Sudo command
  params:
    - *ref_581
suggest:
  args:
    - text
  desc: Submits a new suggestion to the designated suggestion channel.
  params:
    - &ref_582
      desc: The content of the suggestion to be submitted.
      name: suggestion
      optional: false
      type: string
suggest_string:
  args:
    - text
  desc: Submits a new suggestion to the designated suggestion channel.
  params:
    - *ref_582
suggest_string_1:
  args:
    - text
  desc: Submits a new suggestion to the designated suggestion channel.
  params:
    - *ref_582
suggest_string_2:
  args:
    - text
  desc: Submits a new suggestion to the designated suggestion channel.
  params:
    - *ref_582
suggestbuttonchannel:
  args:
    - channel
  desc: Sets the suggestion button channel.
  params:
    - &ref_583
      desc: The channel to set as the suggestion button channel.
      name: channel
      optional: false
      type: ITextChannel
suggestbuttonchannel_ITextChannel:
  args:
    - channel
  desc: Sets the suggestion button channel.
  params:
    - *ref_583
suggestbuttonchannel_ITextChannel_1:
  args:
    - channel
  desc: Sets the suggestion button channel.
  params:
    - *ref_583
suggestbuttonchannel_ITextChannel_2:
  args:
    - channel
  desc: Sets the suggestion button channel.
  params:
    - *ref_583
suggestbuttoncolor:
  args:
    - blurple|blue|grey
    - blurple
    - blue
    - grey
  desc: Sets the color of the suggestion button.
  params:
    - &ref_584
      desc: >-
        The color type for the suggestion button. Possible values: Blurple,
        Blue, Grey, Gray, Green, Red
      name: type
      optional: false
      type: ButtonType
suggestbuttoncolor_ButtonType:
  args:
    - blurple|blue|grey
    - blurple
    - blue
    - grey
  desc: Sets the color of the suggestion button.
  params:
    - &ref_585
      desc: >-
        The color type to apply to the button. Possible values: Blurple, Blue,
        Grey, Gray, Green, Red
      name: type
      optional: false
      type: ButtonType
suggestbuttoncolor_ButtonType_1:
  args:
    - blurple|blue|grey
    - blurple
    - blue
    - grey
  desc: Sets the color of the suggestion button.
  params:
    - *ref_584
suggestbuttoncolor_ButtonType_2:
  args:
    - blurple|blue|grey
    - blurple
    - blue
    - grey
  desc: Sets the color of the suggestion button.
  params:
    - *ref_585
suggestbuttonemote:
  args:
    - null
  desc: Sets the emote for the suggest button.
  params:
    - *ref_1
suggestbuttonemote_=:
  args:
    - null
  desc: Sets the emote for the suggest button.
  params:
    - *ref_1
suggestbuttonemote_=_1:
  args:
    - null
  desc: Sets the emote for the suggest button.
  params:
    - *ref_1
suggestbuttonemote_=_2:
  args:
    - null
  desc: Sets the emote for the suggest button.
  params:
    - *ref_1
suggestbuttonlabel:
  args:
    - text
  desc: Sets the label for the suggest button.
  params:
    - &ref_586
      desc: The label text for the suggest button. Use "-" to reset to default.
      name: toSet
      optional: false
      type: string
suggestbuttonlabel_string:
  args:
    - text
  desc: Sets the label for the suggest button.
  params:
    - *ref_586
suggestbuttonlabel_string_1:
  args:
    - text
  desc: Sets the label for the suggest button.
  params:
    - *ref_586
suggestbuttonlabel_string_2:
  args:
    - text
  desc: Sets the label for the suggest button.
  params:
    - *ref_586
suggestbuttonmessage:
  args:
    - text
  desc: Sets or updates the suggest button message.
  params:
    - &ref_587
      desc: The message to set for the suggest button. Use "-" to reset to default.
      name: toSet
      optional: true
      type: string
suggestbuttonmessage_string:
  args:
    - text
  desc: Sets or updates the suggest button message.
  params:
    - *ref_587
suggestbuttonmessage_string_1:
  args:
    - text
  desc: Sets or updates the suggest button message.
  params:
    - *ref_587
suggestbuttonmessage_string_2:
  args:
    - text
  desc: Sets or updates the suggest button message.
  params:
    - *ref_587
suggestclear:
  args:
    - ''
  desc: Clears all suggestions from the server.
  params: [ ]
suggestclear_noparams:
  args:
    - ''
  desc: Clears all suggestions from the server.
  params: [ ]
suggestclear_noparams_1:
  args:
    - ''
  desc: Clears all suggestions from the server.
  params: [ ]
suggestclear_noparams_2:
  args:
    - ''
  desc: Clears all suggestions from the server.
  params: [ ]
suggestinfo:
  args:
    - num
  desc: Provides detailed information about a specific suggestion.
  params:
    - &ref_588
      desc: The unique number (ID) of the suggestion to retrieve information for.
      name: num
      optional: false
      type: ulong
suggestinfo_ulong:
  args:
    - num
  desc: Provides detailed information about a specific suggestion.
  params:
    - *ref_588
suggestinfo_ulong_1:
  args:
    - num
  desc: Provides detailed information about a specific suggestion.
  params:
    - *ref_588
suggestinfo_ulong_2:
  args:
    - num
  desc: Provides detailed information about a specific suggestion.
  params:
    - *ref_588
suggestmessage:
  args:
    - text
  desc: Sets or updates the suggestion message.
  params:
    - *ref_2
suggestmessage_string:
  args:
    - text
  desc: Sets or updates the suggestion message.
  params:
    - *ref_2
suggestmessage_string_1:
  args:
    - text
  desc: Defines the color options for suggestion buttons.
  params:
    - desc: ''
      name: embed
      optional: false
      type: string
suggestmessage_string_2:
  args:
    - text
  desc: Sets or updates the suggestion message.
  params:
    - *ref_2
suggestmotecolor:
  args:
    - number blurple|blue|grey
    - blurple
    - blue
    - grey
  desc: Sets the color of specific emote buttons on suggestions.
  params:
    - &ref_589
      desc: The button number to change.
      name: num
      optional: false
      type: int
    - *ref_585
suggestmotecolor_int_ButtonType:
  args:
    - number blurple|blue|grey
    - blurple
    - blue
    - grey
  desc: Sets the color of specific emote buttons on suggestions.
  params:
    - *ref_589
    - *ref_585
suggestmotecolor_int_ButtonType_1:
  args:
    - number blurple|blue|grey
    - blurple
    - blue
    - grey
  desc: Sets the color of specific emote buttons on suggestions.
  params:
    - *ref_589
    - *ref_585
suggestmotecolor_int_ButtonType_2:
  args:
    - number blurple|blue|grey
    - blurple
    - blue
    - grey
  desc: Sets the color of specific emote buttons on suggestions.
  params:
    - *ref_589
    - *ref_585
suggestmotes:
  args:
    - null
  desc: Configures the custom emotes used for suggestions.
  params:
    - *ref_1
suggestmotes_=:
  args:
    - null
  desc: Execute the SuggestMotes command
  params:
    - *ref_1
suggestmotes_=_1:
  args:
    - null
  desc: Configures the custom emotes used for suggestions.
  params:
    - *ref_1
suggestmotes_=_2:
  args:
    - null
  desc: Execute the SuggestMotes command
  params:
    - *ref_1
suggestmotesmode:
  args:
    - reactions|buttons
    - reactions
    - buttons
  desc: Sets the mode for suggestion emotes, either as reactions or buttons.
  params:
    - &ref_590
      desc: >-
        The mode to use for suggestion emotes. Possible values: Reactions,
        Buttons
      name: mode
      optional: false
      type: SuggestEmoteModeEnum
suggestmotesmode_SuggestEmoteModeEnum:
  args:
    - reactions|buttons
    - reactions
    - buttons
  desc: Sets the mode for suggestion emotes, either as reactions or buttons.
  params:
    - *ref_590
suggestmotesmode_SuggestEmoteModeEnum_1:
  args:
    - reactions|buttons
    - reactions
    - buttons
  desc: Sets the mode for suggestion emotes, either as reactions or buttons.
  params:
    - *ref_590
suggestmotesmode_SuggestEmoteModeEnum_2:
  args:
    - reactions|buttons
    - reactions
    - buttons
  desc: Sets the mode for suggestion emotes, either as reactions or buttons.
  params:
    - *ref_590
suggestthreadstype:
  args:
    - none|public|private
    - none
    - public
    - private
  desc: Sets the type of threads used in suggestions.
  params:
    - &ref_591
      desc: >-
        The type of thread to use for new suggestions. Possible values: None,
        Public, Private
      name: type
      optional: false
      type: SuggestThreadType
suggestthreadstype_SuggestThreadType:
  args:
    - none|public|private
    - none
    - public
    - private
  desc: Sets the type of threads used in suggestions.
  params:
    - *ref_591
suggestthreadstype_SuggestThreadType_1:
  args:
    - none|public|private
    - none
    - public
    - private
  desc: Sets the type of threads used in suggestions.
  params:
    - *ref_591
suggestthreadstype_SuggestThreadType_2:
  args:
    - none|public|private
    - none
    - public
    - private
  desc: Sets the type of threads used in suggestions.
  params:
    - *ref_591
sym:
  args:
    - expression
  desc: Performs symbolic calculations.
  params:
    - desc: The expression to calculate symbolically.
      name: expression
      optional: false
      type: string
symbolic:
  args:
    - text
  desc: Performs symbolic mathematics operations.
  params:
    - &ref_592
      desc: The symbolic expression to evaluate or manipulate.
      name: expression
      optional: false
      type: string
symbolic_string:
  args:
    - text
  desc: Performs symbolic mathematics operations.
  params:
    - *ref_592
symbolic_string_1:
  args:
    - text
  desc: Performs symbolic mathematics operations.
  params:
    - *ref_592
symbolic_string_2:
  args:
    - text
  desc: Performs symbolic mathematics operations.
  params:
    - *ref_592
syncallxproles:
  args:
    - ''
  desc: Synchronizes XP roles for all users in the server.
  params: [ ]
syncmyxproles:
  args:
    - ''
  desc: Synchronizes your XP roles.
  params: [ ]
syncroletoall:
  args:
    - '@role'
  desc: >-
    Synchronizes a role's permissions to all text channels and categories within
    the guild.
  params:
    - &ref_593
      desc: The role to synchronize across the guild.
      name: role
      optional: false
      type: IRole
syncroletoall_IRole:
  args:
    - '@role'
  desc: >-
    Synchronizes a role's permissions to all text channels and categories within
    the guild.
  params:
    - *ref_593
syncroletoall_IRole_1:
  args:
    - '@role'
  desc: >-
    Synchronizes a role's permissions to all text channels and categories within
    the guild.
  params:
    - *ref_593
syncroletoall_IRole_2:
  args:
    - '@role'
  desc: >-
    Synchronizes a role's permissions to all text channels and categories within
    the guild.
  params:
    - *ref_593
syncroletoallcategories:
  args:
    - '@role'
  desc: Synchronizes a role's permissions to all categories within the guild.
  params:
    - &ref_594
      desc: The role to synchronize across categories.
      name: role
      optional: false
      type: IRole
syncroletoallcategories_IRole:
  args:
    - '@role'
  desc: Synchronizes a role's permissions to all categories within the guild.
  params:
    - *ref_594
syncroletoallcategories_IRole_1:
  args:
    - '@role'
  desc: Synchronizes a role's permissions to all categories within the guild.
  params:
    - *ref_594
syncroletoallcategories_IRole_2:
  args:
    - '@role'
  desc: Synchronizes a role's permissions to all categories within the guild.
  params:
    - *ref_594
syncroletoallchannels:
  args:
    - '@role'
  desc: Synchronizes a role's permissions to all text channels within the guild.
  params:
    - &ref_595
      desc: The role to synchronize across text channels.
      name: role
      optional: false
      type: IRole
syncroletoallchannels_IRole:
  args:
    - '@role'
  desc: Synchronizes a role's permissions to all text channels within the guild.
  params:
    - *ref_595
syncroletoallchannels_IRole_1:
  args:
    - '@role'
  desc: Synchronizes a role's permissions to all text channels within the guild.
  params:
    - *ref_595
syncroletoallchannels_IRole_2:
  args:
    - '@role'
  desc: Synchronizes a role's permissions to all text channels within the guild.
  params:
    - *ref_595
syncuserxproles:
  args:
    - '@user'
  desc: Synchronizes XP roles for a specific user.
  params:
    - desc: The user to synchronize XP roles for.
      name: user
      optional: false
      type: IGuildUser
testlevelupmessage:
  args:
    - message
  desc: Tests a level-up message template by sending it to the current channel.
  params:
    - desc: >-
        The message template to test, or leave empty to test a random custom
        message.
      name: message
      optional: true
      type: string
textrank:
  args:
    - null
  desc: >-
    Shows a user's XP information in a text format that's accessible for screen
    readers.
  params:
    - *ref_1
textrank_=:
  args:
    - null
  desc: >-
    Shows a user's XP information in a text format that's accessible for screen
    readers.
  params:
    - *ref_1
textrank_=_1:
  args:
    - null
  desc: >-
    Shows a user's XP information in a text format that's accessible for screen
    readers.
  params:
    - *ref_1
textrank_=_2:
  args:
    - null
  desc: >-
    Shows a user's XP information in a text format that's accessible for screen
    readers.
  params:
    - *ref_1
think:
  args:
    - null
  desc: Thinks.
  params:
    - *ref_1
think_=:
  args:
    - null
  desc: Thinks.
  params:
    - *ref_1
think_=_1:
  args:
    - null
  desc: Thinks.
  params:
    - *ref_1
think_=_2:
  args:
    - null
  desc: Thinks.
  params:
    - *ref_1
thumbsup:
  args:
    - null
  desc: Gives a thumbs-up.
  params:
    - *ref_1
thumbsup_=:
  args:
    - null
  desc: Gives a thumbs-up.
  params:
    - *ref_1
thumbsup_=_1:
  args:
    - null
  desc: Gives a thumbs-up.
  params:
    - *ref_1
thumbsup_=_2:
  args:
    - null
  desc: Gives a thumbs-up.
  params:
    - *ref_1
ticketaddbutton:
  args:
    - panelid text buttonstyle.primary null
    - panelid text
  desc: Adds a button to an existing ticket panel.
  params:
    - &ref_596
      desc: ''
      name: panelId
      optional: false
      type: ulong
    - &ref_597
      desc: ''
      name: label
      optional: false
      type: string
    - &ref_598
      desc: ''
      name: ButtonStyle.Primary
      optional: false
      type: '='
    - *ref_1
ticketaddbutton_ulong_string_=_=:
  args:
    - panelid text buttonstyle.primary null
    - panelid text
  desc: Adds a button to an existing ticket panel.
  params:
    - *ref_596
    - *ref_597
    - *ref_598
    - *ref_1
ticketaddbutton_ulong_string_=_=_1:
  args:
    - panelid text buttonstyle.primary null
    - panelid text
  desc: Adds a button to an existing ticket panel.
  params:
    - *ref_596
    - *ref_597
    - *ref_598
    - *ref_1
ticketaddbutton_ulong_string_=_=_2:
  args:
    - panelid text buttonstyle.primary null
    - panelid text
  desc: Adds a button to an existing ticket panel.
  params:
    - *ref_596
    - *ref_597
    - *ref_598
    - *ref_1
ticketaddpriority:
  args:
    - text text text number true|false time text
  desc: Creates a new priority level for tickets.
  params:
    - &ref_599
      desc: ''
      name: id
      optional: false
      type: string
    - *ref_159
    - &ref_600
      desc: ''
      name: emoji
      optional: false
      type: string
    - &ref_601
      desc: ''
      name: level
      optional: false
      type: int
    - &ref_602
      desc: ''
      name: pingStaff
      optional: false
      type: bool
    - &ref_603
      desc: ''
      name: responseTime
      optional: false
      type: TimeSpan
    - &ref_604
      desc: ''
      name: color
      optional: false
      type: string
ticketaddpriority_string_string_string_int_bool_TimeSpan_string:
  args:
    - text text text number true|false time text
  desc: Creates a new priority level for tickets.
  params:
    - *ref_599
    - *ref_159
    - *ref_600
    - *ref_601
    - *ref_602
    - *ref_603
    - *ref_604
ticketaddpriority_string_string_string_int_bool_TimeSpan_string_1:
  args:
    - text text text number true|false time text
  desc: Creates a new priority level for tickets.
  params:
    - *ref_599
    - *ref_159
    - *ref_600
    - *ref_601
    - *ref_602
    - *ref_603
    - *ref_604
ticketaddpriority_string_string_string_int_bool_TimeSpan_string_2:
  args:
    - text text text number true|false time text
  desc: Creates a new priority level for tickets.
  params:
    - *ref_599
    - *ref_159
    - *ref_600
    - *ref_601
    - *ref_602
    - *ref_603
    - *ref_604
ticketaddtag:
  args:
    - text text text text
  desc: Creates a new tag for tickets.
  params:
    - *ref_599
    - *ref_159
    - &ref_605
      desc: ''
      name: description
      optional: false
      type: string
    - *ref_604
ticketaddtag_string_string_string_string:
  args:
    - text text text text
  desc: Creates a new tag for tickets.
  params:
    - *ref_599
    - *ref_159
    - *ref_605
    - *ref_604
ticketaddtag_string_string_string_string_1:
  args:
    - text text text text
  desc: Creates a new tag for tickets.
  params:
    - *ref_599
    - *ref_159
    - *ref_605
    - *ref_604
ticketaddtag_string_string_string_string_2:
  args:
    - text text text text
  desc: Creates a new tag for tickets.
  params:
    - *ref_599
    - *ref_159
    - *ref_605
    - *ref_604
ticketaddtags:
  args:
    - text
  desc: Adds tags to the current ticket.
  params:
    - &ref_606
      desc: ''
      name: tags
      optional: false
      type: string[]
ticketaddtags_string[]:
  args:
    - text
  desc: Adds tags to the current ticket.
  params:
    - *ref_606
ticketaddtags_string[]_1:
  args:
    - text
  desc: Adds tags to the current ticket.
  params:
    - *ref_606
ticketaddtags_string[]_2:
  args:
    - text
  desc: Adds tags to the current ticket.
  params:
    - *ref_606
ticketarchive:
  args:
    - ''
  desc: Archives a ticket, moving it to the archive category if set.
  params: [ ]
ticketarchive_noparams:
  args:
    - ''
  desc: Archives a ticket, moving it to the archive category if set.
  params: [ ]
ticketarchive_noparams_1:
  args:
    - ''
  desc: Archives a ticket, moving it to the archive category if set.
  params: [ ]
ticketarchive_noparams_2:
  args:
    - ''
  desc: Archives a ticket, moving it to the archive category if set.
  params: [ ]
ticketarchivecategory:
  args:
    - number null
    - number
  desc: Sets the category where closed tickets will be archived.
  params:
    - *ref_277
    - *ref_1
ticketarchivecategory_int_=:
  args:
    - number null
    - number
  desc: Sets the category where closed tickets will be archived.
  params:
    - *ref_277
    - *ref_1
ticketarchivecategory_int_=_1:
  args:
    - number null
    - number
  desc: Sets the category where closed tickets will be archived.
  params:
    - *ref_277
    - *ref_1
ticketarchivecategory_int_=_2:
  args:
    - number null
    - number
  desc: Sets the category where closed tickets will be archived.
  params:
    - *ref_277
    - *ref_1
ticketautoarchive:
  args:
    - number boolean
  desc: Sets auto-archive behavior for a button
  params:
    - desc: The button ID to configure auto-archive for
      name: buttonId
      optional: false
      type: int
    - desc: Whether to enable auto-archive on close
      name: enabled
      optional: true
      type: bool
ticketautoclose:
  args:
    - number null
    - number
  desc: Sets auto-close time for a ticket type.
  params:
    - *ref_277
    - *ref_1
ticketautoclose_int_=:
  args:
    - number null
    - number
  desc: Sets auto-close time for a ticket type.
  params:
    - *ref_277
    - *ref_1
ticketautoclose_int_=_1:
  args:
    - number null
    - number
  desc: Sets auto-close time for a ticket type.
  params:
    - *ref_277
    - *ref_1
ticketautoclose_int_=_2:
  args:
    - number null
    - number
  desc: Sets auto-close time for a ticket type.
  params:
    - *ref_277
    - *ref_1
ticketblock:
  args:
    - '@user null'
    - '@user'
  desc: Blocks a user from creating tickets.
  params:
    - *ref_320
    - *ref_1
ticketblock_IGuildUser_=:
  args:
    - '@user null'
    - '@user'
  desc: Blocks a user from creating tickets.
  params:
    - *ref_320
    - *ref_1
ticketblock_IGuildUser_=_1:
  args:
    - '@user null'
    - '@user'
  desc: Blocks a user from creating tickets.
  params:
    - *ref_320
    - *ref_1
ticketblock_IGuildUser_=_2:
  args:
    - '@user null'
    - '@user'
  desc: Blocks a user from creating tickets.
  params:
    - *ref_320
    - *ref_1
ticketcategory:
  args:
    - number null
    - number
  desc: Sets the category where tickets will be created.
  params:
    - *ref_277
    - *ref_1
ticketcategory_int_=:
  args:
    - number null
    - number
  desc: Sets the category where tickets will be created.
  params:
    - *ref_277
    - *ref_1
ticketcategory_int_=_1:
  args:
    - number null
    - number
  desc: Sets the category where tickets will be created.
  params:
    - *ref_277
    - *ref_1
ticketcategory_int_=_2:
  args:
    - number null
    - number
  desc: Sets the category where tickets will be created.
  params:
    - *ref_277
    - *ref_1
ticketclaim:
  args:
    - ''
  desc: Claims the current ticket as a staff member.
  params: [ ]
ticketclaim_noparams:
  args:
    - ''
  desc: Claims the current ticket as a staff member.
  params: [ ]
ticketclaim_noparams_1:
  args:
    - ''
  desc: Claims the current ticket as a staff member.
  params: [ ]
ticketclaim_noparams_2:
  args:
    - ''
  desc: Claims the current ticket as a staff member.
  params: [ ]
ticketclose:
  args:
    - ''
  desc: Closes the current ticket.
  params: [ ]
ticketclose_noparams:
  args:
    - ''
  desc: Closes the current ticket.
  params: [ ]
ticketclose_noparams_1:
  args:
    - ''
  desc: Closes the current ticket.
  params: [ ]
ticketclose_noparams_2:
  args:
    - ''
  desc: Closes the current ticket.
  params: [ ]
ticketclosebehavior:
  args:
    - number bool bool bool bool number
  desc: Sets multiple close behaviors for a button at once
  params:
    - desc: The button ID to configure close behavior for
      name: buttonId
      optional: false
      type: int
    - desc: Whether to auto-archive on close
      name: autoArchive
      optional: true
      type: bool?
    - desc: Whether to delete ticket on close
      name: deleteOnClose
      optional: true
      type: bool?
    - desc: Whether to lock ticket on close
      name: lockOnClose
      optional: true
      type: bool?
    - desc: Whether to rename ticket on close
      name: renameOnClose
      optional: true
      type: bool?
    - desc: Delay in minutes before deletion
      name: deleteDelayMinutes
      optional: true
      type: int?
ticketcloseinactive:
  args:
    - number
  desc: Closes inactive tickets.
  params:
    - &ref_607
      desc: ''
      name: hours
      optional: false
      type: int
ticketcloseinactive_int:
  args:
    - number
  desc: Closes inactive tickets.
  params:
    - *ref_607
ticketcloseinactive_int_1:
  args:
    - number
  desc: Closes inactive tickets.
  params:
    - *ref_607
ticketcloseinactive_int_2:
  args:
    - number
  desc: Closes inactive tickets.
  params:
    - *ref_607
ticketcreatecase:
  args:
    - text text
  desc: Creates a new ticket case.
  params:
    - &ref_608
      desc: ''
      name: title
      optional: false
      type: string
    - *ref_605
ticketcreatecase_string_string:
  args:
    - text text
  desc: Creates a new ticket case.
  params:
    - *ref_608
    - *ref_605
ticketcreatecase_string_string_1:
  args:
    - text text
  desc: Creates a new ticket case.
  params:
    - *ref_608
    - *ref_605
ticketcreatecase_string_string_2:
  args:
    - text text
  desc: Creates a new ticket case.
  params:
    - *ref_608
    - *ref_605
ticketduplicatepanel:
  args:
    - panelid targetchannel
  desc: Duplicates a ticket panel.
  params:
    - *ref_596
    - &ref_609
      desc: ''
      name: targetChannel
      optional: false
      type: ITextChannel
ticketduplicatepanel_ulong_ITextChannel:
  args:
    - panelid targetchannel
  desc: Duplicates a ticket panel.
  params:
    - *ref_596
    - *ref_609
ticketduplicatepanel_ulong_ITextChannel_1:
  args:
    - panelid targetchannel
  desc: Duplicates a ticket panel.
  params:
    - *ref_596
    - *ref_609
ticketduplicatepanel_ulong_ITextChannel_2:
  args:
    - panelid targetchannel
  desc: Duplicates a ticket panel.
  params:
    - *ref_596
    - *ref_609
ticketlinkcase:
  args:
    - number
  desc: Links the current ticket to a case.
  params:
    - &ref_610
      desc: ''
      name: caseId
      optional: false
      type: int
ticketlinkcase_int:
  args:
    - number
  desc: Links the current ticket to a case.
  params:
    - *ref_610
ticketlinkcase_int_1:
  args:
    - number
  desc: Links the current ticket to a case.
  params:
    - *ref_610
ticketlinkcase_int_2:
  args:
    - number
  desc: Links the current ticket to a case.
  params:
    - *ref_610
ticketlistpanel:
  args:
    - panelid
  desc: Lists all components of a specific ticket panel
  params:
    - &ref_611
      desc: The message ID of the panel to inspect
      name: panelId
      optional: false
      type: ulong
ticketlistpanel_ulong:
  args:
    - panelid
  desc: Execute the TicketListPanel command
  params:
    - *ref_611
ticketlistpanel_ulong_1:
  args:
    - panelid
  desc: Lists all components of a specific ticket panel
  params:
    - *ref_611
ticketlistpanel_ulong_2:
  args:
    - panelid
  desc: Execute the TicketListPanel command
  params:
    - *ref_611
ticketlistpanel_ulong_3:
  args:
    - panelid
  desc: Lists all components of a specific ticket panel
  params:
    - *ref_611
ticketlistpanel_ulong_4:
  args:
    - panelid
  desc: Execute the TicketListPanel command
  params:
    - *ref_611
ticketlistpanels:
  args:
    - ''
  desc: Lists all ticket panels in the guild
  params: [ ]
ticketlistpanels_noparams:
  args:
    - ''
  desc: Lists all ticket panels in the guild
  params: [ ]
ticketlistpanels_noparams_1:
  args:
    - ''
  desc: Lists all ticket panels in the guild
  params: [ ]
ticketlistpanels_noparams_2:
  args:
    - ''
  desc: Lists all ticket panels in the guild
  params: [ ]
ticketlistpanels_noparams_3:
  args:
    - ''
  desc: Lists all ticket panels in the guild
  params: [ ]
ticketlistpanels_noparams_4:
  args:
    - ''
  desc: Lists all ticket panels in the guild
  params: [ ]
ticketlogchannel:
  args:
    - null
  desc: Sets the log channel for tickets.
  params:
    - *ref_1
ticketlogchannel_=:
  args:
    - null
  desc: Sets the log channel for tickets.
  params:
    - *ref_1
ticketlogchannel_=_1:
  args:
    - null
  desc: Sets the log channel for tickets.
  params:
    - *ref_1
ticketlogchannel_=_2:
  args:
    - null
  desc: Sets the log channel for tickets.
  params:
    - *ref_1
ticketmoveall:
  args:
    - sourcecategory targetcategory
  desc: Moves all tickets between categories.
  params:
    - &ref_612
      desc: ''
      name: sourceCategory
      optional: false
      type: ICategoryChannel
    - &ref_613
      desc: ''
      name: targetCategory
      optional: false
      type: ICategoryChannel
ticketmoveall_ICategoryChannel_ICategoryChannel:
  args:
    - sourcecategory targetcategory
  desc: Moves all tickets between categories.
  params:
    - *ref_612
    - *ref_613
ticketmoveall_ICategoryChannel_ICategoryChannel_1:
  args:
    - sourcecategory targetcategory
  desc: Moves all tickets between categories.
  params:
    - *ref_612
    - *ref_613
ticketmoveall_ICategoryChannel_ICategoryChannel_2:
  args:
    - sourcecategory targetcategory
  desc: Moves all tickets between categories.
  params:
    - *ref_612
    - *ref_613
ticketmovepanel:
  args:
    - panelid targetchannel
  desc: Moves a ticket panel to another channel.
  params:
    - *ref_596
    - *ref_609
ticketmovepanel_ulong_ITextChannel:
  args:
    - panelid targetchannel
  desc: Moves a ticket panel to another channel.
  params:
    - *ref_596
    - *ref_609
ticketmovepanel_ulong_ITextChannel_1:
  args:
    - panelid targetchannel
  desc: Moves a ticket panel to another channel.
  params:
    - *ref_596
    - *ref_609
ticketmovepanel_ulong_ITextChannel_2:
  args:
    - panelid targetchannel
  desc: Moves a ticket panel to another channel.
  params:
    - *ref_596
    - *ref_609
ticketnote:
  args:
    - text
  desc: Adds a note to the current ticket.
  params:
    - &ref_614
      desc: ''
      name: content
      optional: false
      type: string
ticketnote_string:
  args:
    - text
  desc: Adds a note to the current ticket.
  params:
    - *ref_614
ticketnote_string_1:
  args:
    - text
  desc: Adds a note to the current ticket.
  params:
    - *ref_614
ticketnote_string_2:
  args:
    - text
  desc: Adds a note to the current ticket.
  params:
    - *ref_614
ticketpanel:
  args:
    - channel null
    - channel
  desc: Creates a ticket panel
  params:
    - *ref_158
    - *ref_1
ticketpanel_ITextChannel_=:
  args:
    - channel null
    - channel
  desc: Creates a ticket panel
  params:
    - *ref_158
    - *ref_1
ticketpanel_ITextChannel_=_1:
  args:
    - channel null
    - channel
  desc: >-
    Commands for managing the ticket system, including panels, tickets, cases,
    and administrative functions.
  params:
    - *ref_158
    - *ref_1
ticketpanel_ITextChannel_=_2:
  args:
    - channel null
    - channel
  desc: >-
    Commands for managing the ticket system, including panels, tickets, cases,
    and administrative functions.
  params:
    - *ref_158
    - *ref_1
ticketpaneldelete:
  args:
    - panelid
  desc: Deletes an existing ticket panel.
  params:
    - *ref_596
ticketpaneldelete_ulong:
  args:
    - panelid
  desc: Deletes an existing ticket panel.
  params:
    - *ref_596
ticketpaneldelete_ulong_1:
  args:
    - panelid
  desc: Deletes an existing ticket panel.
  params:
    - *ref_596
ticketpaneldelete_ulong_2:
  args:
    - panelid
  desc: Deletes an existing ticket panel.
  params:
    - *ref_596
ticketpriority:
  args:
    - text
  desc: Sets the priority level for the current ticket.
  params:
    - &ref_615
      desc: ''
      name: priority
      optional: false
      type: string
ticketpriority_string:
  args:
    - text
  desc: Sets the priority level for the current ticket.
  params:
    - *ref_615
ticketpriority_string_1:
  args:
    - text
  desc: Sets the priority level for the current ticket.
  params:
    - *ref_615
ticketpriority_string_2:
  args:
    - text
  desc: Sets the priority level for the current ticket.
  params:
    - *ref_615
ticketremovepriority:
  args:
    - text
  desc: Deletes a priority level.
  params:
    - &ref_616
      desc: ''
      name: priorityId
      optional: false
      type: string
ticketremovepriority_string:
  args:
    - text
  desc: Deletes a priority level.
  params:
    - *ref_616
ticketremovepriority_string_1:
  args:
    - text
  desc: Deletes a priority level.
  params:
    - *ref_616
ticketremovepriority_string_2:
  args:
    - text
  desc: Deletes a priority level.
  params:
    - *ref_616
ticketremovetag:
  args:
    - text
  desc: Removes a tag.
  params:
    - &ref_617
      desc: ''
      name: tagId
      optional: false
      type: string
ticketremovetag_string:
  args:
    - text
  desc: Removes a tag.
  params:
    - *ref_617
ticketremovetag_string_1:
  args:
    - text
  desc: Removes a tag.
  params:
    - *ref_617
ticketremovetag_string_2:
  args:
    - text
  desc: Removes a tag.
  params:
    - *ref_617
ticketremovetags:
  args:
    - text
  desc: Removes tags from the current ticket.
  params:
    - *ref_606
ticketremovetags_string[]:
  args:
    - text
  desc: Removes tags from the current ticket.
  params:
    - *ref_606
ticketremovetags_string[]_1:
  args:
    - text
  desc: Removes tags from the current ticket.
  params:
    - *ref_606
ticketremovetags_string[]_2:
  args:
    - text
  desc: Removes tags from the current ticket.
  params:
    - *ref_606
ticketresponsetime:
  args:
    - number null
    - number
  desc: Sets the required response time for a ticket type.
  params:
    - *ref_277
    - *ref_1
ticketresponsetime_int_=:
  args:
    - number null
    - number
  desc: Sets the required response time for a ticket type.
  params:
    - *ref_277
    - *ref_1
ticketresponsetime_int_=_1:
  args:
    - number null
    - number
  desc: Sets the required response time for a ticket type.
  params:
    - *ref_277
    - *ref_1
ticketresponsetime_int_=_2:
  args:
    - number null
    - number
  desc: Sets the required response time for a ticket type.
  params:
    - *ref_277
    - *ref_1
ticketstats:
  args:
    - ''
  desc: Shows ticket statistics for the guild.
  params: [ ]
ticketstats_noparams:
  args:
    - ''
  desc: Shows ticket statistics for the guild.
  params: [ ]
ticketstats_noparams_1:
  args:
    - ''
  desc: Shows ticket statistics for the guild.
  params: [ ]
ticketstats_noparams_2:
  args:
    - ''
  desc: Shows ticket statistics for the guild.
  params: [ ]
tickettranscriptchannel:
  args:
    - null
  desc: Sets the transcript channel for tickets.
  params:
    - *ref_1
tickettranscriptchannel_=:
  args:
    - null
  desc: Sets the transcript channel for tickets.
  params:
    - *ref_1
tickettranscriptchannel_=_1:
  args:
    - null
  desc: Sets the transcript channel for tickets.
  params:
    - *ref_1
tickettranscriptchannel_=_2:
  args:
    - null
  desc: Sets the transcript channel for tickets.
  params:
    - *ref_1
ticketunblock:
  args:
    - '@user'
  desc: Unblocks a user from creating tickets.
  params:
    - *ref_320
ticketunblock_IGuildUser:
  args:
    - '@user'
  desc: Unblocks a user from creating tickets.
  params:
    - *ref_320
ticketunblock_IGuildUser_1:
  args:
    - '@user'
  desc: Unblocks a user from creating tickets.
  params:
    - *ref_320
ticketunblock_IGuildUser_2:
  args:
    - '@user'
  desc: Unblocks a user from creating tickets.
  params:
    - *ref_320
ticketunclaim:
  args:
    - ''
  desc: Unclaims the current ticket.
  params: [ ]
ticketunclaim_noparams:
  args:
    - ''
  desc: Unclaims the current ticket.
  params: [ ]
ticketunclaim_noparams_1:
  args:
    - ''
  desc: Unclaims the current ticket.
  params: [ ]
ticketunclaim_noparams_2:
  args:
    - ''
  desc: Unclaims the current ticket.
  params: [ ]
ticketunlinkcase:
  args:
    - ''
  desc: Unlinks the current ticket from its case.
  params: [ ]
ticketunlinkcase_noparams:
  args:
    - ''
  desc: Unlinks the current ticket from its case.
  params: [ ]
ticketunlinkcase_noparams_1:
  args:
    - ''
  desc: Unlinks the current ticket from its case.
  params: [ ]
ticketunlinkcase_noparams_2:
  args:
    - ''
  desc: Unlinks the current ticket from its case.
  params: [ ]
ticketupdatepanel:
  args:
    - panelid text
  desc: Updates a ticket panel's embed.
  params:
    - *ref_596
    - &ref_618
      desc: ''
      name: embedJson
      optional: false
      type: string
ticketupdatepanel_ulong_string:
  args:
    - panelid text
  desc: Updates a ticket panel's embed.
  params:
    - *ref_596
    - *ref_618
ticketupdatepanel_ulong_string_1:
  args:
    - panelid text
  desc: Updates a ticket panel's embed.
  params:
    - *ref_596
    - *ref_618
ticketupdatepanel_ulong_string_2:
  args:
    - panelid text
  desc: Updates a ticket panel's embed.
  params:
    - *ref_596
    - *ref_618
ticketuserstats:
  args:
    - null
  desc: Shows ticket statistics for a user.
  params:
    - *ref_1
ticketuserstats_=:
  args:
    - null
  desc: Shows ticket statistics for a user.
  params:
    - *ref_1
ticketuserstats_=_1:
  args:
    - null
  desc: Shows ticket statistics for a user.
  params:
    - *ref_1
ticketuserstats_=_2:
  args:
    - null
  desc: Shows ticket statistics for a user.
  params:
    - *ref_1
tickle:
  args:
    - text
  desc: Tickles someone.
  params:
    - *ref_336
tickle_string:
  args:
    - text
  desc: Tickles someone.
  params:
    - *ref_546
tickle_string_1:
  args:
    - text
  desc: Tickles someone.
  params:
    - *ref_336
tickle_string_2:
  args:
    - text
  desc: Tickles someone.
  params:
    - *ref_546
tictactoe:
  args:
    - text
  desc: Starts a game of TicTacToe.
  params:
    - &ref_619
      desc: Options for ttt
      name: args
      optional: false
      type: string[]
tictactoe_string[]:
  args:
    - text
  desc: Starts a game of TicTacToe.
  params:
    - *ref_619
tictactoe_string[]_1:
  args:
    - text
  desc: A module containing TicTacToe commands.
  params:
    - *ref_619
tictactoe_string[]_2:
  args:
    - text
  desc: A module containing TicTacToe commands.
  params:
    - *ref_619
time:
  args:
    - text
  desc: Displays the current time in a specified location.
  params:
    - &ref_620
      desc: The location query to search for the current time.
      name: query
      optional: false
      type: string
time_string:
  args:
    - text
  desc: Execute the Time command
  params:
    - *ref_620
time_string_1:
  args:
    - text
  desc: Displays the current time in a specified location.
  params:
    - *ref_620
time_string_2:
  args:
    - text
  desc: Execute the Time command
  params:
    - *ref_620
timedafk:
  args:
    - time text
  desc: Sets a timed AFK status with a custom message.
  params:
    - &ref_621
      desc: The duration for the AFK status.
      name: time
      optional: false
      type: StoopidTime
    - &ref_622
      desc: The custom message for the AFK status.
      name: message
      optional: false
      type: string
timedafk_StoopidTime_string:
  args:
    - time text
  desc: Sets a timed AFK status with a custom message.
  params:
    - *ref_621
    - *ref_622
timedafk_StoopidTime_string_1:
  args:
    - time text
  desc: Sets a timed AFK status with a custom message.
  params:
    - *ref_621
    - *ref_622
timedafk_StoopidTime_string_2:
  args:
    - time text
  desc: Sets a timed AFK status with a custom message.
  params:
    - *ref_621
    - *ref_622
timeout:
  args:
    - time @user null
    - time
  desc: Timeouts a user for a specified amount of time.
  params:
    - &ref_623
      desc: The time to timeout the user
      name: time
      optional: false
      type: StoopidTime
    - &ref_624
      desc: The user to timeout
      name: user
      optional: true
      type: IGuildUser
    - *ref_1
timeout_StoopidTime_IGuildUser_=:
  args:
    - time @user null
    - time
  desc: Timeouts a user for a specified amount of time.
  params:
    - *ref_623
    - *ref_624
    - *ref_1
timeout_StoopidTime_IGuildUser_=_1:
  args:
    - time @user null
    - time
  desc: Timeouts a user for a specified amount of time.
  params:
    - *ref_623
    - *ref_624
    - *ref_1
timeout_StoopidTime_IGuildUser_=_2:
  args:
    - time @user null
    - time
  desc: Timeouts a user for a specified amount of time.
  params:
    - *ref_623
    - *ref_624
    - *ref_1
timezone:
  args:
    - ''
  desc: Shows the time zone of the guild if set.
  params: [ ]
timezone_noparams:
  args:
    - ''
  desc: Shows the time zone of the guild if set.
  params: [ ]
timezone_noparams_1:
  args:
    - ''
  desc: Shows the time zone of the guild if set.
  params: [ ]
timezone_noparams_2:
  args:
    - ''
  desc: Shows the time zone of the guild if set.
  params: [ ]
timezone_string:
  args:
    - text
  desc: Gets info about a time zone.
  params:
    - &ref_625
      desc: The timezone ID.
      name: id
      optional: false
      type: string
timezone_string_1:
  args:
    - text
  desc: Gets info about a time zone.
  params:
    - *ref_625
timezone_string_2:
  args:
    - text
  desc: Gets info about a time zone.
  params:
    - *ref_625
timezone_string_3:
  args:
    - text
  desc: Gets info about a time zone.
  params:
    - *ref_625
timezones:
  args:
    - ''
  desc: List all available time zones.
  params: [ ]
timezones_noparams:
  args:
    - ''
  desc: List all available time zones.
  params: [ ]
timezones_noparams_1:
  args:
    - ''
  desc: Handles commands related to time zones.
  params: [ ]
timezones_noparams_2:
  args:
    - ''
  desc: Handles commands related to time zones.
  params: [ ]
tl:
  args:
    - ''
  desc: Internal trivia handler.
  params: [ ]
tl_noparams:
  args:
    - ''
  desc: Shows the current trivia leaderboard.
  params: [ ]
tl_noparams_1:
  args:
    - ''
  desc: Internal trivia handler.
  params: [ ]
tl_noparams_2:
  args:
    - ''
  desc: Shows the current trivia leaderboard.
  params: [ ]
todoadd:
  args:
    - listId
    - title
    - description
  desc: Adds a new todo item to a list.
  params:
    - desc: The ID of the todo list.
      name: listId
      optional: false
      type: int
    - desc: The title of the todo item.
      name: title
      optional: false
      type: string
    - desc: Optional description for the item.
      name: description
      optional: true
      type: string
todoaddpriority:
  args:
    - listId
    - priority
    - title
    - description
  desc: Adds a todo item with priority level.
  params:
    - desc: The ID of the todo list.
      name: listId
      optional: false
      type: int
    - desc: Priority level (1=Low, 2=Medium, 3=High, 4=Critical).
      name: priority
      optional: false
      type: int
    - desc: The title of the todo item.
      name: title
      optional: false
      type: string
    - desc: Optional description for the item.
      name: description
      optional: true
      type: string
todoaddtag:
  args:
    - itemId
    - tag
  desc: Adds a tag to a todo item.
  params:
    - desc: The ID of the todo item.
      name: itemId
      optional: false
      type: int
    - desc: The tag to add.
      name: tag
      optional: false
      type: string
todocleardue:
  args:
    - itemId
  desc: Removes the due date from a todo item.
  params:
    - desc: The ID of the todo item.
      name: itemId
      optional: false
      type: int
todoclearreminder:
  args:
    - itemId
  desc: Removes the reminder from a todo item.
  params:
    - desc: The ID of the todo item.
      name: itemId
      optional: false
      type: int
todocomplete:
  args:
    - itemId
  desc: Marks a todo item as completed.
  params:
    - desc: The ID of the todo item.
      name: itemId
      optional: false
      type: int
todocreatelist:
  args:
    - name
    - description
  desc: Creates a new personal todo list.
  params:
    - desc: The name of the todo list.
      name: name
      optional: false
      type: string
    - desc: Optional description for the list.
      name: description
      optional: true
      type: string
todocreateserverlist:
  args:
    - name
    - description
  desc: Creates a new server-wide todo list (requires Manage Server permission).
  params:
    - desc: The name of the server todo list.
      name: name
      optional: false
      type: string
    - desc: Optional description for the list.
      name: description
      optional: true
      type: string
tododelete:
  args:
    - itemId
  desc: Deletes a todo item.
  params:
    - desc: The ID of the todo item.
      name: itemId
      optional: false
      type: int
tododeletelist:
  args:
    - listId
  desc: Deletes an entire todo list.
  params:
    - desc: The ID of the todo list.
      name: listId
      optional: false
      type: int
todoedit:
  args:
    - itemId
    - title
    - description
  desc: Edits a todo item's title and description.
  params:
    - desc: The ID of the todo item.
      name: itemId
      optional: false
      type: int
    - desc: The new title.
      name: title
      optional: false
      type: string
    - desc: The new description.
      name: description
      optional: true
      type: string
todofilter:
  args:
    - listId
    - filter
    - value
  desc: Filters todo items by tag or priority.
  params:
    - desc: The ID of the todo list.
      name: listId
      optional: false
      type: int
    - desc: Filter type (tag or priority).
      name: filter
      optional: false
      type: string
    - desc: The value to filter by.
      name: value
      optional: true
      type: string
todogrant:
  args:
    - listId
    - '@user'
    - permissions
  desc: Grants permissions to a user for a todo list.
  params:
    - desc: The ID of the todo list.
      name: listId
      optional: false
      type: int
    - desc: The user to grant permissions to.
      name: user
      optional: false
      type: IUser
    - desc: Comma-separated permissions (view,add,edit,complete,delete,manage,all).
      name: permissions
      optional: false
      type: string
todolists:
  args:
    - includeServer
  desc: Shows all your accessible todo lists.
  params:
    - desc: Whether to include server-wide lists.
      name: includeServer
      optional: true
      type: bool
todopermissions:
  args:
    - listId
  desc: Shows all permissions for a todo list.
  params:
    - desc: The ID of the todo list.
      name: listId
      optional: false
      type: int
todoremovetag:
  args:
    - itemId
    - tag
  desc: Removes a tag from a todo item.
  params:
    - desc: The ID of the todo item.
      name: itemId
      optional: false
      type: int
    - desc: The tag to remove.
      name: tag
      optional: false
      type: string
todoreorder:
  args:
    - itemId
    - newPosition
  desc: Reorders a todo item to a new position.
  params:
    - desc: The ID of the todo item.
      name: itemId
      optional: false
      type: int
    - desc: The new position (1-based).
      name: newPosition
      optional: false
      type: int
todorevoke:
  args:
    - listId
    - '@user'
  desc: Revokes all permissions for a user on a todo list.
  params:
    - desc: The ID of the todo list.
      name: listId
      optional: false
      type: int
    - desc: The user to revoke permissions from.
      name: user
      optional: false
      type: IUser
todosearch:
  args:
    - listId
    - query
  desc: Searches for todo items within a list.
  params:
    - desc: The ID of the todo list.
      name: listId
      optional: false
      type: int
    - desc: The search query.
      name: query
      optional: false
      type: string
todosetcolor:
  args:
    - listId
    - color
  desc: Sets the color for a todo list.
  params:
    - desc: The ID of the todo list.
      name: listId
      optional: false
      type: int
    - desc: Hex color code (e.g.,
      name: color
      optional: false
      type: string
todosetdue:
  args:
    - itemId
    - dateString
  desc: Sets the due date for a todo item.
  params:
    - desc: The ID of the todo item.
      name: itemId
      optional: false
      type: int
    - desc: The due date and time.
      name: dateString
      optional: false
      type: string
todosetreminder:
  args:
    - itemId
    - dateString
  desc: Sets a reminder time for a todo item.
  params:
    - desc: The ID of the todo item.
      name: itemId
      optional: false
      type: int
    - desc: The reminder date and time.
      name: dateString
      optional: false
      type: string
todoshow:
  args:
    - listId
    - includeCompleted
  desc: Shows all items in a todo list.
  params:
    - desc: The ID of the todo list.
      name: listId
      optional: false
      type: int
    - desc: Whether to include completed items.
      name: includeCompleted
      optional: true
      type: bool
todotoggleprivacy:
  args:
    - listId
  desc: Toggles the privacy setting for a todo list.
  params:
    - desc: The ID of the todo list.
      name: listId
      optional: false
      type: int
toggleinvitetracking:
  args:
    - ''
  desc: Toggles invite tracking for the guild.
  params: [ ]
toggleinvitetracking_noparams:
  args:
    - ''
  desc: Toggles invite tracking for the guild.
  params: [ ]
toggleinvitetracking_noparams_1:
  args:
    - ''
  desc: Toggles invite tracking for the guild.
  params: [ ]
toggleinvitetracking_noparams_2:
  args:
    - ''
  desc: Toggles invite tracking for the guild.
  params: [ ]
togglelevelupmessage:
  args:
    - messageId enabled
  desc: Enables or disables a custom level-up message.
  params:
    - desc: The ID of the message to toggle.
      name: messageId
      optional: false
      type: int
    - desc: Whether to enable (true) or disable (false) the message.
      name: enabled
      optional: false
      type: bool
togglemessagecount:
  args:
    - ''
  desc: Toggles message counting in the server
  params: [ ]
togglemessagecount_noparams:
  args:
    - ''
  desc: Toggles message counting in the server
  params: [ ]
togglemessagecount_noparams_1:
  args:
    - ''
  desc: Toggles message counting in the server
  params: [ ]
togglemessagecount_noparams_2:
  args:
    - ''
  desc: Toggles message counting in the server
  params: [ ]
togglemsgcount:
  args:
    - ''
  desc: Toggles message count tracking.
  params: [ ]
togglereaddremoved:
  args:
    - number
  desc: Toggles whether added roles are removed when a status is removed.
  params:
    - *ref_390
togglereaddremoved_int:
  args:
    - number
  desc: Toggles whether added roles are removed when a status is removed.
  params:
    - *ref_390
togglereaddremoved_int_1:
  args:
    - number
  desc: Toggles whether added roles are removed when a status is removed.
  params:
    - *ref_390
togglereaddremoved_int_2:
  args:
    - number
  desc: Toggles whether added roles are removed when a status is removed.
  params:
    - *ref_390
toggleremoveadded:
  args:
    - number
  desc: >-
    Toggles whether added roles are removed when a user no longer has a status
    by the provided index
  params:
    - *ref_390
toggleremoveadded_int:
  args:
    - number
  desc: >-
    Toggles whether added roles are removed when a user no longer has a status
    by the provided index
  params:
    - *ref_390
toggleremoveadded_int_1:
  args:
    - number
  desc: >-
    Toggles whether added roles are removed when a user no longer has a status
    by the provided index
  params:
    - *ref_390
toggleremoveadded_int_2:
  args:
    - number
  desc: >-
    Toggles whether added roles are removed when a user no longer has a status
    by the provided index
  params:
    - *ref_390
toggleremoveinviteonleave:
  args:
    - ''
  desc: Toggles whether invites should be removed when a user leaves the guild.
  params: [ ]
toggleremoveinviteonleave_noparams:
  args:
    - ''
  desc: Toggles whether invites should be removed when a user leaves the guild.
  params: [ ]
toggleremoveinviteonleave_noparams_1:
  args:
    - ''
  desc: Toggles whether invites should be removed when a user leaves the guild.
  params: [ ]
toggleremoveinviteonleave_noparams_2:
  args:
    - ''
  desc: Toggles whether invites should be removed when a user leaves the guild.
  params: [ ]
togglerolestates:
  args:
    - ''
  desc: Toggles the role states feature on or off.
  params: [ ]
togglerolestates_noparams:
  args:
    - ''
  desc: Toggles the role states feature on or off.
  params: [ ]
togglerolestates_noparams_1:
  args:
    - ''
  desc: Execute the ToggleRoleStates command
  params: [ ]
togglerolestates_noparams_2:
  args:
    - ''
  desc: Execute the ToggleRoleStates command
  params: [ ]
togglerolestatesclearonban:
  args:
    - ''
  desc: Toggles whether role states should be cleared when a user is banned.
  params: [ ]
togglerolestatesclearonban_noparams:
  args:
    - ''
  desc: Toggles whether role states should be cleared when a user is banned.
  params: [ ]
togglerolestatesclearonban_noparams_1:
  args:
    - ''
  desc: Toggles whether role states should be cleared when a user is banned.
  params: [ ]
togglerolestatesclearonban_noparams_2:
  args:
    - ''
  desc: Toggles whether role states should be cleared when a user is banned.
  params: [ ]
togglerolestatesignorebots:
  args:
    - ''
  desc: Toggles whether bots should be ignored by the role states feature.
  params: [ ]
togglerolestatesignorebots_noparams:
  args:
    - ''
  desc: Toggles whether bots should be ignored by the role states feature.
  params: [ ]
togglerolestatesignorebots_noparams_1:
  args:
    - ''
  desc: Toggles whether bots should be ignored by the role states feature.
  params: [ ]
togglerolestatesignorebots_noparams_2:
  args:
    - ''
  desc: Toggles whether bots should be ignored by the role states feature.
  params: [ ]
togglexclsar:
  args:
    - ''
  desc: Toggles the exclusivity of auto-self-assignable roles.
  params: [ ]
togglexclsar_noparams:
  args:
    - ''
  desc: Toggles the exclusivity of auto-self-assignable roles.
  params: [ ]
togglexclsar_noparams_1:
  args:
    - ''
  desc: Toggles the exclusivity of auto-self-assignable roles.
  params: [ ]
togglexclsar_noparams_2:
  args:
    - ''
  desc: Toggles the exclusivity of auto-self-assignable roles.
  params: [ ]
toprep:
  args:
    - number
  desc: Shows the reputation leaderboard for the server.
  params:
    - *ref_436
topusers:
  args:
    - ''
  desc: Displays a leaderboard of the top 10 users by message count.
  params: [ ]
topusers_noparams:
  args:
    - ''
  desc: Displays a leaderboard of the top 10 users by message count.
  params: [ ]
topusers_noparams_1:
  args:
    - ''
  desc: Displays a leaderboard of the top 10 users by message count.
  params: [ ]
topusers_noparams_2:
  args:
    - ''
  desc: Displays a leaderboard of the top 10 users by message count.
  params: [ ]
tq:
  args:
    - ''
  desc: Stops the current trivia game.
  params: [ ]
tq_noparams:
  args:
    - ''
  desc: Stops the current trivia game.
  params: [ ]
tq_noparams_1:
  args:
    - ''
  desc: Stops the current trivia game.
  params: [ ]
tq_noparams_2:
  args:
    - ''
  desc: Stops the current trivia game.
  params: [ ]
traceroute:
  args:
    - text
  desc: >-
    Executes a traceroute operation to the specified hostname, displaying the
    route that packets take to reach an IP address or domain.
  params:
    - &ref_626
      desc: The target hostname or IP address for the traceroute operation.
      name: hostname
      optional: false
      type: string
traceroute_string:
  args:
    - text
  desc: Execute the Traceroute command
  params:
    - *ref_626
transactions:
  args:
    - '@user'
  desc: Display recent currency transactions for a user.
  params:
    - desc: >-
        The user whose transactions are to be displayed. Defaults to the current
        user.
      name: user
      optional: true
      type: IUser?
transferrolestates:
  args:
    - serverid
  desc: Transfers role states from the current server to another server.
  params:
    - &ref_627
      desc: The ID of the target server.
      name: serverId
      optional: false
      type: ulong
transferrolestates_ulong:
  args:
    - serverid
  desc: Transfers role states from the current server to another server.
  params:
    - *ref_627
transferrolestates_ulong_1:
  args:
    - serverid
  desc: Transfers role states from the current server to another server.
  params:
    - *ref_627
transferrolestates_ulong_2:
  args:
    - serverid
  desc: Transfers role states from the current server to another server.
  params:
    - *ref_627
translangs:
  args:
    - ''
  desc: Lists all available languages for translation.
  params: [ ]
translangs_noparams:
  args:
    - ''
  desc: Lists all available languages for translation.
  params: [ ]
translangs_noparams_1:
  args:
    - ''
  desc: Lists all available languages for translation.
  params: [ ]
translangs_noparams_2:
  args:
    - ''
  desc: Lists all available languages for translation.
  params: [ ]
translate:
  args:
    - text null
    - text
  desc: Enumeration for auto-delete options in auto-translate feature.
  params:
    - &ref_628
      desc: The language pair in the format 'from>to'.
      name: langs
      optional: false
      type: string
    - *ref_1
translate_string_=:
  args:
    - text null
    - text
  desc: Execute the Translate command
  params:
    - *ref_628
    - *ref_1
translate_string_=_1:
  args:
    - text null
    - text
  desc: >-
    Provides commands for translating text and managing auto-translation
    settings within a Discord guild.
  params:
    - *ref_628
    - *ref_1
translate_string_=_2:
  args:
    - text null
    - text
  desc: Execute the Translate command
  params:
    - *ref_628
    - *ref_1
tremolo:
  args:
    - true
  desc: >-
    Applies or removes a tremolo filter that creates a wavering effect in
    volume.
  params:
    - *ref_57
tremolo_=:
  args:
    - true
  desc: Execute the Tremolo command
  params:
    - *ref_57
tremolo_=_1:
  args:
    - true
  desc: >-
    Applies or removes a tremolo filter that creates a wavering effect in
    volume.
  params:
    - *ref_57
tremolo_=_2:
  args:
    - true
  desc: Execute the Tremolo command
  params:
    - *ref_57
trivia:
  args:
    - text
  desc: Starts a trivia game.
  params:
    - &ref_629
      desc: Optional arguments for trivia
      name: args
      optional: false
      type: string[]
trivia_string[]:
  args:
    - text
  desc: Starts a trivia game.
  params:
    - *ref_629
trivia_string[]_1:
  args:
    - text
  desc: A module containing Trivia commands.
  params:
    - *ref_629
trivia_string[]_2:
  args:
    - text
  desc: Starts a trivia game.
  params:
    - *ref_629
triviachain:
  args:
    - number text
  desc: Play Trivia Chain - answer questions to build winnings.
  params:
    - desc: The amount to bet.
      name: betAmount
      optional: false
      type: long
    - desc: The trivia category.
      name: category
      optional: true
      type: string
typeadd:
  args:
    - text
  desc: Adds a new article for the typing game.
  params:
    - &ref_630
      desc: The text of the article to add.
      name: text
      optional: false
      type: string
typeadd_string:
  args:
    - text
  desc: Adds a new article for the typing game.
  params:
    - *ref_630
typeadd_string_1:
  args:
    - text
  desc: Adds a new article for the typing game.
  params:
    - *ref_630
typeadd_string_2:
  args:
    - text
  desc: Adds a new article for the typing game.
  params:
    - *ref_630
typedel:
  args:
    - number
  desc: Deletes a typing article by its index.
  params:
    - &ref_631
      desc: The index of the article to delete.
      name: index
      optional: false
      type: int
typedel_int:
  args:
    - number
  desc: Deletes a typing article by its index.
  params:
    - *ref_631
typedel_int_1:
  args:
    - number
  desc: Deletes a typing article by its index.
  params:
    - *ref_631
typedel_int_2:
  args:
    - number
  desc: Deletes a typing article by its index.
  params:
    - *ref_631
typelist:
  args:
    - 1
  desc: Lists the articles available for the typing game.
  params:
    - *ref_95
typelist_=:
  args:
    - 1
  desc: Lists the articles available for the typing game.
  params:
    - *ref_95
typelist_=_1:
  args:
    - 1
  desc: Lists the articles available for the typing game.
  params:
    - *ref_95
typelist_=_2:
  args:
    - 1
  desc: Lists the articles available for the typing game.
  params:
    - *ref_95
typestart:
  args:
    - text
  desc: Initializes a new instance of SpeedTypingCommands.
  params:
    - &ref_632
      desc: Arguments for configuring the game.
      name: args
      optional: false
      type: string[]
typestart_string[]:
  args:
    - text
  desc: Starts a speed typing game.
  params:
    - *ref_632
typestart_string[]_1:
  args:
    - text
  desc: Group containing commands for speed typing games.
  params:
    - *ref_632
typestart_string[]_2:
  args:
    - text
  desc: Starts a speed typing game.
  params:
    - *ref_632
typestop:
  args:
    - ''
  desc: Stops the current speed typing game.
  params: [ ]
typestop_noparams:
  args:
    - ''
  desc: Stops the current speed typing game.
  params: [ ]
typestop_noparams_1:
  args:
    - ''
  desc: Stops the current speed typing game.
  params: [ ]
typestop_noparams_2:
  args:
    - ''
  desc: Stops the current speed typing game.
  params: [ ]
unban:
  args:
    - text
  desc: Unbans a user.
  params:
    - &ref_633
      desc: The user to unban
      name: user
      optional: false
      type: string
unban_string:
  args:
    - text
  desc: Unbans a user.
  params:
    - *ref_633
unban_string_1:
  args:
    - text
  desc: Unbans a user.
  params:
    - *ref_633
unban_string_2:
  args:
    - text
  desc: Unbans a user.
  params:
    - *ref_633
unban_ulong:
  args:
    - userid
  desc: Unbans a user.
  params:
    - &ref_634
      desc: The ID of the user to unban
      name: userId
      optional: false
      type: ulong
unban_ulong_1:
  args:
    - userid
  desc: Unbans a user.
  params:
    - *ref_634
unban_ulong_2:
  args:
    - userid
  desc: Unbans a user.
  params:
    - *ref_634
unban_ulong_3:
  args:
    - userid
  desc: Unbans a user.
  params:
    - *ref_634
undeafen:
  args:
    - '@user'
  desc: Undeafens specified users in the guild.
  params:
    - *ref_177
undeafen_IGuildUser[]:
  args:
    - '@user'
  desc: Undeafens specified users in the guild.
  params:
    - *ref_177
undeafen_IGuildUser[]_1:
  args:
    - '@user'
  desc: Undeafens specified users in the guild.
  params:
    - *ref_177
undeafen_IGuildUser[]_2:
  args:
    - '@user'
  desc: Undeafens specified users in the guild.
  params:
    - *ref_177
unlock:
  args:
    - null
  desc: Unlocks a specific channel, allowing everyone to send messages again.
  params:
    - *ref_1
unlock_=:
  args:
    - null
  desc: Unlocks a specific channel, allowing everyone to send messages again.
  params:
    - *ref_1
unlock_=_1:
  args:
    - null
  desc: Unlocks a specific channel, allowing everyone to send messages again.
  params:
    - *ref_1
unlock_=_2:
  args:
    - null
  desc: Unlocks a specific channel, allowing everyone to send messages again.
  params:
    - *ref_1
unlockdown:
  args:
    - ''
  desc: Unlocks the server by allowing @everyone to send messages again.
  params: [ ]
unlockdown_noparams:
  args:
    - ''
  desc: Unlocks the server by allowing @everyone to send messages again.
  params: [ ]
unlockdown_noparams_1:
  args:
    - ''
  desc: Unlocks the server by allowing @everyone to send messages again.
  params: [ ]
unlockdown_noparams_2:
  args:
    - ''
  desc: Unlocks the server by allowing @everyone to send messages again.
  params: [ ]
unmute:
  args:
    - '@user ""'
  desc: Unmutes a user.
  params:
    - *ref_128
    - *ref_126
unmute_IGuildUser_=:
  args:
    - '@user ""'
  desc: Unmutes a user.
  params:
    - *ref_127
    - *ref_126
unmute_IGuildUser_=_1:
  args:
    - '@user ""'
  desc: Unmutes a user.
  params:
    - *ref_128
    - *ref_126
unmute_IGuildUser_=_2:
  args:
    - '@user ""'
  desc: Unmutes a user.
  params:
    - *ref_127
    - *ref_126
unmuteall:
  args:
    - null
  desc: Unmutes all users in the guild. DANGEROUS!!!!!!!!!!!!!!!!
  params:
    - *ref_1
unmuteall_=:
  args:
    - null
  desc: Unmutes all users in the guild. DANGEROUS!!!!!!!!!!!!!!!!
  params:
    - *ref_1
unmuteall_=_1:
  args:
    - null
  desc: Unmutes all users in the guild. DANGEROUS!!!!!!!!!!!!!!!!
  params:
    - *ref_1
unmuteall_=_2:
  args:
    - null
  desc: Unmutes all users in the guild. DANGEROUS!!!!!!!!!!!!!!!!
  params:
    - *ref_1
unstfu:
  args:
    - '@user'
  desc: Unshuts a user up in the channel.
  params:
    - &ref_635
      desc: The user to unshut up
      name: user
      optional: true
      type: IGuildUser
unstfu_IGuildUser:
  args:
    - '@user'
  desc: Unshuts a user up in the channel.
  params:
    - *ref_635
unstfu_IGuildUser_1:
  args:
    - '@user'
  desc: Unshuts a user up in the channel.
  params:
    - *ref_635
unstfu_IGuildUser_2:
  args:
    - '@user'
  desc: Unshuts a user up in the channel.
  params:
    - *ref_635
untimeout:
  args:
    - '@user'
  desc: Removes a timeout from a user.
  params:
    - &ref_636
      desc: The user to warn
      name: user
      optional: true
      type: IGuildUser
untimeout_IGuildUser:
  args:
    - '@user'
  desc: Removes a timeout from a user.
  params:
    - *ref_636
untimeout_IGuildUser_1:
  args:
    - '@user'
  desc: Removes a timeout from a user.
  params:
    - *ref_636
untimeout_IGuildUser_2:
  args:
    - '@user'
  desc: Removes a timeout from a user.
  params:
    - *ref_636
update:
  args:
    - ''
  desc: Defines the set of user statuses that can be programmatically assigned.
  params: [ ]
update_noparams:
  args:
    - ''
  desc: Indicates the user is idle and may be away from their device.
  params: [ ]
update_noparams_1:
  args:
    - ''
  desc: >-
    Initializes a new instance of the OwnerOnly class, intended for owner-only
    operations within the Mewdeko bot framework.
  params: [ ]
update_noparams_2:
  args:
    - ''
  desc: Indicates the user is idle and may be away from their device.
  params: [ ]
urbandict:
  args:
    - null
  desc: Searches the Urban Dictionary and displays definitions for a given term.
  params:
    - *ref_1
urbandict_=:
  args:
    - null
  desc: Execute the UrbanDict command
  params:
    - *ref_1
urbandict_=_1:
  args:
    - null
  desc: Searches the Urban Dictionary and displays definitions for a given term.
  params:
    - *ref_1
urbandict_=_2:
  args:
    - null
  desc: Execute the UrbanDict command
  params:
    - *ref_1
userblacklist:
  args:
    - action id text
    - action id
  desc: Blacklists or unblacklists a user by their ID, with an optional reason.
  params:
    - *ref_122
    - *ref_123
    - *ref_124
userblacklist_AddRemove_IUser_string:
  args:
    - action @user text
    - action @user
  desc: >-
    Blacklists or unblacklists a user by their user object, with an optional
    reason.
  params:
    - *ref_122
    - &ref_637
      desc: The user object.
      name: usr
      optional: false
      type: IUser
    - *ref_124
userblacklist_AddRemove_IUser_string_1:
  args:
    - action @user text
    - action @user
  desc: Execute the UserBlacklist command
  params:
    - *ref_122
    - *ref_637
    - *ref_124
userblacklist_AddRemove_IUser_string_2:
  args:
    - action @user text
    - action @user
  desc: >-
    Blacklists or unblacklists a user by their user object, with an optional
    reason.
  params:
    - *ref_122
    - *ref_637
    - *ref_124
userblacklist_AddRemove_IUser_string_3:
  args:
    - action @user text
    - action @user
  desc: Execute the UserBlacklist command
  params:
    - *ref_122
    - *ref_637
    - *ref_124
userblacklist_AddRemove_ulong_string:
  args:
    - action id text
    - action id
  desc: Execute the UserBlacklist command
  params:
    - *ref_122
    - *ref_123
    - *ref_124
userblacklist_AddRemove_ulong_string_1:
  args:
    - action id text
    - action id
  desc: >-
    Defines permission-related commands, including user, channel, and server
    blacklist operations.
  params:
    - *ref_122
    - *ref_638
    - *ref_124
userblacklist_AddRemove_ulong_string_2:
  args:
    - action id text
    - action id
  desc: Execute the UserBlacklist command
  params:
    - *ref_122
    - *ref_638
    - *ref_124
userid:
  args:
    - null
  desc: Gets the user id of a specified user.
  params:
    - *ref_1
userid_=:
  args:
    - null
  desc: Gets the user id of a specified user.
  params:
    - *ref_1
userid_=_1:
  args:
    - null
  desc: Gets the user id of a specified user.
  params:
    - *ref_1
userid_=_2:
  args:
    - null
  desc: Gets the user id of a specified user.
  params:
    - *ref_1
userinfo:
  args:
    - null
  desc: Displays detailed information about a specified user or the command invoker.
  params:
    - *ref_1
userinfo_=:
  args:
    - null
  desc: Displays detailed information about a specified user or the command invoker.
  params:
    - *ref_1
userinfo_=_1:
  args:
    - null
  desc: Displays detailed information about a specified user or the command invoker.
  params:
    - *ref_1
userinfo_=_2:
  args:
    - null
  desc: Displays detailed information about a specified user or the command invoker.
  params:
    - *ref_1
usermessages:
  args:
    - null
  desc: Execute the UserMessages command
  params:
    - *ref_1
usermessages_=:
  args:
    - null
  desc: Execute the UserMessages command
  params:
    - *ref_1
usermessages_=_1:
  args:
    - null
  desc: Commands for message counts
  params:
    - *ref_1
usermessages_=_2:
  args:
    - null
  desc: Execute the UserMessages command
  params:
    - *ref_1
userstatsoptout:
  args:
    - ''
  desc: Toggles the user's opt-out status for command statistics collection.
  params: [ ]
userstatsoptout_noparams:
  args:
    - ''
  desc: Toggles the user's opt-out status for command statistics collection.
  params: [ ]
userstatsoptout_noparams_1:
  args:
    - ''
  desc: Toggles the user's opt-out status for command statistics collection.
  params: [ ]
userstatsoptout_noparams_2:
  args:
    - ''
  desc: Toggles the user's opt-out status for command statistics collection.
  params: [ ]
usrcmd:
  args:
    - command action @user
  desc: Adds or removes user-specific permissions for a specific command.
  params:
    - *ref_120
    - *ref_61
    - &ref_639
      desc: The user to set permissions for.
      name: user
      optional: false
      type: IGuildUser
usrcmd_CommandOrCrInfo_PermissionAction_IGuildUser:
  args:
    - command action @user
  desc: Adds or removes user-specific permissions for a specific command.
  params:
    - *ref_120
    - *ref_61
    - *ref_639
usrcmd_CommandOrCrInfo_PermissionAction_IGuildUser_1:
  args:
    - command action @user
  desc: Adds or removes user-specific permissions for a specific command.
  params:
    - *ref_120
    - *ref_61
    - *ref_639
usrcmd_CommandOrCrInfo_PermissionAction_IGuildUser_2:
  args:
    - command action @user
  desc: Adds or removes user-specific permissions for a specific command.
  params:
    - *ref_120
    - *ref_61
    - *ref_639
usrmdl:
  args:
    - module action @user
  desc: Adds or removes user-specific permissions for a specific module.
  params:
    - *ref_121
    - *ref_61
    - *ref_639
usrmdl_ModuleOrCrInfo_PermissionAction_IGuildUser:
  args:
    - module action @user
  desc: Adds or removes user-specific permissions for a specific module.
  params:
    - *ref_121
    - *ref_61
    - *ref_639
usrmdl_ModuleOrCrInfo_PermissionAction_IGuildUser_1:
  args:
    - module action @user
  desc: Adds or removes user-specific permissions for a specific module.
  params:
    - *ref_121
    - *ref_61
    - *ref_639
usrmdl_ModuleOrCrInfo_PermissionAction_IGuildUser_2:
  args:
    - module action @user
  desc: Adds or removes user-specific permissions for a specific module.
  params:
    - *ref_121
    - *ref_61
    - *ref_639
vaporwave:
  args:
    - true
  desc: Toggles the vaporwave effect for the current track.
  params:
    - *ref_57
vaporwave_=:
  args:
    - true
  desc: Toggles the vaporwave effect for the current track.
  params:
    - *ref_57
vaporwave_=_1:
  args:
    - true
  desc: Toggles the vaporwave effect for the current track.
  params:
    - *ref_57
vaporwave_=_2:
  args:
    - true
  desc: Toggles the vaporwave effect for the current track.
  params:
    - *ref_57
vcheck:
  args:
    - null
  desc: Checks a url for viruses using the virustotal api.
  params:
    - *ref_1
vcheck_=:
  args:
    - null
  desc: Checks a url for viruses using the virustotal api.
  params:
    - *ref_1
vcheck_=_1:
  args:
    - null
  desc: Checks a url for viruses using the virustotal api.
  params:
    - *ref_1
vcheck_=_2:
  args:
    - null
  desc: Checks a url for viruses using the virustotal api.
  params:
    - *ref_1
vcrole:
  args:
    - vchan null
    - vchan
  desc: Adds or removes a role from a voice channel.
  params:
    - &ref_640
      desc: The channel you want to manage a role for
      name: vchan
      optional: false
      type: SocketGuildChannel
    - *ref_1
vcrole_=:
  args:
    - null
  desc: Binds or unbinds a role from a voice channel while in a voice channel.
  params:
    - *ref_1
vcrole_=_1:
  args:
    - null
  desc: Binds or unbinds a role from a voice channel while in a voice channel.
  params:
    - *ref_1
vcrole_=_2:
  args:
    - null
  desc: Binds or unbinds a role from a voice channel while in a voice channel.
  params:
    - *ref_1
vcrole_=_3:
  args:
    - null
  desc: Binds or unbinds a role from a voice channel while in a voice channel.
  params:
    - *ref_1
vcrole_SocketGuildChannel_=:
  args:
    - vchan null
    - vchan
  desc: Adds or removes a role from a voice channel.
  params:
    - *ref_640
    - *ref_1
vcrole_SocketGuildChannel_=_1:
  args:
    - vchan null
    - vchan
  desc: Adds or removes a role from a voice channel.
  params:
    - *ref_640
    - *ref_1
vcrole_SocketGuildChannel_=_2:
  args:
    - vchan null
    - vchan
  desc: Adds or removes a role from a voice channel.
  params:
    - *ref_640
    - *ref_1
vcrolelist:
  args:
    - ''
  desc: List all voice channel roles for this guild.
  params: [ ]
vcrolelist_noparams:
  args:
    - ''
  desc: List all voice channel roles for this guild.
  params: [ ]
vcrolelist_noparams_1:
  args:
    - ''
  desc: List all voice channel roles for this guild.
  params: [ ]
vcrolelist_noparams_2:
  args:
    - ''
  desc: List all voice channel roles for this guild.
  params: [ ]
vcrolerm:
  args:
    - vcid
  desc: Unbinds a role from a voice channel.
  params:
    - &ref_641
      desc: The voice channel id
      name: vcId
      optional: false
      type: ulong
vcrolerm_ulong:
  args:
    - vcid
  desc: Unbinds a role from a voice channel.
  params:
    - *ref_641
vcrolerm_ulong_1:
  args:
    - vcid
  desc: Module for managing voice channel roles.
  params:
    - *ref_641
vcrolerm_ulong_2:
  args:
    - vcid
  desc: Module for managing voice channel roles.
  params:
    - *ref_641
verbose:
  args:
    - null
  desc: >-
    Sets whether commands should throw an error based on what the issue is when
    using a command.
  params:
    - *ref_1
verbose_=:
  args:
    - null
  desc: >-
    Sets whether commands should throw an error based on what the issue is when
    using a command.
  params:
    - *ref_1
verbose_=_1:
  args:
    - null
  desc: >-
    Sets whether commands should throw an error based on what the issue is when
    using a command.
  params:
    - *ref_1
verbose_=_2:
  args:
    - null
  desc: >-
    Sets whether commands should throw an error based on what the issue is when
    using a command.
  params:
    - *ref_1
verboseerror:
  args:
    - null
  desc: Toggles verbose error messages for commands.
  params:
    - *ref_1
verboseerror_=:
  args:
    - null
  desc: Toggles verbose error messages for commands.
  params:
    - *ref_1
verboseerror_=_1:
  args:
    - null
  desc: Contains commands for managing verbose error messages.
  params:
    - *ref_1
verboseerror_=_2:
  args:
    - null
  desc: Contains commands for managing verbose error messages.
  params:
    - *ref_1
vibrato:
  args:
    - true
  desc: Applies or removes a vibrato filter that creates a wavering effect in pitch.
  params:
    - *ref_57
vibrato_=:
  args:
    - true
  desc: Execute the Vibrato command
  params:
    - *ref_57
vibrato_=_1:
  args:
    - true
  desc: Applies or removes a vibrato filter that creates a wavering effect in pitch.
  params:
    - *ref_57
vibrato_=_2:
  args:
    - true
  desc: Execute the Vibrato command
  params:
    - *ref_57
viewrolestates:
  args:
    - ''
  desc: Views all user role states in the server.
  params: [ ]
viewrolestatessettings:
  args:
    - ''
  desc: Displays the current settings for the role states feature.
  params: [ ]
viewrolestatessettings_noparams:
  args:
    - ''
  desc: Displays the current settings for the role states feature.
  params: [ ]
viewrolestatessettings_noparams_1:
  args:
    - ''
  desc: Displays the current settings for the role states feature.
  params: [ ]
viewrolestatessettings_noparams_2:
  args:
    - ''
  desc: Displays the current settings for the role states feature.
  params: [ ]
viewuserrolestates:
  args:
    - ''
  desc: Displays the role states for all users.
  params: [ ]
viewuserrolestates_noparams:
  args:
    - ''
  desc: Displays the role states for all users.
  params: [ ]
viewuserrolestates_noparams_1:
  args:
    - ''
  desc: Displays the role states for all users.
  params: [ ]
viewuserrolestates_noparams_2:
  args:
    - ''
  desc: Displays the role states for all users.
  params: [ ]
vinfo:
  args:
    - null
  desc: >-
    Displays information about a specified voice channel or the user's current
    voice channel.
  params:
    - *ref_1
vinfo_=:
  args:
    - null
  desc: >-
    Displays information about a specified voice channel or the user's current
    voice channel.
  params:
    - *ref_1
vinfo_=_1:
  args:
    - null
  desc: >-
    Displays information about a specified voice channel or the user's current
    voice channel.
  params:
    - *ref_1
vinfo_=_2:
  args:
    - null
  desc: >-
    Displays information about a specified voice channel or the user's current
    voice channel.
  params:
    - *ref_1
voiceallow:
  args:
    - '@user'
  desc: Allows a specific user to join your locked voice channel.
  params:
    - &ref_642
      desc: ''
      name: target
      optional: false
      type: IGuildUser
voiceallow_IGuildUser:
  args:
    - '@user'
  desc: Unlocks your custom voice channel.
  params:
    - *ref_642
voiceallow_IGuildUser_1:
  args:
    - '@user'
  desc: Allows a specific user to join your locked voice channel.
  params:
    - *ref_642
voiceallow_IGuildUser_2:
  args:
    - '@user'
  desc: Unlocks your custom voice channel.
  params:
    - *ref_642
voicebitrate:
  args:
    - number
  desc: Sets the bitrate for your custom voice channel.
  params:
    - &ref_643
      desc: ''
      name: bitrate
      optional: false
      type: int
voicebitrate_int:
  args:
    - number
  desc: Sets the bitrate for your custom voice channel.
  params:
    - *ref_643
voicebitrate_int_1:
  args:
    - number
  desc: Sets the bitrate for your custom voice channel.
  params:
    - *ref_643
voicebitrate_int_2:
  args:
    - number
  desc: Sets the bitrate for your custom voice channel.
  params:
    - *ref_643
voicechannels:
  args:
    - ''
  desc: Lists active custom voice channels.
  params: [ ]
voicechannels_noparams:
  args:
    - ''
  desc: Lists active custom voice channels.
  params: [ ]
voicechannels_noparams_1:
  args:
    - ''
  desc: Lists active custom voice channels.
  params: [ ]
voicechannels_noparams_2:
  args:
    - ''
  desc: Lists active custom voice channels.
  params: [ ]
voiceclaim:
  args:
    - ''
  desc: Claims ownership of a custom voice channel if the owner is not present.
  params: [ ]
voiceclaim_noparams:
  args:
    - ''
  desc: Claims ownership of a custom voice channel if the owner is not present.
  params: [ ]
voiceclaim_noparams_1:
  args:
    - ''
  desc: Claims ownership of a custom voice channel if the owner is not present.
  params: [ ]
voiceclaim_noparams_2:
  args:
    - ''
  desc: Claims ownership of a custom voice channel if the owner is not present.
  params: [ ]
voiceconfig:
  args:
    - null null
  desc: Configures the custom voice settings.
  params:
    - *ref_1
    - *ref_1
voiceconfig_=_=:
  args:
    - null null
  desc: Configures the custom voice settings.
  params:
    - *ref_1
    - *ref_1
voiceconfig_=_=_1:
  args:
    - null null
  desc: Configures the custom voice settings.
  params:
    - *ref_1
    - *ref_1
voiceconfig_=_=_2:
  args:
    - null null
  desc: Configures the custom voice settings.
  params:
    - *ref_1
    - *ref_1
voicecontrols:
  args:
    - ''
  desc: Shows interactive controls for managing your custom voice channel.
  params: [ ]
voicecontrols_noparams:
  args:
    - ''
  desc: Shows interactive controls for managing your custom voice channel.
  params: [ ]
voicecontrols_noparams_1:
  args:
    - ''
  desc: Commands for managing custom voice channels.
  params: [ ]
voicecontrols_noparams_2:
  args:
    - ''
  desc: Commands for managing custom voice channels.
  params: [ ]
voicedeny:
  args:
    - '@user'
  desc: Denies a specific user from joining your voice channel.
  params:
    - *ref_642
voicedeny_IGuildUser:
  args:
    - '@user'
  desc: Denies a specific user from joining your voice channel.
  params:
    - *ref_642
voicedeny_IGuildUser_1:
  args:
    - '@user'
  desc: Denies a specific user from joining your voice channel.
  params:
    - *ref_642
voicedeny_IGuildUser_2:
  args:
    - '@user'
  desc: Denies a specific user from joining your voice channel.
  params:
    - *ref_642
voicekeepalive:
  args:
    - true
  desc: Sets the channel to be kept alive even when empty.
  params:
    - *ref_57
voicekeepalive_=:
  args:
    - true
  desc: Sets the channel to be kept alive even when empty.
  params:
    - *ref_57
voicekeepalive_=_1:
  args:
    - true
  desc: Sets the channel to be kept alive even when empty.
  params:
    - *ref_57
voicekeepalive_=_2:
  args:
    - true
  desc: Sets the channel to be kept alive even when empty.
  params:
    - *ref_57
voicelimit:
  args:
    - number
  desc: Sets the user limit for your custom voice channel.
  params:
    - &ref_644
      desc: ''
      name: limit
      optional: false
      type: int
voicelimit_int:
  args:
    - number
  desc: Sets the user limit for your custom voice channel.
  params:
    - *ref_644
voicelimit_int_1:
  args:
    - number
  desc: Sets the user limit for your custom voice channel.
  params:
    - *ref_644
voicelimit_int_2:
  args:
    - number
  desc: Sets the user limit for your custom voice channel.
  params:
    - *ref_644
voicelock:
  args:
    - true
  desc: Locks or unlocks your custom voice channel.
  params:
    - *ref_57
voicelock_=:
  args:
    - true
  desc: Locks or unlocks your custom voice channel.
  params:
    - *ref_57
voicelock_=_1:
  args:
    - true
  desc: Locks or unlocks your custom voice channel.
  params:
    - *ref_57
voicelock_=_2:
  args:
    - true
  desc: Locks or unlocks your custom voice channel.
  params:
    - *ref_57
voicemute:
  args:
    - time @user ""
    - time
  desc: Mutes a user in voice and not chat.
  params:
    - *ref_129
    - *ref_127
    - *ref_126
voicemute_IGuildUser_=:
  args:
    - '@user ""'
  desc: Mutes a user in voice and not chat for a specified amount of time.
  params:
    - *ref_127
    - *ref_126
voicemute_IGuildUser_=_1:
  args:
    - '@user ""'
  desc: Mutes a user in voice and not chat for a specified amount of time.
  params:
    - *ref_128
    - *ref_126
voicemute_IGuildUser_=_2:
  args:
    - '@user ""'
  desc: Mutes a user in voice and not chat for a specified amount of time.
  params:
    - *ref_127
    - *ref_126
voicemute_IGuildUser_=_3:
  args:
    - '@user ""'
  desc: Mutes a user in voice and not chat for a specified amount of time.
  params:
    - *ref_128
    - *ref_126
voicemute_StoopidTime_IGuildUser_=:
  args:
    - time @user ""
    - time
  desc: Mutes a user in voice and not chat.
  params:
    - *ref_129
    - *ref_127
    - *ref_126
voicemute_StoopidTime_IGuildUser_=_1:
  args:
    - time @user ""
    - time
  desc: Mutes a user in voice and not chat.
  params:
    - *ref_129
    - *ref_127
    - *ref_126
voicemute_StoopidTime_IGuildUser_=_2:
  args:
    - time @user ""
    - time
  desc: Mutes a user in voice and not chat.
  params:
    - *ref_129
    - *ref_127
    - *ref_126
voicepreferences:
  args:
    - ''
  desc: Sets your voice channel preferences.
  params: [ ]
voicepreferences_noparams:
  args:
    - ''
  desc: Sets your voice channel preferences.
  params: [ ]
voicepreferences_noparams_1:
  args:
    - ''
  desc: Sets your voice channel preferences.
  params: [ ]
voicepreferences_noparams_2:
  args:
    - ''
  desc: Sets your voice channel preferences.
  params: [ ]
voiceprefsbitrate:
  args:
    - null
  desc: Sets your preferred bitrate for custom voice channels.
  params:
    - *ref_1
voiceprefsbitrate_=:
  args:
    - null
  desc: Sets your preferred bitrate for custom voice channels.
  params:
    - *ref_1
voiceprefsbitrate_=_1:
  args:
    - null
  desc: Sets your preferred bitrate for custom voice channels.
  params:
    - *ref_1
voiceprefsbitrate_=_2:
  args:
    - null
  desc: Sets your preferred bitrate for custom voice channels.
  params:
    - *ref_1
voiceprefskeepalive:
  args:
    - null
  desc: Sets your preferred keep-alive status for custom voice channels.
  params:
    - *ref_1
voiceprefskeepalive_=:
  args:
    - null
  desc: Sets your preferred keep-alive status for custom voice channels.
  params:
    - *ref_1
voiceprefskeepalive_=_1:
  args:
    - null
  desc: Sets your preferred keep-alive status for custom voice channels.
  params:
    - *ref_1
voiceprefskeepalive_=_2:
  args:
    - null
  desc: Sets your preferred keep-alive status for custom voice channels.
  params:
    - *ref_1
voiceprefslimit:
  args:
    - null
  desc: Sets your preferred user limit for custom voice channels.
  params:
    - *ref_1
voiceprefslimit_=:
  args:
    - null
  desc: Sets your preferred user limit for custom voice channels.
  params:
    - *ref_1
voiceprefslimit_=_1:
  args:
    - null
  desc: Sets your preferred user limit for custom voice channels.
  params:
    - *ref_1
voiceprefslimit_=_2:
  args:
    - null
  desc: Sets your preferred user limit for custom voice channels.
  params:
    - *ref_1
voiceprefslock:
  args:
    - null
  desc: Sets your preferred lock status for custom voice channels.
  params:
    - *ref_1
voiceprefslock_=:
  args:
    - null
  desc: Sets your preferred lock status for custom voice channels.
  params:
    - *ref_1
voiceprefslock_=_1:
  args:
    - null
  desc: Sets your preferred lock status for custom voice channels.
  params:
    - *ref_1
voiceprefslock_=_2:
  args:
    - null
  desc: Sets your preferred lock status for custom voice channels.
  params:
    - *ref_1
voiceprefsname:
  args:
    - null
  desc: Sets your preferred name format for custom voice channels.
  params:
    - *ref_1
voiceprefsname_=:
  args:
    - null
  desc: Sets your preferred name format for custom voice channels.
  params:
    - *ref_1
voiceprefsname_=_1:
  args:
    - null
  desc: Sets your preferred name format for custom voice channels.
  params:
    - *ref_1
voiceprefsname_=_2:
  args:
    - null
  desc: Sets your preferred name format for custom voice channels.
  params:
    - *ref_1
voiceprefsreset:
  args:
    - ''
  desc: Resets all your voice channel preferences.
  params: [ ]
voiceprefsreset_noparams:
  args:
    - ''
  desc: Resets all your voice channel preferences.
  params: [ ]
voiceprefsreset_noparams_1:
  args:
    - ''
  desc: Resets all your voice channel preferences.
  params: [ ]
voiceprefsreset_noparams_2:
  args:
    - ''
  desc: Resets all your voice channel preferences.
  params: [ ]
voicerename:
  args:
    - text
  desc: Renames your custom voice channel.
  params:
    - *ref_159
voicerename_string:
  args:
    - text
  desc: Renames your custom voice channel.
  params:
    - *ref_159
voicerename_string_1:
  args:
    - text
  desc: Renames your custom voice channel.
  params:
    - *ref_159
voicerename_string_2:
  args:
    - text
  desc: Renames your custom voice channel.
  params:
    - *ref_159
voicetransfer:
  args:
    - '@user'
  desc: Transfers ownership of your custom voice channel to another user.
  params:
    - *ref_642
voicetransfer_IGuildUser:
  args:
    - '@user'
  desc: Transfers ownership of your custom voice channel to another user.
  params:
    - *ref_642
voicetransfer_IGuildUser_1:
  args:
    - '@user'
  desc: Transfers ownership of your custom voice channel to another user.
  params:
    - *ref_642
voicetransfer_IGuildUser_2:
  args:
    - '@user'
  desc: Transfers ownership of your custom voice channel to another user.
  params:
    - *ref_642
voiceunlock:
  args:
    - ''
  desc: Unlocks your custom voice channel.
  params: [ ]
voiceunlock_noparams:
  args:
    - ''
  desc: Unlocks your custom voice channel.
  params: [ ]
voiceunlock_noparams_1:
  args:
    - ''
  desc: Unlocks your custom voice channel.
  params: [ ]
voiceunlock_noparams_2:
  args:
    - ''
  desc: Unlocks your custom voice channel.
  params: [ ]
voiceunmute:
  args:
    - '@user ""'
  desc: Unmutes a user in voice.
  params:
    - *ref_128
    - *ref_126
voiceunmute_IGuildUser_=:
  args:
    - '@user ""'
  desc: Unmutes a user in voice.
  params:
    - *ref_128
    - *ref_126
voiceunmute_IGuildUser_=_1:
  args:
    - '@user ""'
  desc: Unmutes a user in voice.
  params:
    - *ref_128
    - *ref_126
voiceunmute_IGuildUser_=_2:
  args:
    - '@user ""'
  desc: Unmutes a user in voice.
  params:
    - *ref_128
    - *ref_126
volume:
  args:
    - number
  desc: Sets the players volume
  params:
    - &ref_645
      desc: The volume to set
      name: volume
      optional: false
      type: int
volume_int:
  args:
    - number
  desc: Sets the players volume
  params:
    - *ref_645
vote:
  args:
    - ''
  desc: Shows a link to vote for mewdeko.
  params: [ ]
vote_noparams:
  args:
    - ''
  desc: Shows the source code link for the bot.
  params: [ ]
vote_noparams_1:
  args:
    - ''
  desc: Shows a link to vote for mewdeko.
  params: [ ]
vote_noparams_2:
  args:
    - ''
  desc: Shows the source code link for the bot.
  params: [ ]
vote_noparams_3:
  args:
    - ''
  desc: Shows a link to vote for mewdeko.
  params: [ ]
vote_noparams_4:
  args:
    - ''
  desc: Shows a link to vote for mewdeko.
  params: [ ]
vote_noparams_5:
  args:
    - ''
  desc: Shows a link to vote for mewdeko.
  params: [ ]
vote_noparams_6:
  args:
    - ''
  desc: Shows a link to vote for mewdeko.
  params: [ ]
votechannel:
  args:
    - channel
  desc: >-
    Sets the specified text channel as the vote channel where all vote
    confirmations will be sent.
  params:
    - &ref_646
      desc: The text channel to set as the vote channel.
      name: channel
      optional: false
      type: ITextChannel
votechannel_ITextChannel:
  args:
    - channel
  desc: >-
    Sets the specified text channel as the vote channel where all vote
    confirmations will be sent.
  params:
    - *ref_646
votechannel_ITextChannel_1:
  args:
    - channel
  desc: >-
    Contains commands related to managing and interacting with voting features
    in the server.
  params:
    - *ref_646
votechannel_ITextChannel_2:
  args:
    - channel
  desc: >-
    Sets the specified text channel as the vote channel where all vote
    confirmations will be sent.
  params:
    - *ref_646
votemessage:
  args:
    - null
  desc: >-
    Sets a custom message to be sent when a user votes or previews the current
    vote message.
  params:
    - *ref_1
votemessage_=:
  args:
    - null
  desc: >-
    Sets a custom message to be sent when a user votes or previews the current
    vote message.
  params:
    - *ref_1
votemessage_=_1:
  args:
    - null
  desc: >-
    Sets a custom message to be sent when a user votes or previews the current
    vote message.
  params:
    - *ref_1
votemessage_=_2:
  args:
    - null
  desc: >-
    Sets a custom message to be sent when a user votes or previews the current
    vote message.
  params:
    - *ref_1
votepassword:
  args:
    - ''
  desc: >-
    Initiates a confirmation process for setting a new vote password, cautioning
    the user about its security.
  params: [ ]
votepassword_noparams:
  args:
    - ''
  desc: >-
    Initiates a confirmation process for setting a new vote password, cautioning
    the user about its security.
  params: [ ]
votepassword_noparams_1:
  args:
    - ''
  desc: >-
    Initiates a confirmation process for setting a new vote password, cautioning
    the user about its security.
  params: [ ]
votepassword_noparams_2:
  args:
    - ''
  desc: >-
    Initiates a confirmation process for setting a new vote password, cautioning
    the user about its security.
  params: [ ]
voteroleadd:
  args:
    - '@role null'
    - '@role'
  desc: >-
    Adds a role to be granted to users when they vote, with an optional duration
    for the role to be automatically removed.
  params:
    - &ref_647
      desc: The role to add as a vote reward.
      name: role
      optional: false
      type: IRole
    - *ref_1
voteroleadd_IRole_=:
  args:
    - '@role null'
    - '@role'
  desc: >-
    Adds a role to be granted to users when they vote, with an optional duration
    for the role to be automatically removed.
  params:
    - *ref_647
    - *ref_1
voteroleadd_IRole_=_1:
  args:
    - '@role null'
    - '@role'
  desc: >-
    Adds a role to be granted to users when they vote, with an optional duration
    for the role to be automatically removed.
  params:
    - *ref_647
    - *ref_1
voteroleadd_IRole_=_2:
  args:
    - '@role null'
    - '@role'
  desc: >-
    Adds a role to be granted to users when they vote, with an optional duration
    for the role to be automatically removed.
  params:
    - *ref_647
    - *ref_1
voteroleedit:
  args:
    - '@role time'
  desc: Edits the duration for which a vote role is granted to users.
  params:
    - &ref_648
      desc: The role to edit.
      name: role
      optional: false
      type: IRole
    - &ref_649
      desc: The new duration for the role to be granted.
      name: time
      optional: false
      type: StoopidTime
voteroleedit_IRole_StoopidTime:
  args:
    - '@role time'
  desc: Edits the duration for which a vote role is granted to users.
  params:
    - *ref_648
    - *ref_649
voteroleedit_IRole_StoopidTime_1:
  args:
    - '@role time'
  desc: Edits the duration for which a vote role is granted to users.
  params:
    - *ref_648
    - *ref_649
voteroleedit_IRole_StoopidTime_2:
  args:
    - '@role time'
  desc: Edits the duration for which a vote role is granted to users.
  params:
    - *ref_648
    - *ref_649
voteroleremove:
  args:
    - '@role'
  desc: Removes a role from the list of roles to be granted to users when they vote.
  params:
    - &ref_650
      desc: The role to remove from vote rewards.
      name: role
      optional: false
      type: IRole
voteroleremove_IRole:
  args:
    - '@role'
  desc: Removes a role from the list of roles to be granted to users when they vote.
  params:
    - *ref_650
voteroleremove_IRole_1:
  args:
    - '@role'
  desc: Removes a role from the list of roles to be granted to users when they vote.
  params:
    - *ref_650
voteroleremove_IRole_2:
  args:
    - '@role'
  desc: Removes a role from the list of roles to be granted to users when they vote.
  params:
    - *ref_650
voterolesclear:
  args:
    - ''
  desc: Clears all roles that are granted to users when they vote.
  params: [ ]
voterolesclear_noparams:
  args:
    - ''
  desc: Clears all roles that are granted to users when they vote.
  params: [ ]
voterolesclear_noparams_1:
  args:
    - ''
  desc: Clears all roles that are granted to users when they vote.
  params: [ ]
voterolesclear_noparams_2:
  args:
    - ''
  desc: Clears all roles that are granted to users when they vote.
  params: [ ]
voteroleslist:
  args:
    - ''
  desc: Lists all roles that are granted to users when they vote.
  params: [ ]
voteroleslist_noparams:
  args:
    - ''
  desc: Lists all roles that are granted to users when they vote.
  params: [ ]
voteroleslist_noparams_1:
  args:
    - ''
  desc: Lists all roles that are granted to users when they vote.
  params: [ ]
voteroleslist_noparams_2:
  args:
    - ''
  desc: Lists all roles that are granted to users when they vote.
  params: [ ]
votes:
  args:
    - null
  desc: >-
    Displays the total number of votes cast by a specific user or the command
    invoker.
  params:
    - *ref_1
votes_=:
  args:
    - null
  desc: >-
    Displays the total number of votes cast by a specific user or the command
    invoker.
  params:
    - *ref_1
votes_=_1:
  args:
    - null
  desc: >-
    Displays the total number of votes cast by a specific user or the command
    invoker.
  params:
    - *ref_1
votes_=_2:
  args:
    - null
  desc: >-
    Displays the total number of votes cast by a specific user or the command
    invoker.
  params:
    - *ref_1
voteskip:
  args:
    - ''
  desc: Initiates or participates in a vote to skip the current track.
  params: [ ]
voteskip_noparams:
  args:
    - ''
  desc: Initiates or participates in a vote to skip the current track.
  params: [ ]
votesleaderboard:
  args:
    - false
  desc: >-
    Displays a leaderboard of users based on their vote counts, optionally
    filtering for votes within the current month.
  params:
    - *ref_181
votesleaderboard_=:
  args:
    - false
  desc: >-
    Displays a leaderboard of users based on their vote counts, optionally
    filtering for votes within the current month.
  params:
    - *ref_181
votesleaderboard_=_1:
  args:
    - false
  desc: >-
    Displays a leaderboard of users based on their vote counts, optionally
    filtering for votes within the current month.
  params:
    - *ref_181
votesleaderboard_=_2:
  args:
    - false
  desc: >-
    Displays a leaderboard of users based on their vote counts, optionally
    filtering for votes within the current month.
  params:
    - *ref_181
wait:
  args:
    - number
  desc: Provides a formatted text displaying the interval of an auto command.
  params:
    - &ref_651
      desc: The number of milliseconds to delay.
      name: miliseconds
      optional: false
      type: int
wait_int:
  args:
    - number
  desc: Execute the Wait command
  params:
    - *ref_651
wait_int_1:
  args:
    - number
  desc: Provides a formatted text displaying the interval of an auto command.
  params:
    - *ref_651
wait_int_2:
  args:
    - number
  desc: Execute the Wait command
  params:
    - *ref_651
war:
  args:
    - number
  desc: Play a card game of War against the bot.
  params:
    - desc: The amount to bet.
      name: betAmount
      optional: false
      type: long
warn:
  args:
    - '@user null'
  desc: Warns a user with an optional reason.
  params:
    - *ref_636
    - *ref_1
warn_IGuildUser_=:
  args:
    - '@user null'
  desc: Warns a user with an optional reason.
  params:
    - *ref_636
    - *ref_1
warn_IGuildUser_=_1:
  args:
    - '@user null'
  desc: Warns a user with an optional reason.
  params:
    - *ref_636
    - *ref_1
warn_IGuildUser_=_2:
  args:
    - '@user null'
  desc: Warns a user with an optional reason.
  params:
    - *ref_636
    - *ref_1
warnclear:
  args:
    - '@user 0'
  desc: Clears a user's warnings. If an index is provided, clears only that warning.
  params:
    - &ref_652
      desc: The user to clear warnings for
      name: user
      optional: true
      type: IGuildUser
    - *ref_90
warnclear_IGuildUser_=:
  args:
    - '@user 0'
  desc: Clears a user's warnings. If an index is provided, clears only that warning.
  params:
    - *ref_652
    - *ref_90
warnclear_IGuildUser_=_1:
  args:
    - '@user 0'
  desc: Clears a user's warnings. If an index is provided, clears only that warning.
  params:
    - *ref_652
    - *ref_90
warnclear_IGuildUser_=_2:
  args:
    - '@user 0'
  desc: Clears a user's warnings. If an index is provided, clears only that warning.
  params:
    - *ref_652
    - *ref_90
warnexpire:
  args:
    - number options
  desc: Sets the expiration time for warnings.
  params:
    - &ref_653
      desc: The number of days until warnings expire
      name: days
      optional: false
      type: int
    - &ref_654
      desc: The action to take when a warning expires
      name: options
      optional: false
      type: WarnExpireAction
warnexpire_int_WarnExpireAction:
  args:
    - number options
  desc: Sets the expiration time for warnings.
  params:
    - *ref_653
    - *ref_654
warnexpire_int_WarnExpireAction_1:
  args:
    - number options
  desc: Sets the expiration time for warnings.
  params:
    - *ref_653
    - *ref_654
warnexpire_int_WarnExpireAction_2:
  args:
    - number options
  desc: Sets the expiration time for warnings.
  params:
    - *ref_653
    - *ref_654
warnlog:
  args:
    - '@user'
  desc: Gets the warnlog for a user.
  params:
    - *ref_320
warnlog_IGuildUser:
  args:
    - '@user'
  desc: Gets the warnlog for a user.
  params:
    - *ref_320
warnlog_IGuildUser_1:
  args:
    - '@user'
  desc: Gets the warnlog for a user.
  params:
    - *ref_320
warnlog_IGuildUser_2:
  args:
    - '@user'
  desc: Gets the warnlog for a user.
  params:
    - *ref_320
warnlog_ulong:
  args:
    - userid
  desc: Gets the warnlog for the user who invoked the command.
  params:
    - &ref_655
      desc: ''
      name: userId
      optional: false
      type: ulong
warnlog_ulong_1:
  args:
    - userid
  desc: Gets the warnlog for the user who invoked the command.
  params:
    - *ref_655
warnlog_ulong_2:
  args:
    - userid
  desc: Gets the warnlog for the user who invoked the command.
  params:
    - *ref_655
warnlog_ulong_3:
  args:
    - userid
  desc: Gets the warnlog for the user who invoked the command.
  params:
    - *ref_655
warnlogall:
  args:
    - ''
  desc: Gets how many warnings each user has.
  params: [ ]
warnlogall_noparams:
  args:
    - ''
  desc: Gets how many warnings each user has.
  params: [ ]
warnlogall_noparams_1:
  args:
    - ''
  desc: Gets how many warnings each user has.
  params: [ ]
warnlogall_noparams_2:
  args:
    - ''
  desc: Gets how many warnings each user has.
  params: [ ]
warnpunish:
  args:
    - number addrole @role null
    - number addrole @role
    - addrole
  desc: Sets a punishment for a certain number of warnings.
  params:
    - *ref_322
    - &ref_656
      desc: 'The addrole keyword Possible values: AddRole'
      name: _
      optional: false
      type: AddRole
    - &ref_657
      desc: The role to add
      name: role
      optional: false
      type: IRole
    - *ref_1
warnpunish_int:
  args:
    - number
  desc: Removes a punishment for a certain number of warnings.
  params:
    - *ref_322
warnpunish_int_1:
  args:
    - number
  desc: Removes a punishment for a certain number of warnings.
  params:
    - *ref_322
warnpunish_int_2:
  args:
    - number
  desc: Removes a punishment for a certain number of warnings.
  params:
    - *ref_322
warnpunish_int_3:
  args:
    - number
  desc: Removes a punishment for a certain number of warnings.
  params:
    - *ref_322
warnpunish_int_AddRole_IRole_=:
  args:
    - number addrole @role null
    - number addrole @role
    - addrole
  desc: Sets a punishment for a certain number of warnings.
  params:
    - *ref_322
    - *ref_656
    - *ref_657
    - *ref_1
warnpunish_int_AddRole_IRole_=_1:
  args:
    - number addrole @role null
    - number addrole @role
    - addrole
  desc: Sets a punishment for a certain number of warnings.
  params:
    - *ref_322
    - *ref_656
    - *ref_657
    - *ref_1
warnpunish_int_AddRole_IRole_=_2:
  args:
    - number addrole @role null
    - number addrole @role
    - addrole
  desc: Sets a punishment for a certain number of warnings.
  params:
    - *ref_322
    - *ref_656
    - *ref_657
    - *ref_1
warnpunish_int_PunishmentAction_=:
  args:
    - number punish null
    - number punish
  desc: Sets a punishment for a certain number of warnings.
  params:
    - *ref_322
    - &ref_658
      desc: The punishment to apply
      name: punish
      optional: false
      type: PunishmentAction
    - *ref_1
warnpunish_int_PunishmentAction_=_1:
  args:
    - number punish null
    - number punish
  desc: Sets a punishment for a certain number of warnings.
  params:
    - *ref_322
    - *ref_658
    - *ref_1
warnpunish_int_PunishmentAction_=_2:
  args:
    - number punish null
    - number punish
  desc: Sets a punishment for a certain number of warnings.
  params:
    - *ref_322
    - *ref_658
    - *ref_1
warnpunish_int_PunishmentAction_=_3:
  args:
    - number punish null
    - number punish
  desc: Sets a punishment for a certain number of warnings.
  params:
    - *ref_322
    - *ref_658
    - *ref_1
warnpunishlist:
  args:
    - ''
  desc: Lists the warn punishments for the guild.
  params: [ ]
warnpunishlist_noparams:
  args:
    - ''
  desc: Lists the warn punishments for the guild.
  params: [ ]
warnpunishlist_noparams_1:
  args:
    - ''
  desc: Lists the warn punishments for the guild.
  params: [ ]
warnpunishlist_noparams_2:
  args:
    - ''
  desc: Lists the warn punishments for the guild.
  params: [ ]
wave:
  args:
    - null
  desc: Waves.
  params:
    - *ref_1
wave_=:
  args:
    - null
  desc: Waves.
  params:
    - *ref_1
wave_=_1:
  args:
    - null
  desc: Waves.
  params:
    - *ref_1
wave_=_2:
  args:
    - null
  desc: Waves.
  params:
    - *ref_1
weather:
  args:
    - text
  desc: Fetches and displays weather information for a given location query.
  params:
    - &ref_659
      desc: The location query to search for weather information.
      name: query
      optional: false
      type: string
weather_string:
  args:
    - text
  desc: Execute the Weather command
  params:
    - *ref_659
weather_string_1:
  args:
    - text
  desc: Fetches and displays weather information for a given location query.
  params:
    - *ref_659
weather_string_2:
  args:
    - text
  desc: Execute the Weather command
  params:
    - *ref_659
wheelfortune:
  args:
    - number text
  desc: Spin the Wheel of Fortune for prizes.
  params:
    - desc: The amount to bet.
      name: betAmount
      optional: false
      type: long
    - desc: The type of wheel (classic, risky, balanced).
      name: wheelType
      optional: true
      type: string
whoinvited:
  args:
    - null
  desc: Displays who invited a specific user to the guild.
  params:
    - *ref_1
whoinvited_=:
  args:
    - null
  desc: Displays who invited a specific user to the guild.
  params:
    - *ref_1
whoinvited_=_1:
  args:
    - null
  desc: Displays who invited a specific user to the guild.
  params:
    - *ref_1
whoinvited_=_2:
  args:
    - null
  desc: Displays who invited a specific user to the guild.
  params:
    - *ref_1
whosplaying:
  args:
    - text
  desc: Shows a list of users playing a specified game.
  params:
    - &ref_660
      desc: The game to search for.
      name: game
      optional: true
      type: string
whosplaying_string:
  args:
    - text
  desc: Shows a list of users playing a specified game.
  params:
    - *ref_660
whosplaying_string_1:
  args:
    - text
  desc: Shows a list of users playing a specified game.
  params:
    - *ref_660
whosplaying_string_2:
  args:
    - text
  desc: Shows a list of users playing a specified game.
  params:
    - *ref_660
wiki:
  args:
    - null
  desc: Searches for and displays Wikipedia information based on the provided query.
  params:
    - *ref_1
wiki_=:
  args:
    - null
  desc: Execute the Wiki command
  params:
    - *ref_1
wiki_=_1:
  args:
    - null
  desc: Searches for and displays Wikipedia information based on the provided query.
  params:
    - *ref_1
wiki_=_2:
  args:
    - null
  desc: Execute the Wiki command
  params:
    - *ref_1
wikia:
  args:
    - text text
  desc: >-
    Fetches and displays detailed information about a specific topic from a
    wikia.
  params:
    - &ref_661
      desc: The target wikia site.
      name: target
      optional: false
      type: string
    - &ref_662
      desc: The search term for the wikia.
      name: query
      optional: false
      type: string
wikia_string_string:
  args:
    - text text
  desc: Execute the Wikia command
  params:
    - *ref_661
    - *ref_662
wikia_string_string_1:
  args:
    - text text
  desc: >-
    Fetches and displays detailed information about a specific topic from a
    wikia.
  params:
    - *ref_661
    - *ref_662
wikia_string_string_2:
  args:
    - text text
  desc: Execute the Wikia command
  params:
    - *ref_661
    - *ref_662
wink:
  args:
    - null
  desc: Winks.
  params:
    - *ref_1
wink_=:
  args:
    - null
  desc: Winks.
  params:
    - *ref_1
wink_=_1:
  args:
    - null
  desc: Winks.
  params:
    - *ref_1
wink_=_2:
  args:
    - null
  desc: Winks.
  params:
    - *ref_1
wowjoke:
  args:
    - ''
  desc: Retrieves a joke related to World of Warcraft.
  params: [ ]
wowjoke_noparams:
  args:
    - ''
  desc: Retrieves a joke related to World of Warcraft.
  params: [ ]
wowjoke_noparams_1:
  args:
    - ''
  desc: Retrieves a joke related to World of Warcraft.
  params: [ ]
wowjoke_noparams_2:
  args:
    - ''
  desc: Retrieves a joke related to World of Warcraft.
  params: [ ]
xkcd:
  args:
    - null
  desc: >-
    Fetches and displays an XKCD comic. If 'latest' is specified, fetches the
    latest comic; otherwise, fetches a random comic.
  params:
    - *ref_1
xkcd_=:
  args:
    - null
  desc: >-
    Fetches and displays an XKCD comic. If 'latest' is specified, fetches the
    latest comic; otherwise, fetches a random comic.
  params:
    - *ref_1
xkcd_=_1:
  args:
    - null
  desc: Provides commands for fetching and displaying XKCD comics.
  params:
    - *ref_1
xkcd_=_2:
  args:
    - null
  desc: >-
    Fetches and displays an XKCD comic. If 'latest' is specified, fetches the
    latest comic; otherwise, fetches a random comic.
  params:
    - *ref_1
xkcd_int:
  args:
    - number
  desc: Fetches and displays an XKCD comic by its number.
  params:
    - &ref_663
      desc: The number of the XKCD comic to fetch.
      name: num
      optional: false
      type: int
xkcd_int_1:
  args:
    - number
  desc: Fetches and displays an XKCD comic by its number.
  params:
    - *ref_663
xkcd_int_2:
  args:
    - number
  desc: Fetches and displays an XKCD comic by its number.
  params:
    - *ref_663
xkcd_int_3:
  args:
    - number
  desc: Fetches and displays an XKCD comic by its number.
  params:
    - *ref_663
xpboost:
  args:
    - time number text
  desc: Creates a temporary XP boost event.
  params:
    - &ref_664
      desc: How long the boost should last.
      name: time
      optional: false
      type: StoopidTime
    - *ref_524
    - &ref_665
      desc: The name of the boost event.
      name: name
      optional: false
      type: string
xpboost_StoopidTime_double_string:
  args:
    - time number text
  desc: Creates a temporary XP boost event.
  params:
    - *ref_664
    - *ref_524
    - *ref_665
xpboost_StoopidTime_double_string_1:
  args:
    - time number text
  desc: Creates a temporary XP boost event.
  params:
    - *ref_664
    - *ref_524
    - *ref_665
xpboost_StoopidTime_double_string_2:
  args:
    - time number text
  desc: Creates a temporary XP boost event.
  params:
    - *ref_664
    - *ref_524
    - *ref_665
xpboosts:
  args:
    - ''
  desc: Lists active XP boost events.
  params: [ ]
xpboosts_noparams:
  args:
    - ''
  desc: Lists active XP boost events.
  params: [ ]
xpboosts_noparams_1:
  args:
    - ''
  desc: Lists active XP boost events.
  params: [ ]
xpboosts_noparams_2:
  args:
    - ''
  desc: Lists active XP boost events.
  params: [ ]
xpcompetition:
  args:
    - time type 0 null
    - time type
  desc: Creates a new XP competition.
  params:
    - &ref_666
      desc: How long the competition should last.
      name: time
      optional: false
      type: StoopidTime
    - &ref_667
      desc: 'The competition type: MostGained, ReachLevel, or HighestTotal.'
      name: type
      optional: false
      type: XpCompetitionType
    - *ref_90
    - *ref_1
xpcompetition_StoopidTime_XpCompetitionType_=_=:
  args:
    - time type 0 null
    - time type
  desc: Execute the XpCompetition command
  params:
    - *ref_666
    - *ref_667
    - *ref_90
    - *ref_1
xpcompetition_StoopidTime_XpCompetitionType_=_=_1:
  args:
    - time type 0 null
    - time type
  desc: Creates a new XP competition.
  params:
    - *ref_666
    - *ref_667
    - *ref_90
    - *ref_1
xpcompetition_StoopidTime_XpCompetitionType_=_=_2:
  args:
    - time type 0 null
    - time type
  desc: Execute the XpCompetition command
  params:
    - *ref_666
    - *ref_667
    - *ref_90
    - *ref_1
xpcompetitions:
  args:
    - ''
  desc: Lists active XP competitions.
  params: [ ]
xpcompetitions_noparams:
  args:
    - ''
  desc: Lists active XP competitions.
  params: [ ]
xpcompetitions_noparams_1:
  args:
    - ''
  desc: Lists active XP competitions.
  params: [ ]
xpcompetitions_noparams_2:
  args:
    - ''
  desc: Lists active XP competitions.
  params: [ ]
xpexclude:
  args:
    - '@user'
  desc: Excludes a user from gaining XP.
  params:
    - &ref_668
      desc: The user to exclude.
      name: user
      optional: false
      type: IGuildUser
xpexclude_IGuildUser:
  args:
    - '@user'
  desc: Excludes a user from gaining XP.
  params:
    - *ref_668
xpexclude_IGuildUser_1:
  args:
    - '@user'
  desc: Excludes a user from gaining XP.
  params:
    - *ref_668
xpexclude_IGuildUser_2:
  args:
    - '@user'
  desc: Excludes a user from gaining XP.
  params:
    - *ref_668
xpexclude_IRole:
  args:
    - '@role'
  desc: Excludes a role from gaining XP.
  params:
    - &ref_669
      desc: The role to exclude.
      name: role
      optional: false
      type: IRole
xpexclude_IRole_1:
  args:
    - '@role'
  desc: Excludes a role from gaining XP.
  params:
    - *ref_669
xpexclude_IRole_2:
  args:
    - '@role'
  desc: Excludes a role from gaining XP.
  params:
    - *ref_669
xpexclude_IRole_3:
  args:
    - '@role'
  desc: Excludes a role from gaining XP.
  params:
    - *ref_669
xpexclude_ITextChannel:
  args:
    - channel
  desc: Excludes a channel from gaining XP.
  params:
    - &ref_670
      desc: The channel to exclude.
      name: channel
      optional: false
      type: ITextChannel
xpexclude_ITextChannel_1:
  args:
    - channel
  desc: Excludes a channel from gaining XP.
  params:
    - *ref_670
xpexclude_ITextChannel_2:
  args:
    - channel
  desc: Excludes a channel from gaining XP.
  params:
    - *ref_670
xpexclude_ITextChannel_3:
  args:
    - channel
  desc: Excludes a channel from gaining XP.
  params:
    - *ref_670
xpexcludelist:
  args:
    - null
  desc: Lists excluded users, roles, or channels.
  params:
    - *ref_1
xpexcludelist_=:
  args:
    - null
  desc: Lists excluded users, roles, or channels.
  params:
    - *ref_1
xpexcludelist_=_1:
  args:
    - null
  desc: Lists excluded users, roles, or channels.
  params:
    - *ref_1
xpexcludelist_=_2:
  args:
    - null
  desc: Lists excluded users, roles, or channels.
  params:
    - *ref_1
xpinclude:
  args:
    - '@user'
  desc: Includes a previously excluded user for XP gain.
  params:
    - &ref_671
      desc: The user to include.
      name: user
      optional: false
      type: IGuildUser
xpinclude_IGuildUser:
  args:
    - '@user'
  desc: Includes a previously excluded user for XP gain.
  params:
    - *ref_671
xpinclude_IGuildUser_1:
  args:
    - '@user'
  desc: Includes a previously excluded user for XP gain.
  params:
    - *ref_671
xpinclude_IGuildUser_2:
  args:
    - '@user'
  desc: Includes a previously excluded user for XP gain.
  params:
    - *ref_671
xpinclude_IRole:
  args:
    - '@role'
  desc: Includes a previously excluded role for XP gain.
  params:
    - &ref_672
      desc: The role to include.
      name: role
      optional: false
      type: IRole
xpinclude_IRole_1:
  args:
    - '@role'
  desc: Includes a previously excluded role for XP gain.
  params:
    - *ref_672
xpinclude_IRole_2:
  args:
    - '@role'
  desc: Includes a previously excluded role for XP gain.
  params:
    - *ref_672
xpinclude_IRole_3:
  args:
    - '@role'
  desc: Includes a previously excluded role for XP gain.
  params:
    - *ref_672
xpinclude_ITextChannel:
  args:
    - channel
  desc: Includes a previously excluded channel for XP gain.
  params:
    - &ref_673
      desc: The channel to include.
      name: channel
      optional: false
      type: ITextChannel
xpinclude_ITextChannel_1:
  args:
    - channel
  desc: Includes a previously excluded channel for XP gain.
  params:
    - *ref_673
xpinclude_ITextChannel_2:
  args:
    - channel
  desc: Includes a previously excluded channel for XP gain.
  params:
    - *ref_673
xpinclude_ITextChannel_3:
  args:
    - channel
  desc: Includes a previously excluded channel for XP gain.
  params:
    - *ref_673
xpsettings:
  args:
    - ''
  desc: Shows the server's XP leaderboard settings.
  params: [ ]
xpsettings_noparams:
  args:
    - ''
  desc: Shows the server's XP leaderboard settings.
  params: [ ]
xpsettings_noparams_1:
  args:
    - ''
  desc: Shows the server's XP leaderboard settings.
  params: [ ]
xpsettings_noparams_2:
  args:
    - ''
  desc: Shows the server's XP leaderboard settings.
  params: [ ]
yandere:
  args:
    - text
  desc: >-
    Command to fetch and display NSFW content from the Yandere image board with
    optional tags in the current guild channel or direct messages.
  params:
    - &ref_674
      desc: Optional tags to filter the NSFW content from the Konachan image board.
      name: tags
      optional: false
      type: string[]
yandere_string[]:
  args:
    - text
  desc: >-
    Command to fetch and display NSFW content from the Yandere image board with
    optional tags in the current guild channel or direct messages.
  params:
    - *ref_674
yandere_string[]_1:
  args:
    - text
  desc: >-
    Command to fetch and display NSFW content from the Yandere image board with
    optional tags in the current guild channel or direct messages.
  params:
    - *ref_674
yandere_string[]_2:
  args:
    - text
  desc: >-
    Command to fetch and display NSFW content from the Yandere image board with
    optional tags in the current guild channel or direct messages.
  params:
    - *ref_674
yomama:
  args:
    - ''
  desc: Retrieves a Yo Mama joke.
  params: [ ]
yomama_noparams:
  args:
    - ''
  desc: Retrieves a Yo Mama joke.
  params: [ ]
yomama_noparams_1:
  args:
    - ''
  desc: Module for retrieving various types of jokes.
  params: [ ]
yomama_noparams_2:
  args:
    - ''
  desc: Module for retrieving various types of jokes.
  params: [ ]
youtube:
  args:
    - text
  desc: >-
    Searches for YouTube videos based on a provided query and displays the
    results.
  params:
    - &ref_675
      desc: The search query to find YouTube videos.
      name: query
      optional: false
      type: string
youtube_string:
  args:
    - text
  desc: Execute the Youtube command
  params:
    - *ref_675
youtube_string_1:
  args:
    - text
  desc: >-
    Searches for YouTube videos based on a provided query and displays the
    results.
  params:
    - *ref_675
youtube_string_2:
  args:
    - text
  desc: Execute the Youtube command
  params:
    - *ref_675
